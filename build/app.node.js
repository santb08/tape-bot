/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@discordjs/builders/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandAssertions = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./messages/formatters */ \"./node_modules/@discordjs/builders/dist/messages/formatters.js\"), exports);\nexports.SlashCommandAssertions = tslib_1.__importStar(__webpack_require__(/*! ./interactions/slashCommands/Assertions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js\"));\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/SlashCommandBuilder */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandBuilder.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/SlashCommandSubcommands */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandSubcommands.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/options/boolean */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/boolean.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/options/channel */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/channel.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/options/integer */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/integer.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/options/mentionable */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/mentionable.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/options/role */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/role.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/options/string */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/string.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interactions/slashCommands/options/user */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/user.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/index.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertReturnOfBuilder = exports.validateMaxChoicesLength = exports.validateMaxOptionsLength = exports.validateDescription = exports.validateName = exports.validateRequiredParameters = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst is_1 = tslib_1.__importDefault(__webpack_require__(/*! @sindresorhus/is */ \"./node_modules/@discordjs/builders/node_modules/@sindresorhus/is/dist/index.js\"));\nconst ow_1 = tslib_1.__importDefault(__webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\"));\nfunction validateRequiredParameters(name, description, options) {\n    // Assert name matches all conditions\n    validateName(name);\n    // Assert description conditions\n    validateDescription(description);\n    // Assert options conditions\n    validateMaxOptionsLength(options);\n}\nexports.validateRequiredParameters = validateRequiredParameters;\nconst namePredicate = ow_1.default.string.lowercase\n    .minLength(1)\n    .maxLength(32)\n    .addValidator({\n    message: (value, label) => `Expected ${label} to match \"^[\\\\p{L}\\\\p{N}_-]+$\", got ${value} instead`,\n    validator: (value) => /^[\\p{L}\\p{N}_-]+$/u.test(value),\n});\nfunction validateName(name) {\n    ow_1.default(name, 'name', namePredicate);\n}\nexports.validateName = validateName;\nconst descriptionPredicate = ow_1.default.string.minLength(1).maxLength(100);\nfunction validateDescription(description) {\n    ow_1.default(description, 'description', descriptionPredicate);\n}\nexports.validateDescription = validateDescription;\nconst maxArrayLengthPredicate = ow_1.default.array.maxLength(25);\nfunction validateMaxOptionsLength(options) {\n    ow_1.default(options, 'options', maxArrayLengthPredicate);\n}\nexports.validateMaxOptionsLength = validateMaxOptionsLength;\nfunction validateMaxChoicesLength(choices) {\n    ow_1.default(choices, 'choices', maxArrayLengthPredicate);\n}\nexports.validateMaxChoicesLength = validateMaxChoicesLength;\nfunction assertReturnOfBuilder(input, ExpectedInstanceOf) {\n    const instanceName = ExpectedInstanceOf.name;\n    if (is_1.default.nullOrUndefined(input)) {\n        throw new TypeError(`Expected to receive a ${instanceName} builder, got ${input === null ? 'null' : 'undefined'} instead.`);\n    }\n    if (is_1.default.primitive(input)) {\n        throw new TypeError(`Expected to receive a ${instanceName} builder, got a primitive (${typeof input}) instead.`);\n    }\n    if (!(input instanceof ExpectedInstanceOf)) {\n        const casted = input;\n        const constructorName = is_1.default.function_(input) ? input.name : casted.constructor.name;\n        const stringTag = Reflect.get(casted, Symbol.toStringTag);\n        const fullResultName = stringTag ? `${constructorName} [${stringTag}]` : constructorName;\n        throw new TypeError(`Expected to receive a ${instanceName} builder, got ${fullResultName} instead.`);\n    }\n}\nexports.assertReturnOfBuilder = assertReturnOfBuilder;\n//# sourceMappingURL=Assertions.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandBuilder.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandBuilder.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandBuilder = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst ts_mixer_1 = __webpack_require__(/*! ts-mixer */ \"./node_modules/ts-mixer/dist/esm/index.js\");\nconst Assertions_1 = __webpack_require__(/*! ./Assertions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js\");\nconst NameAndDescription_1 = __webpack_require__(/*! ./mixins/NameAndDescription */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/NameAndDescription.js\");\nconst CommandOptions_1 = __webpack_require__(/*! ./mixins/CommandOptions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptions.js\");\nconst SlashCommandSubcommands_1 = __webpack_require__(/*! ./SlashCommandSubcommands */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandSubcommands.js\");\nlet SlashCommandBuilder = class SlashCommandBuilder {\n    constructor() {\n        /**\n         * The name of this slash command\n         */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The description of this slash command\n         */\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The options of this slash command\n         */\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    /**\n     * Returns the final data that should be sent to Discord.\n     *\n     * **Note:** Calling this function will validate required properties based on their conditions.\n     */\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, this.options);\n        return {\n            name: this.name,\n            description: this.description,\n            options: this.options.map((option) => option.toJSON()),\n        };\n    }\n    /**\n     * Adds a new subcommand group to this command\n     * @param input A function that returns a subcommand group builder, or an already built builder\n     */\n    addSubcommandGroup(input) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Make sure there is no subcommand at the root level - if there is, throw\n        const hasSubcommands = options.some((item) => item instanceof SlashCommandSubcommands_1.SlashCommandSubcommandBuilder);\n        if (hasSubcommands)\n            throw new RangeError(`You cannot mix subcommands and subcommand groups at the root level.`);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new SlashCommandSubcommands_1.SlashCommandSubcommandGroupBuilder()) : input;\n        Assertions_1.assertReturnOfBuilder(result, SlashCommandSubcommands_1.SlashCommandSubcommandGroupBuilder);\n        // Push it\n        options.push(result);\n        return this;\n    }\n    /**\n     * Adds a new subcommand to this command\n     * @param input A function that returns a subcommand builder, or an already built builder\n     */\n    addSubcommand(input) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Make sure there is no subcommand at the root level - if there is, throw\n        const hasSubcommandGroups = options.some((item) => item instanceof SlashCommandSubcommands_1.SlashCommandSubcommandGroupBuilder);\n        if (hasSubcommandGroups)\n            throw new RangeError(`You cannot mix subcommands and subcommand groups at the root level.`);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new SlashCommandSubcommands_1.SlashCommandSubcommandBuilder()) : input;\n        Assertions_1.assertReturnOfBuilder(result, SlashCommandSubcommands_1.SlashCommandSubcommandBuilder);\n        // Push it\n        options.push(result);\n        return this;\n    }\n};\nSlashCommandBuilder = tslib_1.__decorate([\n    ts_mixer_1.mix(CommandOptions_1.SharedSlashCommandOptions, NameAndDescription_1.SharedNameAndDescription)\n], SlashCommandBuilder);\nexports.SlashCommandBuilder = SlashCommandBuilder;\n//# sourceMappingURL=SlashCommandBuilder.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandBuilder.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandSubcommands.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandSubcommands.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandSubcommandBuilder = exports.SlashCommandSubcommandGroupBuilder = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst ts_mixer_1 = __webpack_require__(/*! ts-mixer */ \"./node_modules/ts-mixer/dist/esm/index.js\");\nconst Assertions_1 = __webpack_require__(/*! ./Assertions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js\");\nconst CommandOptions_1 = __webpack_require__(/*! ./mixins/CommandOptions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptions.js\");\nconst NameAndDescription_1 = __webpack_require__(/*! ./mixins/NameAndDescription */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/NameAndDescription.js\");\n/**\n * Represents a folder for subcommands\n *\n * For more information, go to https://discord.com/developers/docs/interactions/slash-commands#subcommands-and-subcommand-groups\n */\nlet SlashCommandSubcommandGroupBuilder = class SlashCommandSubcommandGroupBuilder {\n    constructor() {\n        /**\n         * The name of this subcommand group\n         */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The description of this subcommand group\n         */\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The subcommands part of this subcommand group\n         */\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    /**\n     * Adds a new subcommand to this group\n     * @param input A function that returns a subcommand builder, or an already built builder\n     */\n    addSubcommand(input) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new SlashCommandSubcommandBuilder()) : input;\n        Assertions_1.assertReturnOfBuilder(result, SlashCommandSubcommandBuilder);\n        // Push it\n        options.push(result);\n        return this;\n    }\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, this.options);\n        return {\n            type: 2 /* SubcommandGroup */,\n            name: this.name,\n            description: this.description,\n            options: this.options.map((option) => option.toJSON()),\n        };\n    }\n};\nSlashCommandSubcommandGroupBuilder = tslib_1.__decorate([\n    ts_mixer_1.mix(NameAndDescription_1.SharedNameAndDescription)\n], SlashCommandSubcommandGroupBuilder);\nexports.SlashCommandSubcommandGroupBuilder = SlashCommandSubcommandGroupBuilder;\n/**\n * Represents a subcommand\n *\n * For more information, go to https://discord.com/developers/docs/interactions/slash-commands#subcommands-and-subcommand-groups\n */\nlet SlashCommandSubcommandBuilder = class SlashCommandSubcommandBuilder {\n    constructor() {\n        /**\n         * The name of this subcommand\n         */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The description of this subcommand\n         */\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The options of this subcommand\n         */\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, this.options);\n        return {\n            type: 1 /* Subcommand */,\n            name: this.name,\n            description: this.description,\n            options: this.options.map((option) => option.toJSON()),\n        };\n    }\n};\nSlashCommandSubcommandBuilder = tslib_1.__decorate([\n    ts_mixer_1.mix(NameAndDescription_1.SharedNameAndDescription, CommandOptions_1.SharedSlashCommandOptions)\n], SlashCommandSubcommandBuilder);\nexports.SlashCommandSubcommandBuilder = SlashCommandSubcommandBuilder;\n//# sourceMappingURL=SlashCommandSubcommands.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandSubcommands.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandOptionBase = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst ow_1 = tslib_1.__importDefault(__webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\"));\nconst Assertions_1 = __webpack_require__(/*! ../Assertions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js\");\nconst NameAndDescription_1 = __webpack_require__(/*! ./NameAndDescription */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/NameAndDescription.js\");\nclass SlashCommandOptionBase extends NameAndDescription_1.SharedNameAndDescription {\n    constructor(type) {\n        super();\n        Object.defineProperty(this, \"required\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.type = type;\n    }\n    /**\n     * Marks the option as required\n     * @param required If this option should be required\n     */\n    setRequired(required) {\n        // Assert that you actually passed a boolean\n        ow_1.default(required, 'required', ow_1.default.boolean);\n        this.required = required;\n        return this;\n    }\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, []);\n        // Assert that you actually passed a boolean\n        ow_1.default(this.required, 'required', ow_1.default.boolean);\n        return {\n            type: this.type,\n            name: this.name,\n            description: this.description,\n            required: this.required,\n        };\n    }\n}\nexports.SlashCommandOptionBase = SlashCommandOptionBase;\n//# sourceMappingURL=CommandOptionBase.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionWithChoices.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionWithChoices.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApplicationCommandOptionWithChoicesBase = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst ow_1 = tslib_1.__importDefault(__webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\"));\nconst Assertions_1 = __webpack_require__(/*! ../Assertions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js\");\nconst CommandOptionBase_1 = __webpack_require__(/*! ./CommandOptionBase */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js\");\nconst stringPredicate = ow_1.default.string.minLength(1).maxLength(100);\nconst integerPredicate = ow_1.default.number.finite;\n// TODO: See resolution for sindresorhus/ow#217 in relation to this cast\nconst choicesPredicate = ow_1.default.array.ofType(ow_1.default.array.exactShape([stringPredicate, ow_1.default.any(ow_1.default.string, integerPredicate)]));\nclass ApplicationCommandOptionWithChoicesBase extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"choices\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\n     * Adds a choice for this option\n     * @param name The name of the choice\n     * @param value The value of the choice\n     */\n    addChoice(name, value) {\n        this.choices ?? (this.choices = []);\n        Assertions_1.validateMaxChoicesLength(this.choices);\n        // Validate name\n        ow_1.default(name, `${this.type === 3 /* String */ ? 'string' : 'integer'} choice name`, stringPredicate);\n        // Validate the value\n        if (this.type === 3 /* String */)\n            ow_1.default(value, 'string choice value', stringPredicate);\n        else\n            ow_1.default(value, 'integer choice value', integerPredicate);\n        this.choices.push({ name, value });\n        return this;\n    }\n    /**\n     * Adds multiple choices for this option\n     * @param choices The choices to add\n     */\n    addChoices(choices) {\n        ow_1.default(choices, `${this.type === 3 /* String */ ? 'string' : 'integer'} choices`, choicesPredicate);\n        for (const [label, value] of choices)\n            this.addChoice(label, value);\n        return this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            choices: this.choices,\n        };\n    }\n}\nexports.ApplicationCommandOptionWithChoicesBase = ApplicationCommandOptionWithChoicesBase;\n//# sourceMappingURL=CommandOptionWithChoices.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionWithChoices.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptions.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptions.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SharedSlashCommandOptions = void 0;\nconst Assertions_1 = __webpack_require__(/*! ../Assertions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js\");\nconst boolean_1 = __webpack_require__(/*! ../options/boolean */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/boolean.js\");\nconst channel_1 = __webpack_require__(/*! ../options/channel */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/channel.js\");\nconst integer_1 = __webpack_require__(/*! ../options/integer */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/integer.js\");\nconst mentionable_1 = __webpack_require__(/*! ../options/mentionable */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/mentionable.js\");\nconst role_1 = __webpack_require__(/*! ../options/role */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/role.js\");\nconst string_1 = __webpack_require__(/*! ../options/string */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/string.js\");\nconst user_1 = __webpack_require__(/*! ../options/user */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/user.js\");\nclass SharedSlashCommandOptions {\n    constructor() {\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\n     * Adds a boolean option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addBooleanOption(input) {\n        return this._sharedAddOptionMethod(input, boolean_1.SlashCommandBooleanOption);\n    }\n    /**\n     * Adds a user option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addUserOption(input) {\n        return this._sharedAddOptionMethod(input, user_1.SlashCommandUserOption);\n    }\n    /**\n     * Adds a channel option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addChannelOption(input) {\n        return this._sharedAddOptionMethod(input, channel_1.SlashCommandChannelOption);\n    }\n    /**\n     * Adds a role option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addRoleOption(input) {\n        return this._sharedAddOptionMethod(input, role_1.SlashCommandRoleOption);\n    }\n    /**\n     * Adds a mentionable option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addMentionableOption(input) {\n        return this._sharedAddOptionMethod(input, mentionable_1.SlashCommandMentionableOption);\n    }\n    /**\n     * Adds a string option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addStringOption(input) {\n        return this._sharedAddOptionMethod(input, string_1.SlashCommandStringOption);\n    }\n    /**\n     * Adds an integer option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addIntegerOption(input) {\n        return this._sharedAddOptionMethod(input, integer_1.SlashCommandIntegerOption);\n    }\n    _sharedAddOptionMethod(input, Instance) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new Instance()) : input;\n        Assertions_1.assertReturnOfBuilder(result, Instance);\n        // Push it\n        options.push(result);\n        return this;\n    }\n}\nexports.SharedSlashCommandOptions = SharedSlashCommandOptions;\n//# sourceMappingURL=CommandOptions.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptions.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/NameAndDescription.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/NameAndDescription.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SharedNameAndDescription = void 0;\nconst Assertions_1 = __webpack_require__(/*! ../Assertions */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js\");\nclass SharedNameAndDescription {\n    constructor() {\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\n     * Sets the name\n     * @param name The name\n     */\n    setName(name) {\n        // Assert the name matches the conditions\n        Assertions_1.validateName(name);\n        Reflect.set(this, 'name', name);\n        return this;\n    }\n    /**\n     * Sets the description\n     * @param description The description\n     */\n    setDescription(description) {\n        // Assert the description matches the conditions\n        Assertions_1.validateDescription(description);\n        Reflect.set(this, 'description', description);\n        return this;\n    }\n}\nexports.SharedNameAndDescription = SharedNameAndDescription;\n//# sourceMappingURL=NameAndDescription.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/NameAndDescription.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/boolean.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/boolean.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandBooleanOption = void 0;\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst CommandOptionBase_1 = __webpack_require__(/*! ../mixins/CommandOptionBase */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js\");\nclass SlashCommandBooleanOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(5 /* Boolean */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 5 /* Boolean */\n        });\n    }\n}\nexports.SlashCommandBooleanOption = SlashCommandBooleanOption;\n//# sourceMappingURL=boolean.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/boolean.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/channel.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/channel.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandChannelOption = void 0;\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst CommandOptionBase_1 = __webpack_require__(/*! ../mixins/CommandOptionBase */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js\");\nclass SlashCommandChannelOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(7 /* Channel */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 7 /* Channel */\n        });\n    }\n}\nexports.SlashCommandChannelOption = SlashCommandChannelOption;\n//# sourceMappingURL=channel.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/channel.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/integer.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/integer.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandIntegerOption = void 0;\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst CommandOptionWithChoices_1 = __webpack_require__(/*! ../mixins/CommandOptionWithChoices */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionWithChoices.js\");\nclass SlashCommandIntegerOption extends CommandOptionWithChoices_1.ApplicationCommandOptionWithChoicesBase {\n    constructor() {\n        super(4 /* Integer */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4 /* Integer */\n        });\n    }\n}\nexports.SlashCommandIntegerOption = SlashCommandIntegerOption;\n//# sourceMappingURL=integer.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/integer.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/mentionable.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/mentionable.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandMentionableOption = void 0;\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst CommandOptionBase_1 = __webpack_require__(/*! ../mixins/CommandOptionBase */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js\");\nclass SlashCommandMentionableOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(9 /* Mentionable */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 9 /* Mentionable */\n        });\n    }\n}\nexports.SlashCommandMentionableOption = SlashCommandMentionableOption;\n//# sourceMappingURL=mentionable.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/mentionable.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/role.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/role.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandRoleOption = void 0;\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst CommandOptionBase_1 = __webpack_require__(/*! ../mixins/CommandOptionBase */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js\");\nclass SlashCommandRoleOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(8 /* Role */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 8 /* Role */\n        });\n    }\n}\nexports.SlashCommandRoleOption = SlashCommandRoleOption;\n//# sourceMappingURL=role.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/role.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/string.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/string.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandStringOption = void 0;\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst CommandOptionWithChoices_1 = __webpack_require__(/*! ../mixins/CommandOptionWithChoices */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionWithChoices.js\");\nclass SlashCommandStringOption extends CommandOptionWithChoices_1.ApplicationCommandOptionWithChoicesBase {\n    constructor() {\n        super(3 /* String */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3 /* String */\n        });\n    }\n}\nexports.SlashCommandStringOption = SlashCommandStringOption;\n//# sourceMappingURL=string.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/string.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/user.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/user.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SlashCommandUserOption = void 0;\n__webpack_require__(/*! discord-api-types/v9 */ \"./node_modules/discord-api-types/v9.js\");\nconst CommandOptionBase_1 = __webpack_require__(/*! ../mixins/CommandOptionBase */ \"./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js\");\nclass SlashCommandUserOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(6 /* User */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 6 /* User */\n        });\n    }\n}\nexports.SlashCommandUserOption = SlashCommandUserOption;\n//# sourceMappingURL=user.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/user.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/dist/messages/formatters.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@discordjs/builders/dist/messages/formatters.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Faces = exports.TimestampStyles = exports.time = exports.formatEmoji = exports.roleMention = exports.channelMention = exports.memberNicknameMention = exports.userMention = exports.spoiler = exports.hyperlink = exports.hideLinkEmbed = exports.blockQuote = exports.quote = exports.strikethrough = exports.underscore = exports.bold = exports.italic = exports.inlineCode = exports.codeBlock = void 0;\nfunction codeBlock(language, content) {\n    return typeof content === 'undefined' ? `\\`\\`\\`\\n${language}\\`\\`\\`` : `\\`\\`\\`${language}\\n${content}\\`\\`\\``;\n}\nexports.codeBlock = codeBlock;\n/**\n * Wraps the content inside \\`backticks\\`, which formats it as inline code.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction inlineCode(content) {\n    return `\\`${content}\\``;\n}\nexports.inlineCode = inlineCode;\n/**\n * Formats the content into italic text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction italic(content) {\n    return `_${content}_`;\n}\nexports.italic = italic;\n/**\n * Formats the content into bold text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction bold(content) {\n    return `**${content}**`;\n}\nexports.bold = bold;\n/**\n * Formats the content into underscored text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction underscore(content) {\n    return `__${content}__`;\n}\nexports.underscore = underscore;\n/**\n * Formats the content into strike-through text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction strikethrough(content) {\n    return `~~${content}~~`;\n}\nexports.strikethrough = strikethrough;\n/**\n * Formats the content into a quote. This needs to be at the start of the line for Discord to format it.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction quote(content) {\n    return `> ${content}`;\n}\nexports.quote = quote;\n/**\n * Formats the content into a block quote. This needs to be at the start of the line for Discord to format it.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction blockQuote(content) {\n    return `>>> ${content}`;\n}\nexports.blockQuote = blockQuote;\nfunction hideLinkEmbed(url) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `<${url}>`;\n}\nexports.hideLinkEmbed = hideLinkEmbed;\nfunction hyperlink(content, url, title) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return title ? `[${content}](${url} \"${title}\")` : `[${content}](${url})`;\n}\nexports.hyperlink = hyperlink;\n/**\n * Wraps the content inside spoiler (hidden text).\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction spoiler(content) {\n    return `||${content}||`;\n}\nexports.spoiler = spoiler;\n/**\n * Formats a user ID into a user mention.\n * @param userId The user ID to format.\n * @returns The formatted user mention.\n */\nfunction userMention(userId) {\n    return `<@${userId}>`;\n}\nexports.userMention = userMention;\n/**\n * Formats a user ID into a member-nickname mention.\n * @param memberId The user ID to format.\n * @returns The formatted member-nickname mention.\n */\nfunction memberNicknameMention(memberId) {\n    return `<@!${memberId}>`;\n}\nexports.memberNicknameMention = memberNicknameMention;\n/**\n * Formats a channel ID into a channel mention.\n * @param channelId The channel ID to format.\n * @returns The formatted channel mention.\n */\nfunction channelMention(channelId) {\n    return `<#${channelId}>`;\n}\nexports.channelMention = channelMention;\n/**\n * Formats a role ID into a role mention.\n * @param roleId The role ID to format.\n * @returns The formatted role mention.\n */\nfunction roleMention(roleId) {\n    return `<@&${roleId}>`;\n}\nexports.roleMention = roleMention;\n/**\n * Formats an emoji ID into a fully qualified emoji identifier\n * @param emojiId The emoji ID to format.\n * @param animated Whether the emoji is animated or not. Defaults to `false`\n * @returns The formatted emoji.\n */\nfunction formatEmoji(emojiId, animated = false) {\n    return `<${animated ? 'a' : ''}:_:${emojiId}>`;\n}\nexports.formatEmoji = formatEmoji;\nfunction time(timeOrSeconds, style) {\n    if (typeof timeOrSeconds !== 'number') {\n        timeOrSeconds = Math.floor((timeOrSeconds?.getTime() ?? Date.now()) / 1000);\n    }\n    return typeof style === 'string' ? `<t:${timeOrSeconds}:${style}>` : `<t:${timeOrSeconds}>`;\n}\nexports.time = time;\n/**\n * The [message formatting timestamp styles](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles) supported by Discord.\n */\nexports.TimestampStyles = {\n    /**\n     * Short time format, consisting of hours and minutes, e.g. 16:20.\n     */\n    ShortTime: 't',\n    /**\n     * Long time format, consisting of hours, minutes, and seconds, e.g. 16:20:30.\n     */\n    LongTime: 'T',\n    /**\n     * Short date format, consisting of day, month, and year, e.g. 20/04/2021.\n     */\n    ShortDate: 'd',\n    /**\n     * Long date format, consisting of day, month, and year, e.g. 20 April 2021.\n     */\n    LongDate: 'D',\n    /**\n     * Short date-time format, consisting of short date and short time formats, e.g. 20 April 2021 16:20.\n     */\n    ShortDateTime: 'f',\n    /**\n     * Long date-time format, consisting of long date and short time formats, e.g. Tuesday, 20 April 2021 16:20.\n     */\n    LongDateTime: 'F',\n    /**\n     * Relative time format, consisting of a relative duration format, e.g. 2 months ago.\n     */\n    RelativeTime: 'R',\n};\n/**\n * An enum with all the available faces from Discord's native slash commands\n */\nvar Faces;\n(function (Faces) {\n    /**\n     * ¯\\\\_(ツ)\\\\_/¯\n     */\n    Faces[\"Shrug\"] = \"\\u00AF\\\\_(\\u30C4)\\\\_/\\u00AF\";\n    /**\n     * (╯°□°）╯︵ ┻━┻\n     */\n    Faces[\"Tableflip\"] = \"(\\u256F\\u00B0\\u25A1\\u00B0\\uFF09\\u256F\\uFE35 \\u253B\\u2501\\u253B\";\n    /**\n     * ┬─┬ ノ( ゜-゜ノ)\n     */\n    Faces[\"Unflip\"] = \"\\u252C\\u2500\\u252C \\u30CE( \\u309C-\\u309C\\u30CE)\";\n})(Faces = exports.Faces || (exports.Faces = {}));\n//# sourceMappingURL=formatters.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/dist/messages/formatters.js?");

/***/ }),

/***/ "./node_modules/@discordjs/builders/node_modules/@sindresorhus/is/dist/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@discordjs/builders/node_modules/@sindresorhus/is/dist/index.js ***!
  \**************************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n/// <reference lib=\"es2018\"/>\n/// <reference lib=\"dom\"/>\n/// <reference types=\"node\"/>\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst typedArrayTypeNames = [\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array',\n    'BigInt64Array',\n    'BigUint64Array'\n];\nfunction isTypedArrayName(name) {\n    return typedArrayTypeNames.includes(name);\n}\nconst objectTypeNames = [\n    'Function',\n    'Generator',\n    'AsyncGenerator',\n    'GeneratorFunction',\n    'AsyncGeneratorFunction',\n    'AsyncFunction',\n    'Observable',\n    'Array',\n    'Buffer',\n    'Object',\n    'RegExp',\n    'Date',\n    'Error',\n    'Map',\n    'Set',\n    'WeakMap',\n    'WeakSet',\n    'ArrayBuffer',\n    'SharedArrayBuffer',\n    'DataView',\n    'Promise',\n    'URL',\n    'HTMLElement',\n    ...typedArrayTypeNames\n];\nfunction isObjectTypeName(name) {\n    return objectTypeNames.includes(name);\n}\nconst primitiveTypeNames = [\n    'null',\n    'undefined',\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol'\n];\nfunction isPrimitiveTypeName(name) {\n    return primitiveTypeNames.includes(name);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType(type) {\n    return (value) => typeof value === type;\n}\nconst { toString } = Object.prototype;\nconst getObjectType = (value) => {\n    const objectTypeName = toString.call(value).slice(8, -1);\n    if (/HTML\\w+Element/.test(objectTypeName) && is.domElement(value)) {\n        return 'HTMLElement';\n    }\n    if (isObjectTypeName(objectTypeName)) {\n        return objectTypeName;\n    }\n    return undefined;\n};\nconst isObjectOfType = (type) => (value) => getObjectType(value) === type;\nfunction is(value) {\n    if (value === null) {\n        return 'null';\n    }\n    switch (typeof value) {\n        case 'undefined':\n            return 'undefined';\n        case 'string':\n            return 'string';\n        case 'number':\n            return 'number';\n        case 'boolean':\n            return 'boolean';\n        case 'function':\n            return 'Function';\n        case 'bigint':\n            return 'bigint';\n        case 'symbol':\n            return 'symbol';\n        default:\n    }\n    if (is.observable(value)) {\n        return 'Observable';\n    }\n    if (is.array(value)) {\n        return 'Array';\n    }\n    if (is.buffer(value)) {\n        return 'Buffer';\n    }\n    const tagType = getObjectType(value);\n    if (tagType) {\n        return tagType;\n    }\n    if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n        throw new TypeError('Please don\\'t use object wrappers for primitive types');\n    }\n    return 'Object';\n}\nis.undefined = isOfType('undefined');\nis.string = isOfType('string');\nconst isNumberType = isOfType('number');\nis.number = (value) => isNumberType(value) && !is.nan(value);\nis.bigint = isOfType('bigint');\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.function_ = isOfType('function');\nis.null_ = (value) => value === null;\nis.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');\nis.boolean = (value) => value === true || value === false;\nis.symbol = isOfType('symbol');\nis.numericString = (value) => is.string(value) && !is.emptyStringOrWhitespace(value) && !Number.isNaN(Number(value));\nis.array = (value, assertion) => {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    if (!is.function_(assertion)) {\n        return true;\n    }\n    return value.every(assertion);\n};\nis.buffer = (value) => { var _a, _b, _c, _d; return (_d = (_c = (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.isBuffer) === null || _c === void 0 ? void 0 : _c.call(_b, value)) !== null && _d !== void 0 ? _d : false; };\nis.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);\nis.object = (value) => !is.null_(value) && (typeof value === 'object' || is.function_(value));\nis.iterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.iterator]); };\nis.asyncIterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.asyncIterator]); };\nis.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.asyncGenerator = (value) => is.asyncIterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.nativePromise = (value) => isObjectOfType('Promise')(value);\nconst hasPromiseAPI = (value) => {\n    var _a, _b;\n    return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a.then) &&\n        is.function_((_b = value) === null || _b === void 0 ? void 0 : _b.catch);\n};\nis.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);\nis.generatorFunction = isObjectOfType('GeneratorFunction');\nis.asyncGeneratorFunction = (value) => getObjectType(value) === 'AsyncGeneratorFunction';\nis.asyncFunction = (value) => getObjectType(value) === 'AsyncFunction';\n// eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types\nis.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');\nis.regExp = isObjectOfType('RegExp');\nis.date = isObjectOfType('Date');\nis.error = isObjectOfType('Error');\nis.map = (value) => isObjectOfType('Map')(value);\nis.set = (value) => isObjectOfType('Set')(value);\nis.weakMap = (value) => isObjectOfType('WeakMap')(value);\nis.weakSet = (value) => isObjectOfType('WeakSet')(value);\nis.int8Array = isObjectOfType('Int8Array');\nis.uint8Array = isObjectOfType('Uint8Array');\nis.uint8ClampedArray = isObjectOfType('Uint8ClampedArray');\nis.int16Array = isObjectOfType('Int16Array');\nis.uint16Array = isObjectOfType('Uint16Array');\nis.int32Array = isObjectOfType('Int32Array');\nis.uint32Array = isObjectOfType('Uint32Array');\nis.float32Array = isObjectOfType('Float32Array');\nis.float64Array = isObjectOfType('Float64Array');\nis.bigInt64Array = isObjectOfType('BigInt64Array');\nis.bigUint64Array = isObjectOfType('BigUint64Array');\nis.arrayBuffer = isObjectOfType('ArrayBuffer');\nis.sharedArrayBuffer = isObjectOfType('SharedArrayBuffer');\nis.dataView = isObjectOfType('DataView');\nis.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;\nis.urlInstance = (value) => isObjectOfType('URL')(value);\nis.urlString = (value) => {\n    if (!is.string(value)) {\n        return false;\n    }\n    try {\n        new URL(value); // eslint-disable-line no-new\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\n// TODO: Use the `not` operator with a type guard here when it's available.\n// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`\nis.truthy = (value) => Boolean(value);\n// Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`\nis.falsy = (value) => !value;\nis.nan = (value) => Number.isNaN(value);\nis.primitive = (value) => is.null_(value) || isPrimitiveTypeName(typeof value);\nis.integer = (value) => Number.isInteger(value);\nis.safeInteger = (value) => Number.isSafeInteger(value);\nis.plainObject = (value) => {\n    // From: https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\n    if (toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.typedArray = (value) => isTypedArrayName(getObjectType(value));\nconst isValidLength = (value) => is.safeInteger(value) && value >= 0;\nis.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\nis.inRange = (value, range) => {\n    if (is.number(range)) {\n        return value >= Math.min(0, range) && value <= Math.max(range, 0);\n    }\n    if (is.array(range) && range.length === 2) {\n        return value >= Math.min(...range) && value <= Math.max(...range);\n    }\n    throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n};\nconst NODE_TYPE_ELEMENT = 1;\nconst DOM_PROPERTIES_TO_CHECK = [\n    'innerHTML',\n    'ownerDocument',\n    'style',\n    'attributes',\n    'nodeValue'\n];\nis.domElement = (value) => {\n    return is.object(value) &&\n        value.nodeType === NODE_TYPE_ELEMENT &&\n        is.string(value.nodeName) &&\n        !is.plainObject(value) &&\n        DOM_PROPERTIES_TO_CHECK.every(property => property in value);\n};\nis.observable = (value) => {\n    var _a, _b, _c, _d;\n    if (!value) {\n        return false;\n    }\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n    if (value === ((_b = (_a = value)[Symbol.observable]) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n        return true;\n    }\n    if (value === ((_d = (_c = value)['@@observable']) === null || _d === void 0 ? void 0 : _d.call(_c))) {\n        return true;\n    }\n    return false;\n};\nis.nodeStream = (value) => is.object(value) && is.function_(value.pipe) && !is.observable(value);\nis.infinite = (value) => value === Infinity || value === -Infinity;\nconst isAbsoluteMod2 = (remainder) => (value) => is.integer(value) && Math.abs(value % 2) === remainder;\nis.evenInteger = isAbsoluteMod2(0);\nis.oddInteger = isAbsoluteMod2(1);\nis.emptyArray = (value) => is.array(value) && value.length === 0;\nis.nonEmptyArray = (value) => is.array(value) && value.length > 0;\nis.emptyString = (value) => is.string(value) && value.length === 0;\n// TODO: Use `not ''` when the `not` operator is available.\nis.nonEmptyString = (value) => is.string(value) && value.length > 0;\nconst isWhiteSpaceString = (value) => is.string(value) && !/\\S/.test(value);\nis.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);\nis.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n// TODO: Use `not` operator here to remove `Map` and `Set` from type guard:\n// - https://github.com/Microsoft/TypeScript/pull/29317\nis.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\nis.emptySet = (value) => is.set(value) && value.size === 0;\nis.nonEmptySet = (value) => is.set(value) && value.size > 0;\nis.emptyMap = (value) => is.map(value) && value.size === 0;\nis.nonEmptyMap = (value) => is.map(value) && value.size > 0;\nconst predicateOnArray = (method, predicate, values) => {\n    if (!is.function_(predicate)) {\n        throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n    }\n    if (values.length === 0) {\n        throw new TypeError('Invalid number of values');\n    }\n    return method.call(values, predicate);\n};\nis.any = (predicate, ...values) => {\n    const predicates = is.array(predicate) ? predicate : [predicate];\n    return predicates.some(singlePredicate => predicateOnArray(Array.prototype.some, singlePredicate, values));\n};\nis.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);\nconst assertType = (condition, description, value, options = {}) => {\n    if (!condition) {\n        const { multipleValues } = options;\n        const valuesMessage = multipleValues ?\n            `received values of types ${[\n                ...new Set(value.map(singleValue => `\\`${is(singleValue)}\\``))\n            ].join(', ')}` :\n            `received value of type \\`${is(value)}\\``;\n        throw new TypeError(`Expected value which is \\`${description}\\`, ${valuesMessage}.`);\n    }\n};\nexports.assert = {\n    // Unknowns.\n    undefined: (value) => assertType(is.undefined(value), 'undefined', value),\n    string: (value) => assertType(is.string(value), 'string', value),\n    number: (value) => assertType(is.number(value), 'number', value),\n    bigint: (value) => assertType(is.bigint(value), 'bigint', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function_: (value) => assertType(is.function_(value), 'Function', value),\n    null_: (value) => assertType(is.null_(value), 'null', value),\n    class_: (value) => assertType(is.class_(value), \"Class\" /* class_ */, value),\n    boolean: (value) => assertType(is.boolean(value), 'boolean', value),\n    symbol: (value) => assertType(is.symbol(value), 'symbol', value),\n    numericString: (value) => assertType(is.numericString(value), \"string with a number\" /* numericString */, value),\n    array: (value, assertion) => {\n        const assert = assertType;\n        assert(is.array(value), 'Array', value);\n        if (assertion) {\n            value.forEach(assertion);\n        }\n    },\n    buffer: (value) => assertType(is.buffer(value), 'Buffer', value),\n    nullOrUndefined: (value) => assertType(is.nullOrUndefined(value), \"null or undefined\" /* nullOrUndefined */, value),\n    object: (value) => assertType(is.object(value), 'Object', value),\n    iterable: (value) => assertType(is.iterable(value), \"Iterable\" /* iterable */, value),\n    asyncIterable: (value) => assertType(is.asyncIterable(value), \"AsyncIterable\" /* asyncIterable */, value),\n    generator: (value) => assertType(is.generator(value), 'Generator', value),\n    asyncGenerator: (value) => assertType(is.asyncGenerator(value), 'AsyncGenerator', value),\n    nativePromise: (value) => assertType(is.nativePromise(value), \"native Promise\" /* nativePromise */, value),\n    promise: (value) => assertType(is.promise(value), 'Promise', value),\n    generatorFunction: (value) => assertType(is.generatorFunction(value), 'GeneratorFunction', value),\n    asyncGeneratorFunction: (value) => assertType(is.asyncGeneratorFunction(value), 'AsyncGeneratorFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    asyncFunction: (value) => assertType(is.asyncFunction(value), 'AsyncFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    boundFunction: (value) => assertType(is.boundFunction(value), 'Function', value),\n    regExp: (value) => assertType(is.regExp(value), 'RegExp', value),\n    date: (value) => assertType(is.date(value), 'Date', value),\n    error: (value) => assertType(is.error(value), 'Error', value),\n    map: (value) => assertType(is.map(value), 'Map', value),\n    set: (value) => assertType(is.set(value), 'Set', value),\n    weakMap: (value) => assertType(is.weakMap(value), 'WeakMap', value),\n    weakSet: (value) => assertType(is.weakSet(value), 'WeakSet', value),\n    int8Array: (value) => assertType(is.int8Array(value), 'Int8Array', value),\n    uint8Array: (value) => assertType(is.uint8Array(value), 'Uint8Array', value),\n    uint8ClampedArray: (value) => assertType(is.uint8ClampedArray(value), 'Uint8ClampedArray', value),\n    int16Array: (value) => assertType(is.int16Array(value), 'Int16Array', value),\n    uint16Array: (value) => assertType(is.uint16Array(value), 'Uint16Array', value),\n    int32Array: (value) => assertType(is.int32Array(value), 'Int32Array', value),\n    uint32Array: (value) => assertType(is.uint32Array(value), 'Uint32Array', value),\n    float32Array: (value) => assertType(is.float32Array(value), 'Float32Array', value),\n    float64Array: (value) => assertType(is.float64Array(value), 'Float64Array', value),\n    bigInt64Array: (value) => assertType(is.bigInt64Array(value), 'BigInt64Array', value),\n    bigUint64Array: (value) => assertType(is.bigUint64Array(value), 'BigUint64Array', value),\n    arrayBuffer: (value) => assertType(is.arrayBuffer(value), 'ArrayBuffer', value),\n    sharedArrayBuffer: (value) => assertType(is.sharedArrayBuffer(value), 'SharedArrayBuffer', value),\n    dataView: (value) => assertType(is.dataView(value), 'DataView', value),\n    urlInstance: (value) => assertType(is.urlInstance(value), 'URL', value),\n    urlString: (value) => assertType(is.urlString(value), \"string with a URL\" /* urlString */, value),\n    truthy: (value) => assertType(is.truthy(value), \"truthy\" /* truthy */, value),\n    falsy: (value) => assertType(is.falsy(value), \"falsy\" /* falsy */, value),\n    nan: (value) => assertType(is.nan(value), \"NaN\" /* nan */, value),\n    primitive: (value) => assertType(is.primitive(value), \"primitive\" /* primitive */, value),\n    integer: (value) => assertType(is.integer(value), \"integer\" /* integer */, value),\n    safeInteger: (value) => assertType(is.safeInteger(value), \"integer\" /* safeInteger */, value),\n    plainObject: (value) => assertType(is.plainObject(value), \"plain object\" /* plainObject */, value),\n    typedArray: (value) => assertType(is.typedArray(value), \"TypedArray\" /* typedArray */, value),\n    arrayLike: (value) => assertType(is.arrayLike(value), \"array-like\" /* arrayLike */, value),\n    domElement: (value) => assertType(is.domElement(value), \"HTMLElement\" /* domElement */, value),\n    observable: (value) => assertType(is.observable(value), 'Observable', value),\n    nodeStream: (value) => assertType(is.nodeStream(value), \"Node.js Stream\" /* nodeStream */, value),\n    infinite: (value) => assertType(is.infinite(value), \"infinite number\" /* infinite */, value),\n    emptyArray: (value) => assertType(is.emptyArray(value), \"empty array\" /* emptyArray */, value),\n    nonEmptyArray: (value) => assertType(is.nonEmptyArray(value), \"non-empty array\" /* nonEmptyArray */, value),\n    emptyString: (value) => assertType(is.emptyString(value), \"empty string\" /* emptyString */, value),\n    nonEmptyString: (value) => assertType(is.nonEmptyString(value), \"non-empty string\" /* nonEmptyString */, value),\n    emptyStringOrWhitespace: (value) => assertType(is.emptyStringOrWhitespace(value), \"empty string or whitespace\" /* emptyStringOrWhitespace */, value),\n    emptyObject: (value) => assertType(is.emptyObject(value), \"empty object\" /* emptyObject */, value),\n    nonEmptyObject: (value) => assertType(is.nonEmptyObject(value), \"non-empty object\" /* nonEmptyObject */, value),\n    emptySet: (value) => assertType(is.emptySet(value), \"empty set\" /* emptySet */, value),\n    nonEmptySet: (value) => assertType(is.nonEmptySet(value), \"non-empty set\" /* nonEmptySet */, value),\n    emptyMap: (value) => assertType(is.emptyMap(value), \"empty map\" /* emptyMap */, value),\n    nonEmptyMap: (value) => assertType(is.nonEmptyMap(value), \"non-empty map\" /* nonEmptyMap */, value),\n    // Numbers.\n    evenInteger: (value) => assertType(is.evenInteger(value), \"even integer\" /* evenInteger */, value),\n    oddInteger: (value) => assertType(is.oddInteger(value), \"odd integer\" /* oddInteger */, value),\n    // Two arguments.\n    directInstanceOf: (instance, class_) => assertType(is.directInstanceOf(instance, class_), \"T\" /* directInstanceOf */, instance),\n    inRange: (value, range) => assertType(is.inRange(value, range), \"in range\" /* inRange */, value),\n    // Variadic functions.\n    any: (predicate, ...values) => {\n        return assertType(is.any(predicate, ...values), \"predicate returns truthy for any value\" /* any */, values, { multipleValues: true });\n    },\n    all: (predicate, ...values) => assertType(is.all(predicate, ...values), \"predicate returns truthy for all values\" /* all */, values, { multipleValues: true })\n};\n// Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\nObject.defineProperties(is, {\n    class: {\n        value: is.class_\n    },\n    function: {\n        value: is.function_\n    },\n    null: {\n        value: is.null_\n    }\n});\nObject.defineProperties(exports.assert, {\n    class: {\n        value: exports.assert.class_\n    },\n    function: {\n        value: exports.assert.function_\n    },\n    null: {\n        value: exports.assert.null_\n    }\n});\nexports[\"default\"] = is;\n// For CommonJS default export support\nmodule.exports = is;\nmodule.exports[\"default\"] = is;\nmodule.exports.assert = exports.assert;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/builders/node_modules/@sindresorhus/is/dist/index.js?");

/***/ }),

/***/ "./node_modules/@discordjs/collection/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@discordjs/collection/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Collection = void 0;\n/**\n * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has\n * an ID, for significantly improved performance and ease-of-use.\n * @extends {Map}\n * @property {number} size - The amount of elements in this collection.\n */\nclass Collection extends Map {\n    /**\n     * Identical to [Map.get()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get).\n     * Gets an element with the specified key, and returns its value, or `undefined` if the element does not exist.\n     * @param {*} key - The key to get from this collection\n     * @returns {* | undefined}\n     */\n    get(key) {\n        return super.get(key);\n    }\n    /**\n     * Identical to [Map.set()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set).\n     * Sets a new element in the collection with the specified key and value.\n     * @param {*} key - The key of the element to add\n     * @param {*} value - The value of the element to add\n     * @returns {Collection}\n     */\n    set(key, value) {\n        return super.set(key, value);\n    }\n    /**\n     * Identical to [Map.has()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has).\n     * Checks if an element exists in the collection.\n     * @param {*} key - The key of the element to check for\n     * @returns {boolean} `true` if the element exists, `false` if it does not exist.\n     */\n    has(key) {\n        return super.has(key);\n    }\n    /**\n     * Identical to [Map.delete()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete).\n     * Deletes an element from the collection.\n     * @param {*} key - The key to delete from the collection\n     * @returns {boolean} `true` if the element was removed, `false` if the element does not exist.\n     */\n    delete(key) {\n        return super.delete(key);\n    }\n    /**\n     * Identical to [Map.clear()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear).\n     * Removes all elements from the collection.\n     * @returns {undefined}\n     */\n    clear() {\n        return super.clear();\n    }\n    /**\n     * Checks if all of the elements exist in the collection.\n     * @param {...*} keys - The keys of the elements to check for\n     * @returns {boolean} `true` if all of the elements exist, `false` if at least one does not exist.\n     */\n    hasAll(...keys) {\n        return keys.every((k) => super.has(k));\n    }\n    /**\n     * Checks if any of the elements exist in the collection.\n     * @param {...*} keys - The keys of the elements to check for\n     * @returns {boolean} `true` if any of the elements exist, `false` if none exist.\n     */\n    hasAny(...keys) {\n        return keys.some((k) => super.has(k));\n    }\n    first(amount) {\n        if (typeof amount === 'undefined')\n            return this.values().next().value;\n        if (amount < 0)\n            return this.last(amount * -1);\n        amount = Math.min(this.size, amount);\n        const iter = this.values();\n        return Array.from({ length: amount }, () => iter.next().value);\n    }\n    firstKey(amount) {\n        if (typeof amount === 'undefined')\n            return this.keys().next().value;\n        if (amount < 0)\n            return this.lastKey(amount * -1);\n        amount = Math.min(this.size, amount);\n        const iter = this.keys();\n        return Array.from({ length: amount }, () => iter.next().value);\n    }\n    last(amount) {\n        const arr = [...this.values()];\n        if (typeof amount === 'undefined')\n            return arr[arr.length - 1];\n        if (amount < 0)\n            return this.first(amount * -1);\n        if (!amount)\n            return [];\n        return arr.slice(-amount);\n    }\n    lastKey(amount) {\n        const arr = [...this.keys()];\n        if (typeof amount === 'undefined')\n            return arr[arr.length - 1];\n        if (amount < 0)\n            return this.firstKey(amount * -1);\n        if (!amount)\n            return [];\n        return arr.slice(-amount);\n    }\n    random(amount) {\n        const arr = [...this.values()];\n        if (typeof amount === 'undefined')\n            return arr[Math.floor(Math.random() * arr.length)];\n        if (!arr.length || !amount)\n            return [];\n        return Array.from({ length: Math.min(amount, arr.length) }, () => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]);\n    }\n    randomKey(amount) {\n        const arr = [...this.keys()];\n        if (typeof amount === 'undefined')\n            return arr[Math.floor(Math.random() * arr.length)];\n        if (!arr.length || !amount)\n            return [];\n        return Array.from({ length: Math.min(amount, arr.length) }, () => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]);\n    }\n    find(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                return val;\n        }\n        return undefined;\n    }\n    findKey(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                return key;\n        }\n        return undefined;\n    }\n    sweep(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const previousSize = this.size;\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                this.delete(key);\n        }\n        return previousSize - this.size;\n    }\n    filter(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const results = new this.constructor[Symbol.species]();\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                results.set(key, val);\n        }\n        return results;\n    }\n    partition(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const results = [\n            new this.constructor[Symbol.species](),\n            new this.constructor[Symbol.species](),\n        ];\n        for (const [key, val] of this) {\n            if (fn(val, key, this)) {\n                results[0].set(key, val);\n            }\n            else {\n                results[1].set(key, val);\n            }\n        }\n        return results;\n    }\n    flatMap(fn, thisArg) {\n        const collections = this.map(fn, thisArg);\n        return new this.constructor[Symbol.species]().concat(...collections);\n    }\n    map(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const iter = this.entries();\n        return Array.from({ length: this.size }, () => {\n            const [key, value] = iter.next().value;\n            return fn(value, key, this);\n        });\n    }\n    mapValues(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const coll = new this.constructor[Symbol.species]();\n        for (const [key, val] of this)\n            coll.set(key, fn(val, key, this));\n        return coll;\n    }\n    some(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                return true;\n        }\n        return false;\n    }\n    every(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (!fn(val, key, this))\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Applies a function to produce a single value. Identical in behavior to\n     * [Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\n     * @param {Function} fn Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\n     * and `collection`\n     * @param {*} [initialValue] Starting value for the accumulator\n     * @returns {*}\n     * @example collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n     */\n    reduce(fn, initialValue) {\n        let accumulator;\n        if (typeof initialValue !== 'undefined') {\n            accumulator = initialValue;\n            for (const [key, val] of this)\n                accumulator = fn(accumulator, val, key, this);\n            return accumulator;\n        }\n        let first = true;\n        for (const [key, val] of this) {\n            if (first) {\n                accumulator = val;\n                first = false;\n                continue;\n            }\n            accumulator = fn(accumulator, val, key, this);\n        }\n        // No items iterated.\n        if (first) {\n            throw new TypeError('Reduce of empty collection with no initial value');\n        }\n        return accumulator;\n    }\n    each(fn, thisArg) {\n        this.forEach(fn, thisArg);\n        return this;\n    }\n    tap(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        fn(this);\n        return this;\n    }\n    /**\n     * Creates an identical shallow copy of this collection.\n     * @returns {Collection}\n     * @example const newColl = someColl.clone();\n     */\n    clone() {\n        return new this.constructor[Symbol.species](this);\n    }\n    /**\n     * Combines this collection with others into a new collection. None of the source collections are modified.\n     * @param {...Collection} collections Collections to merge\n     * @returns {Collection}\n     * @example const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n     */\n    concat(...collections) {\n        const newColl = this.clone();\n        for (const coll of collections) {\n            for (const [key, val] of coll)\n                newColl.set(key, val);\n        }\n        return newColl;\n    }\n    /**\n     * Checks if this collection shares identical items with another.\n     * This is different to checking for equality using equal-signs, because\n     * the collections may be different objects, but contain the same data.\n     * @param {Collection} collection Collection to compare with\n     * @returns {boolean} Whether the collections have identical contents\n     */\n    equals(collection) {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (!collection)\n            return false; // runtime check\n        if (this === collection)\n            return true;\n        if (this.size !== collection.size)\n            return false;\n        for (const [key, value] of this) {\n            if (!collection.has(key) || value !== collection.get(key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * The sort method sorts the items of a collection in place and returns it.\n     * The sort is not necessarily stable in Node 10 or older.\n     * The default sort order is according to string Unicode code points.\n     * @param {Function} [compareFunction] Specifies a function that defines the sort order.\n     * If omitted, the collection is sorted according to each character's Unicode code point value,\n     * according to the string conversion of each element.\n     * @returns {Collection}\n     * @example collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n     */\n    sort(compareFunction = Collection.defaultSort) {\n        const entries = [...this.entries()];\n        entries.sort((a, b) => compareFunction(a[1], b[1], a[0], b[0]));\n        // Perform clean-up\n        super.clear();\n        // Set the new entries\n        for (const [k, v] of entries) {\n            super.set(k, v);\n        }\n        return this;\n    }\n    /**\n     * The intersect method returns a new structure containing items where the keys are present in both original structures.\n     * @param {Collection} other The other Collection to filter against\n     * @returns {Collection}\n     */\n    intersect(other) {\n        const coll = new this.constructor[Symbol.species]();\n        for (const [k, v] of other) {\n            if (this.has(k))\n                coll.set(k, v);\n        }\n        return coll;\n    }\n    /**\n     * The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.\n     * @param {Collection} other The other Collection to filter against\n     * @returns {Collection}\n     */\n    difference(other) {\n        const coll = new this.constructor[Symbol.species]();\n        for (const [k, v] of other) {\n            if (!this.has(k))\n                coll.set(k, v);\n        }\n        for (const [k, v] of this) {\n            if (!other.has(k))\n                coll.set(k, v);\n        }\n        return coll;\n    }\n    /**\n     * The sorted method sorts the items of a collection and returns it.\n     * The sort is not necessarily stable in Node 10 or older.\n     * The default sort order is according to string Unicode code points.\n     * @param {Function} [compareFunction] Specifies a function that defines the sort order.\n     * If omitted, the collection is sorted according to each character's Unicode code point value,\n     * according to the string conversion of each element.\n     * @returns {Collection}\n     * @example collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n     */\n    sorted(compareFunction = Collection.defaultSort) {\n        return new this.constructor[Symbol.species](this).sort((av, bv, ak, bk) => compareFunction(av, bv, ak, bk));\n    }\n    toJSON() {\n        // toJSON is called recursively by JSON.stringify.\n        return [...this.values()];\n    }\n    static defaultSort(firstValue, secondValue) {\n        return Number(firstValue > secondValue) || Number(firstValue === secondValue) - 1;\n    }\n}\nexports.Collection = Collection;\nCollection.default = Collection;\nexports[\"default\"] = Collection;\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/collection/dist/index.js?");

/***/ }),

/***/ "./node_modules/@discordjs/form-data/lib/form_data.js":
/*!************************************************************!*\
  !*** ./node_modules/@discordjs/form-data/lib/form_data.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var CombinedStream = __webpack_require__(/*! combined-stream */ \"./node_modules/combined-stream/lib/combined_stream.js\");\nvar util = __webpack_require__(/*! util */ \"util\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar parseUrl = __webpack_require__(/*! url */ \"url\").parse;\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar Stream = __webpack_require__(/*! stream */ \"stream\").Stream;\nvar mime = __webpack_require__(/*! mime-types */ \"./node_modules/mime-types/index.js\");\nvar asynckit = __webpack_require__(/*! asynckit */ \"./node_modules/asynckit/index.js\");\nvar populate = __webpack_require__(/*! ./populate.js */ \"./node_modules/@discordjs/form-data/lib/populate.js\");\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/form-data/lib/form_data.js?");

/***/ }),

/***/ "./node_modules/@discordjs/form-data/lib/populate.js":
/*!***********************************************************!*\
  !*** ./node_modules/@discordjs/form-data/lib/populate.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/form-data/lib/populate.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/DataStore.js":
/*!*********************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/DataStore.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.deleteAudioPlayer = exports.addAudioPlayer = exports.hasAudioPlayer = exports.trackVoiceConnection = exports.untrackVoiceConnection = exports.getVoiceConnection = exports.getVoiceConnections = exports.getGroups = exports.createJoinVoiceChannelPayload = void 0;\n/**\n * Sends a voice state update to the main websocket shard of a guild, to indicate joining/leaving/moving across\n * voice channels.\n *\n * @param config - The configuration to use when joining the voice channel\n */\nfunction createJoinVoiceChannelPayload(config) {\n    return {\n        op: 4 /* VoiceStateUpdate */,\n        d: {\n            guild_id: config.guildId,\n            channel_id: config.channelId,\n            self_deaf: config.selfDeaf,\n            self_mute: config.selfMute,\n        },\n    };\n}\nexports.createJoinVoiceChannelPayload = createJoinVoiceChannelPayload;\n// Voice Connections\nconst groups = new Map();\ngroups.set('default', new Map());\nfunction getOrCreateGroup(group) {\n    const existing = groups.get(group);\n    if (existing)\n        return existing;\n    const map = new Map();\n    groups.set(group, map);\n    return map;\n}\n/**\n * Retrieves the map of group names to maps of voice connections. By default, all voice connections\n * are created under the 'default' group.\n * @returns The group map\n */\nfunction getGroups() {\n    return groups;\n}\nexports.getGroups = getGroups;\n/**\n * Retrieves all the voice connections under the given group name. Defaults to the 'default' group.\n * @param group - The group to look up\n * @returns The map of voice connections\n */\nfunction getVoiceConnections(group = 'default') {\n    return groups.get(group);\n}\nexports.getVoiceConnections = getVoiceConnections;\n/**\n * Finds a voice connection with the given guild ID and group. Defaults to the 'default' group.\n * @param guildId - The guild ID of the voice connection\n * @param group - the group that the voice connection was registered with\n * @returns The voice connection, if it exists\n */\nfunction getVoiceConnection(guildId, group = 'default') {\n    var _a;\n    return (_a = getVoiceConnections(group)) === null || _a === void 0 ? void 0 : _a.get(guildId);\n}\nexports.getVoiceConnection = getVoiceConnection;\nfunction untrackVoiceConnection(voiceConnection) {\n    var _a;\n    return (_a = getVoiceConnections(voiceConnection.joinConfig.group)) === null || _a === void 0 ? void 0 : _a.delete(voiceConnection.joinConfig.guildId);\n}\nexports.untrackVoiceConnection = untrackVoiceConnection;\nfunction trackVoiceConnection(voiceConnection) {\n    return getOrCreateGroup(voiceConnection.joinConfig.group).set(voiceConnection.joinConfig.guildId, voiceConnection);\n}\nexports.trackVoiceConnection = trackVoiceConnection;\n// Audio Players\n// Each audio packet is 20ms long\nconst FRAME_LENGTH = 20;\nlet audioCycleInterval;\nlet nextTime = -1;\n/**\n * A list of created audio players that are still active and haven't been destroyed.\n */\nconst audioPlayers = [];\n/**\n * Called roughly every 20 milliseconds. Dispatches audio from all players, and then gets the players to prepare\n * the next audio frame.\n */\nfunction audioCycleStep() {\n    if (nextTime === -1)\n        return;\n    nextTime += FRAME_LENGTH;\n    const available = audioPlayers.filter((player) => player.checkPlayable());\n    // eslint-disable-next-line @typescript-eslint/dot-notation\n    available.forEach((player) => player['_stepDispatch']());\n    prepareNextAudioFrame(available);\n}\n/**\n * Recursively gets the players that have been passed as parameters to prepare audio frames that can be played.\n * at the start of the next cycle.\n */\nfunction prepareNextAudioFrame(players) {\n    const nextPlayer = players.shift();\n    if (!nextPlayer) {\n        if (nextTime !== -1) {\n            audioCycleInterval = setTimeout(() => audioCycleStep(), nextTime - Date.now());\n        }\n        return;\n    }\n    // eslint-disable-next-line @typescript-eslint/dot-notation\n    nextPlayer['_stepPrepare']();\n    // setImmediate to avoid long audio player chains blocking other scheduled tasks\n    setImmediate(() => prepareNextAudioFrame(players));\n}\n/**\n * Checks whether or not the given audio player is being driven by the data store clock.\n *\n * @param target - The target to test for\n * @returns true if it is being tracked, false otherwise\n */\nfunction hasAudioPlayer(target) {\n    return audioPlayers.includes(target);\n}\nexports.hasAudioPlayer = hasAudioPlayer;\n/**\n * Adds an audio player to the data store tracking list, if it isn't already there.\n *\n * @param player - The player to track\n */\nfunction addAudioPlayer(player) {\n    if (hasAudioPlayer(player))\n        return player;\n    audioPlayers.push(player);\n    if (audioPlayers.length === 1) {\n        nextTime = Date.now();\n        setImmediate(() => audioCycleStep());\n    }\n    return player;\n}\nexports.addAudioPlayer = addAudioPlayer;\n/**\n * Removes an audio player from the data store tracking list, if it is present there.\n */\nfunction deleteAudioPlayer(player) {\n    const index = audioPlayers.indexOf(player);\n    if (index === -1)\n        return;\n    audioPlayers.splice(index, 1);\n    if (audioPlayers.length === 0) {\n        nextTime = -1;\n        if (typeof audioCycleInterval !== 'undefined')\n            clearTimeout(audioCycleInterval);\n    }\n}\nexports.deleteAudioPlayer = deleteAudioPlayer;\n//# sourceMappingURL=DataStore.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/DataStore.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/VoiceConnection.js":
/*!***************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/VoiceConnection.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createVoiceConnection = exports.VoiceConnection = exports.VoiceConnectionDisconnectReason = exports.VoiceConnectionStatus = void 0;\nconst DataStore_1 = __webpack_require__(/*! ./DataStore */ \"./node_modules/@discordjs/voice/dist/DataStore.js\");\nconst Networking_1 = __webpack_require__(/*! ./networking/Networking */ \"./node_modules/@discordjs/voice/dist/networking/Networking.js\");\nconst util_1 = __webpack_require__(/*! ./util/util */ \"./node_modules/@discordjs/voice/dist/util/util.js\");\nconst tiny_typed_emitter_1 = __webpack_require__(/*! tiny-typed-emitter */ \"./node_modules/tiny-typed-emitter/lib/index.js\");\nconst receive_1 = __webpack_require__(/*! ./receive */ \"./node_modules/@discordjs/voice/dist/receive/index.js\");\n/**\n * The various status codes a voice connection can hold at any one time.\n */\nvar VoiceConnectionStatus;\n(function (VoiceConnectionStatus) {\n    /**\n     * Sending a packet to the main Discord gateway to indicate we want to change our voice state.\n     */\n    VoiceConnectionStatus[\"Signalling\"] = \"signalling\";\n    /**\n     * The `VOICE_SERVER_UPDATE` and `VOICE_STATE_UPDATE` packets have been received, now attempting to establish a voice connection.\n     */\n    VoiceConnectionStatus[\"Connecting\"] = \"connecting\";\n    /**\n     * A voice connection has been established, and is ready to be used\n     */\n    VoiceConnectionStatus[\"Ready\"] = \"ready\";\n    /**\n     * The voice connection has either been severed or not established.\n     */\n    VoiceConnectionStatus[\"Disconnected\"] = \"disconnected\";\n    /**\n     * The voice connection has been destroyed and untracked, it cannot be reused.\n     */\n    VoiceConnectionStatus[\"Destroyed\"] = \"destroyed\";\n})(VoiceConnectionStatus = exports.VoiceConnectionStatus || (exports.VoiceConnectionStatus = {}));\n/**\n * The reasons a voice connection can be in the disconnected state.\n */\nvar VoiceConnectionDisconnectReason;\n(function (VoiceConnectionDisconnectReason) {\n    /**\n     * When the WebSocket connection has been closed.\n     */\n    VoiceConnectionDisconnectReason[VoiceConnectionDisconnectReason[\"WebSocketClose\"] = 0] = \"WebSocketClose\";\n    /**\n     * When the adapter was unable to send a message requested by the VoiceConnection.\n     */\n    VoiceConnectionDisconnectReason[VoiceConnectionDisconnectReason[\"AdapterUnavailable\"] = 1] = \"AdapterUnavailable\";\n    /**\n     * When a VOICE_SERVER_UPDATE packet is received with a null endpoint, causing the connection to be severed.\n     */\n    VoiceConnectionDisconnectReason[VoiceConnectionDisconnectReason[\"EndpointRemoved\"] = 2] = \"EndpointRemoved\";\n    /**\n     * When a manual disconnect was requested.\n     */\n    VoiceConnectionDisconnectReason[VoiceConnectionDisconnectReason[\"Manual\"] = 3] = \"Manual\";\n})(VoiceConnectionDisconnectReason = exports.VoiceConnectionDisconnectReason || (exports.VoiceConnectionDisconnectReason = {}));\n/**\n * A connection to the voice server of a Guild, can be used to play audio in voice channels.\n */\nclass VoiceConnection extends tiny_typed_emitter_1.TypedEmitter {\n    /**\n     * Creates a new voice connection.\n     *\n     * @param joinConfig - The data required to establish the voice connection\n     * @param options - The options used to create this voice connection\n     */\n    constructor(joinConfig, { debug, adapterCreator }) {\n        super();\n        this.debug = debug ? (message) => this.emit('debug', message) : null;\n        this.rejoinAttempts = 0;\n        this.receiver = new receive_1.VoiceReceiver(this);\n        this.onNetworkingClose = this.onNetworkingClose.bind(this);\n        this.onNetworkingStateChange = this.onNetworkingStateChange.bind(this);\n        this.onNetworkingError = this.onNetworkingError.bind(this);\n        this.onNetworkingDebug = this.onNetworkingDebug.bind(this);\n        const adapter = adapterCreator({\n            onVoiceServerUpdate: (data) => this.addServerPacket(data),\n            onVoiceStateUpdate: (data) => this.addStatePacket(data),\n            destroy: () => this.destroy(false),\n        });\n        this._state = { status: VoiceConnectionStatus.Signalling, adapter };\n        this.packets = {\n            server: undefined,\n            state: undefined,\n        };\n        this.joinConfig = joinConfig;\n    }\n    /**\n     * The current state of the voice connection\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Updates the state of the voice connection, performing clean-up operations where necessary.\n     */\n    set state(newState) {\n        const oldState = this._state;\n        const oldNetworking = Reflect.get(oldState, 'networking');\n        const newNetworking = Reflect.get(newState, 'networking');\n        const oldSubscription = Reflect.get(oldState, 'subscription');\n        const newSubscription = Reflect.get(newState, 'subscription');\n        if (oldNetworking !== newNetworking) {\n            if (oldNetworking) {\n                oldNetworking.on('error', util_1.noop);\n                oldNetworking.off('debug', this.onNetworkingDebug);\n                oldNetworking.off('error', this.onNetworkingError);\n                oldNetworking.off('close', this.onNetworkingClose);\n                oldNetworking.off('stateChange', this.onNetworkingStateChange);\n                oldNetworking.destroy();\n            }\n            if (newNetworking)\n                this.updateReceiveBindings(newNetworking.state, oldNetworking === null || oldNetworking === void 0 ? void 0 : oldNetworking.state);\n        }\n        if (newState.status === VoiceConnectionStatus.Ready) {\n            this.rejoinAttempts = 0;\n        }\n        else if (newState.status === VoiceConnectionStatus.Destroyed) {\n            for (const stream of this.receiver.subscriptions.values()) {\n                if (!stream.destroyed)\n                    stream.destroy();\n            }\n        }\n        // If destroyed, the adapter can also be destroyed so it can be cleaned up by the user\n        if (oldState.status !== VoiceConnectionStatus.Destroyed && newState.status === VoiceConnectionStatus.Destroyed) {\n            oldState.adapter.destroy();\n        }\n        this._state = newState;\n        if (oldSubscription && oldSubscription !== newSubscription) {\n            oldSubscription.unsubscribe();\n        }\n        this.emit('stateChange', oldState, newState);\n        if (oldState.status !== newState.status) {\n            this.emit(newState.status, oldState, newState);\n        }\n    }\n    /**\n     * Registers a `VOICE_SERVER_UPDATE` packet to the voice connection. This will cause it to reconnect using the\n     * new data provided in the packet.\n     *\n     * @param packet - The received `VOICE_SERVER_UPDATE` packet\n     */\n    addServerPacket(packet) {\n        this.packets.server = packet;\n        if (packet.endpoint) {\n            this.configureNetworking();\n        }\n        else if (this.state.status !== VoiceConnectionStatus.Destroyed) {\n            this.state = {\n                ...this.state,\n                status: VoiceConnectionStatus.Disconnected,\n                reason: VoiceConnectionDisconnectReason.EndpointRemoved,\n            };\n        }\n    }\n    /**\n     * Registers a `VOICE_STATE_UPDATE` packet to the voice connection. Most importantly, it stores the ID of the\n     * channel that the client is connected to.\n     *\n     * @param packet - The received `VOICE_STATE_UPDATE` packet\n     */\n    addStatePacket(packet) {\n        this.packets.state = packet;\n        if (typeof packet.self_deaf !== 'undefined')\n            this.joinConfig.selfDeaf = packet.self_deaf;\n        if (typeof packet.self_mute !== 'undefined')\n            this.joinConfig.selfMute = packet.self_mute;\n        if (packet.channel_id)\n            this.joinConfig.channelId = packet.channel_id;\n        /*\n            the channel_id being null doesn't necessarily mean it was intended for the client to leave the voice channel\n            as it may have disconnected due to network failure. This will be gracefully handled once the voice websocket\n            dies, and then it is up to the user to decide how they wish to handle this.\n        */\n    }\n    /**\n     * Called when the networking state changes, and the new ws/udp packet/message handlers need to be rebound\n     * to the new instances.\n     * @param newState - The new networking state\n     * @param oldState - The old networking state, if there is one\n     */\n    updateReceiveBindings(newState, oldState) {\n        var _a;\n        const oldWs = Reflect.get(oldState !== null && oldState !== void 0 ? oldState : {}, 'ws');\n        const newWs = Reflect.get(newState, 'ws');\n        const oldUdp = Reflect.get(oldState !== null && oldState !== void 0 ? oldState : {}, 'udp');\n        const newUdp = Reflect.get(newState, 'udp');\n        if (oldWs !== newWs) {\n            oldWs === null || oldWs === void 0 ? void 0 : oldWs.off('packet', this.receiver.onWsPacket);\n            newWs === null || newWs === void 0 ? void 0 : newWs.on('packet', this.receiver.onWsPacket);\n        }\n        if (oldUdp !== newUdp) {\n            oldUdp === null || oldUdp === void 0 ? void 0 : oldUdp.off('message', this.receiver.onUdpMessage);\n            newUdp === null || newUdp === void 0 ? void 0 : newUdp.on('message', this.receiver.onUdpMessage);\n        }\n        this.receiver.connectionData = (_a = Reflect.get(newState, 'connectionData')) !== null && _a !== void 0 ? _a : {};\n    }\n    /**\n     * Attempts to configure a networking instance for this voice connection using the received packets.\n     * Both packets are required, and any existing networking instance will be destroyed.\n     *\n     * @remarks\n     * This is called when the voice server of the connection changes, e.g. if the bot is moved into a\n     * different channel in the same guild but has a different voice server. In this instance, the connection\n     * needs to be re-established to the new voice server.\n     *\n     * The connection will transition to the Connecting state when this is called.\n     */\n    configureNetworking() {\n        const { server, state } = this.packets;\n        if (!server || !state || this.state.status === VoiceConnectionStatus.Destroyed || !server.endpoint)\n            return;\n        const networking = new Networking_1.Networking({\n            endpoint: server.endpoint,\n            serverId: server.guild_id,\n            token: server.token,\n            sessionId: state.session_id,\n            userId: state.user_id,\n        }, Boolean(this.debug));\n        networking.once('close', this.onNetworkingClose);\n        networking.on('stateChange', this.onNetworkingStateChange);\n        networking.on('error', this.onNetworkingError);\n        networking.on('debug', this.onNetworkingDebug);\n        this.state = {\n            ...this.state,\n            status: VoiceConnectionStatus.Connecting,\n            networking,\n        };\n    }\n    /**\n     * Called when the networking instance for this connection closes. If the close code is 4014 (do not reconnect),\n     * the voice connection will transition to the Disconnected state which will store the close code. You can\n     * decide whether or not to reconnect when this occurs by listening for the state change and calling reconnect().\n     *\n     * @remarks\n     * If the close code was anything other than 4014, it is likely that the closing was not intended, and so the\n     * VoiceConnection will signal to Discord that it would like to rejoin the channel. This automatically attempts\n     * to re-establish the connection. This would be seen as a transition from the Ready state to the Signalling state.\n     *\n     * @param code - The close code\n     */\n    onNetworkingClose(code) {\n        if (this.state.status === VoiceConnectionStatus.Destroyed)\n            return;\n        // If networking closes, try to connect to the voice channel again.\n        if (code === 4014) {\n            // Disconnected - networking is already destroyed here\n            this.state = {\n                ...this.state,\n                status: VoiceConnectionStatus.Disconnected,\n                reason: VoiceConnectionDisconnectReason.WebSocketClose,\n                closeCode: code,\n            };\n        }\n        else {\n            this.state = {\n                ...this.state,\n                status: VoiceConnectionStatus.Signalling,\n            };\n            this.rejoinAttempts++;\n            if (!this.state.adapter.sendPayload(DataStore_1.createJoinVoiceChannelPayload(this.joinConfig))) {\n                this.state = {\n                    ...this.state,\n                    status: VoiceConnectionStatus.Disconnected,\n                    reason: VoiceConnectionDisconnectReason.AdapterUnavailable,\n                };\n            }\n        }\n    }\n    /**\n     * Called when the state of the networking instance changes. This is used to derive the state of the voice connection.\n     *\n     * @param oldState - The previous state\n     * @param newState - The new state\n     */\n    onNetworkingStateChange(oldState, newState) {\n        this.updateReceiveBindings(newState, oldState);\n        if (oldState.code === newState.code)\n            return;\n        if (this.state.status !== VoiceConnectionStatus.Connecting && this.state.status !== VoiceConnectionStatus.Ready)\n            return;\n        if (newState.code === Networking_1.NetworkingStatusCode.Ready) {\n            this.state = {\n                ...this.state,\n                status: VoiceConnectionStatus.Ready,\n            };\n        }\n        else if (newState.code !== Networking_1.NetworkingStatusCode.Closed) {\n            this.state = {\n                ...this.state,\n                status: VoiceConnectionStatus.Connecting,\n            };\n        }\n    }\n    /**\n     * Propagates errors from the underlying network instance.\n     *\n     * @param error - The error to propagate\n     */\n    onNetworkingError(error) {\n        this.emit('error', error);\n    }\n    /**\n     * Propagates debug messages from the underlying network instance.\n     *\n     * @param message - The debug message to propagate\n     */\n    onNetworkingDebug(message) {\n        var _a;\n        (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, `[NW] ${message}`);\n    }\n    /**\n     * Prepares an audio packet for dispatch\n     *\n     * @param buffer - The Opus packet to prepare\n     */\n    prepareAudioPacket(buffer) {\n        const state = this.state;\n        if (state.status !== VoiceConnectionStatus.Ready)\n            return;\n        return state.networking.prepareAudioPacket(buffer);\n    }\n    /**\n     * Dispatches the previously prepared audio packet (if any)\n     */\n    dispatchAudio() {\n        const state = this.state;\n        if (state.status !== VoiceConnectionStatus.Ready)\n            return;\n        return state.networking.dispatchAudio();\n    }\n    /**\n     * Prepares an audio packet and dispatches it immediately\n     *\n     * @param buffer - The Opus packet to play\n     */\n    playOpusPacket(buffer) {\n        const state = this.state;\n        if (state.status !== VoiceConnectionStatus.Ready)\n            return;\n        state.networking.prepareAudioPacket(buffer);\n        return state.networking.dispatchAudio();\n    }\n    /**\n     * Destroys the VoiceConnection, preventing it from connecting to voice again.\n     * This method should be called when you no longer require the VoiceConnection to\n     * prevent memory leaks.\n     * @param adapterAvailable - Whether the adapter can be used\n     */\n    destroy(adapterAvailable = true) {\n        if (this.state.status === VoiceConnectionStatus.Destroyed) {\n            throw new Error('Cannot destroy VoiceConnection - it has already been destroyed');\n        }\n        if (DataStore_1.getVoiceConnection(this.joinConfig.guildId) === this) {\n            DataStore_1.untrackVoiceConnection(this);\n        }\n        if (adapterAvailable) {\n            this.state.adapter.sendPayload(DataStore_1.createJoinVoiceChannelPayload({ ...this.joinConfig, channelId: null }));\n        }\n        this.state = {\n            status: VoiceConnectionStatus.Destroyed,\n        };\n    }\n    /**\n     * Disconnects the VoiceConnection, allowing the possibility of rejoining later on.\n     * @returns - true if the connection was successfully disconnected.\n     */\n    disconnect() {\n        if (this.state.status === VoiceConnectionStatus.Destroyed ||\n            this.state.status === VoiceConnectionStatus.Signalling) {\n            return false;\n        }\n        this.joinConfig.channelId = null;\n        if (!this.state.adapter.sendPayload(DataStore_1.createJoinVoiceChannelPayload(this.joinConfig))) {\n            this.state = {\n                adapter: this.state.adapter,\n                subscription: this.state.subscription,\n                status: VoiceConnectionStatus.Disconnected,\n                reason: VoiceConnectionDisconnectReason.AdapterUnavailable,\n            };\n            return false;\n        }\n        this.state = {\n            adapter: this.state.adapter,\n            reason: VoiceConnectionDisconnectReason.Manual,\n            status: VoiceConnectionStatus.Disconnected,\n        };\n        return true;\n    }\n    /**\n     * Attempts to rejoin (better explanation soon:tm:)\n     *\n     * @remarks\n     * Calling this method successfully will automatically increment the `rejoinAttempts` counter,\n     * which you can use to inform whether or not you'd like to keep attempting to reconnect your\n     * voice connection.\n     *\n     * A state transition from Disconnected to Signalling will be observed when this is called.\n     */\n    rejoin(joinConfig) {\n        if (this.state.status === VoiceConnectionStatus.Destroyed) {\n            return false;\n        }\n        const notReady = this.state.status !== VoiceConnectionStatus.Ready;\n        if (notReady)\n            this.rejoinAttempts++;\n        Object.assign(this.joinConfig, joinConfig);\n        if (this.state.adapter.sendPayload(DataStore_1.createJoinVoiceChannelPayload(this.joinConfig))) {\n            if (notReady) {\n                this.state = {\n                    ...this.state,\n                    status: VoiceConnectionStatus.Signalling,\n                };\n            }\n            return true;\n        }\n        this.state = {\n            adapter: this.state.adapter,\n            subscription: this.state.subscription,\n            status: VoiceConnectionStatus.Disconnected,\n            reason: VoiceConnectionDisconnectReason.AdapterUnavailable,\n        };\n        return false;\n    }\n    /**\n     * Updates the speaking status of the voice connection. This is used when audio players are done playing audio,\n     * and need to signal that the connection is no longer playing audio.\n     *\n     * @param enabled - Whether or not to show as speaking\n     */\n    setSpeaking(enabled) {\n        if (this.state.status !== VoiceConnectionStatus.Ready)\n            return false;\n        this.state.networking.setSpeaking(enabled);\n    }\n    /**\n     * Subscribes to an audio player, allowing the player to play audio on this voice connection.\n     *\n     * @param player - The audio player to subscribe to\n     * @returns The created subscription\n     */\n    subscribe(player) {\n        if (this.state.status === VoiceConnectionStatus.Destroyed)\n            return;\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        const subscription = player['subscribe'](this);\n        this.state = {\n            ...this.state,\n            subscription,\n        };\n        return subscription;\n    }\n    /**\n     * The latest ping (in milliseconds) for the WebSocket connection and audio playback for this voice\n     * connection, if this data is available.\n     *\n     * @remarks\n     * For this data to be available, the VoiceConnection must be in the Ready state, and its underlying\n     * WebSocket connection and UDP socket must have had at least one ping-pong exchange.\n     */\n    get ping() {\n        if (this.state.status === VoiceConnectionStatus.Ready &&\n            this.state.networking.state.code === Networking_1.NetworkingStatusCode.Ready) {\n            return {\n                ws: this.state.networking.state.ws.ping,\n                udp: this.state.networking.state.udp.ping,\n            };\n        }\n        return {\n            ws: undefined,\n            udp: undefined,\n        };\n    }\n    /**\n     * Called when a subscription of this voice connection to an audio player is removed.\n     *\n     * @param subscription - The removed subscription\n     */\n    onSubscriptionRemoved(subscription) {\n        if (this.state.status !== VoiceConnectionStatus.Destroyed && this.state.subscription === subscription) {\n            this.state = {\n                ...this.state,\n                subscription: undefined,\n            };\n        }\n    }\n}\nexports.VoiceConnection = VoiceConnection;\n/**\n * Creates a new voice connection\n *\n * @param joinConfig - The data required to establish the voice connection\n * @param options - The options to use when joining the voice channel\n */\nfunction createVoiceConnection(joinConfig, options) {\n    const payload = DataStore_1.createJoinVoiceChannelPayload(joinConfig);\n    const existing = DataStore_1.getVoiceConnection(joinConfig.guildId);\n    if (existing && existing.state.status !== VoiceConnectionStatus.Destroyed) {\n        if (existing.state.status === VoiceConnectionStatus.Disconnected) {\n            existing.rejoin({\n                channelId: joinConfig.channelId,\n                selfDeaf: joinConfig.selfDeaf,\n                selfMute: joinConfig.selfMute,\n            });\n        }\n        else if (!existing.state.adapter.sendPayload(payload)) {\n            existing.state = {\n                ...existing.state,\n                status: VoiceConnectionStatus.Disconnected,\n                reason: VoiceConnectionDisconnectReason.AdapterUnavailable,\n            };\n        }\n        return existing;\n    }\n    const voiceConnection = new VoiceConnection(joinConfig, options);\n    DataStore_1.trackVoiceConnection(voiceConnection);\n    if (voiceConnection.state.status !== VoiceConnectionStatus.Destroyed) {\n        if (!voiceConnection.state.adapter.sendPayload(payload)) {\n            voiceConnection.state = {\n                ...voiceConnection.state,\n                status: VoiceConnectionStatus.Disconnected,\n                reason: VoiceConnectionDisconnectReason.AdapterUnavailable,\n            };\n        }\n    }\n    return voiceConnection;\n}\nexports.createVoiceConnection = createVoiceConnection;\n//# sourceMappingURL=VoiceConnection.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/VoiceConnection.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/audio/AudioPlayer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/audio/AudioPlayer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createAudioPlayer = exports.AudioPlayer = exports.AudioPlayerStatus = exports.NoSubscriberBehavior = exports.SILENCE_FRAME = void 0;\nconst DataStore_1 = __webpack_require__(/*! ../DataStore */ \"./node_modules/@discordjs/voice/dist/DataStore.js\");\nconst util_1 = __webpack_require__(/*! ../util/util */ \"./node_modules/@discordjs/voice/dist/util/util.js\");\nconst VoiceConnection_1 = __webpack_require__(/*! ../VoiceConnection */ \"./node_modules/@discordjs/voice/dist/VoiceConnection.js\");\nconst AudioPlayerError_1 = __webpack_require__(/*! ./AudioPlayerError */ \"./node_modules/@discordjs/voice/dist/audio/AudioPlayerError.js\");\nconst PlayerSubscription_1 = __webpack_require__(/*! ./PlayerSubscription */ \"./node_modules/@discordjs/voice/dist/audio/PlayerSubscription.js\");\nconst tiny_typed_emitter_1 = __webpack_require__(/*! tiny-typed-emitter */ \"./node_modules/tiny-typed-emitter/lib/index.js\");\n// The Opus \"silent\" frame\nexports.SILENCE_FRAME = Buffer.from([0xf8, 0xff, 0xfe]);\n/**\n * Describes the behavior of the player when an audio packet is played but there are no available\n * voice connections to play to.\n */\nvar NoSubscriberBehavior;\n(function (NoSubscriberBehavior) {\n    /**\n     * Pauses playing the stream until a voice connection becomes available\n     */\n    NoSubscriberBehavior[\"Pause\"] = \"pause\";\n    /**\n     * Continues to play through the resource regardless\n     */\n    NoSubscriberBehavior[\"Play\"] = \"play\";\n    /**\n     * The player stops and enters the Idle state\n     */\n    NoSubscriberBehavior[\"Stop\"] = \"stop\";\n})(NoSubscriberBehavior = exports.NoSubscriberBehavior || (exports.NoSubscriberBehavior = {}));\nvar AudioPlayerStatus;\n(function (AudioPlayerStatus) {\n    /**\n     * When there is currently no resource for the player to be playing\n     */\n    AudioPlayerStatus[\"Idle\"] = \"idle\";\n    /**\n     * When the player is waiting for an audio resource to become readable before transitioning to Playing\n     */\n    AudioPlayerStatus[\"Buffering\"] = \"buffering\";\n    /**\n     * When the player has been manually paused\n     */\n    AudioPlayerStatus[\"Paused\"] = \"paused\";\n    /**\n     * When the player is actively playing an audio resource\n     */\n    AudioPlayerStatus[\"Playing\"] = \"playing\";\n    /**\n     * When the player has paused itself. Only possible with the \"pause\" no subscriber behavior.\n     */\n    AudioPlayerStatus[\"AutoPaused\"] = \"autopaused\";\n})(AudioPlayerStatus = exports.AudioPlayerStatus || (exports.AudioPlayerStatus = {}));\n/**\n * Used to play audio resources (i.e. tracks, streams) to voice connections.\n *\n * @remarks\n * Audio players are designed to be re-used - even if a resource has finished playing, the player itself\n * can still be used.\n *\n * The AudioPlayer drives the timing of playback, and therefore is unaffected by voice connections\n * becoming unavailable. Its behavior in these scenarios can be configured.\n */\nclass AudioPlayer extends tiny_typed_emitter_1.TypedEmitter {\n    /**\n     * Creates a new AudioPlayer\n     */\n    constructor(options = {}) {\n        super();\n        /**\n         * A list of VoiceConnections that are registered to this AudioPlayer. The player will attempt to play audio\n         * to the streams in this list.\n         */\n        this.subscribers = [];\n        this._state = { status: AudioPlayerStatus.Idle };\n        this.behaviors = {\n            noSubscriber: NoSubscriberBehavior.Pause,\n            maxMissedFrames: 5,\n            ...options.behaviors,\n        };\n        this.debug = options.debug === false ? null : (message) => this.emit('debug', message);\n    }\n    /**\n     * A list of subscribed voice connections that can currently receive audio to play\n     */\n    get playable() {\n        return this.subscribers\n            .filter(({ connection }) => connection.state.status === VoiceConnection_1.VoiceConnectionStatus.Ready)\n            .map(({ connection }) => connection);\n    }\n    /**\n     * Subscribes a VoiceConnection to the audio player's play list. If the VoiceConnection is already subscribed,\n     * then the existing subscription is used.\n     *\n     * @remarks\n     * This method should not be directly called. Instead, use VoiceConnection#subscribe.\n     *\n     * @param connection - The connection to subscribe\n     * @returns The new subscription if the voice connection is not yet subscribed, otherwise the existing subscription.\n     */\n    subscribe(connection) {\n        const existingSubscription = this.subscribers.find((subscription) => subscription.connection === connection);\n        if (!existingSubscription) {\n            const subscription = new PlayerSubscription_1.PlayerSubscription(connection, this);\n            this.subscribers.push(subscription);\n            setImmediate(() => this.emit('subscribe', subscription));\n            return subscription;\n        }\n        return existingSubscription;\n    }\n    /**\n     * Unsubscribes a subscription - i.e. removes a voice connection from the play list of the audio player.\n     *\n     * @remarks\n     * This method should not be directly called. Instead, use PlayerSubscription#unsubscribe.\n     *\n     * @param subscription - The subscription to remove\n     * @returns Whether or not the subscription existed on the player and was removed.\n     */\n    unsubscribe(subscription) {\n        const index = this.subscribers.indexOf(subscription);\n        const exists = index !== -1;\n        if (exists) {\n            this.subscribers.splice(index, 1);\n            subscription.connection.setSpeaking(false);\n            this.emit('unsubscribe', subscription);\n        }\n        return exists;\n    }\n    /**\n     * The state that the player is in.\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Sets a new state for the player, performing clean-up operations where necessary.\n     */\n    set state(newState) {\n        var _a;\n        const oldState = this._state;\n        const newResource = Reflect.get(newState, 'resource');\n        if (oldState.status !== AudioPlayerStatus.Idle && oldState.resource !== newResource) {\n            oldState.resource.playStream.on('error', util_1.noop);\n            oldState.resource.playStream.off('error', oldState.onStreamError);\n            oldState.resource.audioPlayer = undefined;\n            oldState.resource.playStream.destroy();\n            oldState.resource.playStream.read(); // required to ensure buffered data is drained, prevents memory leak\n        }\n        // When leaving the Buffering state (or buffering a new resource), then remove the event listeners from it\n        if (oldState.status === AudioPlayerStatus.Buffering &&\n            (newState.status !== AudioPlayerStatus.Buffering || newState.resource !== oldState.resource)) {\n            oldState.resource.playStream.off('end', oldState.onFailureCallback);\n            oldState.resource.playStream.off('close', oldState.onFailureCallback);\n            oldState.resource.playStream.off('finish', oldState.onFailureCallback);\n            oldState.resource.playStream.off('readable', oldState.onReadableCallback);\n        }\n        // transitioning into an idle should ensure that connections stop speaking\n        if (newState.status === AudioPlayerStatus.Idle) {\n            this._signalStopSpeaking();\n            DataStore_1.deleteAudioPlayer(this);\n        }\n        // attach to the global audio player timer\n        if (newResource) {\n            DataStore_1.addAudioPlayer(this);\n        }\n        // playing -> playing state changes should still transition if a resource changed (seems like it would be useful!)\n        const didChangeResources = oldState.status !== AudioPlayerStatus.Idle &&\n            newState.status === AudioPlayerStatus.Playing &&\n            oldState.resource !== newState.resource;\n        this._state = newState;\n        this.emit('stateChange', oldState, this._state);\n        if (oldState.status !== newState.status || didChangeResources) {\n            this.emit(newState.status, oldState, this._state);\n        }\n        (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, `state change:\\nfrom ${stringifyState(oldState)}\\nto ${stringifyState(newState)}`);\n    }\n    /**\n     * Plays a new resource on the player. If the player is already playing a resource, the existing resource is destroyed\n     * (it cannot be reused, even in another player) and is replaced with the new resource.\n     *\n     * @remarks\n     * The player will transition to the Playing state once playback begins, and will return to the Idle state once\n     * playback is ended.\n     *\n     * If the player was previously playing a resource and this method is called, the player will not transition to the\n     * Idle state during the swap over.\n     *\n     * @param resource - The resource to play\n     * @throws Will throw if attempting to play an audio resource that has already ended, or is being played by another player.\n     */\n    play(resource) {\n        if (resource.ended) {\n            throw new Error('Cannot play a resource that has already ended.');\n        }\n        if (resource.audioPlayer) {\n            if (resource.audioPlayer === this) {\n                return;\n            }\n            throw new Error('Resource is already being played by another audio player.');\n        }\n        resource.audioPlayer = this;\n        // Attach error listeners to the stream that will propagate the error and then return to the Idle\n        // state if the resource is still being used.\n        const onStreamError = (error) => {\n            if (this.state.status !== AudioPlayerStatus.Idle) {\n                /**\n                 * Emitted when there is an error emitted from the audio resource played by the audio player\n                 *\n                 * @event AudioPlayer#error\n                 * @type {AudioPlayerError}\n                 */\n                this.emit('error', new AudioPlayerError_1.AudioPlayerError(error, this.state.resource));\n            }\n            if (this.state.status !== AudioPlayerStatus.Idle && this.state.resource === resource) {\n                this.state = {\n                    status: AudioPlayerStatus.Idle,\n                };\n            }\n        };\n        resource.playStream.once('error', onStreamError);\n        if (resource.started) {\n            this.state = {\n                status: AudioPlayerStatus.Playing,\n                missedFrames: 0,\n                playbackDuration: 0,\n                resource,\n                onStreamError,\n            };\n        }\n        else {\n            const onReadableCallback = () => {\n                if (this.state.status === AudioPlayerStatus.Buffering && this.state.resource === resource) {\n                    this.state = {\n                        status: AudioPlayerStatus.Playing,\n                        missedFrames: 0,\n                        playbackDuration: 0,\n                        resource,\n                        onStreamError,\n                    };\n                }\n            };\n            const onFailureCallback = () => {\n                if (this.state.status === AudioPlayerStatus.Buffering && this.state.resource === resource) {\n                    this.state = {\n                        status: AudioPlayerStatus.Idle,\n                    };\n                }\n            };\n            resource.playStream.once('readable', onReadableCallback);\n            resource.playStream.once('end', onFailureCallback);\n            resource.playStream.once('close', onFailureCallback);\n            resource.playStream.once('finish', onFailureCallback);\n            this.state = {\n                status: AudioPlayerStatus.Buffering,\n                resource,\n                onReadableCallback,\n                onFailureCallback,\n                onStreamError,\n            };\n        }\n    }\n    /**\n     * Pauses playback of the current resource, if any.\n     *\n     * @param interpolateSilence - If true, the player will play 5 packets of silence after pausing to prevent audio glitches.\n     * @returns true if the player was successfully paused, otherwise false.\n     */\n    pause(interpolateSilence = true) {\n        if (this.state.status !== AudioPlayerStatus.Playing)\n            return false;\n        this.state = {\n            ...this.state,\n            status: AudioPlayerStatus.Paused,\n            silencePacketsRemaining: interpolateSilence ? 5 : 0,\n        };\n        return true;\n    }\n    /**\n     * Unpauses playback of the current resource, if any.\n     *\n     * @returns true if the player was successfully unpaused, otherwise false.\n     */\n    unpause() {\n        if (this.state.status !== AudioPlayerStatus.Paused)\n            return false;\n        this.state = {\n            ...this.state,\n            status: AudioPlayerStatus.Playing,\n            missedFrames: 0,\n        };\n        return true;\n    }\n    /**\n     * Stops playback of the current resource and destroys the resource. The player will either transition to the Idle state,\n     * or remain in its current state until the silence padding frames of the resource have been played.\n     *\n     * @param force - If true, will force the player to enter the Idle state even if the resource has silence padding frames.\n     * @returns true if the player will come to a stop, otherwise false.\n     */\n    stop(force = false) {\n        if (this.state.status === AudioPlayerStatus.Idle)\n            return false;\n        if (force || this.state.resource.silencePaddingFrames === 0) {\n            this.state = {\n                status: AudioPlayerStatus.Idle,\n            };\n        }\n        else if (this.state.resource.silenceRemaining === -1) {\n            this.state.resource.silenceRemaining = this.state.resource.silencePaddingFrames;\n        }\n        return true;\n    }\n    /**\n     * Checks whether the underlying resource (if any) is playable (readable).\n     *\n     * @returns true if the resource is playable, false otherwise.\n     */\n    checkPlayable() {\n        const state = this._state;\n        if (state.status === AudioPlayerStatus.Idle || state.status === AudioPlayerStatus.Buffering)\n            return false;\n        // If the stream has been destroyed or is no longer readable, then transition to the Idle state.\n        if (!state.resource.readable) {\n            this.state = {\n                status: AudioPlayerStatus.Idle,\n            };\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Called roughly every 20ms by the global audio player timer. Dispatches any audio packets that are buffered\n     * by the active connections of this audio player.\n     */\n    _stepDispatch() {\n        const state = this._state;\n        // Guard against the Idle state\n        if (state.status === AudioPlayerStatus.Idle || state.status === AudioPlayerStatus.Buffering)\n            return;\n        // Dispatch any audio packets that were prepared in the previous cycle\n        this.playable.forEach((connection) => connection.dispatchAudio());\n    }\n    /**\n     * Called roughly every 20ms by the global audio player timer. Attempts to read an audio packet from the\n     * underlying resource of the stream, and then has all the active connections of the audio player prepare it\n     * (encrypt it, append header data) so that it is ready to play at the start of the next cycle.\n     */\n    _stepPrepare() {\n        const state = this._state;\n        // Guard against the Idle state\n        if (state.status === AudioPlayerStatus.Idle || state.status === AudioPlayerStatus.Buffering)\n            return;\n        // List of connections that can receive the packet\n        const playable = this.playable;\n        /* If the player was previously in the AutoPaused state, check to see whether there are newly available\n           connections, allowing us to transition out of the AutoPaused state back into the Playing state */\n        if (state.status === AudioPlayerStatus.AutoPaused && playable.length > 0) {\n            this.state = {\n                ...state,\n                status: AudioPlayerStatus.Playing,\n                missedFrames: 0,\n            };\n        }\n        /* If the player is (auto)paused, check to see whether silence packets should be played and\n           set a timeout to begin the next cycle, ending the current cycle here. */\n        if (state.status === AudioPlayerStatus.Paused || state.status === AudioPlayerStatus.AutoPaused) {\n            if (state.silencePacketsRemaining > 0) {\n                state.silencePacketsRemaining--;\n                this._preparePacket(exports.SILENCE_FRAME, playable, state);\n                if (state.silencePacketsRemaining === 0) {\n                    this._signalStopSpeaking();\n                }\n            }\n            return;\n        }\n        // If there are no available connections in this cycle, observe the configured \"no subscriber\" behavior.\n        if (playable.length === 0) {\n            if (this.behaviors.noSubscriber === NoSubscriberBehavior.Pause) {\n                this.state = {\n                    ...state,\n                    status: AudioPlayerStatus.AutoPaused,\n                    silencePacketsRemaining: 5,\n                };\n                return;\n            }\n            else if (this.behaviors.noSubscriber === NoSubscriberBehavior.Stop) {\n                this.stop(true);\n            }\n        }\n        /* Attempt to read an Opus packet from the resource. If there isn't an available packet,\n             play a silence packet. If there are 5 consecutive cycles with failed reads, then the\n             playback will end. */\n        const packet = state.resource.read();\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (state.status === AudioPlayerStatus.Playing) {\n            if (packet) {\n                this._preparePacket(packet, playable, state);\n                state.missedFrames = 0;\n            }\n            else {\n                this._preparePacket(exports.SILENCE_FRAME, playable, state);\n                state.missedFrames++;\n                if (state.missedFrames >= this.behaviors.maxMissedFrames) {\n                    this.stop();\n                }\n            }\n        }\n    }\n    /**\n     * Signals to all the subscribed connections that they should send a packet to Discord indicating\n     * they are no longer speaking. Called once playback of a resource ends.\n     */\n    _signalStopSpeaking() {\n        return this.subscribers.forEach(({ connection }) => connection.setSpeaking(false));\n    }\n    /**\n     * Instructs the given connections to each prepare this packet to be played at the start of the\n     * next cycle.\n     *\n     * @param packet - The Opus packet to be prepared by each receiver\n     * @param receivers - The connections that should play this packet\n     */\n    _preparePacket(packet, receivers, state) {\n        state.playbackDuration += 20;\n        receivers.forEach((connection) => connection.prepareAudioPacket(packet));\n    }\n}\nexports.AudioPlayer = AudioPlayer;\n/**\n * Stringifies an AudioPlayerState instance\n *\n * @param state - The state to stringify\n */\nfunction stringifyState(state) {\n    return JSON.stringify({\n        ...state,\n        resource: Reflect.has(state, 'resource'),\n        stepTimeout: Reflect.has(state, 'stepTimeout'),\n    });\n}\n/**\n * Creates a new AudioPlayer to be used\n */\nfunction createAudioPlayer(options) {\n    return new AudioPlayer(options);\n}\nexports.createAudioPlayer = createAudioPlayer;\n//# sourceMappingURL=AudioPlayer.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/audio/AudioPlayer.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/audio/AudioPlayerError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/audio/AudioPlayerError.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioPlayerError = void 0;\n/**\n * An error emitted by an AudioPlayer. Contains an attached resource to aid with\n * debugging and identifying where the error came from.\n */\nclass AudioPlayerError extends Error {\n    constructor(error, resource) {\n        super(error.message);\n        this.resource = resource;\n        this.name = error.name;\n        this.stack = error.stack;\n    }\n}\nexports.AudioPlayerError = AudioPlayerError;\n//# sourceMappingURL=AudioPlayerError.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/audio/AudioPlayerError.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/audio/AudioResource.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/audio/AudioResource.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createAudioResource = exports.inferStreamType = exports.NO_CONSTRAINT = exports.VOLUME_CONSTRAINT = exports.AudioResource = void 0;\nconst TransformerGraph_1 = __webpack_require__(/*! ./TransformerGraph */ \"./node_modules/@discordjs/voice/dist/audio/TransformerGraph.js\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst util_1 = __webpack_require__(/*! ../util/util */ \"./node_modules/@discordjs/voice/dist/util/util.js\");\nconst prism_media_1 = __webpack_require__(/*! prism-media */ \"./node_modules/prism-media/src/index.js\");\nconst AudioPlayer_1 = __webpack_require__(/*! ./AudioPlayer */ \"./node_modules/@discordjs/voice/dist/audio/AudioPlayer.js\");\n/**\n * Represents an audio resource that can be played by an audio player.\n *\n * @template T - the type for the metadata (if any) of the audio resource.\n */\nclass AudioResource {\n    constructor(edges, streams, metadata, silencePaddingFrames) {\n        /**\n         * The playback duration of this audio resource, given in milliseconds.\n         */\n        this.playbackDuration = 0;\n        /**\n         * Whether or not the stream for this resource has started (data has become readable)\n         */\n        this.started = false;\n        /**\n         * The number of remaining silence frames to play. If -1, the frames have not yet started playing.\n         */\n        this.silenceRemaining = -1;\n        this.edges = edges;\n        this.playStream = streams.length > 1 ? stream_1.pipeline(streams, util_1.noop) : streams[0];\n        this.metadata = metadata;\n        this.silencePaddingFrames = silencePaddingFrames;\n        for (const stream of streams) {\n            if (stream instanceof prism_media_1.VolumeTransformer) {\n                this.volume = stream;\n            }\n            else if (stream instanceof prism_media_1.opus.Encoder) {\n                this.encoder = stream;\n            }\n        }\n        this.playStream.once('readable', () => (this.started = true));\n    }\n    /**\n     * Whether this resource is readable. If the underlying resource is no longer readable, this will still return true\n     * while there are silence padding frames left to play.\n     */\n    get readable() {\n        if (this.silenceRemaining === 0)\n            return false;\n        const real = this.playStream.readable;\n        if (!real) {\n            if (this.silenceRemaining === -1)\n                this.silenceRemaining = this.silencePaddingFrames;\n            return this.silenceRemaining !== 0;\n        }\n        return real;\n    }\n    /**\n     * Whether this resource has ended or not.\n     */\n    get ended() {\n        return this.playStream.readableEnded || this.playStream.destroyed || this.silenceRemaining === 0;\n    }\n    /**\n     * Attempts to read an Opus packet from the audio resource. If a packet is available, the playbackDuration\n     * is incremented.\n     * @internal\n     * @remarks\n     * It is advisable to check that the playStream is readable before calling this method. While no runtime\n     * errors will be thrown, you should check that the resource is still available before attempting to\n     * read from it.\n     */\n    read() {\n        if (this.silenceRemaining === 0) {\n            return null;\n        }\n        else if (this.silenceRemaining > 0) {\n            this.silenceRemaining--;\n            return AudioPlayer_1.SILENCE_FRAME;\n        }\n        const packet = this.playStream.read();\n        if (packet) {\n            this.playbackDuration += 20;\n        }\n        return packet;\n    }\n}\nexports.AudioResource = AudioResource;\n/**\n * Ensures that a path contains at least one volume transforming component\n *\n * @param path - The path to validate constraints on\n */\nconst VOLUME_CONSTRAINT = (path) => path.some((edge) => edge.type === TransformerGraph_1.TransformerType.InlineVolume);\nexports.VOLUME_CONSTRAINT = VOLUME_CONSTRAINT;\nconst NO_CONSTRAINT = () => true;\nexports.NO_CONSTRAINT = NO_CONSTRAINT;\n/**\n * Tries to infer the type of a stream to aid with transcoder pipelining.\n *\n * @param stream - The stream to infer the type of\n */\nfunction inferStreamType(stream) {\n    if (stream instanceof prism_media_1.opus.Encoder) {\n        return { streamType: TransformerGraph_1.StreamType.Opus, hasVolume: false };\n    }\n    else if (stream instanceof prism_media_1.opus.Decoder) {\n        return { streamType: TransformerGraph_1.StreamType.Raw, hasVolume: false };\n    }\n    else if (stream instanceof prism_media_1.VolumeTransformer) {\n        return { streamType: TransformerGraph_1.StreamType.Raw, hasVolume: true };\n    }\n    else if (stream instanceof prism_media_1.opus.OggDemuxer) {\n        return { streamType: TransformerGraph_1.StreamType.Opus, hasVolume: false };\n    }\n    else if (stream instanceof prism_media_1.opus.WebmDemuxer) {\n        return { streamType: TransformerGraph_1.StreamType.Opus, hasVolume: false };\n    }\n    return { streamType: TransformerGraph_1.StreamType.Arbitrary, hasVolume: false };\n}\nexports.inferStreamType = inferStreamType;\n/**\n * Creates an audio resource that can be played be audio players.\n *\n * @remarks\n * If the input is given as a string, then the inputType option will be overridden and FFmpeg will be used.\n *\n * If the input is not in the correct format, then a pipeline of transcoders and transformers will be created\n * to ensure that the resultant stream is in the correct format for playback. This could involve using FFmpeg,\n * Opus transcoders, and Ogg/WebM demuxers.\n *\n * @param input - The resource to play.\n * @param options - Configurable options for creating the resource.\n *\n * @template T - the type for the metadata (if any) of the audio resource.\n */\nfunction createAudioResource(input, options = {}) {\n    var _a, _b, _c, _d;\n    let inputType = options.inputType;\n    let needsInlineVolume = Boolean(options.inlineVolume);\n    // string inputs can only be used with FFmpeg\n    if (typeof input === 'string') {\n        inputType = TransformerGraph_1.StreamType.Arbitrary;\n    }\n    else if (typeof inputType === 'undefined') {\n        const analysis = inferStreamType(input);\n        inputType = analysis.streamType;\n        needsInlineVolume = needsInlineVolume && !analysis.hasVolume;\n    }\n    const transformerPipeline = TransformerGraph_1.findPipeline(inputType, needsInlineVolume ? exports.VOLUME_CONSTRAINT : exports.NO_CONSTRAINT);\n    if (transformerPipeline.length === 0) {\n        if (typeof input === 'string')\n            throw new Error(`Invalid pipeline constructed for string resource '${input}'`);\n        // No adjustments required\n        return new AudioResource([], [input], ((_a = options.metadata) !== null && _a !== void 0 ? _a : null), (_b = options.silencePaddingFrames) !== null && _b !== void 0 ? _b : 5);\n    }\n    const streams = transformerPipeline.map((edge) => edge.transformer(input));\n    if (typeof input !== 'string')\n        streams.unshift(input);\n    return new AudioResource(transformerPipeline, streams, ((_c = options.metadata) !== null && _c !== void 0 ? _c : null), (_d = options.silencePaddingFrames) !== null && _d !== void 0 ? _d : 5);\n}\nexports.createAudioResource = createAudioResource;\n//# sourceMappingURL=AudioResource.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/audio/AudioResource.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/audio/PlayerSubscription.js":
/*!************************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/audio/PlayerSubscription.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PlayerSubscription = void 0;\n/**\n * Represents a subscription of a voice connection to an audio player, allowing\n * the audio player to play audio on the voice connection.\n */\nclass PlayerSubscription {\n    constructor(connection, player) {\n        this.connection = connection;\n        this.player = player;\n    }\n    /**\n     * Unsubscribes the connection from the audio player, meaning that the\n     * audio player cannot stream audio to it until a new subscription is made.\n     */\n    unsubscribe() {\n        this.connection['onSubscriptionRemoved'](this);\n        this.player['unsubscribe'](this);\n    }\n}\nexports.PlayerSubscription = PlayerSubscription;\n//# sourceMappingURL=PlayerSubscription.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/audio/PlayerSubscription.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/audio/TransformerGraph.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/audio/TransformerGraph.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.findPipeline = exports.getNode = exports.Node = exports.TransformerType = exports.StreamType = void 0;\nconst prism = __importStar(__webpack_require__(/*! prism-media */ \"./node_modules/prism-media/src/index.js\"));\n/*\n    This module creates a Transformer Graph to figure out what the most efficient way\n    of transforming the input stream into something playable would be.\n*/\nconst FFMPEG_PCM_ARGUMENTS = ['-analyzeduration', '0', '-loglevel', '0', '-f', 's16le', '-ar', '48000', '-ac', '2'];\nconst FFMPEG_OPUS_ARGUMENTS = [\n    '-analyzeduration',\n    '0',\n    '-loglevel',\n    '0',\n    '-acodec',\n    'libopus',\n    '-f',\n    'opus',\n    '-ar',\n    '48000',\n    '-ac',\n    '2',\n];\n/**\n * The different types of stream that can exist within the pipeline\n *\n * @remarks\n * - `Arbitrary` - the type of the stream at this point is unknown.\n *\n * - `Raw` - the stream at this point is s16le PCM.\n *\n * - `OggOpus` - the stream at this point is Opus audio encoded in an Ogg wrapper.\n *\n * - `WebmOpus` - the stream at this point is Opus audio encoded in a WebM wrapper.\n *\n * - `Opus` - the stream at this point is Opus audio, and the stream is in object-mode. This is ready to play.\n */\nvar StreamType;\n(function (StreamType) {\n    StreamType[\"Arbitrary\"] = \"arbitrary\";\n    StreamType[\"Raw\"] = \"raw\";\n    StreamType[\"OggOpus\"] = \"ogg/opus\";\n    StreamType[\"WebmOpus\"] = \"webm/opus\";\n    StreamType[\"Opus\"] = \"opus\";\n})(StreamType = exports.StreamType || (exports.StreamType = {}));\n/**\n * The different types of transformers that can exist within the pipeline\n */\nvar TransformerType;\n(function (TransformerType) {\n    TransformerType[\"FFmpegPCM\"] = \"ffmpeg pcm\";\n    TransformerType[\"FFmpegOgg\"] = \"ffmpeg ogg\";\n    TransformerType[\"OpusEncoder\"] = \"opus encoder\";\n    TransformerType[\"OpusDecoder\"] = \"opus decoder\";\n    TransformerType[\"OggOpusDemuxer\"] = \"ogg/opus demuxer\";\n    TransformerType[\"WebmOpusDemuxer\"] = \"webm/opus demuxer\";\n    TransformerType[\"InlineVolume\"] = \"volume transformer\";\n})(TransformerType = exports.TransformerType || (exports.TransformerType = {}));\n/**\n * Represents a type of stream within the graph, e.g. an Opus stream, or a stream of raw audio.\n */\nclass Node {\n    constructor(type) {\n        /**\n         * The outbound edges from this node\n         */\n        this.edges = [];\n        this.type = type;\n    }\n    /**\n     * Creates an outbound edge from this node\n     *\n     * @param edge - The edge to create\n     */\n    addEdge(edge) {\n        this.edges.push({ ...edge, from: this });\n    }\n}\nexports.Node = Node;\n// Create a node for each stream type\nconst NODES = new Map();\nfor (const streamType of Object.values(StreamType)) {\n    NODES.set(streamType, new Node(streamType));\n}\n/**\n * Gets a node from its stream type\n *\n * @param type - The stream type of the target node\n */\nfunction getNode(type) {\n    const node = NODES.get(type);\n    if (!node)\n        throw new Error(`Node type '${type}' does not exist!`);\n    return node;\n}\nexports.getNode = getNode;\ngetNode(StreamType.Raw).addEdge({\n    type: TransformerType.OpusEncoder,\n    to: getNode(StreamType.Opus),\n    cost: 1.5,\n    transformer: () => new prism.opus.Encoder({ rate: 48000, channels: 2, frameSize: 960 }),\n});\ngetNode(StreamType.Opus).addEdge({\n    type: TransformerType.OpusDecoder,\n    to: getNode(StreamType.Raw),\n    cost: 1.5,\n    transformer: () => new prism.opus.Decoder({ rate: 48000, channels: 2, frameSize: 960 }),\n});\ngetNode(StreamType.OggOpus).addEdge({\n    type: TransformerType.OggOpusDemuxer,\n    to: getNode(StreamType.Opus),\n    cost: 1,\n    transformer: () => new prism.opus.OggDemuxer(),\n});\ngetNode(StreamType.WebmOpus).addEdge({\n    type: TransformerType.WebmOpusDemuxer,\n    to: getNode(StreamType.Opus),\n    cost: 1,\n    transformer: () => new prism.opus.WebmDemuxer(),\n});\nconst FFMPEG_PCM_EDGE = {\n    type: TransformerType.FFmpegPCM,\n    to: getNode(StreamType.Raw),\n    cost: 2,\n    transformer: (input) => new prism.FFmpeg({\n        args: typeof input === 'string' ? ['-i', input, ...FFMPEG_PCM_ARGUMENTS] : FFMPEG_PCM_ARGUMENTS,\n    }),\n};\ngetNode(StreamType.Arbitrary).addEdge(FFMPEG_PCM_EDGE);\ngetNode(StreamType.OggOpus).addEdge(FFMPEG_PCM_EDGE);\ngetNode(StreamType.WebmOpus).addEdge(FFMPEG_PCM_EDGE);\ngetNode(StreamType.Raw).addEdge({\n    type: TransformerType.InlineVolume,\n    to: getNode(StreamType.Raw),\n    cost: 0.5,\n    transformer: () => new prism.VolumeTransformer({ type: 's16le' }),\n});\n// Try to enable FFmpeg Ogg optimizations\nfunction canEnableFFmpegOptimizations() {\n    try {\n        return prism.FFmpeg.getInfo().output.includes('--enable-libopus');\n    }\n    catch { }\n    return false;\n}\nif (canEnableFFmpegOptimizations()) {\n    const FFMPEG_OGG_EDGE = {\n        type: TransformerType.FFmpegOgg,\n        to: getNode(StreamType.OggOpus),\n        cost: 2,\n        transformer: (input) => new prism.FFmpeg({\n            args: typeof input === 'string' ? ['-i', input, ...FFMPEG_OPUS_ARGUMENTS] : FFMPEG_OPUS_ARGUMENTS,\n        }),\n    };\n    getNode(StreamType.Arbitrary).addEdge(FFMPEG_OGG_EDGE);\n    // Include Ogg and WebM as well in case they have different sampling rates or are mono instead of stereo\n    // at the moment, this will not do anything. However, if/when detection for correct Opus headers is\n    // implemented, this will help inform the voice engine that it is able to transcode the audio.\n    getNode(StreamType.OggOpus).addEdge(FFMPEG_OGG_EDGE);\n    getNode(StreamType.WebmOpus).addEdge(FFMPEG_OGG_EDGE);\n}\n/**\n * Finds the shortest cost path from node A to node B.\n *\n * @param from - The start node\n * @param constraints - Extra validation for a potential solution. Takes a path, returns true if the path is valid.\n * @param goal - The target node\n * @param path - The running path\n * @param depth - The number of remaining recursions\n */\nfunction findPath(from, constraints, goal = getNode(StreamType.Opus), path = [], depth = 5) {\n    if (from === goal && constraints(path)) {\n        return { cost: 0 };\n    }\n    else if (depth === 0) {\n        return { cost: Infinity };\n    }\n    let currentBest = undefined;\n    for (const edge of from.edges) {\n        if (currentBest && edge.cost > currentBest.cost)\n            continue;\n        const next = findPath(edge.to, constraints, goal, [...path, edge], depth - 1);\n        const cost = edge.cost + next.cost;\n        if (!currentBest || cost < currentBest.cost) {\n            currentBest = { cost, edge, next };\n        }\n    }\n    return currentBest !== null && currentBest !== void 0 ? currentBest : { cost: Infinity };\n}\n/**\n * Takes the solution from findPath and assembles it into a list of edges\n *\n * @param step - The first step of the path\n */\nfunction constructPipeline(step) {\n    const edges = [];\n    let current = step;\n    while (current === null || current === void 0 ? void 0 : current.edge) {\n        edges.push(current.edge);\n        current = current.next;\n    }\n    return edges;\n}\n/**\n * Finds the lowest-cost pipeline to convert the input stream type into an Opus stream\n *\n * @param from - The stream type to start from\n * @param constraint - Extra constraints that may be imposed on potential solution\n */\nfunction findPipeline(from, constraint) {\n    return constructPipeline(findPath(getNode(from), constraint));\n}\nexports.findPipeline = findPipeline;\n//# sourceMappingURL=TransformerGraph.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/audio/TransformerGraph.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/audio/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/audio/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StreamType = exports.PlayerSubscription = exports.createAudioResource = exports.AudioResource = exports.AudioPlayerError = exports.createAudioPlayer = exports.NoSubscriberBehavior = exports.AudioPlayerStatus = exports.AudioPlayer = void 0;\nvar AudioPlayer_1 = __webpack_require__(/*! ./AudioPlayer */ \"./node_modules/@discordjs/voice/dist/audio/AudioPlayer.js\");\nObject.defineProperty(exports, \"AudioPlayer\", ({ enumerable: true, get: function () { return AudioPlayer_1.AudioPlayer; } }));\nObject.defineProperty(exports, \"AudioPlayerStatus\", ({ enumerable: true, get: function () { return AudioPlayer_1.AudioPlayerStatus; } }));\nObject.defineProperty(exports, \"NoSubscriberBehavior\", ({ enumerable: true, get: function () { return AudioPlayer_1.NoSubscriberBehavior; } }));\nObject.defineProperty(exports, \"createAudioPlayer\", ({ enumerable: true, get: function () { return AudioPlayer_1.createAudioPlayer; } }));\nvar AudioPlayerError_1 = __webpack_require__(/*! ./AudioPlayerError */ \"./node_modules/@discordjs/voice/dist/audio/AudioPlayerError.js\");\nObject.defineProperty(exports, \"AudioPlayerError\", ({ enumerable: true, get: function () { return AudioPlayerError_1.AudioPlayerError; } }));\nvar AudioResource_1 = __webpack_require__(/*! ./AudioResource */ \"./node_modules/@discordjs/voice/dist/audio/AudioResource.js\");\nObject.defineProperty(exports, \"AudioResource\", ({ enumerable: true, get: function () { return AudioResource_1.AudioResource; } }));\nObject.defineProperty(exports, \"createAudioResource\", ({ enumerable: true, get: function () { return AudioResource_1.createAudioResource; } }));\nvar PlayerSubscription_1 = __webpack_require__(/*! ./PlayerSubscription */ \"./node_modules/@discordjs/voice/dist/audio/PlayerSubscription.js\");\nObject.defineProperty(exports, \"PlayerSubscription\", ({ enumerable: true, get: function () { return PlayerSubscription_1.PlayerSubscription; } }));\nvar TransformerGraph_1 = __webpack_require__(/*! ./TransformerGraph */ \"./node_modules/@discordjs/voice/dist/audio/TransformerGraph.js\");\nObject.defineProperty(exports, \"StreamType\", ({ enumerable: true, get: function () { return TransformerGraph_1.StreamType; } }));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/audio/index.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getGroups = exports.getVoiceConnections = exports.getVoiceConnection = exports.VoiceConnectionDisconnectReason = exports.VoiceConnectionStatus = exports.VoiceConnection = void 0;\n__exportStar(__webpack_require__(/*! ./joinVoiceChannel */ \"./node_modules/@discordjs/voice/dist/joinVoiceChannel.js\"), exports);\n__exportStar(__webpack_require__(/*! ./audio */ \"./node_modules/@discordjs/voice/dist/audio/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util */ \"./node_modules/@discordjs/voice/dist/util/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./receive */ \"./node_modules/@discordjs/voice/dist/receive/index.js\"), exports);\nvar VoiceConnection_1 = __webpack_require__(/*! ./VoiceConnection */ \"./node_modules/@discordjs/voice/dist/VoiceConnection.js\");\nObject.defineProperty(exports, \"VoiceConnection\", ({ enumerable: true, get: function () { return VoiceConnection_1.VoiceConnection; } }));\nObject.defineProperty(exports, \"VoiceConnectionStatus\", ({ enumerable: true, get: function () { return VoiceConnection_1.VoiceConnectionStatus; } }));\nObject.defineProperty(exports, \"VoiceConnectionDisconnectReason\", ({ enumerable: true, get: function () { return VoiceConnection_1.VoiceConnectionDisconnectReason; } }));\nvar DataStore_1 = __webpack_require__(/*! ./DataStore */ \"./node_modules/@discordjs/voice/dist/DataStore.js\");\nObject.defineProperty(exports, \"getVoiceConnection\", ({ enumerable: true, get: function () { return DataStore_1.getVoiceConnection; } }));\nObject.defineProperty(exports, \"getVoiceConnections\", ({ enumerable: true, get: function () { return DataStore_1.getVoiceConnections; } }));\nObject.defineProperty(exports, \"getGroups\", ({ enumerable: true, get: function () { return DataStore_1.getGroups; } }));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/index.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/joinVoiceChannel.js":
/*!****************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/joinVoiceChannel.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.joinVoiceChannel = void 0;\nconst VoiceConnection_1 = __webpack_require__(/*! ./VoiceConnection */ \"./node_modules/@discordjs/voice/dist/VoiceConnection.js\");\n/**\n * Creates a VoiceConnection to a Discord voice channel.\n *\n * @param voiceChannel - the voice channel to connect to\n * @param options - the options for joining the voice channel\n */\nfunction joinVoiceChannel(options) {\n    const joinConfig = {\n        selfDeaf: true,\n        selfMute: false,\n        group: 'default',\n        ...options,\n    };\n    return VoiceConnection_1.createVoiceConnection(joinConfig, {\n        adapterCreator: options.adapterCreator,\n        debug: options.debug,\n    });\n}\nexports.joinVoiceChannel = joinVoiceChannel;\n//# sourceMappingURL=joinVoiceChannel.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/joinVoiceChannel.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/networking/Networking.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/networking/Networking.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Networking = exports.NetworkingStatusCode = exports.SUPPORTED_ENCRYPTION_MODES = void 0;\nconst VoiceUDPSocket_1 = __webpack_require__(/*! ./VoiceUDPSocket */ \"./node_modules/@discordjs/voice/dist/networking/VoiceUDPSocket.js\");\nconst VoiceWebSocket_1 = __webpack_require__(/*! ./VoiceWebSocket */ \"./node_modules/@discordjs/voice/dist/networking/VoiceWebSocket.js\");\nconst secretbox = __importStar(__webpack_require__(/*! ../util/Secretbox */ \"./node_modules/@discordjs/voice/dist/util/Secretbox.js\"));\nconst util_1 = __webpack_require__(/*! ../util/util */ \"./node_modules/@discordjs/voice/dist/util/util.js\");\nconst tiny_typed_emitter_1 = __webpack_require__(/*! tiny-typed-emitter */ \"./node_modules/tiny-typed-emitter/lib/index.js\");\n// The number of audio channels required by Discord\nconst CHANNELS = 2;\nconst TIMESTAMP_INC = (48000 / 100) * CHANNELS;\nconst MAX_NONCE_SIZE = 2 ** 32 - 1;\nexports.SUPPORTED_ENCRYPTION_MODES = ['xsalsa20_poly1305_lite', 'xsalsa20_poly1305_suffix', 'xsalsa20_poly1305'];\n/**\n * The different statuses that a networking instance can hold. The order\n * of the states between OpeningWs and Ready is chronological (first the\n * instance enters OpeningWs, then it enters Identifying etc.)\n */\nvar NetworkingStatusCode;\n(function (NetworkingStatusCode) {\n    NetworkingStatusCode[NetworkingStatusCode[\"OpeningWs\"] = 0] = \"OpeningWs\";\n    NetworkingStatusCode[NetworkingStatusCode[\"Identifying\"] = 1] = \"Identifying\";\n    NetworkingStatusCode[NetworkingStatusCode[\"UdpHandshaking\"] = 2] = \"UdpHandshaking\";\n    NetworkingStatusCode[NetworkingStatusCode[\"SelectingProtocol\"] = 3] = \"SelectingProtocol\";\n    NetworkingStatusCode[NetworkingStatusCode[\"Ready\"] = 4] = \"Ready\";\n    NetworkingStatusCode[NetworkingStatusCode[\"Resuming\"] = 5] = \"Resuming\";\n    NetworkingStatusCode[NetworkingStatusCode[\"Closed\"] = 6] = \"Closed\";\n})(NetworkingStatusCode = exports.NetworkingStatusCode || (exports.NetworkingStatusCode = {}));\n/**\n * An empty buffer that is reused in packet encryption by many different networking instances.\n */\nconst nonce = Buffer.alloc(24);\n/**\n * Manages the networking required to maintain a voice connection and dispatch audio packets\n */\nclass Networking extends tiny_typed_emitter_1.TypedEmitter {\n    /**\n     * Creates a new Networking instance.\n     */\n    constructor(options, debug) {\n        super();\n        this.onWsOpen = this.onWsOpen.bind(this);\n        this.onChildError = this.onChildError.bind(this);\n        this.onWsPacket = this.onWsPacket.bind(this);\n        this.onWsClose = this.onWsClose.bind(this);\n        this.onWsDebug = this.onWsDebug.bind(this);\n        this.onUdpDebug = this.onUdpDebug.bind(this);\n        this.onUdpClose = this.onUdpClose.bind(this);\n        this.debug = debug ? (message) => this.emit('debug', message) : null;\n        this._state = {\n            code: NetworkingStatusCode.OpeningWs,\n            ws: this.createWebSocket(options.endpoint),\n            connectionOptions: options,\n        };\n    }\n    /**\n     * Destroys the Networking instance, transitioning it into the Closed state.\n     */\n    destroy() {\n        this.state = {\n            code: NetworkingStatusCode.Closed,\n        };\n    }\n    /**\n     * The current state of the networking instance.\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Sets a new state for the networking instance, performing clean-up operations where necessary.\n     */\n    set state(newState) {\n        var _a;\n        const oldWs = Reflect.get(this._state, 'ws');\n        const newWs = Reflect.get(newState, 'ws');\n        if (oldWs && oldWs !== newWs) {\n            // The old WebSocket is being freed - remove all handlers from it\n            oldWs.off('debug', this.onWsDebug);\n            oldWs.on('error', util_1.noop);\n            oldWs.off('error', this.onChildError);\n            oldWs.off('open', this.onWsOpen);\n            oldWs.off('packet', this.onWsPacket);\n            oldWs.off('close', this.onWsClose);\n            oldWs.destroy();\n        }\n        const oldUdp = Reflect.get(this._state, 'udp');\n        const newUdp = Reflect.get(newState, 'udp');\n        if (oldUdp && oldUdp !== newUdp) {\n            oldUdp.on('error', util_1.noop);\n            oldUdp.off('error', this.onChildError);\n            oldUdp.off('close', this.onUdpClose);\n            oldUdp.off('debug', this.onUdpDebug);\n            oldUdp.destroy();\n        }\n        const oldState = this._state;\n        this._state = newState;\n        this.emit('stateChange', oldState, newState);\n        /**\n         * Debug event for Networking.\n         *\n         * @event Networking#debug\n         * @type {string}\n         */\n        (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, `state change:\\nfrom ${stringifyState(oldState)}\\nto ${stringifyState(newState)}`);\n    }\n    /**\n     * Creates a new WebSocket to a Discord Voice gateway.\n     *\n     * @param endpoint - The endpoint to connect to\n     * @param debug - Whether to enable debug logging\n     */\n    createWebSocket(endpoint) {\n        const ws = new VoiceWebSocket_1.VoiceWebSocket(`wss://${endpoint}?v=4`, Boolean(this.debug));\n        ws.on('error', this.onChildError);\n        ws.once('open', this.onWsOpen);\n        ws.on('packet', this.onWsPacket);\n        ws.once('close', this.onWsClose);\n        ws.on('debug', this.onWsDebug);\n        return ws;\n    }\n    /**\n     * Propagates errors from the children VoiceWebSocket and VoiceUDPSocket.\n     *\n     * @param error - The error that was emitted by a child\n     */\n    onChildError(error) {\n        this.emit('error', error);\n    }\n    /**\n     * Called when the WebSocket opens. Depending on the state that the instance is in,\n     * it will either identify with a new session, or it will attempt to resume an existing session.\n     */\n    onWsOpen() {\n        if (this.state.code === NetworkingStatusCode.OpeningWs) {\n            const packet = {\n                op: 0 /* Identify */,\n                d: {\n                    server_id: this.state.connectionOptions.serverId,\n                    user_id: this.state.connectionOptions.userId,\n                    session_id: this.state.connectionOptions.sessionId,\n                    token: this.state.connectionOptions.token,\n                },\n            };\n            this.state.ws.sendPacket(packet);\n            this.state = {\n                ...this.state,\n                code: NetworkingStatusCode.Identifying,\n            };\n        }\n        else if (this.state.code === NetworkingStatusCode.Resuming) {\n            const packet = {\n                op: 7 /* Resume */,\n                d: {\n                    server_id: this.state.connectionOptions.serverId,\n                    session_id: this.state.connectionOptions.sessionId,\n                    token: this.state.connectionOptions.token,\n                },\n            };\n            this.state.ws.sendPacket(packet);\n        }\n    }\n    /**\n     * Called when the WebSocket closes. Based on the reason for closing (given by the code parameter),\n     * the instance will either attempt to resume, or enter the closed state and emit a 'close' event\n     * with the close code, allowing the user to decide whether or not they would like to reconnect.\n     *\n     * @param code - The close code\n     */\n    onWsClose({ code }) {\n        const canResume = code === 4015 || code < 4000;\n        if (canResume && this.state.code === NetworkingStatusCode.Ready) {\n            this.state = {\n                ...this.state,\n                code: NetworkingStatusCode.Resuming,\n                ws: this.createWebSocket(this.state.connectionOptions.endpoint),\n            };\n        }\n        else if (this.state.code !== NetworkingStatusCode.Closed) {\n            this.destroy();\n            this.emit('close', code);\n        }\n    }\n    /**\n     * Called when the UDP socket has closed itself if it has stopped receiving replies from Discord\n     */\n    onUdpClose() {\n        if (this.state.code === NetworkingStatusCode.Ready) {\n            this.state = {\n                ...this.state,\n                code: NetworkingStatusCode.Resuming,\n                ws: this.createWebSocket(this.state.connectionOptions.endpoint),\n            };\n        }\n    }\n    /**\n     * Called when a packet is received on the connection's WebSocket\n     * @param packet - The received packet\n     */\n    onWsPacket(packet) {\n        if (packet.op === 8 /* Hello */ && this.state.code !== NetworkingStatusCode.Closed) {\n            this.state.ws.setHeartbeatInterval(packet.d.heartbeat_interval);\n        }\n        else if (packet.op === 2 /* Ready */ && this.state.code === NetworkingStatusCode.Identifying) {\n            const { ip, port, ssrc, modes } = packet.d;\n            const udp = new VoiceUDPSocket_1.VoiceUDPSocket({ ip, port });\n            udp.on('error', this.onChildError);\n            udp.on('debug', this.onUdpDebug);\n            udp.once('close', this.onUdpClose);\n            udp\n                .performIPDiscovery(ssrc)\n                .then((localConfig) => {\n                if (this.state.code !== NetworkingStatusCode.UdpHandshaking)\n                    return;\n                this.state.ws.sendPacket({\n                    op: 1 /* SelectProtocol */,\n                    d: {\n                        protocol: 'udp',\n                        data: {\n                            address: localConfig.ip,\n                            port: localConfig.port,\n                            mode: chooseEncryptionMode(modes),\n                        },\n                    },\n                });\n                this.state = {\n                    ...this.state,\n                    code: NetworkingStatusCode.SelectingProtocol,\n                };\n            })\n                .catch((error) => this.emit('error', error));\n            this.state = {\n                ...this.state,\n                code: NetworkingStatusCode.UdpHandshaking,\n                udp,\n                connectionData: {\n                    ssrc,\n                },\n            };\n        }\n        else if (packet.op === 4 /* SessionDescription */ &&\n            this.state.code === NetworkingStatusCode.SelectingProtocol) {\n            const { mode: encryptionMode, secret_key: secretKey } = packet.d;\n            this.state = {\n                ...this.state,\n                code: NetworkingStatusCode.Ready,\n                connectionData: {\n                    ...this.state.connectionData,\n                    encryptionMode,\n                    secretKey: new Uint8Array(secretKey),\n                    sequence: randomNBit(16),\n                    timestamp: randomNBit(32),\n                    nonce: 0,\n                    nonceBuffer: Buffer.alloc(24),\n                    speaking: false,\n                    packetsPlayed: 0,\n                },\n            };\n        }\n        else if (packet.op === 9 /* Resumed */ && this.state.code === NetworkingStatusCode.Resuming) {\n            this.state = {\n                ...this.state,\n                code: NetworkingStatusCode.Ready,\n            };\n            this.state.connectionData.speaking = false;\n        }\n    }\n    /**\n     * Propagates debug messages from the child WebSocket.\n     *\n     * @param message - The emitted debug message\n     */\n    onWsDebug(message) {\n        var _a;\n        (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, `[WS] ${message}`);\n    }\n    /**\n     * Propagates debug messages from the child UDPSocket.\n     *\n     * @param message - The emitted debug message\n     */\n    onUdpDebug(message) {\n        var _a;\n        (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, `[UDP] ${message}`);\n    }\n    /**\n     * Prepares an Opus packet for playback. This includes attaching metadata to it and encrypting it.\n     * It will be stored within the instance, and can be played by dispatchAudio().\n     *\n     * @remarks\n     * Calling this method while there is already a prepared audio packet that has not yet been dispatched\n     * will overwrite the existing audio packet. This should be avoided.\n     *\n     * @param opusPacket - The Opus packet to encrypt\n     *\n     * @returns The audio packet that was prepared.\n     */\n    prepareAudioPacket(opusPacket) {\n        const state = this.state;\n        if (state.code !== NetworkingStatusCode.Ready)\n            return;\n        state.preparedPacket = this.createAudioPacket(opusPacket, state.connectionData);\n        return state.preparedPacket;\n    }\n    /**\n     * Dispatches the audio packet previously prepared by prepareAudioPacket(opusPacket). The audio packet\n     * is consumed and cannot be dispatched again.\n     */\n    dispatchAudio() {\n        const state = this.state;\n        if (state.code !== NetworkingStatusCode.Ready)\n            return false;\n        if (typeof state.preparedPacket !== 'undefined') {\n            this.playAudioPacket(state.preparedPacket);\n            state.preparedPacket = undefined;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Plays an audio packet, updating timing metadata used for playback.\n     *\n     * @param audioPacket - The audio packet to play\n     */\n    playAudioPacket(audioPacket) {\n        const state = this.state;\n        if (state.code !== NetworkingStatusCode.Ready)\n            return;\n        const { connectionData } = state;\n        connectionData.packetsPlayed++;\n        connectionData.sequence++;\n        connectionData.timestamp += TIMESTAMP_INC;\n        if (connectionData.sequence >= 2 ** 16)\n            connectionData.sequence = 0;\n        if (connectionData.timestamp >= 2 ** 32)\n            connectionData.timestamp = 0;\n        this.setSpeaking(true);\n        state.udp.send(audioPacket);\n    }\n    /**\n     * Sends a packet to the voice gateway indicating that the client has start/stopped sending\n     * audio.\n     *\n     * @param speaking - Whether or not the client should be shown as speaking\n     */\n    setSpeaking(speaking) {\n        const state = this.state;\n        if (state.code !== NetworkingStatusCode.Ready)\n            return;\n        if (state.connectionData.speaking === speaking)\n            return;\n        state.connectionData.speaking = speaking;\n        state.ws.sendPacket({\n            op: 5 /* Speaking */,\n            d: {\n                speaking: speaking ? 1 : 0,\n                delay: 0,\n                ssrc: state.connectionData.ssrc,\n            },\n        });\n    }\n    /**\n     * Creates a new audio packet from an Opus packet. This involves encrypting the packet,\n     * then prepending a header that includes metadata.\n     *\n     * @param opusPacket - The Opus packet to prepare\n     * @param connectionData - The current connection data of the instance\n     */\n    createAudioPacket(opusPacket, connectionData) {\n        const packetBuffer = Buffer.alloc(12);\n        packetBuffer[0] = 0x80;\n        packetBuffer[1] = 0x78;\n        const { sequence, timestamp, ssrc } = connectionData;\n        packetBuffer.writeUIntBE(sequence, 2, 2);\n        packetBuffer.writeUIntBE(timestamp, 4, 4);\n        packetBuffer.writeUIntBE(ssrc, 8, 4);\n        packetBuffer.copy(nonce, 0, 0, 12);\n        return Buffer.concat([packetBuffer, ...this.encryptOpusPacket(opusPacket, connectionData)]);\n    }\n    /**\n     * Encrypts an Opus packet using the format agreed upon by the instance and Discord.\n     *\n     * @param opusPacket - The Opus packet to encrypt\n     * @param connectionData - The current connection data of the instance\n     */\n    encryptOpusPacket(opusPacket, connectionData) {\n        const { secretKey, encryptionMode } = connectionData;\n        if (encryptionMode === 'xsalsa20_poly1305_lite') {\n            connectionData.nonce++;\n            if (connectionData.nonce > MAX_NONCE_SIZE)\n                connectionData.nonce = 0;\n            connectionData.nonceBuffer.writeUInt32BE(connectionData.nonce, 0);\n            return [\n                secretbox.methods.close(opusPacket, connectionData.nonceBuffer, secretKey),\n                connectionData.nonceBuffer.slice(0, 4),\n            ];\n        }\n        else if (encryptionMode === 'xsalsa20_poly1305_suffix') {\n            const random = secretbox.methods.random(24, connectionData.nonceBuffer);\n            return [secretbox.methods.close(opusPacket, random, secretKey), random];\n        }\n        return [secretbox.methods.close(opusPacket, nonce, secretKey)];\n    }\n}\nexports.Networking = Networking;\n/**\n * Returns a random number that is in the range of n bits.\n *\n * @param n - The number of bits\n */\nfunction randomNBit(n) {\n    return Math.floor(Math.random() * 2 ** n);\n}\n/**\n * Stringifies a NetworkingState\n *\n * @param state - The state to stringify\n */\nfunction stringifyState(state) {\n    return JSON.stringify({\n        ...state,\n        ws: Reflect.has(state, 'ws'),\n        udp: Reflect.has(state, 'udp'),\n    });\n}\n/**\n * Chooses an encryption mode from a list of given options. Chooses the most preferred option.\n *\n * @param options - The available encryption options\n */\nfunction chooseEncryptionMode(options) {\n    const option = options.find((option) => exports.SUPPORTED_ENCRYPTION_MODES.includes(option));\n    if (!option) {\n        throw new Error(`No compatible encryption modes. Available include: ${options.join(', ')}`);\n    }\n    return option;\n}\n//# sourceMappingURL=Networking.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/networking/Networking.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/networking/VoiceUDPSocket.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/networking/VoiceUDPSocket.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseLocalPacket = exports.VoiceUDPSocket = void 0;\nconst dgram_1 = __webpack_require__(/*! dgram */ \"dgram\");\nconst net_1 = __webpack_require__(/*! net */ \"net\");\nconst tiny_typed_emitter_1 = __webpack_require__(/*! tiny-typed-emitter */ \"./node_modules/tiny-typed-emitter/lib/index.js\");\n/**\n * The interval in milliseconds at which keep alive datagrams are sent\n */\nconst KEEP_ALIVE_INTERVAL = 5e3;\n/**\n * The maximum number of keep alive packets which can be missed\n */\nconst KEEP_ALIVE_LIMIT = 12;\n/**\n * The maximum value of the keep alive counter\n */\nconst MAX_COUNTER_VALUE = 2 ** 32 - 1;\n/**\n * Manages the UDP networking for a voice connection.\n */\nclass VoiceUDPSocket extends tiny_typed_emitter_1.TypedEmitter {\n    /**\n     * Creates a new VoiceUDPSocket.\n     *\n     * @param remote - Details of the remote socket\n     */\n    constructor(remote, debug = false) {\n        super();\n        /**\n         * The counter used in the keep alive mechanism\n         */\n        this.keepAliveCounter = 0;\n        this.socket = dgram_1.createSocket('udp4');\n        this.socket.on('error', (error) => this.emit('error', error));\n        this.socket.on('message', (buffer) => this.onMessage(buffer));\n        this.socket.on('close', () => this.emit('close'));\n        this.remote = remote;\n        this.keepAlives = [];\n        this.keepAliveBuffer = Buffer.alloc(8);\n        this.keepAliveInterval = setInterval(() => this.keepAlive(), KEEP_ALIVE_INTERVAL);\n        setImmediate(() => this.keepAlive());\n        this.debug = debug ? (message) => this.emit('debug', message) : null;\n    }\n    /**\n     * Called when a message is received on the UDP socket\n     * @param buffer The received buffer\n     */\n    onMessage(buffer) {\n        // Handle keep alive message\n        if (buffer.length === 8) {\n            const counter = buffer.readUInt32LE(0);\n            const index = this.keepAlives.findIndex(({ value }) => value === counter);\n            if (index === -1)\n                return;\n            this.ping = Date.now() - this.keepAlives[index].timestamp;\n            // Delete all keep alives up to and including the received one\n            this.keepAlives.splice(0, index);\n        }\n        // Propagate the message\n        this.emit('message', buffer);\n    }\n    /**\n     * Called at a regular interval to check whether we are still able to send datagrams to Discord\n     */\n    keepAlive() {\n        var _a;\n        if (this.keepAlives.length >= KEEP_ALIVE_LIMIT) {\n            (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, 'UDP socket has not received enough responses from Discord - closing socket');\n            this.destroy();\n            return;\n        }\n        this.keepAliveBuffer.writeUInt32LE(this.keepAliveCounter, 0);\n        this.send(this.keepAliveBuffer);\n        this.keepAlives.push({\n            value: this.keepAliveCounter,\n            timestamp: Date.now(),\n        });\n        this.keepAliveCounter++;\n        if (this.keepAliveCounter > MAX_COUNTER_VALUE) {\n            this.keepAliveCounter = 0;\n        }\n    }\n    /**\n     * Sends a buffer to Discord.\n     *\n     * @param buffer - The buffer to send\n     */\n    send(buffer) {\n        return this.socket.send(buffer, this.remote.port, this.remote.ip);\n    }\n    /**\n     * Closes the socket, the instance will not be able to be reused.\n     */\n    destroy() {\n        try {\n            this.socket.close();\n        }\n        catch { }\n        clearInterval(this.keepAliveInterval);\n    }\n    /**\n     * Performs IP discovery to discover the local address and port to be used for the voice connection.\n     *\n     * @param ssrc - The SSRC received from Discord\n     */\n    performIPDiscovery(ssrc) {\n        return new Promise((resolve, reject) => {\n            const listener = (message) => {\n                try {\n                    if (message.readUInt16BE(0) !== 2)\n                        return;\n                    const packet = parseLocalPacket(message);\n                    this.socket.off('message', listener);\n                    resolve(packet);\n                }\n                catch { }\n            };\n            this.socket.on('message', listener);\n            this.socket.once('close', () => reject(new Error('Cannot perform IP discovery - socket closed')));\n            const discoveryBuffer = Buffer.alloc(74);\n            discoveryBuffer.writeUInt16BE(1, 0);\n            discoveryBuffer.writeUInt16BE(70, 2);\n            discoveryBuffer.writeUInt32BE(ssrc, 4);\n            this.send(discoveryBuffer);\n        });\n    }\n}\nexports.VoiceUDPSocket = VoiceUDPSocket;\n/**\n * Parses the response from Discord to aid with local IP discovery.\n *\n * @param message - The received message\n */\nfunction parseLocalPacket(message) {\n    const packet = Buffer.from(message);\n    const ip = packet.slice(8, packet.indexOf(0, 8)).toString('utf-8');\n    if (!net_1.isIPv4(ip)) {\n        throw new Error('Malformed IP address');\n    }\n    const port = packet.readUInt16BE(packet.length - 2);\n    return { ip, port };\n}\nexports.parseLocalPacket = parseLocalPacket;\n//# sourceMappingURL=VoiceUDPSocket.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/networking/VoiceUDPSocket.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/networking/VoiceWebSocket.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/networking/VoiceWebSocket.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceWebSocket = void 0;\nconst ws_1 = __importDefault(__webpack_require__(/*! ws */ \"./node_modules/ws/index.js\"));\nconst tiny_typed_emitter_1 = __webpack_require__(/*! tiny-typed-emitter */ \"./node_modules/tiny-typed-emitter/lib/index.js\");\n/**\n * An extension of the WebSocket class to provide helper functionality when interacting\n * with the Discord Voice gateway.\n */\nclass VoiceWebSocket extends tiny_typed_emitter_1.TypedEmitter {\n    /**\n     * Creates a new VoiceWebSocket\n     *\n     * @param address - The address to connect to\n     */\n    constructor(address, debug) {\n        super();\n        /**\n         * The number of consecutively missed heartbeats.\n         */\n        this.missedHeartbeats = 0;\n        this.ws = new ws_1.default(address);\n        this.ws.onmessage = (e) => this.onMessage(e);\n        this.ws.onopen = (e) => this.emit('open', e);\n        this.ws.onerror = (e) => this.emit('error', e instanceof Error ? e : e.error);\n        this.ws.onclose = (e) => this.emit('close', e);\n        this.lastHeartbeatAck = 0;\n        this.lastHeatbeatSend = 0;\n        this.debug = debug ? (message) => this.emit('debug', message) : null;\n    }\n    /**\n     * Destroys the VoiceWebSocket. The heartbeat interval is cleared, and the connection is closed.\n     */\n    destroy() {\n        var _a;\n        try {\n            (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, 'destroyed');\n            this.setHeartbeatInterval(-1);\n            this.ws.close(1000);\n        }\n        catch (error) {\n            this.emit('error', error);\n        }\n    }\n    /**\n     * Handles message events on the WebSocket. Attempts to JSON parse the messages and emit them\n     * as packets.\n     *\n     * @param event - The message event\n     */\n    onMessage(event) {\n        var _a;\n        if (typeof event.data !== 'string')\n            return;\n        (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, `<< ${event.data}`);\n        let packet;\n        try {\n            packet = JSON.parse(event.data);\n        }\n        catch (error) {\n            this.emit('error', error);\n            return;\n        }\n        if (packet.op === 6 /* HeartbeatAck */) {\n            this.lastHeartbeatAck = Date.now();\n            this.missedHeartbeats = 0;\n            this.ping = this.lastHeartbeatAck - this.lastHeatbeatSend;\n        }\n        /**\n         * Packet event.\n         *\n         * @event VoiceWebSocket#packet\n         * @type {any}\n         */\n        this.emit('packet', packet);\n    }\n    /**\n     * Sends a JSON-stringifiable packet over the WebSocket\n     *\n     * @param packet - The packet to send\n     */\n    sendPacket(packet) {\n        var _a;\n        try {\n            const stringified = JSON.stringify(packet);\n            (_a = this.debug) === null || _a === void 0 ? void 0 : _a.call(this, `>> ${stringified}`);\n            return this.ws.send(stringified);\n        }\n        catch (error) {\n            this.emit('error', error);\n        }\n    }\n    /**\n     * Sends a heartbeat over the WebSocket\n     */\n    sendHeartbeat() {\n        this.lastHeatbeatSend = Date.now();\n        this.missedHeartbeats++;\n        const nonce = this.lastHeatbeatSend;\n        return this.sendPacket({\n            op: 3 /* Heartbeat */,\n            d: nonce,\n        });\n    }\n    /**\n     * Sets/clears an interval to send heartbeats over the WebSocket\n     *\n     * @param ms - The interval in milliseconds. If negative, the interval will be unset.\n     */\n    setHeartbeatInterval(ms) {\n        if (typeof this.heartbeatInterval !== 'undefined')\n            clearInterval(this.heartbeatInterval);\n        if (ms > 0) {\n            this.heartbeatInterval = setInterval(() => {\n                if (this.lastHeatbeatSend !== 0 && this.missedHeartbeats >= 3) {\n                    // Missed too many heartbeats - disconnect\n                    this.ws.close();\n                    this.setHeartbeatInterval(-1);\n                }\n                this.sendHeartbeat();\n            }, ms);\n        }\n    }\n}\nexports.VoiceWebSocket = VoiceWebSocket;\n//# sourceMappingURL=VoiceWebSocket.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/networking/VoiceWebSocket.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/receive/AudioReceiveStream.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/receive/AudioReceiveStream.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioReceiveStream = exports.createDefaultAudioReceiveStreamOptions = exports.EndBehaviorType = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst AudioPlayer_1 = __webpack_require__(/*! ../audio/AudioPlayer */ \"./node_modules/@discordjs/voice/dist/audio/AudioPlayer.js\");\n/**\n * The different behaviors an audio receive stream can have for deciding when to end.\n */\nvar EndBehaviorType;\n(function (EndBehaviorType) {\n    /**\n     * The stream will only end when manually destroyed.\n     */\n    EndBehaviorType[EndBehaviorType[\"Manual\"] = 0] = \"Manual\";\n    /**\n     * The stream will end after a given time period of silence/no audio packets.\n     */\n    EndBehaviorType[EndBehaviorType[\"AfterSilence\"] = 1] = \"AfterSilence\";\n    /**\n     * The stream will end after a given time period of no audio packets.\n     */\n    EndBehaviorType[EndBehaviorType[\"AfterInactivity\"] = 2] = \"AfterInactivity\";\n})(EndBehaviorType = exports.EndBehaviorType || (exports.EndBehaviorType = {}));\nfunction createDefaultAudioReceiveStreamOptions() {\n    return {\n        end: {\n            behavior: EndBehaviorType.Manual,\n        },\n    };\n}\nexports.createDefaultAudioReceiveStreamOptions = createDefaultAudioReceiveStreamOptions;\n/**\n * A readable stream of Opus packets received from a specific entity\n * in a Discord voice connection.\n */\nclass AudioReceiveStream extends stream_1.Readable {\n    constructor({ end, ...options }) {\n        super({\n            ...options,\n            objectMode: true,\n        });\n        this.end = end;\n    }\n    push(buffer) {\n        if (buffer) {\n            if (this.end.behavior === EndBehaviorType.AfterInactivity ||\n                (this.end.behavior === EndBehaviorType.AfterSilence &&\n                    (buffer.compare(AudioPlayer_1.SILENCE_FRAME) !== 0 || typeof this.endTimeout === 'undefined'))) {\n                this.renewEndTimeout(this.end);\n            }\n        }\n        return super.push(buffer);\n    }\n    renewEndTimeout(end) {\n        if (this.endTimeout) {\n            clearTimeout(this.endTimeout);\n        }\n        this.endTimeout = setTimeout(() => this.push(null), end.duration);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    _read() { }\n}\nexports.AudioReceiveStream = AudioReceiveStream;\n//# sourceMappingURL=AudioReceiveStream.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/receive/AudioReceiveStream.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/receive/SSRCMap.js":
/*!***************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/receive/SSRCMap.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SSRCMap = void 0;\nconst tiny_typed_emitter_1 = __webpack_require__(/*! tiny-typed-emitter */ \"./node_modules/tiny-typed-emitter/lib/index.js\");\n/**\n * Maps audio SSRCs to data of users in voice connections.\n */\nclass SSRCMap extends tiny_typed_emitter_1.TypedEmitter {\n    constructor() {\n        super();\n        this.map = new Map();\n    }\n    /**\n     * Updates the map with new user data\n     *\n     * @param data The data to update with\n     */\n    update(data) {\n        const existing = this.map.get(data.audioSSRC);\n        const newValue = {\n            ...this.map.get(data.audioSSRC),\n            ...data,\n        };\n        this.map.set(data.audioSSRC, newValue);\n        if (!existing)\n            this.emit('create', newValue);\n        this.emit('update', existing, newValue);\n    }\n    /**\n     * Gets the stored voice data of a user.\n     *\n     * @param target The target, either their user ID or audio SSRC\n     */\n    get(target) {\n        if (typeof target === 'number') {\n            return this.map.get(target);\n        }\n        for (const data of this.map.values()) {\n            if (data.userId === target) {\n                return data;\n            }\n        }\n    }\n    /**\n     * Deletes the stored voice data about a user.\n     *\n     * @param target The target of the delete operation, either their audio SSRC or user ID\n     * @returns The data that was deleted, if any\n     */\n    delete(target) {\n        if (typeof target === 'number') {\n            const existing = this.map.get(target);\n            if (existing) {\n                this.map.delete(target);\n                this.emit('delete', existing);\n            }\n            return existing;\n        }\n        for (const [audioSSRC, data] of this.map.entries()) {\n            if (data.userId === target) {\n                this.map.delete(audioSSRC);\n                this.emit('delete', data);\n                return data;\n            }\n        }\n    }\n}\nexports.SSRCMap = SSRCMap;\n//# sourceMappingURL=SSRCMap.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/receive/SSRCMap.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/receive/SpeakingMap.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/receive/SpeakingMap.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakingMap = void 0;\nconst tiny_typed_emitter_1 = __webpack_require__(/*! tiny-typed-emitter */ \"./node_modules/tiny-typed-emitter/lib/index.js\");\n/**\n * Tracks the speaking states of users in a voice channel.\n */\nclass SpeakingMap extends tiny_typed_emitter_1.TypedEmitter {\n    constructor() {\n        super();\n        this.users = new Map();\n        this.speakingTimeouts = new Map();\n    }\n    onPacket(userId) {\n        const timeout = this.speakingTimeouts.get(userId);\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        else {\n            this.users.set(userId, Date.now());\n            this.emit('start', userId);\n        }\n        this.startTimeout(userId);\n    }\n    startTimeout(userId) {\n        this.speakingTimeouts.set(userId, setTimeout(() => {\n            this.emit('end', userId);\n            this.speakingTimeouts.delete(userId);\n            this.users.delete(userId);\n        }, SpeakingMap.DELAY));\n    }\n}\nexports.SpeakingMap = SpeakingMap;\n/**\n * The delay after a packet is received from a user until they're marked as not speaking anymore.\n */\nSpeakingMap.DELAY = 100;\n//# sourceMappingURL=SpeakingMap.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/receive/SpeakingMap.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/receive/VoiceReceiver.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/receive/VoiceReceiver.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceReceiver = void 0;\nconst Secretbox_1 = __webpack_require__(/*! ../util/Secretbox */ \"./node_modules/@discordjs/voice/dist/util/Secretbox.js\");\nconst AudioReceiveStream_1 = __webpack_require__(/*! ./AudioReceiveStream */ \"./node_modules/@discordjs/voice/dist/receive/AudioReceiveStream.js\");\nconst SpeakingMap_1 = __webpack_require__(/*! ./SpeakingMap */ \"./node_modules/@discordjs/voice/dist/receive/SpeakingMap.js\");\nconst SSRCMap_1 = __webpack_require__(/*! ./SSRCMap */ \"./node_modules/@discordjs/voice/dist/receive/SSRCMap.js\");\n/**\n * Attaches to a VoiceConnection, allowing you to receive audio packets from other\n * users that are speaking.\n *\n * @beta\n */\nclass VoiceReceiver {\n    constructor(voiceConnection) {\n        this.voiceConnection = voiceConnection;\n        this.ssrcMap = new SSRCMap_1.SSRCMap();\n        this.speaking = new SpeakingMap_1.SpeakingMap();\n        this.subscriptions = new Map();\n        this.connectionData = {};\n        this.onWsPacket = this.onWsPacket.bind(this);\n        this.onUdpMessage = this.onUdpMessage.bind(this);\n    }\n    /**\n     * Called when a packet is received on the attached connection's WebSocket.\n     *\n     * @param packet The received packet\n     * @internal\n     */\n    onWsPacket(packet) {\n        var _a, _b, _c, _d, _e;\n        if (packet.op === 13 /* ClientDisconnect */ && typeof ((_a = packet.d) === null || _a === void 0 ? void 0 : _a.user_id) === 'string') {\n            this.ssrcMap.delete(packet.d.user_id);\n        }\n        else if (packet.op === 5 /* Speaking */ &&\n            typeof ((_b = packet.d) === null || _b === void 0 ? void 0 : _b.user_id) === 'string' &&\n            typeof ((_c = packet.d) === null || _c === void 0 ? void 0 : _c.ssrc) === 'number') {\n            this.ssrcMap.update({ userId: packet.d.user_id, audioSSRC: packet.d.ssrc });\n        }\n        else if (packet.op === 12 /* ClientConnect */ &&\n            typeof ((_d = packet.d) === null || _d === void 0 ? void 0 : _d.user_id) === 'string' &&\n            typeof ((_e = packet.d) === null || _e === void 0 ? void 0 : _e.audio_ssrc) === 'number') {\n            this.ssrcMap.update({\n                userId: packet.d.user_id,\n                audioSSRC: packet.d.audio_ssrc,\n                videoSSRC: packet.d.video_ssrc === 0 ? undefined : packet.d.video_ssrc,\n            });\n        }\n    }\n    decrypt(buffer, mode, nonce, secretKey) {\n        // Choose correct nonce depending on encryption\n        let end;\n        if (mode === 'xsalsa20_poly1305_lite') {\n            buffer.copy(nonce, 0, buffer.length - 4);\n            end = buffer.length - 4;\n        }\n        else if (mode === 'xsalsa20_poly1305_suffix') {\n            buffer.copy(nonce, 0, buffer.length - 24);\n            end = buffer.length - 24;\n        }\n        else {\n            buffer.copy(nonce, 0, 0, 12);\n        }\n        // Open packet\n        const decrypted = Secretbox_1.methods.open(buffer.slice(12, end), nonce, secretKey);\n        if (!decrypted)\n            return;\n        return Buffer.from(decrypted);\n    }\n    /**\n     * Parses an audio packet, decrypting it to yield an Opus packet.\n     *\n     * @param buffer The buffer to parse\n     * @param mode The encryption mode\n     * @param nonce The nonce buffer used by the connection for encryption\n     * @param secretKey The secret key used by the connection for encryption\n     * @returns The parsed Opus packet\n     */\n    parsePacket(buffer, mode, nonce, secretKey) {\n        let packet = this.decrypt(buffer, mode, nonce, secretKey);\n        if (!packet)\n            return;\n        // Strip RTP Header Extensions (one-byte only)\n        if (packet[0] === 0xbe && packet[1] === 0xde && packet.length > 4) {\n            const headerExtensionLength = packet.readUInt16BE(2);\n            let offset = 4;\n            for (let i = 0; i < headerExtensionLength; i++) {\n                const byte = packet[offset];\n                offset++;\n                if (byte === 0)\n                    continue;\n                offset += 1 + (byte >> 4);\n            }\n            // Skip over undocumented Discord byte (if present)\n            const byte = packet.readUInt8(offset);\n            if (byte === 0x00 || byte === 0x02)\n                offset++;\n            packet = packet.slice(offset);\n        }\n        return packet;\n    }\n    /**\n     * Called when the UDP socket of the attached connection receives a message.\n     *\n     * @param msg The received message\n     * @internal\n     */\n    onUdpMessage(msg) {\n        if (msg.length <= 8)\n            return;\n        const ssrc = msg.readUInt32BE(8);\n        const userData = this.ssrcMap.get(ssrc);\n        if (!userData)\n            return;\n        this.speaking.onPacket(userData.userId);\n        const stream = this.subscriptions.get(userData.userId);\n        if (!stream)\n            return;\n        if (this.connectionData.encryptionMode && this.connectionData.nonceBuffer && this.connectionData.secretKey) {\n            const packet = this.parsePacket(msg, this.connectionData.encryptionMode, this.connectionData.nonceBuffer, this.connectionData.secretKey);\n            if (packet) {\n                stream.push(packet);\n            }\n            else {\n                stream.destroy(new Error('Failed to parse packet'));\n            }\n        }\n    }\n    /**\n     * Creates a subscription for the given user ID.\n     *\n     * @param target The ID of the user to subscribe to\n     * @returns A readable stream of Opus packets received from the target\n     */\n    subscribe(userId, options) {\n        const existing = this.subscriptions.get(userId);\n        if (existing)\n            return existing;\n        const stream = new AudioReceiveStream_1.AudioReceiveStream({\n            ...AudioReceiveStream_1.createDefaultAudioReceiveStreamOptions(),\n            ...options,\n        });\n        stream.once('close', () => this.subscriptions.delete(userId));\n        this.subscriptions.set(userId, stream);\n        return stream;\n    }\n}\nexports.VoiceReceiver = VoiceReceiver;\n//# sourceMappingURL=VoiceReceiver.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/receive/VoiceReceiver.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/receive/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/receive/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./VoiceReceiver */ \"./node_modules/@discordjs/voice/dist/receive/VoiceReceiver.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SSRCMap */ \"./node_modules/@discordjs/voice/dist/receive/SSRCMap.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AudioReceiveStream */ \"./node_modules/@discordjs/voice/dist/receive/AudioReceiveStream.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/receive/index.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/Secretbox.js":
/*!**************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/Secretbox.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.methods = void 0;\nconst libs = {\n    sodium: (sodium) => ({\n        open: sodium.api.crypto_secretbox_open_easy,\n        close: sodium.api.crypto_secretbox_easy,\n        random: (n, buffer) => {\n            if (!buffer)\n                buffer = Buffer.allocUnsafe(n);\n            sodium.api.randombytes_buf(buffer);\n            return buffer;\n        },\n    }),\n    'libsodium-wrappers': (sodium) => ({\n        open: sodium.crypto_secretbox_open_easy,\n        close: sodium.crypto_secretbox_easy,\n        random: (n) => sodium.randombytes_buf(n),\n    }),\n    tweetnacl: (tweetnacl) => ({\n        open: tweetnacl.secretbox.open,\n        close: tweetnacl.secretbox,\n        random: (n) => tweetnacl.randomBytes(n),\n    }),\n};\nconst fallbackError = () => {\n    throw new Error(`Cannot play audio as no valid encryption package is installed.\n- Install sodium, libsodium-wrappers, or tweetnacl.\n- Use the generateDependencyReport() function for more information.\\n`);\n};\nconst methods = {\n    open: fallbackError,\n    close: fallbackError,\n    random: fallbackError,\n};\nexports.methods = methods;\nvoid (async () => {\n    for (const libName of Object.keys(libs)) {\n        try {\n            // eslint-disable-next-line\n            const lib = __webpack_require__(\"./node_modules/@discordjs/voice/dist/util sync recursive\")(libName);\n            if (libName === 'libsodium-wrappers' && lib.ready)\n                await lib.ready; // eslint-disable-line no-await-in-loop\n            Object.assign(methods, libs[libName](lib));\n            break;\n        }\n        catch { } // eslint-disable-line no-empty\n    }\n})();\n//# sourceMappingURL=Secretbox.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/Secretbox.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/abortAfter.js":
/*!***************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/abortAfter.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.abortAfter = void 0;\n/**\n * Creates an abort controller that aborts after the given time.\n * @param delay - The time in milliseconds to wait before aborting\n */\nfunction abortAfter(delay) {\n    const ac = new AbortController();\n    const timeout = setTimeout(() => ac.abort(), delay);\n    ac.signal.addEventListener('abort', () => clearTimeout(timeout));\n    return [ac, ac.signal];\n}\nexports.abortAfter = abortAfter;\n//# sourceMappingURL=abortAfter.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/abortAfter.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/adapter.js":
/*!************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/adapter.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=adapter.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/adapter.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/demuxProbe.js":
/*!***************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/demuxProbe.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.demuxProbe = exports.validateDiscordOpusHead = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst prism_media_1 = __webpack_require__(/*! prism-media */ \"./node_modules/prism-media/src/index.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@discordjs/voice/dist/util/util.js\");\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/@discordjs/voice/dist/index.js\");\n/**\n * Takes an Opus Head, and verifies whether the associated Opus audio is suitable to play in a Discord voice channel.\n * @param opusHead The Opus Head to validate\n * @returns true if suitable to play in a Discord voice channel, false otherwise\n */\nfunction validateDiscordOpusHead(opusHead) {\n    const channels = opusHead.readUInt8(9);\n    const sampleRate = opusHead.readUInt32LE(12);\n    return channels === 2 && sampleRate === 48000;\n}\nexports.validateDiscordOpusHead = validateDiscordOpusHead;\n/**\n * Attempt to probe a readable stream to figure out whether it can be demuxed using an Ogg or WebM Opus demuxer.\n * @param stream The readable stream to probe\n * @param probeSize The number of bytes to attempt to read before giving up on the probe\n * @param validator The Opus Head validator function\n * @experimental\n */\nfunction demuxProbe(stream, probeSize = 1024, validator = validateDiscordOpusHead) {\n    return new Promise((resolve, reject) => {\n        // Preconditions\n        if (stream.readableObjectMode)\n            reject(new Error('Cannot probe a readable stream in object mode'));\n        if (stream.readableEnded)\n            reject(new Error('Cannot probe a stream that has ended'));\n        let readBuffer = Buffer.alloc(0);\n        let resolved = undefined;\n        const finish = (type) => {\n            stream.off('data', onData);\n            stream.off('close', onClose);\n            stream.off('end', onClose);\n            stream.pause();\n            resolved = type;\n            if (stream.readableEnded) {\n                resolve({\n                    stream: stream_1.Readable.from(readBuffer),\n                    type,\n                });\n            }\n            else {\n                if (readBuffer.length > 0) {\n                    stream.push(readBuffer);\n                }\n                resolve({\n                    stream,\n                    type,\n                });\n            }\n        };\n        const foundHead = (type) => (head) => {\n            if (validator(head)) {\n                finish(type);\n            }\n        };\n        const webm = new prism_media_1.opus.WebmDemuxer();\n        webm.once('error', util_1.noop);\n        webm.on('head', foundHead(__1.StreamType.WebmOpus));\n        const ogg = new prism_media_1.opus.OggDemuxer();\n        ogg.once('error', util_1.noop);\n        ogg.on('head', foundHead(__1.StreamType.OggOpus));\n        const onClose = () => {\n            if (!resolved) {\n                finish(__1.StreamType.Arbitrary);\n            }\n        };\n        const onData = (buffer) => {\n            readBuffer = Buffer.concat([readBuffer, buffer]);\n            webm.write(buffer);\n            ogg.write(buffer);\n            if (readBuffer.length >= probeSize) {\n                stream.off('data', onData);\n                stream.pause();\n                process.nextTick(onClose);\n            }\n        };\n        stream.once('error', reject);\n        stream.on('data', onData);\n        stream.once('close', onClose);\n        stream.once('end', onClose);\n    });\n}\nexports.demuxProbe = demuxProbe;\n//# sourceMappingURL=demuxProbe.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/demuxProbe.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/entersState.js":
/*!****************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/entersState.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.entersState = void 0;\nconst abortAfter_1 = __webpack_require__(/*! ./abortAfter */ \"./node_modules/@discordjs/voice/dist/util/abortAfter.js\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\n/**\n * Allows a target a specified amount of time to enter a given state, otherwise rejects with an error.\n *\n * @param target - The object that we want to observe the state change for\n * @param status - The status that the target should be in\n * @param timeoutOrSignal - The maximum time we are allowing for this to occur, or a signal that will abort the operation\n */\nasync function entersState(target, status, timeoutOrSignal) {\n    if (target.state.status !== status) {\n        const [ac, signal] = typeof timeoutOrSignal === 'number' ? abortAfter_1.abortAfter(timeoutOrSignal) : [undefined, timeoutOrSignal];\n        try {\n            await events_1.once(target, status, { signal });\n        }\n        finally {\n            ac === null || ac === void 0 ? void 0 : ac.abort();\n        }\n    }\n    return target;\n}\nexports.entersState = entersState;\n//# sourceMappingURL=entersState.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/entersState.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/generateDependencyReport.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/generateDependencyReport.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.generateDependencyReport = void 0;\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst path_1 = __webpack_require__(/*! path */ \"path\");\nconst prism_media_1 = __webpack_require__(/*! prism-media */ \"./node_modules/prism-media/src/index.js\");\n/**\n * Generates a report of the dependencies used by the \\@discordjs/voice module.\n * Useful for debugging.\n */\nfunction generateDependencyReport() {\n    const report = [];\n    const addVersion = (name) => report.push(`- ${name}: ${version(name)}`);\n    // general\n    report.push('Core Dependencies');\n    addVersion('@discordjs/voice');\n    addVersion('prism-media');\n    report.push('');\n    // opus\n    report.push('Opus Libraries');\n    addVersion('@discordjs/opus');\n    addVersion('opusscript');\n    report.push('');\n    // encryption\n    report.push('Encryption Libraries');\n    addVersion('sodium');\n    addVersion('libsodium-wrappers');\n    addVersion('tweetnacl');\n    report.push('');\n    // ffmpeg\n    report.push('FFmpeg');\n    try {\n        const info = prism_media_1.FFmpeg.getInfo();\n        report.push(`- version: ${info.version}`);\n        report.push(`- libopus: ${info.output.includes('--enable-libopus') ? 'yes' : 'no'}`);\n    }\n    catch (err) {\n        report.push('- not found');\n    }\n    return ['-'.repeat(50), ...report, '-'.repeat(50)].join('\\n');\n}\nexports.generateDependencyReport = generateDependencyReport;\n/**\n * Tries to find the package.json file for a given module.\n *\n * @param dir - The directory to look in\n * @param packageName - The name of the package to look for\n * @param depth - The maximum recursion depth\n */\nfunction findPackageJSON(dir, packageName, depth) {\n    if (depth === 0)\n        return undefined;\n    const attemptedPath = path_1.resolve(dir, './package.json');\n    try {\n        const pkg = __webpack_require__(\"./node_modules/@discordjs/voice/dist/util sync recursive\")(attemptedPath);\n        if (pkg.name !== packageName)\n            throw new Error('package.json does not match');\n        return pkg;\n    }\n    catch (err) {\n        return findPackageJSON(path_1.resolve(dir, '..'), packageName, depth - 1);\n    }\n}\n/**\n * Tries to find the version of a dependency.\n *\n * @param name - The package to find the version of\n */\nfunction version(name) {\n    var _a;\n    try {\n        const pkg = name === '@discordjs/voice'\n            ? __webpack_require__(/*! ../../package.json */ \"./node_modules/@discordjs/voice/package.json\")\n            : findPackageJSON(path_1.dirname(/*require.resolve*/(__webpack_require__(\"./node_modules/@discordjs/voice/dist/util sync recursive\").resolve(name))), name, 3);\n        return (_a = pkg === null || pkg === void 0 ? void 0 : pkg.version) !== null && _a !== void 0 ? _a : 'not found';\n    }\n    catch (err) {\n        return 'not found';\n    }\n}\n//# sourceMappingURL=generateDependencyReport.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/generateDependencyReport.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./generateDependencyReport */ \"./node_modules/@discordjs/voice/dist/util/generateDependencyReport.js\"), exports);\n__exportStar(__webpack_require__(/*! ./entersState */ \"./node_modules/@discordjs/voice/dist/util/entersState.js\"), exports);\n__exportStar(__webpack_require__(/*! ./adapter */ \"./node_modules/@discordjs/voice/dist/util/adapter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./demuxProbe */ \"./node_modules/@discordjs/voice/dist/util/demuxProbe.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/index.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util/util.js":
/*!*********************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/util.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.noop = void 0;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nexports.noop = noop;\n//# sourceMappingURL=util.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/util.js?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/dist/util sync recursive":
/*!*******************************************************!*\
  !*** ./node_modules/@discordjs/voice/dist/util/ sync ***!
  \*******************************************************/
/***/ ((module) => {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@discordjs/voice/dist/util sync recursive\";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/dist/util/_sync?");

/***/ }),

/***/ "./node_modules/@sapphire/async-queue/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sapphire/async-queue/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * The AsyncQueue class used to sequentialize burst requests\n */\nclass AsyncQueue {\n    constructor() {\n        /**\n         * The promises array\n         */\n        Object.defineProperty(this, \"promises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    /**\n     * The remaining amount of queued promises\n     */\n    get remaining() {\n        return this.promises.length;\n    }\n    /**\n     * Waits for last promise and queues a new one\n     * @example\n     * ```\n     * const queue = new AsyncQueue();\n     * async function request(url, options) {\n     *     await queue.wait();\n     *     try {\n     *         const result = await fetch(url, options);\n     *         // Do some operations with 'result'\n     *     } finally {\n     *         // Remove first entry from the queue and resolve for the next entry\n     *         queue.shift();\n     *     }\n     * }\n     *\n     * request(someUrl1, someOptions1); // Will call fetch() immediately\n     * request(someUrl2, someOptions2); // Will call fetch() after the first finished\n     * request(someUrl3, someOptions3); // Will call fetch() after the second finished\n     * ```\n     */\n    wait() {\n        const next = this.promises.length ? this.promises[this.promises.length - 1].promise : Promise.resolve();\n        let resolve;\n        const promise = new Promise((res) => {\n            resolve = res;\n        });\n        this.promises.push({\n            resolve: resolve,\n            promise\n        });\n        return next;\n    }\n    /**\n     * Frees the queue's lock for the next item to process\n     */\n    shift() {\n        const deferred = this.promises.shift();\n        if (typeof deferred !== 'undefined')\n            deferred.resolve();\n    }\n}\n\nexports.AsyncQueue = AsyncQueue;\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@sapphire/async-queue/dist/index.js?");

/***/ }),

/***/ "./node_modules/asynckit/index.js":
/*!****************************************!*\
  !*** ./node_modules/asynckit/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports =\n{\n  parallel      : __webpack_require__(/*! ./parallel.js */ \"./node_modules/asynckit/parallel.js\"),\n  serial        : __webpack_require__(/*! ./serial.js */ \"./node_modules/asynckit/serial.js\"),\n  serialOrdered : __webpack_require__(/*! ./serialOrdered.js */ \"./node_modules/asynckit/serialOrdered.js\")\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/index.js?");

/***/ }),

/***/ "./node_modules/asynckit/lib/abort.js":
/*!********************************************!*\
  !*** ./node_modules/asynckit/lib/abort.js ***!
  \********************************************/
/***/ ((module) => {

eval("// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/lib/abort.js?");

/***/ }),

/***/ "./node_modules/asynckit/lib/async.js":
/*!********************************************!*\
  !*** ./node_modules/asynckit/lib/async.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var defer = __webpack_require__(/*! ./defer.js */ \"./node_modules/asynckit/lib/defer.js\");\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/lib/async.js?");

/***/ }),

/***/ "./node_modules/asynckit/lib/defer.js":
/*!********************************************!*\
  !*** ./node_modules/asynckit/lib/defer.js ***!
  \********************************************/
/***/ ((module) => {

eval("module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/lib/defer.js?");

/***/ }),

/***/ "./node_modules/asynckit/lib/iterate.js":
/*!**********************************************!*\
  !*** ./node_modules/asynckit/lib/iterate.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var async = __webpack_require__(/*! ./async.js */ \"./node_modules/asynckit/lib/async.js\")\n  , abort = __webpack_require__(/*! ./abort.js */ \"./node_modules/asynckit/lib/abort.js\")\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/lib/iterate.js?");

/***/ }),

/***/ "./node_modules/asynckit/lib/state.js":
/*!********************************************!*\
  !*** ./node_modules/asynckit/lib/state.js ***!
  \********************************************/
/***/ ((module) => {

eval("// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/lib/state.js?");

/***/ }),

/***/ "./node_modules/asynckit/lib/terminator.js":
/*!*************************************************!*\
  !*** ./node_modules/asynckit/lib/terminator.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var abort = __webpack_require__(/*! ./abort.js */ \"./node_modules/asynckit/lib/abort.js\")\n  , async = __webpack_require__(/*! ./async.js */ \"./node_modules/asynckit/lib/async.js\")\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/lib/terminator.js?");

/***/ }),

/***/ "./node_modules/asynckit/parallel.js":
/*!*******************************************!*\
  !*** ./node_modules/asynckit/parallel.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var iterate    = __webpack_require__(/*! ./lib/iterate.js */ \"./node_modules/asynckit/lib/iterate.js\")\n  , initState  = __webpack_require__(/*! ./lib/state.js */ \"./node_modules/asynckit/lib/state.js\")\n  , terminator = __webpack_require__(/*! ./lib/terminator.js */ \"./node_modules/asynckit/lib/terminator.js\")\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/parallel.js?");

/***/ }),

/***/ "./node_modules/asynckit/serial.js":
/*!*****************************************!*\
  !*** ./node_modules/asynckit/serial.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var serialOrdered = __webpack_require__(/*! ./serialOrdered.js */ \"./node_modules/asynckit/serialOrdered.js\");\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/serial.js?");

/***/ }),

/***/ "./node_modules/asynckit/serialOrdered.js":
/*!************************************************!*\
  !*** ./node_modules/asynckit/serialOrdered.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var iterate    = __webpack_require__(/*! ./lib/iterate.js */ \"./node_modules/asynckit/lib/iterate.js\")\n  , initState  = __webpack_require__(/*! ./lib/state.js */ \"./node_modules/asynckit/lib/state.js\")\n  , terminator = __webpack_require__(/*! ./lib/terminator.js */ \"./node_modules/asynckit/lib/terminator.js\")\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/asynckit/serialOrdered.js?");

/***/ }),

/***/ "./src/bot.js":
/*!********************!*\
  !*** ./src/bot.js ***!
  \********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// @packages\nconst ytdl = __webpack_require__(/*! ytdl-core */ \"./node_modules/ytdl-core/lib/index.js\");\n\nconst ytsr = __webpack_require__(/*! ytsr */ \"./node_modules/ytsr/lib/main.js\");\n\nconst {\n  VoiceChannel\n} = __webpack_require__(/*! discord.js */ \"./node_modules/discord.js/src/index.js\");\n\nconst {\n  AudioPlayer,\n  AudioPlayerStatus,\n  VoiceConnectionStatus,\n  createAudioResource,\n  entersState,\n  joinVoiceChannel\n} = __webpack_require__(/*! @discordjs/voice */ \"./node_modules/@discordjs/voice/dist/index.js\");\n\nconst SpotifyWebApi = __webpack_require__(/*! spotify-web-api-node */ \"./node_modules/spotify-web-api-node/src/server.js\");\n\nconst {\n  IS_SPOTIFY_URL\n} = __webpack_require__(/*! ./util/regexp */ \"./src/util/regexp.js\"); // @constants\n\n\nconst defaultQueue = {\n  songs: [],\n  voiceChannel: null,\n  audioPlayer: null\n};\n\nclass Bot {\n  constructor() {\n    this.serverQueues = new Map();\n  }\n\n  init(client) {\n    if (!client) {\n      throw new Error('Client is required');\n    }\n\n    this.client = client;\n  }\n\n  getQueue(guildId) {\n    return this.serverQueues.get(guildId);\n  }\n\n  getSongsQueue(guildId) {\n    const queue = this.serverQueues.get(guildId);\n\n    if (!queue) {\n      throw Error('Queue not found');\n    }\n\n    const queueString = queue.songs.map(song => `**${song.title}**`).join('\\n');\n    return `The queue is:\\n${queueString}`;\n  }\n  /**\n   * @param {Object} voiceChannel\n   * @param {String} guildId\n   * @param {String} userId\n   * @param {String} song\n   */\n\n\n  async addSong(guildId, userId, songName) {\n    // TODO: Check same voiceChannel in the actual queue\n    const queue = this.getQueue(guildId);\n    const ytSearchQuery = songName;\n\n    if (IS_SPOTIFY_URL(ytSearchQuery)) {\n      const songName = SpotifyWebApi.getSongDetails(songName);\n    }\n\n    const {\n      items\n    } = await ytsr(songName, {\n      limit: 1,\n      type: 'video'\n    });\n    const [possibleSong] = items; // TODO: Handle possible match args\n\n    if (!possibleSong) {\n      throw Error('Song not found');\n    }\n\n    const song = {\n      title: possibleSong.title,\n      url: possibleSong.url\n    };\n\n    if (!queue) {\n      const newQueue = this.serverQueues.set(guildId, { ...defaultQueue,\n        songs: []\n      }).get(guildId);\n      newQueue.songs.push({ ...song,\n        userId\n      });\n    } else {\n      queue.songs.push({\n        userId,\n        ...song\n      });\n    }\n\n    return song;\n  }\n  /**\n   * @param {String} guildId\n   * @param {VoiceChannel} voiceChannel\n   * @returns\n   */\n\n\n  async joinVoiceChannel(voiceChannel) {\n    const queue = this.getQueue(voiceChannel.guild.id);\n    const voiceConnection = joinVoiceChannel({\n      channelId: voiceChannel.id,\n      guildId: voiceChannel.guild.id,\n      adapterCreator: voiceChannel.guild.voiceAdapterCreator\n    });\n    queue.connection = voiceConnection;\n    this.serverQueues.set(voiceChannel.guild.id, queue);\n\n    try {\n      entersState(voiceConnection, VoiceConnectionStatus.Ready, 20e3);\n    } catch (error) {\n      throw error;\n    }\n\n    try {\n      voiceConnection.on('stateChange', async (_, newState) => {\n        if (newState.status === VoiceConnectionStatus.Disconnected) {\n          if (newState.reason === VoiceConnectionDisconnectReason.WebSocketClose && newState.closeCode === 4014) {\n            /*\n                            If the WebSocket closed with a 4014 code, this means that we should not manually attempt to reconnect,\n                            but there is a chance the connection will recover itself if the reason of the disconnect was due to\n                            switching voice channels. This is also the same code for the bot being kicked from the voice channel,\n                            so we allow 5 seconds to figure out which scenario it is. If the bot has been kicked, we should destroy\n                            the voice connection.\n                        */\n            try {\n              await entersState(this.voiceConnection, VoiceConnectionStatus.Connecting, 5_000); // Probably moved voice channel\n            } catch {\n              this.voiceConnection.destroy(); // Probably removed from voice channel\n            }\n          } else if (this.voiceConnection.rejoinAttempts < 5) {\n            /*\n                            The disconnect in this case is recoverable, and we also have <5 repeated attempts so we will reconnect.\n                        */\n            await wait((this.voiceConnection.rejoinAttempts + 1) * 5_000);\n            this.voiceConnection.rejoin();\n          } else {\n            /*\n                            The disconnect in this case may be recoverable, but we have no more remaining attempts - destroy.\n                        */\n            this.voiceConnection.destroy();\n          }\n        } else if (newState.status === VoiceConnectionStatus.Destroyed) {\n          this.stop(voiceChannel.guildId);\n        }\n\n        try {\n          if (newState.status === VoiceConnectionStatus.Ready) {\n            console.log('Bot connected');\n          } // await entersState(\n          //     voiceConnection,\n          //     VoiceConnectionStatus.Ready,\n          //     5_000\n          // );\n\n        } catch (error) {\n          console.error('error', error);\n          voiceConnection.destroy();\n        }\n      });\n      this.play(voiceChannel.guildId, queue.songs[0]); // await entersState(\n      //     voiceConnection,\n      //     VoiceConnectionStatus.Ready,\n      //     5_000\n      // );\n      // voiceConnection.on('error', console.warn);\n\n      return voiceConnection;\n    } catch (error) {\n      voiceConnection.destroy();\n      throw error;\n    }\n  }\n\n  async play(guildId, song) {\n    var _serverQueue$audioPla;\n\n    const serverQueue = this.getQueue(guildId);\n\n    if (!song) {\n      serverQueue.voiceChannel.leave();\n      queue.delete(guildId);\n      throw Error(\"There's nothing else to play\");\n    }\n\n    if (((_serverQueue$audioPla = serverQueue.audioPlayer) === null || _serverQueue$audioPla === void 0 ? void 0 : _serverQueue$audioPla.state.status) === AudioPlayerStatus.Playing && serverQueue.songs.length) {\n      return;\n    }\n\n    const audioPlayer = new AudioPlayer();\n    serverQueue.connection.subscribe(audioPlayer);\n\n    const playSong = songUrl => {\n      console.log('searching', songUrl);\n      const stream = ytdl(songUrl, {\n        filter: 'audioonly'\n      });\n      const songResource = createAudioResource(stream);\n      audioPlayer.play(songResource);\n    };\n\n    playSong(song.url);\n    this.updateQueue(guildId, {\n      audioPlayer\n    });\n    audioPlayer.on('stateChange', (oldState, newState) => {\n      if (newState.status === AudioPlayerStatus.Idle && oldState.status === AudioPlayerStatus.Playing) {\n        const newSongs = serverQueue.songs.slice(1);\n        console.log('New songs', newSongs);\n        this.updateQueue(guildId, {\n          songs: newSongs\n        });\n\n        if (newSongs.length) {\n          playSong(newSongs[0].url);\n        }\n      } else if (newState.status === AudioPlayerStatus.Playing) {\n        console.log(newState.resource);\n      }\n    }); // .on('finish', () => {\n    //     console.log('a');\n    //     serverQueue.songs.shift();\n    //     play(guildId, serverQueue.songs[0]);\n    // })\n    // .on('error', error => console.error(error));\n    // dispatcher.setVolumeLogarithmic(1);\n    // serverQueue.textChannel.send(`Start playing: **${song.title}**`);\n  }\n\n  stop(guildId) {\n    var _queue$audioPlayer;\n\n    const queue = this.getQueue(guildId);\n    if (!queue) return;\n    if (((_queue$audioPlayer = queue.audioPlayer) === null || _queue$audioPlayer === void 0 ? void 0 : _queue$audioPlayer.state.status) === AudioPlayerStatus.Idle) return;\n  }\n\n  removeFromQueue(user, song) {\n    this.serverQueues.delete(song);\n  }\n\n  skipSong(guildId) {\n    const serverQueue = this.getQueue(guildId);\n    const {\n      audioPlayer\n    } = serverQueue;\n\n    if (!(audioPlayer !== null && audioPlayer !== void 0 && audioPlayer.state.status) === AudioPlayerStatus.Playing) {\n      throw Error(\"There's nothing to skip\");\n    }\n\n    audioPlayer.stop();\n  }\n\n  updateQueue(guildId, props = {}) {\n    const queue = this.serverQueues.get(guildId);\n    this.serverQueues.set(guildId, { ...queue,\n      ...props\n    });\n  }\n\n}\n\nmodule.exports = Bot;\n\n//# sourceURL=webpack://discord-fumaratto/./src/bot.js?");

/***/ }),

/***/ "./src/config/index.js":
/*!*****************************!*\
  !*** ./src/config/index.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const dotenv = __webpack_require__(/*! dotenv */ \"./node_modules/dotenv/lib/main.js\");\n\nconst defaultSettings = __webpack_require__(/*! ./default-settings.json */ \"./src/config/default-settings.json\");\n\nmodule.exports = {\n  settings: defaultSettings\n};\n\n//# sourceURL=webpack://discord-fumaratto/./src/config/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// @packages\nconst {\n  Client,\n  Intents\n} = __webpack_require__(/*! discord.js */ \"./node_modules/discord.js/src/index.js\");\n\nconst Bot = __webpack_require__(/*! ./bot */ \"./src/bot.js\");\n\nconst {\n  settings\n} = __webpack_require__(/*! ./config */ \"./src/config/index.js\"); // @constants\n\n\nconst bot = new Bot();\nconst client = new Client({\n  intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES, Intents.FLAGS.GUILD_VOICE_STATES]\n});\nclient.once('ready', () => {\n  bot.init(client);\n  console.log(`Logged in as ${client.user.tag}!`);\n});\nclient.on('messageCreate', async message => {\n  if (message.author.bot) return;\n  if (!message.content.startsWith(settings.prefix)) return;\n  const voiceChannel = message.member.voice.channel;\n\n  if (!voiceChannel) {\n    return message.reply('You need to join a voice channel first!');\n  }\n\n  const permissions = voiceChannel.permissionsFor(message.client.user);\n\n  if (!permissions.has('CONNECT') || !permissions.has('SPEAK')) {\n    return message.reply('I need the permissions to join and speak in your voice channel!');\n  }\n\n  const args = message.content.slice(settings.prefix.length).trim().split(/ +/g);\n  const command = args.shift().toLowerCase();\n\n  if (command === 'play' || command === 'p') {\n    try {\n      const argSongName = args.join(' ');\n\n      if (!argSongName) {\n        return message.reply('You need to provide a song name!');\n      }\n\n      const song = await bot.addSong(message.guildId, null, argSongName);\n      bot.joinVoiceChannel(voiceChannel);\n      message.reply(`Added **${song.title}** to the queue!`);\n    } catch (error) {\n      message.reply(error.message);\n    }\n  }\n\n  if (command === 'skip') {\n    try {\n      bot.skipSong(message.guildId);\n    } catch (error) {\n      message.reply(error.message);\n    }\n  }\n\n  if (command == 'queue' || command == 'q') {\n    try {\n      message.reply(bot.getSongsQueue(message.guildId));\n    } catch (error) {\n      message.reply(error.message);\n    }\n  }\n}); // const cleanUpServer = (eventType) => {\n//     console.log(eventType, 'Logging out...');\n//     client.destroy();\n// };\n// [`exit`, `SIGINT`, `SIGUSR1`, `SIGUSR2`, `uncaughtException`, `SIGTERM`].forEach((eventType) => {\n//     process.on(eventType, cleanUpServer.bind(null, eventType));\n// });\n\nclient.login('ODgzOTAwNzA5MTg2MTg3MjY0.YTQqrw.3KVsGvWG8TnGiuyhijgIg2bmlCA');\n\n//# sourceURL=webpack://discord-fumaratto/./src/index.js?");

/***/ }),

/***/ "./src/util/regexp.js":
/*!****************************!*\
  !*** ./src/util/regexp.js ***!
  \****************************/
/***/ ((module) => {

eval("const IS_YOUTUBE_URL = str => /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=\\w+$/.test(str) || /^https?:\\/\\/(www\\.)?youtu\\.be\\/\\w+$/.test(str);\n\nconst IS_SPOTIFY_URL = str => /^https?:\\/\\/(www\\.)?open\\.spotify\\.com\\/track/.test(str);\n\nmodule.exports = {\n  IS_SPOTIFY_URL,\n  IS_YOUTUBE_URL\n};\n\n//# sourceURL=webpack://discord-fumaratto/./src/util/regexp.js?");

/***/ }),

/***/ "./node_modules/call-bind/callBound.js":
/*!*********************************************!*\
  !*** ./node_modules/call-bind/callBound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar callBind = __webpack_require__(/*! ./ */ \"./node_modules/call-bind/index.js\");\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/call-bind/callBound.js?");

/***/ }),

/***/ "./node_modules/call-bind/index.js":
/*!*****************************************!*\
  !*** ./node_modules/call-bind/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/call-bind/index.js?");

/***/ }),

/***/ "./node_modules/callsites/index.js":
/*!*****************************************!*\
  !*** ./node_modules/callsites/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports[\"default\"] = callsites;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/callsites/index.js?");

/***/ }),

/***/ "./node_modules/combined-stream/lib/combined_stream.js":
/*!*************************************************************!*\
  !*** ./node_modules/combined-stream/lib/combined_stream.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! util */ \"util\");\nvar Stream = __webpack_require__(/*! stream */ \"stream\").Stream;\nvar DelayedStream = __webpack_require__(/*! delayed-stream */ \"./node_modules/delayed-stream/lib/delayed_stream.js\");\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/combined-stream/lib/combined_stream.js?");

/***/ }),

/***/ "./node_modules/cookiejar/cookiejar.js":
/*!*********************************************!*\
  !*** ./node_modules/cookiejar/cookiejar.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/* jshint node: true */\n(function () {\n    \"use strict\";\n\n    function CookieAccessInfo(domain, path, secure, script) {\n        if (this instanceof CookieAccessInfo) {\n            this.domain = domain || undefined;\n            this.path = path || \"/\";\n            this.secure = !!secure;\n            this.script = !!script;\n            return this;\n        }\n        return new CookieAccessInfo(domain, path, secure, script);\n    }\n    CookieAccessInfo.All = Object.freeze(Object.create(null));\n    exports.CookieAccessInfo = CookieAccessInfo;\n\n    function Cookie(cookiestr, request_domain, request_path) {\n        if (cookiestr instanceof Cookie) {\n            return cookiestr;\n        }\n        if (this instanceof Cookie) {\n            this.name = null;\n            this.value = null;\n            this.expiration_date = Infinity;\n            this.path = String(request_path || \"/\");\n            this.explicit_path = false;\n            this.domain = request_domain || null;\n            this.explicit_domain = false;\n            this.secure = false; //how to define default?\n            this.noscript = false; //httponly\n            if (cookiestr) {\n                this.parse(cookiestr, request_domain, request_path);\n            }\n            return this;\n        }\n        return new Cookie(cookiestr, request_domain, request_path);\n    }\n    exports.Cookie = Cookie;\n\n    Cookie.prototype.toString = function toString() {\n        var str = [this.name + \"=\" + this.value];\n        if (this.expiration_date !== Infinity) {\n            str.push(\"expires=\" + (new Date(this.expiration_date)).toGMTString());\n        }\n        if (this.domain) {\n            str.push(\"domain=\" + this.domain);\n        }\n        if (this.path) {\n            str.push(\"path=\" + this.path);\n        }\n        if (this.secure) {\n            str.push(\"secure\");\n        }\n        if (this.noscript) {\n            str.push(\"httponly\");\n        }\n        return str.join(\"; \");\n    };\n\n    Cookie.prototype.toValueString = function toValueString() {\n        return this.name + \"=\" + this.value;\n    };\n\n    var cookie_str_splitter = /[:](?=\\s*[a-zA-Z0-9_\\-]+\\s*[=])/g;\n    Cookie.prototype.parse = function parse(str, request_domain, request_path) {\n        if (this instanceof Cookie) {\n            var parts = str.split(\";\").filter(function (value) {\n                    return !!value;\n                });\n            var i;\n\n            var pair = parts[0].match(/([^=]+)=([\\s\\S]*)/);\n            if (!pair) {\n                console.warn(\"Invalid cookie header encountered. Header: '\"+str+\"'\");\n                return;\n            }\n\n            var key = pair[1];\n            var value = pair[2];\n            if ( typeof key !== 'string' || key.length === 0 || typeof value !== 'string' ) {\n                console.warn(\"Unable to extract values from cookie header. Cookie: '\"+str+\"'\");\n                return;\n            }\n\n            this.name = key;\n            this.value = value;\n\n            for (i = 1; i < parts.length; i += 1) {\n                pair = parts[i].match(/([^=]+)(?:=([\\s\\S]*))?/);\n                key = pair[1].trim().toLowerCase();\n                value = pair[2];\n                switch (key) {\n                case \"httponly\":\n                    this.noscript = true;\n                    break;\n                case \"expires\":\n                    this.expiration_date = value ?\n                            Number(Date.parse(value)) :\n                            Infinity;\n                    break;\n                case \"path\":\n                    this.path = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_path = true;\n                    break;\n                case \"domain\":\n                    this.domain = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_domain = !!this.domain;\n                    break;\n                case \"secure\":\n                    this.secure = true;\n                    break;\n                }\n            }\n\n            if (!this.explicit_path) {\n               this.path = request_path || \"/\";\n            }\n            if (!this.explicit_domain) {\n               this.domain = request_domain;\n            }\n\n            return this;\n        }\n        return new Cookie().parse(str, request_domain, request_path);\n    };\n\n    Cookie.prototype.matches = function matches(access_info) {\n        if (access_info === CookieAccessInfo.All) {\n          return true;\n        }\n        if (this.noscript && access_info.script ||\n                this.secure && !access_info.secure ||\n                !this.collidesWith(access_info)) {\n            return false;\n        }\n        return true;\n    };\n\n    Cookie.prototype.collidesWith = function collidesWith(access_info) {\n        if ((this.path && !access_info.path) || (this.domain && !access_info.domain)) {\n            return false;\n        }\n        if (this.path && access_info.path.indexOf(this.path) !== 0) {\n            return false;\n        }\n        if (this.explicit_path && access_info.path.indexOf( this.path ) !== 0) {\n           return false;\n        }\n        var access_domain = access_info.domain && access_info.domain.replace(/^[\\.]/,'');\n        var cookie_domain = this.domain && this.domain.replace(/^[\\.]/,'');\n        if (cookie_domain === access_domain) {\n            return true;\n        }\n        if (cookie_domain) {\n            if (!this.explicit_domain) {\n                return false; // we already checked if the domains were exactly the same\n            }\n            var wildcard = access_domain.indexOf(cookie_domain);\n            if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    };\n\n    function CookieJar() {\n        var cookies, cookies_list, collidable_cookie;\n        if (this instanceof CookieJar) {\n            cookies = Object.create(null); //name: [Cookie]\n\n            this.setCookie = function setCookie(cookie, request_domain, request_path) {\n                var remove, i;\n                cookie = new Cookie(cookie, request_domain, request_path);\n                //Delete the cookie if the set is past the current time\n                remove = cookie.expiration_date <= Date.now();\n                if (cookies[cookie.name] !== undefined) {\n                    cookies_list = cookies[cookie.name];\n                    for (i = 0; i < cookies_list.length; i += 1) {\n                        collidable_cookie = cookies_list[i];\n                        if (collidable_cookie.collidesWith(cookie)) {\n                            if (remove) {\n                                cookies_list.splice(i, 1);\n                                if (cookies_list.length === 0) {\n                                    delete cookies[cookie.name];\n                                }\n                                return false;\n                            }\n                            cookies_list[i] = cookie;\n                            return cookie;\n                        }\n                    }\n                    if (remove) {\n                        return false;\n                    }\n                    cookies_list.push(cookie);\n                    return cookie;\n                }\n                if (remove) {\n                    return false;\n                }\n                cookies[cookie.name] = [cookie];\n                return cookies[cookie.name];\n            };\n            //returns a cookie\n            this.getCookie = function getCookie(cookie_name, access_info) {\n                var cookie, i;\n                cookies_list = cookies[cookie_name];\n                if (!cookies_list) {\n                    return;\n                }\n                for (i = 0; i < cookies_list.length; i += 1) {\n                    cookie = cookies_list[i];\n                    if (cookie.expiration_date <= Date.now()) {\n                        if (cookies_list.length === 0) {\n                            delete cookies[cookie.name];\n                        }\n                        continue;\n                    }\n\n                    if (cookie.matches(access_info)) {\n                        return cookie;\n                    }\n                }\n            };\n            //returns a list of cookies\n            this.getCookies = function getCookies(access_info) {\n                var matches = [], cookie_name, cookie;\n                for (cookie_name in cookies) {\n                    cookie = this.getCookie(cookie_name, access_info);\n                    if (cookie) {\n                        matches.push(cookie);\n                    }\n                }\n                matches.toString = function toString() {\n                    return matches.join(\":\");\n                };\n                matches.toValueString = function toValueString() {\n                    return matches.map(function (c) {\n                        return c.toValueString();\n                    }).join(';');\n                };\n                return matches;\n            };\n\n            return this;\n        }\n        return new CookieJar();\n    }\n    exports.CookieJar = CookieJar;\n\n    //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.\n    CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {\n        cookies = Array.isArray(cookies) ?\n                cookies :\n                cookies.split(cookie_str_splitter);\n        var successful = [],\n            i,\n            cookie;\n        cookies = cookies.map(function(item){\n            return new Cookie(item, request_domain, request_path);\n        });\n        for (i = 0; i < cookies.length; i += 1) {\n            cookie = cookies[i];\n            if (this.setCookie(cookie, request_domain, request_path)) {\n                successful.push(cookie);\n            }\n        }\n        return successful;\n    };\n}());\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/cookiejar/cookiejar.js?");

/***/ }),

/***/ "./node_modules/delayed-stream/lib/delayed_stream.js":
/*!***********************************************************!*\
  !*** ./node_modules/delayed-stream/lib/delayed_stream.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stream = __webpack_require__(/*! stream */ \"stream\").Stream;\nvar util = __webpack_require__(/*! util */ \"util\");\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/delayed-stream/lib/delayed_stream.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/gateway/common.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord-api-types/gateway/common.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=common.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/gateway/common.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/gateway/v9.js":
/*!******************************************************!*\
  !*** ./node_modules/discord-api-types/gateway/v9.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/gateway\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GatewayDispatchEvents = exports.GatewayIntentBits = exports.GatewayCloseCodes = exports.GatewayOpcodes = exports.GatewayVersion = void 0;\r\n__exportStar(__webpack_require__(/*! ./common */ \"./node_modules/discord-api-types/gateway/common.js\"), exports);\r\nexports.GatewayVersion = '9';\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes\r\n */\r\nvar GatewayOpcodes;\r\n(function (GatewayOpcodes) {\r\n    /**\r\n     * An event was dispatched\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Dispatch\"] = 0] = \"Dispatch\";\r\n    /**\r\n     * A bidirectional opcode to maintain an active gateway connection.\r\n     * Fired periodically by the client, or fired by the gateway to request an immediate heartbeat from the client.\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Heartbeat\"] = 1] = \"Heartbeat\";\r\n    /**\r\n     * Starts a new session during the initial handshake\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Identify\"] = 2] = \"Identify\";\r\n    /**\r\n     * Update the client's presence\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"PresenceUpdate\"] = 3] = \"PresenceUpdate\";\r\n    /**\r\n     * Used to join/leave or move between voice channels\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"VoiceStateUpdate\"] = 4] = \"VoiceStateUpdate\";\r\n    /**\r\n     * Resume a previous session that was disconnected\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Resume\"] = 6] = \"Resume\";\r\n    /**\r\n     * You should attempt to reconnect and resume immediately\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Reconnect\"] = 7] = \"Reconnect\";\r\n    /**\r\n     * Request information about offline guild members in a large guild\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"RequestGuildMembers\"] = 8] = \"RequestGuildMembers\";\r\n    /**\r\n     * The session has been invalidated. You should reconnect and identify/resume accordingly\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"InvalidSession\"] = 9] = \"InvalidSession\";\r\n    /**\r\n     * Sent immediately after connecting, contains the `heartbeat_interval` to use\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Hello\"] = 10] = \"Hello\";\r\n    /**\r\n     * Sent in response to receiving a heartbeat to acknowledge that it has been received\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"HeartbeatAck\"] = 11] = \"HeartbeatAck\";\r\n})(GatewayOpcodes = exports.GatewayOpcodes || (exports.GatewayOpcodes = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-close-event-codes\r\n */\r\nvar GatewayCloseCodes;\r\n(function (GatewayCloseCodes) {\r\n    /**\r\n     * We're not sure what went wrong. Try reconnecting?\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"UnknownError\"] = 4000] = \"UnknownError\";\r\n    /**\r\n     * You sent an invalid Gateway opcode or an invalid payload for an opcode. Don't do that!\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#payloads-and-opcodes\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"UnknownOpcode\"] = 4001] = \"UnknownOpcode\";\r\n    /**\r\n     * You sent an invalid payload to us. Don't do that!\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#sending-payloads\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"DecodeError\"] = 4002] = \"DecodeError\";\r\n    /**\r\n     * You sent us a payload prior to identifying\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#identify\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"NotAuthenticated\"] = 4003] = \"NotAuthenticated\";\r\n    /**\r\n     * The account token sent with your identify payload is incorrect\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#identify\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"AuthenticationFailed\"] = 4004] = \"AuthenticationFailed\";\r\n    /**\r\n     * You sent more than one identify payload. Don't do that!\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"AlreadyAuthenticated\"] = 4005] = \"AlreadyAuthenticated\";\r\n    /**\r\n     * The sequence sent when resuming the session was invalid. Reconnect and start a new session\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#resume\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidSeq\"] = 4007] = \"InvalidSeq\";\r\n    /**\r\n     * Woah nelly! You're sending payloads to us too quickly. Slow it down! You will be disconnected on receiving this\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"RateLimited\"] = 4008] = \"RateLimited\";\r\n    /**\r\n     * Your session timed out. Reconnect and start a new one\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"SessionTimedOut\"] = 4009] = \"SessionTimedOut\";\r\n    /**\r\n     * You sent us an invalid shard when identifying\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#sharding\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidShard\"] = 4010] = \"InvalidShard\";\r\n    /**\r\n     * The session would have handled too many guilds - you are required to shard your connection in order to connect\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#sharding\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"ShardingRequired\"] = 4011] = \"ShardingRequired\";\r\n    /**\r\n     * You sent an invalid version for the gateway\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidAPIVersion\"] = 4012] = \"InvalidAPIVersion\";\r\n    /**\r\n     * You sent an invalid intent for a Gateway Intent. You may have incorrectly calculated the bitwise value\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#gateway-intents\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidIntents\"] = 4013] = \"InvalidIntents\";\r\n    /**\r\n     * You sent a disallowed intent for a Gateway Intent. You may have tried to specify an intent that you have not\r\n     * enabled or are not whitelisted for\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#gateway-intents\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#privileged-intents\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"DisallowedIntents\"] = 4014] = \"DisallowedIntents\";\r\n})(GatewayCloseCodes = exports.GatewayCloseCodes || (exports.GatewayCloseCodes = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#list-of-intents\r\n */\r\nvar GatewayIntentBits;\r\n(function (GatewayIntentBits) {\r\n    GatewayIntentBits[GatewayIntentBits[\"Guilds\"] = 1] = \"Guilds\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMembers\"] = 2] = \"GuildMembers\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildBans\"] = 4] = \"GuildBans\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildEmojisAndStickers\"] = 8] = \"GuildEmojisAndStickers\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildIntegrations\"] = 16] = \"GuildIntegrations\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildWebhooks\"] = 32] = \"GuildWebhooks\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildInvites\"] = 64] = \"GuildInvites\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildVoiceStates\"] = 128] = \"GuildVoiceStates\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildPresences\"] = 256] = \"GuildPresences\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMessages\"] = 512] = \"GuildMessages\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMessageReactions\"] = 1024] = \"GuildMessageReactions\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMessageTyping\"] = 2048] = \"GuildMessageTyping\";\r\n    GatewayIntentBits[GatewayIntentBits[\"DirectMessages\"] = 4096] = \"DirectMessages\";\r\n    GatewayIntentBits[GatewayIntentBits[\"DirectMessageReactions\"] = 8192] = \"DirectMessageReactions\";\r\n    GatewayIntentBits[GatewayIntentBits[\"DirectMessageTyping\"] = 16384] = \"DirectMessageTyping\";\r\n})(GatewayIntentBits = exports.GatewayIntentBits || (exports.GatewayIntentBits = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-events\r\n */\r\nvar GatewayDispatchEvents;\r\n(function (GatewayDispatchEvents) {\r\n    GatewayDispatchEvents[\"ApplicationCommandCreate\"] = \"APPLICATION_COMMAND_CREATE\";\r\n    GatewayDispatchEvents[\"ApplicationCommandDelete\"] = \"APPLICATION_COMMAND_DELETE\";\r\n    GatewayDispatchEvents[\"ApplicationCommandUpdate\"] = \"APPLICATION_COMMAND_UPDATE\";\r\n    GatewayDispatchEvents[\"ChannelCreate\"] = \"CHANNEL_CREATE\";\r\n    GatewayDispatchEvents[\"ChannelDelete\"] = \"CHANNEL_DELETE\";\r\n    GatewayDispatchEvents[\"ChannelPinsUpdate\"] = \"CHANNEL_PINS_UPDATE\";\r\n    GatewayDispatchEvents[\"ChannelUpdate\"] = \"CHANNEL_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildBanAdd\"] = \"GUILD_BAN_ADD\";\r\n    GatewayDispatchEvents[\"GuildBanRemove\"] = \"GUILD_BAN_REMOVE\";\r\n    GatewayDispatchEvents[\"GuildCreate\"] = \"GUILD_CREATE\";\r\n    GatewayDispatchEvents[\"GuildDelete\"] = \"GUILD_DELETE\";\r\n    GatewayDispatchEvents[\"GuildEmojisUpdate\"] = \"GUILD_EMOJIS_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildIntegrationsUpdate\"] = \"GUILD_INTEGRATIONS_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildMemberAdd\"] = \"GUILD_MEMBER_ADD\";\r\n    GatewayDispatchEvents[\"GuildMemberRemove\"] = \"GUILD_MEMBER_REMOVE\";\r\n    GatewayDispatchEvents[\"GuildMembersChunk\"] = \"GUILD_MEMBERS_CHUNK\";\r\n    GatewayDispatchEvents[\"GuildMemberUpdate\"] = \"GUILD_MEMBER_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildRoleCreate\"] = \"GUILD_ROLE_CREATE\";\r\n    GatewayDispatchEvents[\"GuildRoleDelete\"] = \"GUILD_ROLE_DELETE\";\r\n    GatewayDispatchEvents[\"GuildRoleUpdate\"] = \"GUILD_ROLE_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildStickersUpdate\"] = \"GUILD_STICKERS_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildUpdate\"] = \"GUILD_UPDATE\";\r\n    GatewayDispatchEvents[\"IntegrationCreate\"] = \"INTEGRATION_CREATE\";\r\n    GatewayDispatchEvents[\"IntegrationDelete\"] = \"INTEGRATION_DELETE\";\r\n    GatewayDispatchEvents[\"IntegrationUpdate\"] = \"INTEGRATION_UPDATE\";\r\n    GatewayDispatchEvents[\"InteractionCreate\"] = \"INTERACTION_CREATE\";\r\n    GatewayDispatchEvents[\"InviteCreate\"] = \"INVITE_CREATE\";\r\n    GatewayDispatchEvents[\"InviteDelete\"] = \"INVITE_DELETE\";\r\n    GatewayDispatchEvents[\"MessageCreate\"] = \"MESSAGE_CREATE\";\r\n    GatewayDispatchEvents[\"MessageDelete\"] = \"MESSAGE_DELETE\";\r\n    GatewayDispatchEvents[\"MessageDeleteBulk\"] = \"MESSAGE_DELETE_BULK\";\r\n    GatewayDispatchEvents[\"MessageReactionAdd\"] = \"MESSAGE_REACTION_ADD\";\r\n    GatewayDispatchEvents[\"MessageReactionRemove\"] = \"MESSAGE_REACTION_REMOVE\";\r\n    GatewayDispatchEvents[\"MessageReactionRemoveAll\"] = \"MESSAGE_REACTION_REMOVE_ALL\";\r\n    GatewayDispatchEvents[\"MessageReactionRemoveEmoji\"] = \"MESSAGE_REACTION_REMOVE_EMOJI\";\r\n    GatewayDispatchEvents[\"MessageUpdate\"] = \"MESSAGE_UPDATE\";\r\n    GatewayDispatchEvents[\"PresenceUpdate\"] = \"PRESENCE_UPDATE\";\r\n    GatewayDispatchEvents[\"StageInstanceCreate\"] = \"STAGE_INSTANCE_CREATE\";\r\n    GatewayDispatchEvents[\"StageInstanceDelete\"] = \"STAGE_INSTANCE_DELETE\";\r\n    GatewayDispatchEvents[\"StageInstanceUpdate\"] = \"STAGE_INSTANCE_UPDATE\";\r\n    GatewayDispatchEvents[\"Ready\"] = \"READY\";\r\n    GatewayDispatchEvents[\"Resumed\"] = \"RESUMED\";\r\n    GatewayDispatchEvents[\"ThreadCreate\"] = \"THREAD_CREATE\";\r\n    GatewayDispatchEvents[\"ThreadDelete\"] = \"THREAD_DELETE\";\r\n    GatewayDispatchEvents[\"ThreadListSync\"] = \"THREAD_LIST_SYNC\";\r\n    GatewayDispatchEvents[\"ThreadMembersUpdate\"] = \"THREAD_MEMBERS_UPDATE\";\r\n    GatewayDispatchEvents[\"ThreadMemberUpdate\"] = \"THREAD_MEMBER_UPDATE\";\r\n    GatewayDispatchEvents[\"ThreadUpdate\"] = \"THREAD_UPDATE\";\r\n    GatewayDispatchEvents[\"TypingStart\"] = \"TYPING_START\";\r\n    GatewayDispatchEvents[\"UserUpdate\"] = \"USER_UPDATE\";\r\n    GatewayDispatchEvents[\"VoiceServerUpdate\"] = \"VOICE_SERVER_UPDATE\";\r\n    GatewayDispatchEvents[\"VoiceStateUpdate\"] = \"VOICE_STATE_UPDATE\";\r\n    GatewayDispatchEvents[\"WebhooksUpdate\"] = \"WEBHOOKS_UPDATE\";\r\n})(GatewayDispatchEvents = exports.GatewayDispatchEvents || (exports.GatewayDispatchEvents = {}));\r\n// #endregion Shared\r\n//# sourceMappingURL=v9.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/gateway/v9.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/globals.js":
/*!***************************************************!*\
  !*** ./node_modules/discord-api-types/globals.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormattingPatterns = void 0;\r\n/**\r\n * https://discord.com/developers/docs/reference#message-formatting-formats\r\n */\r\nexports.FormattingPatterns = {\r\n    /**\r\n     * Regular expression for matching a user mention, strictly without a nickname\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    User: /<@(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a user mention, strictly with a nickname\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    UserWithNickname: /<@!(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a user mention, with or without a nickname\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    UserWithOptionalNickname: /<@!?(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a channel mention\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    Channel: /<#(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a role mention\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    Role: /<@&(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a custom emoji, either static or animated\r\n     *\r\n     * The `animated`, `name` and `id` group properties are present on the `exec` result of this expression\r\n     */\r\n    Emoji: /<(?<animated>a)?:(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching strictly an animated custom emoji\r\n     *\r\n     * The `animated`, `name` and `id` group properties are present on the `exec` result of this expression\r\n     */\r\n    AnimatedEmoji: /<(?<animated>a):(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching strictly a static custom emoji\r\n     *\r\n     * The `name` and `id` group properties are present on the `exec` result of this expression\r\n     */\r\n    StaticEmoji: /<:(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a timestamp, either default or custom styled\r\n     *\r\n     * The `timestamp` and `style` group properties are present on the `exec` result of this expression\r\n     */\r\n    Timestamp: /<t:(?<timestamp>-?\\d{1,13})(:(?<style>[tTdDfFR]))?>/,\r\n    /**\r\n     * Regular expression for matching strictly default styled timestamps\r\n     *\r\n     * The `timestamp` group property is present on the `exec` result of this expression\r\n     */\r\n    DefaultStyledTimestamp: /<t:(?<timestamp>-?\\d{1,13})>/,\r\n    /**\r\n     * Regular expression for matching strictly custom styled timestamps\r\n     *\r\n     * The `timestamp` and `style` group properties are present on the `exec` result of this expression\r\n     */\r\n    StyledTimestamp: /<t:(?<timestamp>-?\\d{1,13}):(?<style>[tTdDfFR])>/,\r\n};\r\n/**\r\n * Freezes the formatting patterns\r\n * @internal\r\n */\r\nObject.freeze(exports.FormattingPatterns);\r\n//# sourceMappingURL=globals.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/globals.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/_interactions/base.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/_interactions/base.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=base.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/_interactions/base.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/_interactions/messageComponents.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/_interactions/messageComponents.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=messageComponents.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/_interactions/messageComponents.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/_interactions/ping.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/_interactions/ping.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=ping.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/_interactions/ping.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/_interactions/responses.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/_interactions/responses.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InteractionResponseType = exports.InteractionType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#interaction-object-interaction-request-type\r\n */\r\nvar InteractionType;\r\n(function (InteractionType) {\r\n    InteractionType[InteractionType[\"Ping\"] = 1] = \"Ping\";\r\n    InteractionType[InteractionType[\"ApplicationCommand\"] = 2] = \"ApplicationCommand\";\r\n    InteractionType[InteractionType[\"MessageComponent\"] = 3] = \"MessageComponent\";\r\n})(InteractionType = exports.InteractionType || (exports.InteractionType = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#interaction-response-object-interaction-callback-type\r\n */\r\nvar InteractionResponseType;\r\n(function (InteractionResponseType) {\r\n    /**\r\n     * ACK a `Ping`\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"Pong\"] = 1] = \"Pong\";\r\n    /**\r\n     * Respond to an interaction with a message\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"ChannelMessageWithSource\"] = 4] = \"ChannelMessageWithSource\";\r\n    /**\r\n     * ACK an interaction and edit to a response later, the user sees a loading state\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"DeferredChannelMessageWithSource\"] = 5] = \"DeferredChannelMessageWithSource\";\r\n    /**\r\n     * ACK a button interaction and update it to a loading state\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"DeferredMessageUpdate\"] = 6] = \"DeferredMessageUpdate\";\r\n    /**\r\n     * ACK a button interaction and edit the message to which the button was attached\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"UpdateMessage\"] = 7] = \"UpdateMessage\";\r\n})(InteractionResponseType = exports.InteractionResponseType || (exports.InteractionResponseType = {}));\r\n//# sourceMappingURL=responses.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/_interactions/responses.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/_interactions/slashCommands.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/_interactions/slashCommands.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ApplicationCommandPermissionType = exports.ApplicationCommandOptionType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#application-command-object-application-command-option-type\r\n */\r\nvar ApplicationCommandOptionType;\r\n(function (ApplicationCommandOptionType) {\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Subcommand\"] = 1] = \"Subcommand\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"SubcommandGroup\"] = 2] = \"SubcommandGroup\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"String\"] = 3] = \"String\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Integer\"] = 4] = \"Integer\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Boolean\"] = 5] = \"Boolean\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"User\"] = 6] = \"User\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Channel\"] = 7] = \"Channel\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Role\"] = 8] = \"Role\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Mentionable\"] = 9] = \"Mentionable\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Number\"] = 10] = \"Number\";\r\n})(ApplicationCommandOptionType = exports.ApplicationCommandOptionType || (exports.ApplicationCommandOptionType = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#applicationcommandpermissiontype\r\n */\r\nvar ApplicationCommandPermissionType;\r\n(function (ApplicationCommandPermissionType) {\r\n    ApplicationCommandPermissionType[ApplicationCommandPermissionType[\"Role\"] = 1] = \"Role\";\r\n    ApplicationCommandPermissionType[ApplicationCommandPermissionType[\"User\"] = 2] = \"User\";\r\n})(ApplicationCommandPermissionType = exports.ApplicationCommandPermissionType || (exports.ApplicationCommandPermissionType = {}));\r\n//# sourceMappingURL=slashCommands.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/_interactions/slashCommands.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/application.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/application.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/application\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ApplicationFlags = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/application#application-object-application-flags\r\n */\r\nvar ApplicationFlags;\r\n(function (ApplicationFlags) {\r\n    ApplicationFlags[ApplicationFlags[\"ManagedEmoji\"] = 4] = \"ManagedEmoji\";\r\n    ApplicationFlags[ApplicationFlags[\"GroupDMCreate\"] = 16] = \"GroupDMCreate\";\r\n    ApplicationFlags[ApplicationFlags[\"RPCHasConnected\"] = 2048] = \"RPCHasConnected\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayPresence\"] = 4096] = \"GatewayPresence\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayPresenceLimited\"] = 8192] = \"GatewayPresenceLimited\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayGuildMembers\"] = 16384] = \"GatewayGuildMembers\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayGuildMembersLimited\"] = 32768] = \"GatewayGuildMembersLimited\";\r\n    ApplicationFlags[ApplicationFlags[\"VerificationPendingGuildLimit\"] = 65536] = \"VerificationPendingGuildLimit\";\r\n    ApplicationFlags[ApplicationFlags[\"Embedded\"] = 131072] = \"Embedded\";\r\n})(ApplicationFlags = exports.ApplicationFlags || (exports.ApplicationFlags = {}));\r\n//# sourceMappingURL=application.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/application.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/auditLog.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/auditLog.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/audit-log\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuditLogOptionsType = exports.AuditLogEvent = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events\r\n */\r\nvar AuditLogEvent;\r\n(function (AuditLogEvent) {\r\n    AuditLogEvent[AuditLogEvent[\"GuildUpdate\"] = 1] = \"GuildUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelCreate\"] = 10] = \"ChannelCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelUpdate\"] = 11] = \"ChannelUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelDelete\"] = 12] = \"ChannelDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelOverwriteCreate\"] = 13] = \"ChannelOverwriteCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelOverwriteUpdate\"] = 14] = \"ChannelOverwriteUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelOverwriteDelete\"] = 15] = \"ChannelOverwriteDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberKick\"] = 20] = \"MemberKick\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberPrune\"] = 21] = \"MemberPrune\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberBanAdd\"] = 22] = \"MemberBanAdd\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberBanRemove\"] = 23] = \"MemberBanRemove\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberUpdate\"] = 24] = \"MemberUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberRoleUpdate\"] = 25] = \"MemberRoleUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberMove\"] = 26] = \"MemberMove\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberDisconnect\"] = 27] = \"MemberDisconnect\";\r\n    AuditLogEvent[AuditLogEvent[\"BotAdd\"] = 28] = \"BotAdd\";\r\n    AuditLogEvent[AuditLogEvent[\"RoleCreate\"] = 30] = \"RoleCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"RoleUpdate\"] = 31] = \"RoleUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"RoleDelete\"] = 32] = \"RoleDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"InviteCreate\"] = 40] = \"InviteCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"InviteUpdate\"] = 41] = \"InviteUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"InviteDelete\"] = 42] = \"InviteDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"WebhookCreate\"] = 50] = \"WebhookCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"WebhookUpdate\"] = 51] = \"WebhookUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"WebhookDelete\"] = 52] = \"WebhookDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"EmojiCreate\"] = 60] = \"EmojiCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"EmojiUpdate\"] = 61] = \"EmojiUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"EmojiDelete\"] = 62] = \"EmojiDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MessageDelete\"] = 72] = \"MessageDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MessageBulkDelete\"] = 73] = \"MessageBulkDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MessagePin\"] = 74] = \"MessagePin\";\r\n    AuditLogEvent[AuditLogEvent[\"MessageUnpin\"] = 75] = \"MessageUnpin\";\r\n    AuditLogEvent[AuditLogEvent[\"IntegrationCreate\"] = 80] = \"IntegrationCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"IntegrationUpdate\"] = 81] = \"IntegrationUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"IntegrationDelete\"] = 82] = \"IntegrationDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"StageInstanceCreate\"] = 83] = \"StageInstanceCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"StageInstanceUpdate\"] = 84] = \"StageInstanceUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"StageInstanceDelete\"] = 85] = \"StageInstanceDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"StickerCreate\"] = 90] = \"StickerCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"StickerUpdate\"] = 91] = \"StickerUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"StickerDelete\"] = 92] = \"StickerDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"ThreadCreate\"] = 110] = \"ThreadCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"ThreadUpdate\"] = 111] = \"ThreadUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ThreadDelete\"] = 112] = \"ThreadDelete\";\r\n})(AuditLogEvent = exports.AuditLogEvent || (exports.AuditLogEvent = {}));\r\nvar AuditLogOptionsType;\r\n(function (AuditLogOptionsType) {\r\n    AuditLogOptionsType[\"Role\"] = \"0\";\r\n    AuditLogOptionsType[\"Member\"] = \"1\";\r\n})(AuditLogOptionsType = exports.AuditLogOptionsType || (exports.AuditLogOptionsType = {}));\r\n//# sourceMappingURL=auditLog.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/auditLog.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/channel.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/channel.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/channel\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ButtonStyle = exports.ComponentType = exports.AllowedMentionsTypes = exports.EmbedType = exports.ThreadMemberFlags = exports.ThreadAutoArchiveDuration = exports.OverwriteType = exports.MessageFlags = exports.MessageActivityType = exports.MessageType = exports.VideoQualityMode = exports.ChannelType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#channel-object-channel-types\r\n */\r\nvar ChannelType;\r\n(function (ChannelType) {\r\n    /**\r\n     * A text channel within a guild\r\n     */\r\n    ChannelType[ChannelType[\"GuildText\"] = 0] = \"GuildText\";\r\n    /**\r\n     * A direct message between users\r\n     */\r\n    ChannelType[ChannelType[\"DM\"] = 1] = \"DM\";\r\n    /**\r\n     * A voice channel within a guild\r\n     */\r\n    ChannelType[ChannelType[\"GuildVoice\"] = 2] = \"GuildVoice\";\r\n    /**\r\n     * A direct message between multiple users\r\n     */\r\n    ChannelType[ChannelType[\"GroupDM\"] = 3] = \"GroupDM\";\r\n    /**\r\n     * An organizational category that contains up to 50 channels\r\n     *\r\n     * See https://support.discord.com/hc/en-us/articles/115001580171-Channel-Categories-101\r\n     */\r\n    ChannelType[ChannelType[\"GuildCategory\"] = 4] = \"GuildCategory\";\r\n    /**\r\n     * A channel that users can follow and crosspost into their own guild\r\n     *\r\n     * See https://support.discord.com/hc/en-us/articles/360032008192\r\n     */\r\n    ChannelType[ChannelType[\"GuildNews\"] = 5] = \"GuildNews\";\r\n    /**\r\n     * A channel in which game developers can sell their game on Discord\r\n     *\r\n     * See https://discord.com/developers/docs/game-and-server-management/special-channels\r\n     */\r\n    ChannelType[ChannelType[\"GuildStore\"] = 6] = \"GuildStore\";\r\n    /**\r\n     * A thread channel (public) within a Guild News channel\r\n     */\r\n    ChannelType[ChannelType[\"GuildNewsThread\"] = 10] = \"GuildNewsThread\";\r\n    /**\r\n     * A public thread channel within a Guild Text channel\r\n     */\r\n    ChannelType[ChannelType[\"GuildPublicThread\"] = 11] = \"GuildPublicThread\";\r\n    /**\r\n     * A private thread channel within a Guild Text channel\r\n     */\r\n    ChannelType[ChannelType[\"GuildPrivateThread\"] = 12] = \"GuildPrivateThread\";\r\n    /**\r\n     * A voice channel for hosting events with an audience\r\n     *\r\n     * See https://support.discord.com/hc/en-us/articles/1500005513722\r\n     */\r\n    ChannelType[ChannelType[\"GuildStageVoice\"] = 13] = \"GuildStageVoice\";\r\n})(ChannelType = exports.ChannelType || (exports.ChannelType = {}));\r\nvar VideoQualityMode;\r\n(function (VideoQualityMode) {\r\n    /**\r\n     * Discord chooses the quality for optimal performance\r\n     */\r\n    VideoQualityMode[VideoQualityMode[\"Auto\"] = 1] = \"Auto\";\r\n    /**\r\n     * 720p\r\n     */\r\n    VideoQualityMode[VideoQualityMode[\"Full\"] = 2] = \"Full\";\r\n})(VideoQualityMode = exports.VideoQualityMode || (exports.VideoQualityMode = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-types\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Default\"] = 0] = \"Default\";\r\n    MessageType[MessageType[\"RecipientAdd\"] = 1] = \"RecipientAdd\";\r\n    MessageType[MessageType[\"RecipientRemove\"] = 2] = \"RecipientRemove\";\r\n    MessageType[MessageType[\"Call\"] = 3] = \"Call\";\r\n    MessageType[MessageType[\"ChannelNameChange\"] = 4] = \"ChannelNameChange\";\r\n    MessageType[MessageType[\"ChannelIconChange\"] = 5] = \"ChannelIconChange\";\r\n    MessageType[MessageType[\"ChannelPinnedMessage\"] = 6] = \"ChannelPinnedMessage\";\r\n    MessageType[MessageType[\"GuildMemberJoin\"] = 7] = \"GuildMemberJoin\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscription\"] = 8] = \"UserPremiumGuildSubscription\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscriptionTier1\"] = 9] = \"UserPremiumGuildSubscriptionTier1\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscriptionTier2\"] = 10] = \"UserPremiumGuildSubscriptionTier2\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscriptionTier3\"] = 11] = \"UserPremiumGuildSubscriptionTier3\";\r\n    MessageType[MessageType[\"ChannelFollowAdd\"] = 12] = \"ChannelFollowAdd\";\r\n    MessageType[MessageType[\"GuildDiscoveryDisqualified\"] = 14] = \"GuildDiscoveryDisqualified\";\r\n    MessageType[MessageType[\"GuildDiscoveryRequalified\"] = 15] = \"GuildDiscoveryRequalified\";\r\n    MessageType[MessageType[\"GuildDiscoveryGracePeriodInitialWarning\"] = 16] = \"GuildDiscoveryGracePeriodInitialWarning\";\r\n    MessageType[MessageType[\"GuildDiscoveryGracePeriodFinalWarning\"] = 17] = \"GuildDiscoveryGracePeriodFinalWarning\";\r\n    MessageType[MessageType[\"ThreadCreated\"] = 18] = \"ThreadCreated\";\r\n    MessageType[MessageType[\"Reply\"] = 19] = \"Reply\";\r\n    MessageType[MessageType[\"ApplicationCommand\"] = 20] = \"ApplicationCommand\";\r\n    MessageType[MessageType[\"ThreadStarterMessage\"] = 21] = \"ThreadStarterMessage\";\r\n    MessageType[MessageType[\"GuildInviteReminder\"] = 22] = \"GuildInviteReminder\";\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-activity-types\r\n */\r\nvar MessageActivityType;\r\n(function (MessageActivityType) {\r\n    MessageActivityType[MessageActivityType[\"Join\"] = 1] = \"Join\";\r\n    MessageActivityType[MessageActivityType[\"Spectate\"] = 2] = \"Spectate\";\r\n    MessageActivityType[MessageActivityType[\"Listen\"] = 3] = \"Listen\";\r\n    MessageActivityType[MessageActivityType[\"JoinRequest\"] = 5] = \"JoinRequest\";\r\n})(MessageActivityType = exports.MessageActivityType || (exports.MessageActivityType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-flags\r\n */\r\nvar MessageFlags;\r\n(function (MessageFlags) {\r\n    /**\r\n     * This message has been published to subscribed channels (via Channel Following)\r\n     */\r\n    MessageFlags[MessageFlags[\"Crossposted\"] = 1] = \"Crossposted\";\r\n    /**\r\n     * This message originated from a message in another channel (via Channel Following)\r\n     */\r\n    MessageFlags[MessageFlags[\"IsCrosspost\"] = 2] = \"IsCrosspost\";\r\n    /**\r\n     * Do not include any embeds when serializing this message\r\n     */\r\n    MessageFlags[MessageFlags[\"SuppressEmbeds\"] = 4] = \"SuppressEmbeds\";\r\n    /**\r\n     * The source message for this crosspost has been deleted (via Channel Following)\r\n     */\r\n    MessageFlags[MessageFlags[\"SourceMessageDeleted\"] = 8] = \"SourceMessageDeleted\";\r\n    /**\r\n     * This message came from the urgent message system\r\n     */\r\n    MessageFlags[MessageFlags[\"Urgent\"] = 16] = \"Urgent\";\r\n    /**\r\n     * This message has an associated thread, which shares its id\r\n     */\r\n    MessageFlags[MessageFlags[\"HasThread\"] = 32] = \"HasThread\";\r\n    /**\r\n     * This message is only visible to the user who invoked the Interaction\r\n     */\r\n    MessageFlags[MessageFlags[\"Ephemeral\"] = 64] = \"Ephemeral\";\r\n    /**\r\n     * This message is an Interaction Response and the bot is \"thinking\"\r\n     */\r\n    MessageFlags[MessageFlags[\"Loading\"] = 128] = \"Loading\";\r\n})(MessageFlags = exports.MessageFlags || (exports.MessageFlags = {}));\r\nvar OverwriteType;\r\n(function (OverwriteType) {\r\n    OverwriteType[OverwriteType[\"Role\"] = 0] = \"Role\";\r\n    OverwriteType[OverwriteType[\"Member\"] = 1] = \"Member\";\r\n})(OverwriteType = exports.OverwriteType || (exports.OverwriteType = {}));\r\nvar ThreadAutoArchiveDuration;\r\n(function (ThreadAutoArchiveDuration) {\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneHour\"] = 60] = \"OneHour\";\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneDay\"] = 1440] = \"OneDay\";\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"ThreeDays\"] = 4320] = \"ThreeDays\";\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneWeek\"] = 10080] = \"OneWeek\";\r\n})(ThreadAutoArchiveDuration = exports.ThreadAutoArchiveDuration || (exports.ThreadAutoArchiveDuration = {}));\r\nvar ThreadMemberFlags;\r\n(function (ThreadMemberFlags) {\r\n})(ThreadMemberFlags = exports.ThreadMemberFlags || (exports.ThreadMemberFlags = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#embed-object-embed-types\r\n * @deprecated *Embed types should be considered deprecated and might be removed in a future API version*\r\n */\r\nvar EmbedType;\r\n(function (EmbedType) {\r\n    /**\r\n     * Generic embed rendered from embed attributes\r\n     */\r\n    EmbedType[\"Rich\"] = \"rich\";\r\n    /**\r\n     * Image embed\r\n     */\r\n    EmbedType[\"Image\"] = \"image\";\r\n    /**\r\n     * Video embed\r\n     */\r\n    EmbedType[\"Video\"] = \"video\";\r\n    /**\r\n     * Animated gif image embed rendered as a video embed\r\n     */\r\n    EmbedType[\"GIFV\"] = \"gifv\";\r\n    /**\r\n     * Article embed\r\n     */\r\n    EmbedType[\"Article\"] = \"article\";\r\n    /**\r\n     * Link embed\r\n     */\r\n    EmbedType[\"Link\"] = \"link\";\r\n})(EmbedType = exports.EmbedType || (exports.EmbedType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#allowed-mentions-object-allowed-mention-types\r\n */\r\nvar AllowedMentionsTypes;\r\n(function (AllowedMentionsTypes) {\r\n    /**\r\n     * Controls @everyone and @here mentions\r\n     */\r\n    AllowedMentionsTypes[\"Everyone\"] = \"everyone\";\r\n    /**\r\n     * Controls role mentions\r\n     */\r\n    AllowedMentionsTypes[\"Role\"] = \"roles\";\r\n    /**\r\n     * Controls user mentions\r\n     */\r\n    AllowedMentionsTypes[\"User\"] = \"users\";\r\n})(AllowedMentionsTypes = exports.AllowedMentionsTypes || (exports.AllowedMentionsTypes = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/message-components#component-types\r\n */\r\nvar ComponentType;\r\n(function (ComponentType) {\r\n    /**\r\n     * Action Row component\r\n     */\r\n    ComponentType[ComponentType[\"ActionRow\"] = 1] = \"ActionRow\";\r\n    /**\r\n     * Button component\r\n     */\r\n    ComponentType[ComponentType[\"Button\"] = 2] = \"Button\";\r\n    /**\r\n     * Select Menu component\r\n     */\r\n    ComponentType[ComponentType[\"SelectMenu\"] = 3] = \"SelectMenu\";\r\n})(ComponentType = exports.ComponentType || (exports.ComponentType = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/message-components#button-object-button-styles\r\n */\r\nvar ButtonStyle;\r\n(function (ButtonStyle) {\r\n    ButtonStyle[ButtonStyle[\"Primary\"] = 1] = \"Primary\";\r\n    ButtonStyle[ButtonStyle[\"Secondary\"] = 2] = \"Secondary\";\r\n    ButtonStyle[ButtonStyle[\"Success\"] = 3] = \"Success\";\r\n    ButtonStyle[ButtonStyle[\"Danger\"] = 4] = \"Danger\";\r\n    ButtonStyle[ButtonStyle[\"Link\"] = 5] = \"Link\";\r\n})(ButtonStyle = exports.ButtonStyle || (exports.ButtonStyle = {}));\r\n//# sourceMappingURL=channel.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/channel.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/emoji.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/emoji.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/emoji\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=emoji.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/emoji.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/gateway.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/gateway.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/gateway\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ActivityFlags = exports.ActivityType = exports.ActivityPlatform = exports.PresenceUpdateStatus = void 0;\r\nvar PresenceUpdateStatus;\r\n(function (PresenceUpdateStatus) {\r\n    PresenceUpdateStatus[\"Online\"] = \"online\";\r\n    PresenceUpdateStatus[\"DoNotDisturb\"] = \"dnd\";\r\n    PresenceUpdateStatus[\"Idle\"] = \"idle\";\r\n    /**\r\n     * Invisible and shown as offline\r\n     */\r\n    PresenceUpdateStatus[\"Invisible\"] = \"invisible\";\r\n    PresenceUpdateStatus[\"Offline\"] = \"offline\";\r\n})(PresenceUpdateStatus = exports.PresenceUpdateStatus || (exports.PresenceUpdateStatus = {}));\r\nvar ActivityPlatform;\r\n(function (ActivityPlatform) {\r\n    ActivityPlatform[\"Desktop\"] = \"desktop\";\r\n    ActivityPlatform[\"Samsung\"] = \"samsung\";\r\n    ActivityPlatform[\"Xbox\"] = \"xbox\";\r\n})(ActivityPlatform = exports.ActivityPlatform || (exports.ActivityPlatform = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#activity-object-activity-types\r\n */\r\nvar ActivityType;\r\n(function (ActivityType) {\r\n    /**\r\n     * Playing {game}\r\n     */\r\n    ActivityType[ActivityType[\"Game\"] = 0] = \"Game\";\r\n    /**\r\n     * Streaming {details}\r\n     */\r\n    ActivityType[ActivityType[\"Streaming\"] = 1] = \"Streaming\";\r\n    /**\r\n     * Listening to {name}\r\n     */\r\n    ActivityType[ActivityType[\"Listening\"] = 2] = \"Listening\";\r\n    /**\r\n     * Watching {details}\r\n     */\r\n    ActivityType[ActivityType[\"Watching\"] = 3] = \"Watching\";\r\n    /**\r\n     * {emoji} {details}\r\n     */\r\n    ActivityType[ActivityType[\"Custom\"] = 4] = \"Custom\";\r\n    /**\r\n     * Competing in {name}\r\n     */\r\n    ActivityType[ActivityType[\"Competing\"] = 5] = \"Competing\";\r\n})(ActivityType = exports.ActivityType || (exports.ActivityType = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#activity-object-activity-flags\r\n */\r\nvar ActivityFlags;\r\n(function (ActivityFlags) {\r\n    ActivityFlags[ActivityFlags[\"Instance\"] = 1] = \"Instance\";\r\n    ActivityFlags[ActivityFlags[\"Join\"] = 2] = \"Join\";\r\n    ActivityFlags[ActivityFlags[\"Spectate\"] = 4] = \"Spectate\";\r\n    ActivityFlags[ActivityFlags[\"JoinRequest\"] = 8] = \"JoinRequest\";\r\n    ActivityFlags[ActivityFlags[\"Sync\"] = 16] = \"Sync\";\r\n    ActivityFlags[ActivityFlags[\"Play\"] = 32] = \"Play\";\r\n})(ActivityFlags = exports.ActivityFlags || (exports.ActivityFlags = {}));\r\n//# sourceMappingURL=gateway.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/gateway.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/guild.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/guild.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/guild\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MembershipScreeningFieldType = exports.GuildWidgetStyle = exports.IntegrationExpireBehavior = exports.GuildFeature = exports.GuildSystemChannelFlags = exports.GuildPremiumTier = exports.GuildVerificationLevel = exports.GuildNSFWLevel = exports.GuildMFALevel = exports.GuildExplicitContentFilter = exports.GuildDefaultMessageNotifications = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level\r\n */\r\nvar GuildDefaultMessageNotifications;\r\n(function (GuildDefaultMessageNotifications) {\r\n    GuildDefaultMessageNotifications[GuildDefaultMessageNotifications[\"AllMessages\"] = 0] = \"AllMessages\";\r\n    GuildDefaultMessageNotifications[GuildDefaultMessageNotifications[\"OnlyMentions\"] = 1] = \"OnlyMentions\";\r\n})(GuildDefaultMessageNotifications = exports.GuildDefaultMessageNotifications || (exports.GuildDefaultMessageNotifications = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level\r\n */\r\nvar GuildExplicitContentFilter;\r\n(function (GuildExplicitContentFilter) {\r\n    GuildExplicitContentFilter[GuildExplicitContentFilter[\"Disabled\"] = 0] = \"Disabled\";\r\n    GuildExplicitContentFilter[GuildExplicitContentFilter[\"MembersWithoutRoles\"] = 1] = \"MembersWithoutRoles\";\r\n    GuildExplicitContentFilter[GuildExplicitContentFilter[\"AllMembers\"] = 2] = \"AllMembers\";\r\n})(GuildExplicitContentFilter = exports.GuildExplicitContentFilter || (exports.GuildExplicitContentFilter = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-mfa-level\r\n */\r\nvar GuildMFALevel;\r\n(function (GuildMFALevel) {\r\n    GuildMFALevel[GuildMFALevel[\"None\"] = 0] = \"None\";\r\n    GuildMFALevel[GuildMFALevel[\"Elevated\"] = 1] = \"Elevated\";\r\n})(GuildMFALevel = exports.GuildMFALevel || (exports.GuildMFALevel = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level\r\n */\r\nvar GuildNSFWLevel;\r\n(function (GuildNSFWLevel) {\r\n    GuildNSFWLevel[GuildNSFWLevel[\"Default\"] = 0] = \"Default\";\r\n    GuildNSFWLevel[GuildNSFWLevel[\"Explicit\"] = 1] = \"Explicit\";\r\n    GuildNSFWLevel[GuildNSFWLevel[\"Safe\"] = 2] = \"Safe\";\r\n    GuildNSFWLevel[GuildNSFWLevel[\"AgeRestricted\"] = 3] = \"AgeRestricted\";\r\n})(GuildNSFWLevel = exports.GuildNSFWLevel || (exports.GuildNSFWLevel = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-verification-level\r\n */\r\nvar GuildVerificationLevel;\r\n(function (GuildVerificationLevel) {\r\n    /**\r\n     * Unrestricted\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Must have verified email on account\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"Low\"] = 1] = \"Low\";\r\n    /**\r\n     * Must be registered on Discord for longer than 5 minutes\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"Medium\"] = 2] = \"Medium\";\r\n    /**\r\n     * Must be a member of the guild for longer than 10 minutes\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"High\"] = 3] = \"High\";\r\n    /**\r\n     * Must have a verified phone number\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"VeryHigh\"] = 4] = \"VeryHigh\";\r\n})(GuildVerificationLevel = exports.GuildVerificationLevel || (exports.GuildVerificationLevel = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-premium-tier\r\n */\r\nvar GuildPremiumTier;\r\n(function (GuildPremiumTier) {\r\n    GuildPremiumTier[GuildPremiumTier[\"None\"] = 0] = \"None\";\r\n    GuildPremiumTier[GuildPremiumTier[\"Tier1\"] = 1] = \"Tier1\";\r\n    GuildPremiumTier[GuildPremiumTier[\"Tier2\"] = 2] = \"Tier2\";\r\n    GuildPremiumTier[GuildPremiumTier[\"Tier3\"] = 3] = \"Tier3\";\r\n})(GuildPremiumTier = exports.GuildPremiumTier || (exports.GuildPremiumTier = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags\r\n */\r\nvar GuildSystemChannelFlags;\r\n(function (GuildSystemChannelFlags) {\r\n    /**\r\n     * Suppress member join notifications\r\n     */\r\n    GuildSystemChannelFlags[GuildSystemChannelFlags[\"SuppressJoinNotifications\"] = 1] = \"SuppressJoinNotifications\";\r\n    /**\r\n     * Suppress server boost notifications\r\n     */\r\n    GuildSystemChannelFlags[GuildSystemChannelFlags[\"SuppressPremiumSubscriptions\"] = 2] = \"SuppressPremiumSubscriptions\";\r\n    /**\r\n     * Suppress server setup tips\r\n     */\r\n    GuildSystemChannelFlags[GuildSystemChannelFlags[\"SuppressGuildReminderNotifications\"] = 4] = \"SuppressGuildReminderNotifications\";\r\n})(GuildSystemChannelFlags = exports.GuildSystemChannelFlags || (exports.GuildSystemChannelFlags = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-guild-features\r\n */\r\nvar GuildFeature;\r\n(function (GuildFeature) {\r\n    /**\r\n     * Guild has access to set an animated guild icon\r\n     */\r\n    GuildFeature[\"AnimatedIcon\"] = \"ANIMATED_ICON\";\r\n    /**\r\n     * Guild has access to set a guild banner image\r\n     */\r\n    GuildFeature[\"Banner\"] = \"BANNER\";\r\n    /**\r\n     * Guild has access to use commerce features (i.e. create store channels)\r\n     */\r\n    GuildFeature[\"Commerce\"] = \"COMMERCE\";\r\n    /**\r\n     * Guild can enable welcome screen, Membership Screening and discovery, and receives community updates\r\n     */\r\n    GuildFeature[\"Community\"] = \"COMMUNITY\";\r\n    /**\r\n     * Guild is able to be discovered in the directory\r\n     */\r\n    GuildFeature[\"Discoverable\"] = \"DISCOVERABLE\";\r\n    /**\r\n     * Guild is able to be featured in the directory\r\n     */\r\n    GuildFeature[\"Featurable\"] = \"FEATURABLE\";\r\n    /**\r\n     * Guild has access to set an invite splash background\r\n     */\r\n    GuildFeature[\"InviteSplash\"] = \"INVITE_SPLASH\";\r\n    /**\r\n     * Guild has access to create news channels\r\n     */\r\n    GuildFeature[\"News\"] = \"NEWS\";\r\n    /**\r\n     * Guild is partnered\r\n     */\r\n    GuildFeature[\"Partnered\"] = \"PARTNERED\";\r\n    GuildFeature[\"RelayEnabled\"] = \"RELAY_ENABLED\";\r\n    /**\r\n     * Guild has access to set a vanity URL\r\n     */\r\n    GuildFeature[\"VanityURL\"] = \"VANITY_URL\";\r\n    /**\r\n     * Guild is verified\r\n     */\r\n    GuildFeature[\"Verified\"] = \"VERIFIED\";\r\n    /**\r\n     * Guild has access to set 384kbps bitrate in voice (previously VIP voice servers)\r\n     */\r\n    GuildFeature[\"VIPRegions\"] = \"VIP_REGIONS\";\r\n    /**\r\n     * Guild has enabled the welcome screen\r\n     */\r\n    GuildFeature[\"WelcomeScreenEnabled\"] = \"WELCOME_SCREEN_ENABLED\";\r\n    /**\r\n     * Guild has enabled Membership Screening\r\n     */\r\n    GuildFeature[\"MemberVerificationGateEnabled\"] = \"MEMBER_VERIFICATION_GATE_ENABLED\";\r\n    /**\r\n     * Guild can be previewed before joining via Membership Screening or the directory\r\n     */\r\n    GuildFeature[\"PreviewEnabled\"] = \"PREVIEW_ENABLED\";\r\n    /**\r\n     * Guild has enabled ticketed events\r\n     */\r\n    GuildFeature[\"TicketedEventsEnabled\"] = \"TICKETED_EVENTS_ENABLED\";\r\n    /**\r\n     * Guild has enabled monetization\r\n     */\r\n    GuildFeature[\"MonetizationEnabled\"] = \"MONETIZATION_ENABLED\";\r\n    /**\r\n     * Guild has increased custom sticker slots\r\n     */\r\n    GuildFeature[\"MoreStickers\"] = \"MORE_STICKERS\";\r\n    /**\r\n     * Guild has access to the three day archive time for threads\r\n     */\r\n    GuildFeature[\"ThreeDayThreadArchive\"] = \"THREE_DAY_THREAD_ARCHIVE\";\r\n    /**\r\n     * Guild has access to the seven day archive time for threads\r\n     */\r\n    GuildFeature[\"SevenDayThreadArchive\"] = \"SEVEN_DAY_THREAD_ARCHIVE\";\r\n    /**\r\n     * Guild has access to create private threads\r\n     */\r\n    GuildFeature[\"PrivateThreads\"] = \"PRIVATE_THREADS\";\r\n})(GuildFeature = exports.GuildFeature || (exports.GuildFeature = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#integration-object-integration-expire-behaviors\r\n */\r\nvar IntegrationExpireBehavior;\r\n(function (IntegrationExpireBehavior) {\r\n    IntegrationExpireBehavior[IntegrationExpireBehavior[\"RemoveRole\"] = 0] = \"RemoveRole\";\r\n    IntegrationExpireBehavior[IntegrationExpireBehavior[\"Kick\"] = 1] = \"Kick\";\r\n})(IntegrationExpireBehavior = exports.IntegrationExpireBehavior || (exports.IntegrationExpireBehavior = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#get-guild-widget-image-widget-style-options\r\n */\r\nvar GuildWidgetStyle;\r\n(function (GuildWidgetStyle) {\r\n    /**\r\n     * Shield style widget with Discord icon and guild members online count\r\n     */\r\n    GuildWidgetStyle[\"Shield\"] = \"shield\";\r\n    /**\r\n     * Large image with guild icon, name and online count. \"POWERED BY DISCORD\" as the footer of the widget\r\n     */\r\n    GuildWidgetStyle[\"Banner1\"] = \"banner1\";\r\n    /**\r\n     * Smaller widget style with guild icon, name and online count. Split on the right with Discord logo\r\n     */\r\n    GuildWidgetStyle[\"Banner2\"] = \"banner2\";\r\n    /**\r\n     * Large image with guild icon, name and online count. In the footer, Discord logo on the left and \"Chat Now\" on the right\r\n     */\r\n    GuildWidgetStyle[\"Banner3\"] = \"banner3\";\r\n    /**\r\n     * Large Discord logo at the top of the widget. Guild icon, name and online count in the middle portion of the widget\r\n     * and a \"JOIN MY SERVER\" button at the bottom\r\n     */\r\n    GuildWidgetStyle[\"Banner4\"] = \"banner4\";\r\n})(GuildWidgetStyle = exports.GuildWidgetStyle || (exports.GuildWidgetStyle = {}));\r\nvar MembershipScreeningFieldType;\r\n(function (MembershipScreeningFieldType) {\r\n    /**\r\n     * Server Rules\r\n     */\r\n    MembershipScreeningFieldType[\"Terms\"] = \"TERMS\";\r\n})(MembershipScreeningFieldType = exports.MembershipScreeningFieldType || (exports.MembershipScreeningFieldType = {}));\r\n//# sourceMappingURL=guild.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/guild.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./application */ \"./node_modules/discord-api-types/payloads/v9/application.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./auditLog */ \"./node_modules/discord-api-types/payloads/v9/auditLog.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./channel */ \"./node_modules/discord-api-types/payloads/v9/channel.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./emoji */ \"./node_modules/discord-api-types/payloads/v9/emoji.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway */ \"./node_modules/discord-api-types/payloads/v9/gateway.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./guild */ \"./node_modules/discord-api-types/payloads/v9/guild.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interactions */ \"./node_modules/discord-api-types/payloads/v9/interactions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./invite */ \"./node_modules/discord-api-types/payloads/v9/invite.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./oauth2 */ \"./node_modules/discord-api-types/payloads/v9/oauth2.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./permissions */ \"./node_modules/discord-api-types/payloads/v9/permissions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./stageInstance */ \"./node_modules/discord-api-types/payloads/v9/stageInstance.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sticker */ \"./node_modules/discord-api-types/payloads/v9/sticker.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./teams */ \"./node_modules/discord-api-types/payloads/v9/teams.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./template */ \"./node_modules/discord-api-types/payloads/v9/template.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./user */ \"./node_modules/discord-api-types/payloads/v9/user.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./voice */ \"./node_modules/discord-api-types/payloads/v9/voice.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./webhook */ \"./node_modules/discord-api-types/payloads/v9/webhook.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/index.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/interactions.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/interactions.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./_interactions/base */ \"./node_modules/discord-api-types/payloads/v9/_interactions/base.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./_interactions/messageComponents */ \"./node_modules/discord-api-types/payloads/v9/_interactions/messageComponents.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./_interactions/ping */ \"./node_modules/discord-api-types/payloads/v9/_interactions/ping.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./_interactions/responses */ \"./node_modules/discord-api-types/payloads/v9/_interactions/responses.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./_interactions/slashCommands */ \"./node_modules/discord-api-types/payloads/v9/_interactions/slashCommands.js\"), exports);\r\n//# sourceMappingURL=interactions.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/interactions.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/invite.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/invite.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/invite\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InviteTargetType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/invite#invite-object-invite-target-types\r\n */\r\nvar InviteTargetType;\r\n(function (InviteTargetType) {\r\n    InviteTargetType[InviteTargetType[\"Stream\"] = 1] = \"Stream\";\r\n    InviteTargetType[InviteTargetType[\"EmbeddedApplication\"] = 2] = \"EmbeddedApplication\";\r\n})(InviteTargetType = exports.InviteTargetType || (exports.InviteTargetType = {}));\r\n//# sourceMappingURL=invite.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/invite.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/oauth2.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/oauth2.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/oauth2\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OAuth2Scopes = void 0;\r\nvar OAuth2Scopes;\r\n(function (OAuth2Scopes) {\r\n    /**\r\n     * For oauth2 bots, this puts the bot in the user's selected guild by default\r\n     */\r\n    OAuth2Scopes[\"Bot\"] = \"bot\";\r\n    /**\r\n     * Allows [/users/@me/connections](https://discord.com/developers/docs/resources/user#get-user-connections)\r\n     * to return linked third-party accounts\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-user-connections\r\n     */\r\n    OAuth2Scopes[\"Connections\"] = \"connections\";\r\n    /**\r\n     * Enables [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) to return an `email`\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-current-user\r\n     */\r\n    OAuth2Scopes[\"Email\"] = \"email\";\r\n    /**\r\n     * Allows [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) without `email`\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-current-user\r\n     */\r\n    OAuth2Scopes[\"Identify\"] = \"identify\";\r\n    /**\r\n     * Allows [/users/@me/guilds](https://discord.com/developers/docs/resources/user#get-current-user-guilds)\r\n     * to return basic information about all of a user's guilds\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-current-user-guilds\r\n     */\r\n    OAuth2Scopes[\"Guilds\"] = \"guilds\";\r\n    /**\r\n     * Allows [/guilds/{guild.id}/members/{user.id}](https://discord.com/developers/docs/resources/guild#add-guild-member)\r\n     * to be used for joining users to a guild\r\n     *\r\n     * See https://discord.com/developers/docs/resources/guild#add-guild-member\r\n     */\r\n    OAuth2Scopes[\"GuildsJoin\"] = \"guilds.join\";\r\n    /**\r\n     * Allows your app to join users to a group dm\r\n     *\r\n     * See https://discord.com/developers/docs/resources/channel#group-dm-add-recipient\r\n     */\r\n    OAuth2Scopes[\"GroupDMJoins\"] = \"gdm.join\";\r\n    /**\r\n     * For local rpc server api access, this allows you to read messages from all client channels\r\n     * (otherwise restricted to channels/guilds your app creates)\r\n     */\r\n    OAuth2Scopes[\"MessagesRead\"] = \"messages.read\";\r\n    /**\r\n     * For local rpc server access, this allows you to control a user's local Discord client - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"RPC\"] = \"rpc\";\r\n    /**\r\n     * For local rpc server api access, this allows you to receive notifications pushed out to the user - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"RPCNotificationsRead\"] = \"rpc.notifications.read\";\r\n    /**\r\n     * This generates a webhook that is returned in the oauth token response for authorization code grants\r\n     */\r\n    OAuth2Scopes[\"WebhookIncoming\"] = \"webhook.incoming\";\r\n    /**\r\n     * Allows your app to upload/update builds for a user's applications - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"ApplicationsBuildsUpload\"] = \"applications.builds.upload\";\r\n    /**\r\n     * Allows your app to read build data for a user's applications\r\n     */\r\n    OAuth2Scopes[\"ApplicationsBuildsRead\"] = \"applications.builds.read\";\r\n    /**\r\n     * Allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications\r\n     */\r\n    OAuth2Scopes[\"ApplicationsStoreUpdate\"] = \"applications.store.update\";\r\n    /**\r\n     * Allows your app to read entitlements for a user's applications\r\n     */\r\n    OAuth2Scopes[\"ApplicationsEntitlements\"] = \"applications.entitlements\";\r\n    /**\r\n     * Allows your app to know a user's friends and implicit relationships - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"RelationshipsRead\"] = \"relationships.read\";\r\n    /**\r\n     * Allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"ActivitiesRead\"] = \"activities.read\";\r\n    /**\r\n     * Allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)\r\n     *\r\n     * See https://discord.com/developers/docs/game-sdk/activities\r\n     */\r\n    OAuth2Scopes[\"ActivitiesWrite\"] = \"activities.write\";\r\n    /**\r\n     * Allows your app to use Slash Commands in a guild\r\n     *\r\n     * See https://discord.com/developers/docs/interactions/slash-commands\r\n     */\r\n    OAuth2Scopes[\"ApplicationsCommands\"] = \"applications.commands\";\r\n    /**\r\n     * Allows your app to update its Slash Commands via this bearer token - client credentials grant only\r\n     *\r\n     * See https://discord.com/developers/docs/interactions/slash-commands\r\n     */\r\n    OAuth2Scopes[\"ApplicationsCommandsUpdate\"] = \"applications.commands.update\";\r\n})(OAuth2Scopes = exports.OAuth2Scopes || (exports.OAuth2Scopes = {}));\r\n//# sourceMappingURL=oauth2.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/oauth2.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/permissions.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/permissions.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/permissions\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PermissionFlagsBits = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags\r\n *\r\n * These flags are exported as `BigInt`s and NOT numbers. Wrapping them in `Number()`\r\n * may cause issues, try to use BigInts as much as possible or modules that can\r\n * replicate them in some way\r\n */\r\nexports.PermissionFlagsBits = {\r\n    CreateInstantInvite: 1n << 0n,\r\n    KickMembers: 1n << 1n,\r\n    BanMembers: 1n << 2n,\r\n    Administrator: 1n << 3n,\r\n    ManageChannels: 1n << 4n,\r\n    ManageGuild: 1n << 5n,\r\n    AddReactions: 1n << 6n,\r\n    ViewAuditLog: 1n << 7n,\r\n    PrioritySpeaker: 1n << 8n,\r\n    Stream: 1n << 9n,\r\n    ViewChannel: 1n << 10n,\r\n    SendMessages: 1n << 11n,\r\n    SendTTSMessages: 1n << 12n,\r\n    ManageMessages: 1n << 13n,\r\n    EmbedLinks: 1n << 14n,\r\n    AttachFiles: 1n << 15n,\r\n    ReadMessageHistory: 1n << 16n,\r\n    MentionEveryone: 1n << 17n,\r\n    UseExternalEmojis: 1n << 18n,\r\n    ViewGuildInsights: 1n << 19n,\r\n    Connect: 1n << 20n,\r\n    Speak: 1n << 21n,\r\n    MuteMembers: 1n << 22n,\r\n    DeafenMembers: 1n << 23n,\r\n    MoveMembers: 1n << 24n,\r\n    UseVAD: 1n << 25n,\r\n    ChangeNickname: 1n << 26n,\r\n    ManageNicknames: 1n << 27n,\r\n    ManageRoles: 1n << 28n,\r\n    ManageWebhooks: 1n << 29n,\r\n    ManageEmojisAndStickers: 1n << 30n,\r\n    UseSlashCommands: 1n << 31n,\r\n    RequestToSpeak: 1n << 32n,\r\n    ManageThreads: 1n << 34n,\r\n    UsePublicThreads: 1n << 35n,\r\n    UsePrivateThreads: 1n << 36n,\r\n    UseExternalStickers: 1n << 37n,\r\n};\r\n/**\r\n * Freeze the object of bits, preventing any modifications to it\r\n * @internal\r\n */\r\nObject.freeze(exports.PermissionFlagsBits);\r\n//# sourceMappingURL=permissions.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/permissions.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/stageInstance.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/stageInstance.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StageInstancePrivacyLevel = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/stage-instance#stage-instance-object-privacy-level\r\n */\r\nvar StageInstancePrivacyLevel;\r\n(function (StageInstancePrivacyLevel) {\r\n    /**\r\n     * The stage instance is visible publicly, such as on stage discovery\r\n     */\r\n    StageInstancePrivacyLevel[StageInstancePrivacyLevel[\"Public\"] = 1] = \"Public\";\r\n    /**\r\n     * The stage instance is visible to only guild members\r\n     */\r\n    StageInstancePrivacyLevel[StageInstancePrivacyLevel[\"GuildOnly\"] = 2] = \"GuildOnly\";\r\n})(StageInstancePrivacyLevel = exports.StageInstancePrivacyLevel || (exports.StageInstancePrivacyLevel = {}));\r\n//# sourceMappingURL=stageInstance.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/stageInstance.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/sticker.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/sticker.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/sticker\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StickerFormatType = exports.StickerType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types\r\n */\r\nvar StickerType;\r\n(function (StickerType) {\r\n    /**\r\n     * An official sticker in a pack, part of Nitro or in a removed purchasable pack\r\n     */\r\n    StickerType[StickerType[\"Standard\"] = 1] = \"Standard\";\r\n    /**\r\n     * A sticker uploaded to a Boosted guild for the guild's members\r\n     */\r\n    StickerType[StickerType[\"Guild\"] = 2] = \"Guild\";\r\n})(StickerType = exports.StickerType || (exports.StickerType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types\r\n */\r\nvar StickerFormatType;\r\n(function (StickerFormatType) {\r\n    StickerFormatType[StickerFormatType[\"PNG\"] = 1] = \"PNG\";\r\n    StickerFormatType[StickerFormatType[\"APNG\"] = 2] = \"APNG\";\r\n    StickerFormatType[StickerFormatType[\"Lottie\"] = 3] = \"Lottie\";\r\n})(StickerFormatType = exports.StickerFormatType || (exports.StickerFormatType = {}));\r\n//# sourceMappingURL=sticker.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/sticker.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/teams.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/teams.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/teams\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TeamMemberMembershipState = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum\r\n */\r\nvar TeamMemberMembershipState;\r\n(function (TeamMemberMembershipState) {\r\n    TeamMemberMembershipState[TeamMemberMembershipState[\"Invited\"] = 1] = \"Invited\";\r\n    TeamMemberMembershipState[TeamMemberMembershipState[\"Accepted\"] = 2] = \"Accepted\";\r\n})(TeamMemberMembershipState = exports.TeamMemberMembershipState || (exports.TeamMemberMembershipState = {}));\r\n//# sourceMappingURL=teams.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/teams.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/template.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/template.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/template\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=template.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/template.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/user.js":
/*!************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/user.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/user\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConnectionVisibility = exports.UserPremiumType = exports.UserFlags = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/user#user-object-user-flags\r\n */\r\nvar UserFlags;\r\n(function (UserFlags) {\r\n    UserFlags[UserFlags[\"None\"] = 0] = \"None\";\r\n    UserFlags[UserFlags[\"DiscordEmployee\"] = 1] = \"DiscordEmployee\";\r\n    UserFlags[UserFlags[\"PartneredServerOwner\"] = 2] = \"PartneredServerOwner\";\r\n    UserFlags[UserFlags[\"DiscordHypeSquadEvents\"] = 4] = \"DiscordHypeSquadEvents\";\r\n    UserFlags[UserFlags[\"BugHunterLevel1\"] = 8] = \"BugHunterLevel1\";\r\n    UserFlags[UserFlags[\"HypeSquadHouseBravery\"] = 64] = \"HypeSquadHouseBravery\";\r\n    UserFlags[UserFlags[\"HypeSquadHouseBrilliance\"] = 128] = \"HypeSquadHouseBrilliance\";\r\n    UserFlags[UserFlags[\"HypeSquadHouseBalance\"] = 256] = \"HypeSquadHouseBalance\";\r\n    UserFlags[UserFlags[\"EarlySupporter\"] = 512] = \"EarlySupporter\";\r\n    UserFlags[UserFlags[\"TeamUser\"] = 1024] = \"TeamUser\";\r\n    UserFlags[UserFlags[\"BugHunterLevel2\"] = 16384] = \"BugHunterLevel2\";\r\n    UserFlags[UserFlags[\"VerifiedBot\"] = 65536] = \"VerifiedBot\";\r\n    UserFlags[UserFlags[\"EarlyVerifiedBotDeveloper\"] = 131072] = \"EarlyVerifiedBotDeveloper\";\r\n    UserFlags[UserFlags[\"DiscordCertifiedModerator\"] = 262144] = \"DiscordCertifiedModerator\";\r\n})(UserFlags = exports.UserFlags || (exports.UserFlags = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/user#user-object-premium-types\r\n */\r\nvar UserPremiumType;\r\n(function (UserPremiumType) {\r\n    UserPremiumType[UserPremiumType[\"None\"] = 0] = \"None\";\r\n    UserPremiumType[UserPremiumType[\"NitroClassic\"] = 1] = \"NitroClassic\";\r\n    UserPremiumType[UserPremiumType[\"Nitro\"] = 2] = \"Nitro\";\r\n})(UserPremiumType = exports.UserPremiumType || (exports.UserPremiumType = {}));\r\nvar ConnectionVisibility;\r\n(function (ConnectionVisibility) {\r\n    /**\r\n     * Invisible to everyone except the user themselves\r\n     */\r\n    ConnectionVisibility[ConnectionVisibility[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Visible to everyone\r\n     */\r\n    ConnectionVisibility[ConnectionVisibility[\"Everyone\"] = 1] = \"Everyone\";\r\n})(ConnectionVisibility = exports.ConnectionVisibility || (exports.ConnectionVisibility = {}));\r\n//# sourceMappingURL=user.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/user.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/voice.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/voice.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/voice\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=voice.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/voice.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/payloads/v9/webhook.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord-api-types/payloads/v9/webhook.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/webhook\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebhookType = void 0;\r\nvar WebhookType;\r\n(function (WebhookType) {\r\n    /**\r\n     * Incoming Webhooks can post messages to channels with a generated token\r\n     */\r\n    WebhookType[WebhookType[\"Incoming\"] = 1] = \"Incoming\";\r\n    /**\r\n     * Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels\r\n     */\r\n    WebhookType[WebhookType[\"ChannelFollower\"] = 2] = \"ChannelFollower\";\r\n    /**\r\n     * Application webhooks are webhooks used with Interactions\r\n     */\r\n    WebhookType[WebhookType[\"Application\"] = 3] = \"Application\";\r\n})(WebhookType = exports.WebhookType || (exports.WebhookType = {}));\r\n//# sourceMappingURL=webhook.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/payloads/v9/webhook.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/common.js":
/*!*******************************************************!*\
  !*** ./node_modules/discord-api-types/rest/common.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RESTJSONErrorCodes = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#json-json-error-codes\r\n */\r\nvar RESTJSONErrorCodes;\r\n(function (RESTJSONErrorCodes) {\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GeneralError\"] = 0] = \"GeneralError\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownAccount\"] = 10001] = \"UnknownAccount\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownApplication\"] = 10002] = \"UnknownApplication\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownChannel\"] = 10003] = \"UnknownChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuild\"] = 10004] = \"UnknownGuild\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownIntegration\"] = 10005] = \"UnknownIntegration\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownInvite\"] = 10006] = \"UnknownInvite\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownMember\"] = 10007] = \"UnknownMember\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownMessage\"] = 10008] = \"UnknownMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownPermissionOverwrite\"] = 10009] = \"UnknownPermissionOverwrite\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownProvider\"] = 10010] = \"UnknownProvider\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownRole\"] = 10011] = \"UnknownRole\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownToken\"] = 10012] = \"UnknownToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownUser\"] = 10013] = \"UnknownUser\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownEmoji\"] = 10014] = \"UnknownEmoji\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownWebhook\"] = 10015] = \"UnknownWebhook\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownWebhookService\"] = 10016] = \"UnknownWebhookService\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownSession\"] = 10020] = \"UnknownSession\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownBan\"] = 10026] = \"UnknownBan\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownSKU\"] = 10027] = \"UnknownSKU\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownStoreListing\"] = 10028] = \"UnknownStoreListing\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownEntitlement\"] = 10029] = \"UnknownEntitlement\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownBuild\"] = 10030] = \"UnknownBuild\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownLobby\"] = 10031] = \"UnknownLobby\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownBranch\"] = 10032] = \"UnknownBranch\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownStoreDirectoryLayout\"] = 10033] = \"UnknownStoreDirectoryLayout\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownRedistributable\"] = 10036] = \"UnknownRedistributable\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGiftCode\"] = 10038] = \"UnknownGiftCode\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuildTemplate\"] = 10057] = \"UnknownGuildTemplate\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownDiscoverableServerCategory\"] = 10059] = \"UnknownDiscoverableServerCategory\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownSticker\"] = 10060] = \"UnknownSticker\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownInteraction\"] = 10062] = \"UnknownInteraction\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownApplicationCommand\"] = 10063] = \"UnknownApplicationCommand\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownApplicationCommandPermissions\"] = 10066] = \"UnknownApplicationCommandPermissions\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownStageInstance\"] = 10067] = \"UnknownStageInstance\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuildMemberVerificationForm\"] = 10068] = \"UnknownGuildMemberVerificationForm\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuildWelcomeScreen\"] = 10069] = \"UnknownGuildWelcomeScreen\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"BotsCannotUseThisEndpoint\"] = 20001] = \"BotsCannotUseThisEndpoint\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OnlyBotsCanUseThisEndpoint\"] = 20002] = \"OnlyBotsCanUseThisEndpoint\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ExplicitContentCannotBeSentToTheDesiredRecipient\"] = 20009] = \"ExplicitContentCannotBeSentToTheDesiredRecipient\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"NotAuthorizedToPerformThisActionOnThisApplication\"] = 20012] = \"NotAuthorizedToPerformThisActionOnThisApplication\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ActionCannotBePerformedDueToSlowmodeRateLimit\"] = 20016] = \"ActionCannotBePerformedDueToSlowmodeRateLimit\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OnlyTheOwnerOfThisAccountCanPerformThisAction\"] = 20018] = \"OnlyTheOwnerOfThisAccountCanPerformThisAction\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"AnnouncementEditLimitExceeded\"] = 20022] = \"AnnouncementEditLimitExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ChannelSendRateLimit\"] = 20028] = \"ChannelSendRateLimit\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StageTopicServerNameServerDescriptionOrChannelNamesContainDisallowedWords\"] = 20031] = \"StageTopicServerNameServerDescriptionOrChannelNamesContainDisallowedWords\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GuildPremiumSubscriptionLevelTooLow\"] = 20035] = \"GuildPremiumSubscriptionLevelTooLow\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfGuildsReached\"] = 30001] = \"MaximumNumberOfGuildsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfFriendsReached\"] = 30002] = \"MaximumNumberOfFriendsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfPinsReachedForTheChannel\"] = 30003] = \"MaximumNumberOfPinsReachedForTheChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfRecipientsReached\"] = 30004] = \"MaximumNumberOfRecipientsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfGuildRolesReached\"] = 30005] = \"MaximumNumberOfGuildRolesReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfWebhooksReached\"] = 30007] = \"MaximumNumberOfWebhooksReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfEmojisReached\"] = 30008] = \"MaximumNumberOfEmojisReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfReactionsReached\"] = 30010] = \"MaximumNumberOfReactionsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfGuildChannelsReached\"] = 30013] = \"MaximumNumberOfGuildChannelsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfAttachmentsInAMessageReached\"] = 30015] = \"MaximumNumberOfAttachmentsInAMessageReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfInvitesReached\"] = 30016] = \"MaximumNumberOfInvitesReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfAnimatedEmojisReached\"] = 30018] = \"MaximumNumberOfAnimatedEmojisReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfServerMembersReached\"] = 30019] = \"MaximumNumberOfServerMembersReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfServerCategoriesReached\"] = 30030] = \"MaximumNumberOfServerCategoriesReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GuildAlreadyHasTemplate\"] = 30031] = \"GuildAlreadyHasTemplate\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumThreadParticipants\"] = 30033] = \"MaximumThreadParticipants\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfNonGuildMemberBansHasBeenExceeded\"] = 30035] = \"MaximumNumberOfNonGuildMemberBansHasBeenExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfBanFetchesHasBeenReached\"] = 30037] = \"MaximumNumberOfBanFetchesHasBeenReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfStickersReached\"] = 30039] = \"MaximumNumberOfStickersReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"Unauthorized\"] = 40001] = \"Unauthorized\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"VerifyYourAccount\"] = 40002] = \"VerifyYourAccount\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OpeningDirectMessagesTooFast\"] = 40003] = \"OpeningDirectMessagesTooFast\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"RequestEntityTooLarge\"] = 40005] = \"RequestEntityTooLarge\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"FeatureTemporarilyDisabledServerSide\"] = 40006] = \"FeatureTemporarilyDisabledServerSide\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UserBannedFromThisGuild\"] = 40007] = \"UserBannedFromThisGuild\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"TargetUserIsNotConnectedToVoice\"] = 40032] = \"TargetUserIsNotConnectedToVoice\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ThisMessageWasAlreadyCrossposted\"] = 40033] = \"ThisMessageWasAlreadyCrossposted\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ApplicationCommandWithThatNameAlreadyExists\"] = 40041] = \"ApplicationCommandWithThatNameAlreadyExists\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MissingAccess\"] = 50001] = \"MissingAccess\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidAccountType\"] = 50002] = \"InvalidAccountType\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotExecuteActionOnDMChannel\"] = 50003] = \"CannotExecuteActionOnDMChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GuildWidgetDisabled\"] = 50004] = \"GuildWidgetDisabled\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotEditMessageAuthoredByAnotherUser\"] = 50005] = \"CannotEditMessageAuthoredByAnotherUser\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSendAnEmptyMessage\"] = 50006] = \"CannotSendAnEmptyMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSendMessagesToThisUser\"] = 50007] = \"CannotSendMessagesToThisUser\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSendMessagesInVoiceChannel\"] = 50008] = \"CannotSendMessagesInVoiceChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ChannelVerificationLevelTooHighForYouToGainAccess\"] = 50009] = \"ChannelVerificationLevelTooHighForYouToGainAccess\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OAuth2ApplicationDoesNotHaveBot\"] = 50010] = \"OAuth2ApplicationDoesNotHaveBot\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OAuth2ApplicationLimitReached\"] = 50011] = \"OAuth2ApplicationLimitReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidOAuth2State\"] = 50012] = \"InvalidOAuth2State\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MissingPermissions\"] = 50013] = \"MissingPermissions\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidToken\"] = 50014] = \"InvalidToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"NoteWasTooLong\"] = 50015] = \"NoteWasTooLong\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ProvidedTooFewOrTooManyMessagesToDelete\"] = 50016] = \"ProvidedTooFewOrTooManyMessagesToDelete\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MessageCanOnlyBePinnedInTheChannelItWasSentIn\"] = 50019] = \"MessageCanOnlyBePinnedInTheChannelItWasSentIn\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InviteCodeInvalidOrTaken\"] = 50020] = \"InviteCodeInvalidOrTaken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotExecuteActionOnSystemMessage\"] = 50021] = \"CannotExecuteActionOnSystemMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotExecuteActionOnThisChannelType\"] = 50024] = \"CannotExecuteActionOnThisChannelType\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidOAuth2AccessToken\"] = 50025] = \"InvalidOAuth2AccessToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidWebhookToken\"] = 50027] = \"InvalidWebhookToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidRole\"] = 50028] = \"InvalidRole\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidRecipients\"] = 50033] = \"InvalidRecipients\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OneOfTheMessagesProvidedWasTooOldForBulkDelete\"] = 50034] = \"OneOfTheMessagesProvidedWasTooOldForBulkDelete\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidFormBodyOrContentType\"] = 50035] = \"InvalidFormBodyOrContentType\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InviteAcceptedToGuildWithoutTheBotBeingIn\"] = 50036] = \"InviteAcceptedToGuildWithoutTheBotBeingIn\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidAPIVersion\"] = 50041] = \"InvalidAPIVersion\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"FileUploadedExceedsMaximumSize\"] = 50045] = \"FileUploadedExceedsMaximumSize\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidFileUploaded\"] = 50046] = \"InvalidFileUploaded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSelfRedeemThisGift\"] = 50070] = \"CannotSelfRedeemThisGift\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotDeleteChannelRequiredForCommunityGuilds\"] = 50074] = \"CannotDeleteChannelRequiredForCommunityGuilds\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidStickerSent\"] = 50081] = \"InvalidStickerSent\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidActionOnArchivedThread\"] = 50083] = \"InvalidActionOnArchivedThread\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidThreadNotificationSettings\"] = 50084] = \"InvalidThreadNotificationSettings\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ParameterEarlierThanCreation\"] = 50085] = \"ParameterEarlierThanCreation\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"TwoFactorAuthenticationIsRequired\"] = 60003] = \"TwoFactorAuthenticationIsRequired\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"NoUsersWithDiscordTagExist\"] = 80004] = \"NoUsersWithDiscordTagExist\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ReactionWasBlocked\"] = 90001] = \"ReactionWasBlocked\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"APIResourceOverloaded\"] = 130000] = \"APIResourceOverloaded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"TheStageIsAlreadyOpen\"] = 150006] = \"TheStageIsAlreadyOpen\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ThreadAlreadyCreatedForMessage\"] = 160004] = \"ThreadAlreadyCreatedForMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ThreadLocked\"] = 160005] = \"ThreadLocked\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumActiveThreads\"] = 160006] = \"MaximumActiveThreads\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumActiveAnnouncementThreads\"] = 160007] = \"MaximumActiveAnnouncementThreads\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidJSONForUploadedLottieFile\"] = 170001] = \"InvalidJSONForUploadedLottieFile\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UploadedLottiesCannotContainRasterizedImages\"] = 170002] = \"UploadedLottiesCannotContainRasterizedImages\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerMaximumFramerateExceeded\"] = 170003] = \"StickerMaximumFramerateExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerFrameCountExceedsMaximumOf1000Frames\"] = 170004] = \"StickerFrameCountExceedsMaximumOf1000Frames\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"LottieAnimationMaximumDimensionsExceeded\"] = 170005] = \"LottieAnimationMaximumDimensionsExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerFramerateIsTooSmallOrTooLarge\"] = 170006] = \"StickerFramerateIsTooSmallOrTooLarge\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerAnimationDurationExceedsMaximumOf5Seconds\"] = 170007] = \"StickerAnimationDurationExceedsMaximumOf5Seconds\";\r\n})(RESTJSONErrorCodes = exports.RESTJSONErrorCodes || (exports.RESTJSONErrorCodes = {}));\r\n//# sourceMappingURL=common.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/common.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/auditLog.js":
/*!************************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/auditLog.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=auditLog.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/auditLog.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/channel.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/channel.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=channel.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/channel.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/emoji.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/emoji.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=emoji.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/emoji.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/gateway.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/gateway.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=gateway.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/gateway.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/guild.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/guild.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=guild.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/guild.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OAuth2Routes = exports.RouteBases = exports.Routes = exports.APIVersion = void 0;\r\n__exportStar(__webpack_require__(/*! ../common */ \"./node_modules/discord-api-types/rest/common.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./auditLog */ \"./node_modules/discord-api-types/rest/v9/auditLog.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./channel */ \"./node_modules/discord-api-types/rest/v9/channel.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./emoji */ \"./node_modules/discord-api-types/rest/v9/emoji.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway */ \"./node_modules/discord-api-types/rest/v9/gateway.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./guild */ \"./node_modules/discord-api-types/rest/v9/guild.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interactions */ \"./node_modules/discord-api-types/rest/v9/interactions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./invite */ \"./node_modules/discord-api-types/rest/v9/invite.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./oauth2 */ \"./node_modules/discord-api-types/rest/v9/oauth2.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./stageInstance */ \"./node_modules/discord-api-types/rest/v9/stageInstance.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sticker */ \"./node_modules/discord-api-types/rest/v9/sticker.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./template */ \"./node_modules/discord-api-types/rest/v9/template.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./user */ \"./node_modules/discord-api-types/rest/v9/user.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./voice */ \"./node_modules/discord-api-types/rest/v9/voice.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./webhook */ \"./node_modules/discord-api-types/rest/v9/webhook.js\"), exports);\r\nexports.APIVersion = '9';\r\nexports.Routes = {\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/audit-logs`\r\n     */\r\n    guildAuditLog(guildId) {\r\n        return `/guilds/${guildId}/audit-logs`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{channel.id}`\r\n     * - PATCH  `/channels/{channel.id}`\r\n     * - DELETE `/channels/{channel.id}`\r\n     */\r\n    channel(channelId) {\r\n        return `/channels/${channelId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/channels/{channel.id}/messages`\r\n     * - POST `/channels/{channel.id}/messages`\r\n     */\r\n    channelMessages(channelId) {\r\n        return `/channels/${channelId}/messages`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{channel.id}/messages/{message.id}`\r\n     * - PATCH  `/channels/{channel.id}/messages/{message.id}`\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}`\r\n     */\r\n    channelMessage(channelId, messageId) {\r\n        return `/channels/${channelId}/messages/${messageId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/messages/{message.id}/crosspost`\r\n     */\r\n    channelMessageCrosspost(channelId, messageId) {\r\n        return `/channels/${channelId}/messages/${messageId}/crosspost`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/@me`\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/@me`\r\n     *\r\n     * **Note**: You need to URL encode the emoji yourself\r\n     */\r\n    channelMessageOwnReaction(channelId, messageId, emoji) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions/${emoji}/@me`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/{user.id}`\r\n     *\r\n     * **Note**: You need to URL encode the emoji yourself\r\n     */\r\n    channelMessageUserReaction(channelId, messageId, emoji, userId) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions/${emoji}/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}`\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}`\r\n     *\r\n     * **Note**: You need to URL encode the emoji yourself\r\n     */\r\n    channelMessageReaction(channelId, messageId, emoji) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions/${emoji}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions`\r\n     */\r\n    channelMessageAllReactions(channelId, messageId) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/messages/bulk-delete`\r\n     */\r\n    channelBulkDelete(channelId) {\r\n        return `/channels/${channelId}/messages/bulk-delete`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/permissions/{overwrite.id}`\r\n     * - DELETE `/channels/{channel.id}/permissions/{overwrite.id}`\r\n     */\r\n    channelPermission(channelId, overwriteId) {\r\n        return `/channels/${channelId}/permissions/${overwriteId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/channels/{channel.id}/invites`\r\n     * - POST `/channels/{channel.id}/invites`\r\n     */\r\n    channelInvites(channelId) {\r\n        return `/channels/${channelId}/invites`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/followers`\r\n     */\r\n    channelFollowers(channelId) {\r\n        return `/channels/${channelId}/followers`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/typing`\r\n     */\r\n    channelTyping(channelId) {\r\n        return `/channels/${channelId}/typing`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/channels/{channel.id}/pins`\r\n     */\r\n    channelPins(channelId) {\r\n        return `/channels/${channelId}/pins`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/pins/{message.id}`\r\n     * - DELETE `/channels/{channel.id}/pins/{message.id}`\r\n     */\r\n    channelPin(channelId, messageId) {\r\n        return `/channels/${channelId}/pins/${messageId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/recipients/{user.id}`\r\n     * - DELETE `/channels/{channel.id}/recipients/{user.id}`\r\n     */\r\n    channelRecipient(channelId, userId) {\r\n        return `/channels/${channelId}/recipients/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/emojis`\r\n     * - POST `/guilds/{guild.id}/emojis`\r\n     */\r\n    guildEmojis(guildId) {\r\n        return `/guilds/${guildId}/emojis`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/emojis/{emoji.id}`\r\n     * - PATCH  `/guilds/{guild.id}/emojis/{emoji.id}`\r\n     * - DELETE `/guilds/{guild.id}/emojis/{emoji.id}`\r\n     */\r\n    guildEmoji(guildId, emojiId) {\r\n        return `/guilds/${guildId}/emojis/${emojiId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/guilds`\r\n     */\r\n    guilds() {\r\n        return '/guilds';\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}`\r\n     * - PATCH  `/guilds/{guild.id}`\r\n     * - DELETE `/guilds/{guild.id}`\r\n     */\r\n    guild(guildId) {\r\n        return `/guilds/${guildId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/preview`\r\n     */\r\n    guildPreview(guildId) {\r\n        return `/guilds/${guildId}/preview`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/channels`\r\n     * - POST  `/guilds/{guild.id}/channels`\r\n     * - PATCH `/guilds/{guild.id}/channels`\r\n     */\r\n    guildChannels(guildId) {\r\n        return `/guilds/${guildId}/channels`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/members/{user.id}`\r\n     * - PUT    `/guilds/{guild.id}/members/{user.id}`\r\n     * - PATCH  `/guilds/{guild.id}/members/{user.id}`\r\n     * - DELETE `/guilds/{guild.id}/members/{user.id}`\r\n     */\r\n    guildMember(guildId, userId) {\r\n        return `/guilds/${guildId}/members/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/members`\r\n     */\r\n    guildMembers(guildId) {\r\n        return `/guilds/${guildId}/members`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/members/search`\r\n     */\r\n    guildMembersSearch(guildId) {\r\n        return `/guilds/${guildId}/members/search`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PATCH `/guilds/{guild.id}/members/@me/nick`\r\n     */\r\n    guildCurrentMemberNickname(guildId) {\r\n        return `/guilds/${guildId}/members/@me/nick`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/guilds/{guild.id}/members/{user.id}/roles/{role.id}`\r\n     * - DELETE `/guilds/{guild.id}/members/{user.id}/roles/{role.id}`\r\n     */\r\n    guildMemberRole(guildId, memberId, roleId) {\r\n        return `/guilds/${guildId}/members/${memberId}/roles/${roleId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/bans`\r\n     */\r\n    guildBans(guildId) {\r\n        return `/guilds/${guildId}/bans`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/bans/{user.id}`\r\n     * - PUT    `/guilds/{guild.id}/bans/{user.id}`\r\n     * - DELETE `/guilds/{guild.id}/bans/{user.id}`\r\n     */\r\n    guildBan(guildId, userId) {\r\n        return `/guilds/${guildId}/bans/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/roles`\r\n     * - POST  `/guilds/{guild.id}/roles`\r\n     * - PATCH `/guilds/{guild.id}/roles`\r\n     */\r\n    guildRoles(guildId) {\r\n        return `/guilds/${guildId}/roles`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PATCH  `/guilds/{guild.id}/roles/{role.id}`\r\n     * - DELETE `/guilds/{guild.id}/roles/{role.id}`\r\n     */\r\n    guildRole(guildId, roleId) {\r\n        return `/guilds/${guildId}/roles/${roleId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/prune`\r\n     * - POST `/guilds/{guild.id}/prune`\r\n     */\r\n    guildPrune(guildId) {\r\n        return `/guilds/${guildId}/prune`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/regions`\r\n     */\r\n    guildVoiceRegions(guildId) {\r\n        return `/guilds/${guildId}/regions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/invites`\r\n     */\r\n    guildInvites(guildId) {\r\n        return `/guilds/${guildId}/invites`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/integrations`\r\n     */\r\n    guildIntegrations(guildId) {\r\n        return `/guilds/${guildId}/integrations`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/guilds/{guild.id}/integrations/{integration.id}`\r\n     */\r\n    guildIntegration(guildId, integrationId) {\r\n        return `/guilds/${guildId}/integrations/${integrationId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/widget`\r\n     * - PATCH `/guilds/{guild.id}/widget`\r\n     */\r\n    guildWidgetSettings(guildId) {\r\n        return `/guilds/${guildId}/widget`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/widget.json`\r\n     */\r\n    guildWidgetJSON(guildId) {\r\n        return `/guilds/${guildId}/widget.json`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/vanity-url`\r\n     */\r\n    guildVanityUrl(guildId) {\r\n        return `/guilds/${guildId}/vanity-url`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/widget.png`\r\n     */\r\n    guildWidgetImage(guildId) {\r\n        return `/guilds/${guildId}/widget.png`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/invites/{invite.code}`\r\n     * - DELETE `/invites/{invite.code}`\r\n     */\r\n    invite(code) {\r\n        return `/invites/${code}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/templates/{template.code}`\r\n     * - POST `/guilds/templates/{template.code}`\r\n     */\r\n    template(code) {\r\n        return `/guilds/templates/${code}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/templates`\r\n     * - POST `/guilds/{guild.id}/templates`\r\n     */\r\n    guildTemplates(guildId) {\r\n        return `/guilds/${guildId}/templates`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/guilds/{guild.id}/templates/{template.code}`\r\n     * - PATCH  `/guilds/{guild.id}/templates/{template.code}`\r\n     * - DELETE `/guilds/{guild.id}/templates/{template.code}`\r\n     */\r\n    guildTemplate(guildId, code) {\r\n        return `/guilds/${guildId}/templates/${code}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/threads`\r\n     * - POST `/channels/{channel.id}/messages/{message.id}/threads`\r\n     */\r\n    threads(parentId, messageId) {\r\n        const parts = ['', 'channels', parentId];\r\n        if (messageId)\r\n            parts.push('messages', messageId);\r\n        parts.push('threads');\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/threads/active`\r\n     */\r\n    guildActiveThreads(guildId) {\r\n        return `/guilds/${guildId}/threads/active`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/channels/{channel.id}/threads/active`\r\n     * \t (deprecated, use [List Active Guild Threads](https://discord.com/developers/docs/resources/guild#list-active-threads) instead.\r\n     * \t Will be removed in v10.)\r\n     * - GET `/channels/{channel.id}/threads/archived/public`\r\n     * - GET `/channels/{channel.id}/threads/archived/private`\r\n     */\r\n    channelThreads(channelId, archived) {\r\n        const parts = ['', 'channels', channelId, 'threads'];\r\n        if (archived)\r\n            parts.push('archived', archived);\r\n        else\r\n            parts.push('active');\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/channels/{channel.id}/users/@me/threads/archived/prviate`\r\n     */\r\n    channelJoinedArchivedThreads(channelId) {\r\n        return `/channels/${channelId}/users/@me/threads/archived/private`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{thread.id}/thread-members`\r\n     * - PUT    `/channels/{thread.id}/thread-members/@me`\r\n     * - PUT    `/channels/{thread.id}/thread-members/{user.id}`\r\n     * - DELETE `/channels/{thread.id}/thread-members/@me`\r\n     * - DELETE `/channels/{thread.id}/thread-members/{user.id}`\r\n     */\r\n    threadMembers(threadId, userId) {\r\n        const parts = ['', 'channels', threadId, 'thread-members'];\r\n        if (userId)\r\n            parts.push(userId);\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/users/@me`\r\n     * - GET   `/users/{user.id}`\r\n     * - PATCH `/users/@me`\r\n     *\r\n     * @param [userId='@me'] The user ID, defaulted to `@me`\r\n     */\r\n    user(userId = '@me') {\r\n        return `/users/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/users/@me/guilds`\r\n     */\r\n    userGuilds() {\r\n        return `/users/@me/guilds`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/users/@me/guilds/{guild.id}`\r\n     */\r\n    userGuild(guildId) {\r\n        return `/users/@me/guilds/${guildId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/users/@me/channels`\r\n     */\r\n    userChannels() {\r\n        return `/users/@me/channels`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/users/@me/connections`\r\n     */\r\n    userConnections() {\r\n        return `/users/@me/connections`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/voice/regions`\r\n     */\r\n    voiceRegions() {\r\n        return `/voice/regions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/channels/{channel.id}/webhooks`\r\n     * - POST `/channels/{channel.id}/webhooks`\r\n     */\r\n    channelWebhooks(channelId) {\r\n        return `/channels/${channelId}/webhooks`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/webhooks`\r\n     */\r\n    guildWebhooks(guildId) {\r\n        return `/guilds/${guildId}/webhooks`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/webhooks/{webhook.id}`\r\n     * - GET    `/webhooks/{webhook.id}/{webhook.token}`\r\n     * - PATCH  `/webhooks/{webhook.id}`\r\n     * - PATCH  `/webhooks/{webhook.id}/{webhook.token}`\r\n     * - DELETE `/webhooks/{webhook.id}`\r\n     * - DELETE `/webhooks/{webhook.id}/{webhook.token}`\r\n     * - POST   `/webhooks/{webhook.id}/{webhook.token}`\r\n     *\r\n     * - POST   `/webhooks/{application.id}/{interaction.token}`\r\n     */\r\n    webhook(webhookId, webhookToken) {\r\n        const parts = ['', 'webhooks', webhookId];\r\n        if (webhookToken)\r\n            parts.push(webhookToken);\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/webhooks/{webhook.id}/{webhook.token}/messages/@original`\r\n     * - GET    `/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}`\r\n     * - PATCH  `/webhooks/{webhook.id}/{webhook.token}/messages/@original`\r\n     * - PATCH  `/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}`\r\n     * - DELETE `/webhooks/{webhook.id}/{webhook.token}/messages/@original`\r\n     * - DELETE `/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}`\r\n     *\r\n     * - PATCH  `/webhooks/{application.id}/{interaction.token}/messages/@original`\r\n     * - PATCH  `/webhooks/{application.id}/{interaction.token}/messages/{message.id}`\r\n     * - DELETE `/webhooks/{application.id}/{interaction.token}/messages/{message.id}`\r\n     *\r\n     * @param [messageId='@original'] The message ID to change, defaulted to `@original`\r\n     */\r\n    webhookMessage(webhookId, webhookToken, messageId = '@original') {\r\n        return `/webhooks/${webhookId}/${webhookToken}/messages/${messageId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/webhooks/{webhook.id}/{webhook.token}/github`\r\n     * - POST `/webhooks/{webhook.id}/{webhook.token}/slack`\r\n     */\r\n    webhookPlatform(webhookId, webhookToken, platform) {\r\n        return `/webhooks/${webhookId}/${webhookToken}/${platform}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/gateway`\r\n     */\r\n    gateway() {\r\n        return `/gateway`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/gateway/bot`\r\n     */\r\n    gatewayBot() {\r\n        return `/gateway/bot`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/oauth2/applications/@me`\r\n     */\r\n    oauth2CurrentApplication() {\r\n        return `/oauth2/applications/@me`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/oauth2/@me`\r\n     */\r\n    oauth2CurrentAuthorization() {\r\n        return `/oauth2/@me`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/applications/{application.id}/commands`\r\n     * - PUT  `/applications/{application.id}/commands`\r\n     * - POST `/applications/{application.id}/commands`\r\n     */\r\n    applicationCommands(applicationId) {\r\n        return `/applications/${applicationId}/commands`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/applications/{application.id}/commands/{command.id}`\r\n     * - PATCH  `/applications/{application.id}/commands/{command.id}`\r\n     * - DELETE `/applications/{application.id}/commands/{command.id}`\r\n     */\r\n    applicationCommand(applicationId, commandId) {\r\n        return `/applications/${applicationId}/commands/${commandId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/applications/{application.id}/guilds/{guild.id}/commands`\r\n     * - PUT  `/applications/{application.id}/guilds/{guild.id}/commands`\r\n     * - POST `/applications/{application.id}/guilds/{guild.id}/commands`\r\n     */\r\n    applicationGuildCommands(applicationId, guildId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}`\r\n     * - PATCH  `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}`\r\n     * - DELETE `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}`\r\n     */\r\n    applicationGuildCommand(applicationId, guildId, commandId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands/${commandId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/interactions/{interaction.id}/{interaction.token}/callback`\r\n     */\r\n    interactionCallback(interactionId, interactionToken) {\r\n        return `/interactions/${interactionId}/${interactionToken}/callback`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/member-verification`\r\n     * - PATCH `/guilds/{guild.id}/member-verification`\r\n     */\r\n    guildMemberVerification(guildId) {\r\n        return `/guilds/${guildId}/member-verification`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PATCH `/guilds/{guild.id}/voice-states/@me`\r\n     * - PATCH `/guilds/{guild.id}/voice-states/{user.id}`\r\n     */\r\n    guildVoiceState(guildId, userId = '@me') {\r\n        return `/guilds/${guildId}/voice-states/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/applications/{application.id}/guilds/{guild.id}/commands/permissions`\r\n     * - PUT `/applications/{application.id}/guilds/{guild.id}/commands/permissions`\r\n     */\r\n    guildApplicationCommandsPermissions(applicationId, guildId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands/permissions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}/permissions`\r\n     * - PUT `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}/permissions`\r\n     */\r\n    applicationCommandPermissions(applicationId, guildId, commandId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands/${commandId}/permissions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/welcome-screen`\r\n     * - PATCH `/guilds/{guild.id}/welcome-screen`\r\n     */\r\n    guildWelcomeScreen(guildId) {\r\n        return `/guilds/${guildId}/welcome-screen`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/stage-instances`\r\n     */\r\n    stageInstances() {\r\n        return `/stage-instances`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/stage-instances/{channel.id}`\r\n     * - PATCH `/stage-instances/{channel.id}`\r\n     * - DELETE `/stage-instances/{channel.id}`\r\n     */\r\n    stageInstance(channelId) {\r\n        return `/stage-instances/${channelId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/stickers/{sticker.id}`\r\n     */\r\n    sticker(stickerId) {\r\n        return `/stickers/${stickerId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/sticker-packs`\r\n     */\r\n    nitroStickerPacks() {\r\n        return '/sticker-packs';\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/stickers`\r\n     * - POST `/guilds/{guild.id}/stickers`\r\n     */\r\n    guildStickers(guildId) {\r\n        return `/guilds/${guildId}/stickers`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/stickers/{sticker.id}`\r\n     * - PATCH  `/guilds/{guild.id}/stickers/{sticker.id}`\r\n     * - DELETE `/guilds/{guild.id}/stickers/{sticker.id}`\r\n     */\r\n    guildSticker(guildId, stickerId) {\r\n        return `/guilds/${guildId}/stickers/${stickerId}`;\r\n    },\r\n};\r\nexports.RouteBases = {\r\n    api: `https://discord.com/api/v${exports.APIVersion}`,\r\n    cdn: 'https://cdn.discordapp.com',\r\n    invite: 'https://discord.gg',\r\n    template: 'https://discord.new',\r\n    gift: 'https://discord.gift',\r\n};\r\n// Freeze bases object\r\nObject.freeze(exports.RouteBases);\r\nexports.OAuth2Routes = {\r\n    authorizationURL: `https://discord.com/api/v${exports.APIVersion}/oauth2/authorize`,\r\n    tokenURL: `https://discord.com/api/v${exports.APIVersion}/oauth2/token`,\r\n    /**\r\n     * See https://tools.ietf.org/html/rfc7009\r\n     */\r\n    tokenRevocationURL: `https://discord.com/api/v${exports.APIVersion}/oauth2/token/revoke`,\r\n};\r\n// Freeze OAuth2 route object\r\nObject.freeze(exports.OAuth2Routes);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/index.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/interactions.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/interactions.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=interactions.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/interactions.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/invite.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/invite.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=invite.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/invite.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/oauth2.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/oauth2.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=oauth2.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/oauth2.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/stageInstance.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/stageInstance.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=stageInstance.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/stageInstance.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/sticker.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/sticker.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=sticker.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/sticker.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/template.js":
/*!************************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/template.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=template.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/template.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/user.js":
/*!********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/user.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=user.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/user.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/voice.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/voice.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=voice.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/voice.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rest/v9/webhook.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord-api-types/rest/v9/webhook.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=webhook.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rest/v9/webhook.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/rpc/v9.js":
/*!**************************************************!*\
  !*** ./node_modules/discord-api-types/rpc/v9.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RPCCloseEventCodes = exports.RPCErrorCodes = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc-rpc-error-codes\r\n */\r\nvar RPCErrorCodes;\r\n(function (RPCErrorCodes) {\r\n    RPCErrorCodes[RPCErrorCodes[\"UnknownError\"] = 1000] = \"UnknownError\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidPayload\"] = 4000] = \"InvalidPayload\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidCommand\"] = 4002] = \"InvalidCommand\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidGuild\"] = 4003] = \"InvalidGuild\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidEvent\"] = 4004] = \"InvalidEvent\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidChannel\"] = 4005] = \"InvalidChannel\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidPermissions\"] = 4006] = \"InvalidPermissions\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidClientId\"] = 4007] = \"InvalidClientId\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidOrigin\"] = 4008] = \"InvalidOrigin\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidToken\"] = 4009] = \"InvalidToken\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidUser\"] = 4010] = \"InvalidUser\";\r\n    RPCErrorCodes[RPCErrorCodes[\"OAuth2Error\"] = 5000] = \"OAuth2Error\";\r\n    RPCErrorCodes[RPCErrorCodes[\"SelectChannelTimedOut\"] = 5001] = \"SelectChannelTimedOut\";\r\n    RPCErrorCodes[RPCErrorCodes[\"GetGuildTimedOut\"] = 5002] = \"GetGuildTimedOut\";\r\n    RPCErrorCodes[RPCErrorCodes[\"SelectVoiceForceRequired\"] = 5003] = \"SelectVoiceForceRequired\";\r\n    RPCErrorCodes[RPCErrorCodes[\"CaptureShortcutAlreadyListening\"] = 5004] = \"CaptureShortcutAlreadyListening\";\r\n})(RPCErrorCodes = exports.RPCErrorCodes || (exports.RPCErrorCodes = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc-rpc-close-event-codes\r\n */\r\nvar RPCCloseEventCodes;\r\n(function (RPCCloseEventCodes) {\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidClientId\"] = 4000] = \"InvalidClientId\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidOrigin\"] = 4001] = \"InvalidOrigin\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"RateLimited\"] = 4002] = \"RateLimited\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"TokenRevoked\"] = 4003] = \"TokenRevoked\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidVersion\"] = 4004] = \"InvalidVersion\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidEncoding\"] = 4005] = \"InvalidEncoding\";\r\n})(RPCCloseEventCodes = exports.RPCCloseEventCodes || (exports.RPCCloseEventCodes = {}));\r\n//# sourceMappingURL=v9.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/rpc/v9.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/utils/v9.js":
/*!****************************************************!*\
  !*** ./node_modules/discord-api-types/utils/v9.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.isInteractionButton = exports.isLinkButton = exports.isMessageComponentGuildInteraction = exports.isMessageComponentDMInteraction = exports.isApplicationCommandGuildInteraction = exports.isApplicationCommandDMInteraction = exports.isGuildInteraction = exports.isDMInteraction = void 0;\r\n__webpack_require__(/*! ../payloads/v9/index */ \"./node_modules/discord-api-types/payloads/v9/index.js\");\r\n// Interactions\r\n/**\r\n * A type-guard check for DM interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the interaction was received in a DM channel\r\n */\r\nfunction isDMInteraction(interaction) {\r\n    return Reflect.has(interaction, 'user');\r\n}\r\nexports.isDMInteraction = isDMInteraction;\r\n/**\r\n * A type-guard check for guild interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the interaction was received in a guild\r\n */\r\nfunction isGuildInteraction(interaction) {\r\n    return Reflect.has(interaction, 'guild_id');\r\n}\r\nexports.isGuildInteraction = isGuildInteraction;\r\n// ApplicationCommandInteractions\r\n/**\r\n * A type-guard check for DM application command interactions\r\n * @param interaction The application command interaction to check against\r\n * @returns A boolean that indicates if the application command interaction was received in a DM channel\r\n */\r\nfunction isApplicationCommandDMInteraction(interaction) {\r\n    return isDMInteraction(interaction);\r\n}\r\nexports.isApplicationCommandDMInteraction = isApplicationCommandDMInteraction;\r\n/**\r\n * A type-guard check for guild application command interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the application command interaction was received in a guild\r\n */\r\nfunction isApplicationCommandGuildInteraction(interaction) {\r\n    return isGuildInteraction(interaction);\r\n}\r\nexports.isApplicationCommandGuildInteraction = isApplicationCommandGuildInteraction;\r\n// MessageComponentInteractions\r\n/**\r\n * A type-guard check for DM message component interactions\r\n * @param interaction The message component interaction to check against\r\n * @returns A boolean that indicates if the message component interaction was received in a DM channel\r\n */\r\nfunction isMessageComponentDMInteraction(interaction) {\r\n    return isDMInteraction(interaction);\r\n}\r\nexports.isMessageComponentDMInteraction = isMessageComponentDMInteraction;\r\n/**\r\n * A type-guard check for guild message component interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the message component interaction was received in a guild\r\n */\r\nfunction isMessageComponentGuildInteraction(interaction) {\r\n    return isGuildInteraction(interaction);\r\n}\r\nexports.isMessageComponentGuildInteraction = isMessageComponentGuildInteraction;\r\n// Buttons\r\n/**\r\n * A type-guard check for buttons that have a `url` attached to them.\r\n * @param component The button to check against\r\n * @returns A boolean that indicates if the button has a `url` attached to it\r\n */\r\nfunction isLinkButton(component) {\r\n    return component.style === 5 /* Link */;\r\n}\r\nexports.isLinkButton = isLinkButton;\r\n/**\r\n * A type-guard check for buttons that have a `custom_id` attached to them.\r\n * @param button The button to check against\r\n * @returns A boolean that indicates if the button has a `custom_id` attached to it\r\n */\r\nfunction isInteractionButton(component) {\r\n    return component.style !== 5 /* Link */;\r\n}\r\nexports.isInteractionButton = isInteractionButton;\r\n//# sourceMappingURL=v9.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/utils/v9.js?");

/***/ }),

/***/ "./node_modules/discord-api-types/v9.js":
/*!**********************************************!*\
  !*** ./node_modules/discord-api-types/v9.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Utils = void 0;\r\n__exportStar(__webpack_require__(/*! ./globals */ \"./node_modules/discord-api-types/globals.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway/v9 */ \"./node_modules/discord-api-types/gateway/v9.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./payloads/v9/index */ \"./node_modules/discord-api-types/payloads/v9/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./rest/v9/index */ \"./node_modules/discord-api-types/rest/v9/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./rpc/v9 */ \"./node_modules/discord-api-types/rpc/v9.js\"), exports);\r\nexports.Utils = __webpack_require__(/*! ./utils/v9 */ \"./node_modules/discord-api-types/utils/v9.js\");\r\n//# sourceMappingURL=v9.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord-api-types/v9.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/WebSocket.js":
/*!**************************************************!*\
  !*** ./node_modules/discord.js/src/WebSocket.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nlet erlpack;\n\ntry {\n  erlpack = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'erlpack'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n  if (!erlpack.pack) erlpack = null;\n} catch {} // eslint-disable-line no-empty\n\nexports.WebSocket = __webpack_require__(/*! ws */ \"./node_modules/ws/index.js\");\n\nconst ab = new TextDecoder();\n\nexports.encoding = erlpack ? 'etf' : 'json';\n\nexports.pack = erlpack ? erlpack.pack : JSON.stringify;\n\nexports.unpack = (data, type) => {\n  if (exports.encoding === 'json' || type === 'json') {\n    if (typeof data !== 'string') {\n      data = ab.decode(data);\n    }\n    return JSON.parse(data);\n  }\n  if (!Buffer.isBuffer(data)) data = Buffer.from(new Uint8Array(data));\n  return erlpack.unpack(data);\n};\n\nexports.create = (gateway, query = {}, ...args) => {\n  const [g, q] = gateway.split('?');\n  query.encoding = exports.encoding;\n  query = new URLSearchParams(query);\n  if (q) new URLSearchParams(q).forEach((v, k) => query.set(k, v));\n  const ws = new exports.WebSocket(`${g}?${query}`, ...args);\n  return ws;\n};\n\nfor (const state of ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED']) exports[state] = exports.WebSocket[state];\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/WebSocket.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/BaseClient.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord.js/src/client/BaseClient.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst RESTManager = __webpack_require__(/*! ../rest/RESTManager */ \"./node_modules/discord.js/src/rest/RESTManager.js\");\nconst Options = __webpack_require__(/*! ../util/Options */ \"./node_modules/discord.js/src/util/Options.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * The base class for all clients.\n * @extends {EventEmitter}\n */\nclass BaseClient extends EventEmitter {\n  constructor(options = {}) {\n    super();\n\n    /**\n     * The options the client was instantiated with\n     * @type {ClientOptions}\n     */\n    this.options = Util.mergeDefault(Options.createDefault(), options);\n\n    /**\n     * The REST manager of the client\n     * @type {RESTManager}\n     * @private\n     */\n    this.rest = new RESTManager(this, options._tokenType);\n  }\n\n  /**\n   * API shortcut\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  get api() {\n    return this.rest.api;\n  }\n\n  /**\n   * Destroys all assets used by the base client.\n   * @returns {void}\n   */\n  destroy() {\n    if (this.rest.sweepInterval) clearInterval(this.rest.sweepInterval);\n  }\n\n  /**\n   * Increments max listeners by one, if they are not zero.\n   * @private\n   */\n  incrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one, if they are not zero.\n   * @private\n   */\n  decrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners - 1);\n    }\n  }\n\n  toJSON(...props) {\n    return Util.flatten(this, { domain: false }, ...props);\n  }\n}\n\nmodule.exports = BaseClient;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/BaseClient.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/Client.js":
/*!******************************************************!*\
  !*** ./node_modules/discord.js/src/client/Client.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst BaseClient = __webpack_require__(/*! ./BaseClient */ \"./node_modules/discord.js/src/client/BaseClient.js\");\nconst ActionsManager = __webpack_require__(/*! ./actions/ActionsManager */ \"./node_modules/discord.js/src/client/actions/ActionsManager.js\");\nconst ClientVoiceManager = __webpack_require__(/*! ./voice/ClientVoiceManager */ \"./node_modules/discord.js/src/client/voice/ClientVoiceManager.js\");\nconst WebSocketManager = __webpack_require__(/*! ./websocket/WebSocketManager */ \"./node_modules/discord.js/src/client/websocket/WebSocketManager.js\");\nconst { Error, TypeError, RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst BaseGuildEmojiManager = __webpack_require__(/*! ../managers/BaseGuildEmojiManager */ \"./node_modules/discord.js/src/managers/BaseGuildEmojiManager.js\");\nconst ChannelManager = __webpack_require__(/*! ../managers/ChannelManager */ \"./node_modules/discord.js/src/managers/ChannelManager.js\");\nconst GuildManager = __webpack_require__(/*! ../managers/GuildManager */ \"./node_modules/discord.js/src/managers/GuildManager.js\");\nconst UserManager = __webpack_require__(/*! ../managers/UserManager */ \"./node_modules/discord.js/src/managers/UserManager.js\");\nconst ShardClientUtil = __webpack_require__(/*! ../sharding/ShardClientUtil */ \"./node_modules/discord.js/src/sharding/ShardClientUtil.js\");\nconst ClientPresence = __webpack_require__(/*! ../structures/ClientPresence */ \"./node_modules/discord.js/src/structures/ClientPresence.js\");\nconst GuildPreview = __webpack_require__(/*! ../structures/GuildPreview */ \"./node_modules/discord.js/src/structures/GuildPreview.js\");\nconst GuildTemplate = __webpack_require__(/*! ../structures/GuildTemplate */ \"./node_modules/discord.js/src/structures/GuildTemplate.js\");\nconst Invite = __webpack_require__(/*! ../structures/Invite */ \"./node_modules/discord.js/src/structures/Invite.js\");\nconst Sticker = __webpack_require__(/*! ../structures/Sticker */ \"./node_modules/discord.js/src/structures/Sticker.js\");\nconst StickerPack = __webpack_require__(/*! ../structures/StickerPack */ \"./node_modules/discord.js/src/structures/StickerPack.js\");\nconst VoiceRegion = __webpack_require__(/*! ../structures/VoiceRegion */ \"./node_modules/discord.js/src/structures/VoiceRegion.js\");\nconst Webhook = __webpack_require__(/*! ../structures/Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\");\nconst Widget = __webpack_require__(/*! ../structures/Widget */ \"./node_modules/discord.js/src/structures/Widget.js\");\nconst { Events, InviteScopes, Status } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\nconst Intents = __webpack_require__(/*! ../util/Intents */ \"./node_modules/discord.js/src/util/Intents.js\");\nconst Options = __webpack_require__(/*! ../util/Options */ \"./node_modules/discord.js/src/util/Options.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * The main hub for interacting with the Discord API, and the starting point for any bot.\n * @extends {BaseClient}\n */\nclass Client extends BaseClient {\n  /**\n   * @param {ClientOptions} options Options for the client\n   */\n  constructor(options) {\n    super(Object.assign({ _tokenType: 'Bot' }, options));\n\n    const data = __webpack_require__(/*! worker_threads */ \"worker_threads\").workerData ?? process.env;\n    const defaults = Options.createDefault();\n\n    if (this.options.shards === defaults.shards) {\n      if ('SHARDS' in data) {\n        this.options.shards = JSON.parse(data.SHARDS);\n      }\n    }\n\n    if (this.options.shardCount === defaults.shardCount) {\n      if ('SHARD_COUNT' in data) {\n        this.options.shardCount = Number(data.SHARD_COUNT);\n      } else if (Array.isArray(this.options.shards)) {\n        this.options.shardCount = this.options.shards.length;\n      }\n    }\n\n    const typeofShards = typeof this.options.shards;\n\n    if (typeofShards === 'undefined' && typeof this.options.shardCount === 'number') {\n      this.options.shards = Array.from({ length: this.options.shardCount }, (_, i) => i);\n    }\n\n    if (typeofShards === 'number') this.options.shards = [this.options.shards];\n\n    if (Array.isArray(this.options.shards)) {\n      this.options.shards = [\n        ...new Set(\n          this.options.shards.filter(item => !isNaN(item) && item >= 0 && item < Infinity && item === (item | 0)),\n        ),\n      ];\n    }\n\n    this._validateOptions();\n\n    /**\n     * Functions called when a cache is garbage collected or the Client is destroyed\n     * @type {Set<Function>}\n     * @private\n     */\n    this._cleanups = new Set();\n\n    /**\n     * The finalizers used to cleanup items.\n     * @type {FinalizationRegistry}\n     * @private\n     */\n    this._finalizers = new FinalizationRegistry(this._finalize.bind(this));\n\n    /**\n     * The WebSocket manager of the client\n     * @type {WebSocketManager}\n     */\n    this.ws = new WebSocketManager(this);\n\n    /**\n     * The action manager of the client\n     * @type {ActionsManager}\n     * @private\n     */\n    this.actions = new ActionsManager(this);\n\n    /**\n     * The voice manager of the client\n     * @type {ClientVoiceManager}\n     */\n    this.voice = new ClientVoiceManager(this);\n\n    /**\n     * Shard helpers for the client (only if the process was spawned from a {@link ShardingManager})\n     * @type {?ShardClientUtil}\n     */\n    this.shard = process.env.SHARDING_MANAGER\n      ? ShardClientUtil.singleton(this, process.env.SHARDING_MANAGER_MODE)\n      : null;\n\n    /**\n     * All of the {@link User} objects that have been cached at any point, mapped by their ids\n     * @type {UserManager}\n     */\n    this.users = new UserManager(this);\n\n    /**\n     * All of the guilds the client is currently handling, mapped by their ids -\n     * as long as sharding isn't being used, this will be *every* guild the bot is a member of\n     * @type {GuildManager}\n     */\n    this.guilds = new GuildManager(this);\n\n    /**\n     * All of the {@link Channel}s that the client is currently handling, mapped by their ids -\n     * as long as sharding isn't being used, this will be *every* channel in *every* guild the bot\n     * is a member of. Note that DM channels will not be initially cached, and thus not be present\n     * in the Manager without their explicit fetching or use.\n     * @type {ChannelManager}\n     */\n    this.channels = new ChannelManager(this);\n\n    /**\n     * The presence of the Client\n     * @private\n     * @type {ClientPresence}\n     */\n    this.presence = new ClientPresence(this, this.options.presence);\n\n    Object.defineProperty(this, 'token', { writable: true });\n    if (!this.token && 'DISCORD_TOKEN' in process.env) {\n      /**\n       * Authorization token for the logged in bot.\n       * If present, this defaults to `process.env.DISCORD_TOKEN` when instantiating the client\n       * <warn>This should be kept private at all times.</warn>\n       * @type {?string}\n       */\n      this.token = process.env.DISCORD_TOKEN;\n    } else {\n      this.token = null;\n    }\n\n    /**\n     * User that the client is logged in as\n     * @type {?ClientUser}\n     */\n    this.user = null;\n\n    /**\n     * The application of this bot\n     * @type {?ClientApplication}\n     */\n    this.application = null;\n\n    /**\n     * Time at which the client was last regarded as being in the `READY` state\n     * (each time the client disconnects and successfully reconnects, this will be overwritten)\n     * @type {?Date}\n     */\n    this.readyAt = null;\n\n    if (this.options.messageSweepInterval > 0) {\n      process.emitWarning(\n        'The message sweeping client options are deprecated, use the makeCache option with LimitedCollection instead.',\n        'DeprecationWarning',\n      );\n      this.sweepMessageInterval = setInterval(\n        this.sweepMessages.bind(this),\n        this.options.messageSweepInterval * 1000,\n      ).unref();\n    }\n  }\n\n  /**\n   * All custom emojis that the client has access to, mapped by their ids\n   * @type {BaseGuildEmojiManager}\n   * @readonly\n   */\n  get emojis() {\n    const emojis = new BaseGuildEmojiManager(this);\n    for (const guild of this.guilds.cache.values()) {\n      if (guild.available) for (const emoji of guild.emojis.cache.values()) emojis.cache.set(emoji.id, emoji);\n    }\n    return emojis;\n  }\n\n  /**\n   * Timestamp of the time the client was last `READY` at\n   * @type {?number}\n   * @readonly\n   */\n  get readyTimestamp() {\n    return this.readyAt?.getTime() ?? null;\n  }\n\n  /**\n   * How long it has been since the client last entered the `READY` state in milliseconds\n   * @type {?number}\n   * @readonly\n   */\n  get uptime() {\n    return this.readyAt ? Date.now() - this.readyAt : null;\n  }\n\n  /**\n   * Logs the client in, establishing a websocket connection to Discord.\n   * @param {string} [token=this.token] Token of the account to log in with\n   * @returns {Promise<string>} Token of the account used\n   * @example\n   * client.login('my token');\n   */\n  async login(token = this.token) {\n    if (!token || typeof token !== 'string') throw new Error('TOKEN_INVALID');\n    this.token = token = token.replace(/^(Bot|Bearer)\\s*/i, '');\n    this.emit(\n      Events.DEBUG,\n      `Provided token: ${token\n        .split('.')\n        .map((val, i) => (i > 1 ? val.replace(/./g, '*') : val))\n        .join('.')}`,\n    );\n\n    if (this.options.presence) {\n      this.options.ws.presence = this.presence._parse(this.options.presence);\n    }\n\n    this.emit(Events.DEBUG, 'Preparing to connect to the gateway...');\n\n    try {\n      await this.ws.connect();\n      return this.token;\n    } catch (error) {\n      this.destroy();\n      throw error;\n    }\n  }\n\n  /**\n   * Returns whether the client has logged in, indicative of being able to access\n   * properties such as `user` and `application`.\n   * @returns {boolean}\n   */\n  isReady() {\n    return this.ws.status === Status.READY;\n  }\n\n  /**\n   * Logs out, terminates the connection to Discord, and destroys the client.\n   * @returns {void}\n   */\n  destroy() {\n    super.destroy();\n\n    for (const fn of this._cleanups) fn();\n    this._cleanups.clear();\n\n    if (this.sweepMessageInterval) clearInterval(this.sweepMessageInterval);\n\n    this.ws.destroy();\n    this.token = null;\n  }\n\n  /**\n   * Obtains an invite from Discord.\n   * @param {InviteResolvable} invite Invite code or URL\n   * @returns {Promise<Invite>}\n   * @example\n   * client.fetchInvite('https://discord.gg/djs')\n   *   .then(invite => console.log(`Obtained invite with code: ${invite.code}`))\n   *   .catch(console.error);\n   */\n  async fetchInvite(invite) {\n    const code = DataResolver.resolveInviteCode(invite);\n    const data = await this.api.invites(code).get({ query: { with_counts: true, with_expiration: true } });\n    return new Invite(this, data);\n  }\n\n  /**\n   * Obtains a template from Discord.\n   * @param {GuildTemplateResolvable} template Template code or URL\n   * @returns {Promise<GuildTemplate>}\n   * @example\n   * client.fetchGuildTemplate('https://discord.new/FKvmczH2HyUf')\n   *   .then(template => console.log(`Obtained template with code: ${template.code}`))\n   *   .catch(console.error);\n   */\n  async fetchGuildTemplate(template) {\n    const code = DataResolver.resolveGuildTemplateCode(template);\n    const data = await this.api.guilds.templates(code).get();\n    return new GuildTemplate(this, data);\n  }\n\n  /**\n   * Obtains a webhook from Discord.\n   * @param {Snowflake} id The webhook's id\n   * @param {string} [token] Token for the webhook\n   * @returns {Promise<Webhook>}\n   * @example\n   * client.fetchWebhook('id', 'token')\n   *   .then(webhook => console.log(`Obtained webhook with name: ${webhook.name}`))\n   *   .catch(console.error);\n   */\n  async fetchWebhook(id, token) {\n    const data = await this.api.webhooks(id, token).get();\n    return new Webhook(this, { token, ...data });\n  }\n\n  /**\n   * Obtains the available voice regions from Discord.\n   * @returns {Promise<Collection<string, VoiceRegion>>}\n   * @example\n   * client.fetchVoiceRegions()\n   *   .then(regions => console.log(`Available regions are: ${regions.map(region => region.name).join(', ')}`))\n   *   .catch(console.error);\n   */\n  async fetchVoiceRegions() {\n    const apiRegions = await this.api.voice.regions.get();\n    const regions = new Collection();\n    for (const region of apiRegions) regions.set(region.id, new VoiceRegion(region));\n    return regions;\n  }\n\n  /**\n   * Obtains a sticker from Discord.\n   * @param {Snowflake} id The sticker's id\n   * @returns {Promise<Sticker>}\n   * @example\n   * client.fetchSticker('id')\n   *   .then(sticker => console.log(`Obtained sticker with name: ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  async fetchSticker(id) {\n    const data = await this.api.stickers(id).get();\n    return new Sticker(this, data);\n  }\n\n  /**\n   * Obtains the list of sticker packs available to Nitro subscribers from Discord.\n   * @returns {Promise<Collection<Snowflake, StickerPack>>}\n   * @example\n   * client.fetchPremiumStickerPacks()\n   *   .then(packs => console.log(`Available sticker packs are: ${packs.map(pack => pack.name).join(', ')}`))\n   *   .catch(console.error);\n   */\n  async fetchPremiumStickerPacks() {\n    const data = await this.api('sticker-packs').get();\n    return new Collection(data.sticker_packs.map(p => [p.id, new StickerPack(this, p)]));\n  }\n  /**\n   * A last ditch cleanup function for garbage collection.\n   * @param {Function} options.cleanup The function called to GC\n   * @param {string} [options.message] The message to send after a successful GC\n   * @param {string} [options.name] The name of the item being GCed\n   * @private\n   */\n  _finalize({ cleanup, message, name }) {\n    try {\n      cleanup();\n      this._cleanups.delete(cleanup);\n      if (message) {\n        this.emit(Events.DEBUG, message);\n      }\n    } catch {\n      this.emit(Events.DEBUG, `Garbage collection failed on ${name ?? 'an unknown item'}.`);\n    }\n  }\n\n  /**\n   * Sweeps all text-based channels' messages and removes the ones older than the max message lifetime.\n   * If the message has been edited, the time of the edit is used rather than the time of the original message.\n   * @param {number} [lifetime=this.options.messageCacheLifetime] Messages that are older than this (in seconds)\n   * will be removed from the caches. The default is based on {@link ClientOptions#messageCacheLifetime}\n   * @returns {number} Amount of messages that were removed from the caches,\n   * or -1 if the message cache lifetime is unlimited\n   * @example\n   * // Remove all messages older than 1800 seconds from the messages cache\n   * const amount = client.sweepMessages(1800);\n   * console.log(`Successfully removed ${amount} messages from the cache.`);\n   */\n  sweepMessages(lifetime = this.options.messageCacheLifetime) {\n    if (typeof lifetime !== 'number' || isNaN(lifetime)) {\n      throw new TypeError('INVALID_TYPE', 'lifetime', 'number');\n    }\n    if (lifetime <= 0) {\n      this.emit(Events.DEBUG, \"Didn't sweep messages - lifetime is unlimited\");\n      return -1;\n    }\n\n    const lifetimeMs = lifetime * 1000;\n    const now = Date.now();\n    let channels = 0;\n    let messages = 0;\n\n    for (const channel of this.channels.cache.values()) {\n      if (!channel.messages) continue;\n      channels++;\n\n      messages += channel.messages.cache.sweep(\n        message => now - (message.editedTimestamp ?? message.createdTimestamp) > lifetimeMs,\n      );\n    }\n\n    this.emit(\n      Events.DEBUG,\n      `Swept ${messages} messages older than ${lifetime} seconds in ${channels} text-based channels`,\n    );\n    return messages;\n  }\n\n  /**\n   * Obtains a guild preview from Discord, available for all guilds the bot is in and all Discoverable guilds.\n   * @param {GuildResolvable} guild The guild to fetch the preview for\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetchGuildPreview(guild) {\n    const id = this.guilds.resolveId(guild);\n    if (!id) throw new TypeError('INVALID_TYPE', 'guild', 'GuildResolvable');\n    const data = await this.api.guilds(id).preview.get();\n    return new GuildPreview(this, data);\n  }\n\n  /**\n   * Obtains the widget data of a guild from Discord, available for guilds with the widget enabled.\n   * @param {GuildResolvable} guild The guild to fetch the widget data for\n   * @returns {Promise<Widget>}\n   */\n  async fetchGuildWidget(guild) {\n    const id = this.guilds.resolveId(guild);\n    if (!id) throw new TypeError('INVALID_TYPE', 'guild', 'GuildResolvable');\n    const data = await this.api.guilds(id, 'widget.json').get();\n    return new Widget(this, data);\n  }\n\n  /**\n   * Options for {@link Client#generateInvite}.\n   * @typedef {Object} InviteGenerationOptions\n   * @property {InviteScope[]} scopes Scopes that should be requested\n   * @property {PermissionResolvable} [permissions] Permissions to request\n   * @property {GuildResolvable} [guild] Guild to preselect\n   * @property {boolean} [disableGuildSelect] Whether to disable the guild selection\n   */\n\n  /**\n   * Generates a link that can be used to invite the bot to a guild.\n   * @param {InviteGenerationOptions} [options={}] Options for the invite\n   * @returns {string}\n   * @example\n   * const link = client.generateInvite({\n   *   scopes: ['applications.commands'],\n   * });\n   * console.log(`Generated application invite link: ${link}`);\n   * @example\n   * const link = client.generateInvite({\n   *   permissions: [\n   *     Permissions.FLAGS.SEND_MESSAGES,\n   *     Permissions.FLAGS.MANAGE_GUILD,\n   *     Permissions.FLAGS.MENTION_EVERYONE,\n   *   ],\n   *   scopes: ['bot'],\n   * });\n   * console.log(`Generated bot invite link: ${link}`);\n   */\n  generateInvite(options = {}) {\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    if (!this.application) throw new Error('CLIENT_NOT_READY', 'generate an invite link');\n\n    const query = new URLSearchParams({\n      client_id: this.application.id,\n    });\n\n    const { scopes } = options;\n    if (typeof scopes === 'undefined') {\n      throw new TypeError('INVITE_MISSING_SCOPES');\n    }\n    if (!Array.isArray(scopes)) {\n      throw new TypeError('INVALID_TYPE', 'scopes', 'Array of Invite Scopes', true);\n    }\n    if (!scopes.some(scope => ['bot', 'applications.commands'].includes(scope))) {\n      throw new TypeError('INVITE_MISSING_SCOPES');\n    }\n    const invalidScope = scopes.find(scope => !InviteScopes.includes(scope));\n    if (invalidScope) {\n      throw new TypeError('INVALID_ELEMENT', 'Array', 'scopes', invalidScope);\n    }\n    query.set('scope', scopes.join(' '));\n\n    if (options.permissions) {\n      const permissions = Permissions.resolve(options.permissions);\n      if (permissions) query.set('permissions', permissions);\n    }\n\n    if (options.disableGuildSelect) {\n      query.set('disable_guild_select', true);\n    }\n\n    if (options.guild) {\n      const guildId = this.guilds.resolveId(options.guild);\n      if (!guildId) throw new TypeError('INVALID_TYPE', 'options.guild', 'GuildResolvable');\n      query.set('guild_id', guildId);\n    }\n\n    return `${this.options.http.api}${this.api.oauth2.authorize}?${query}`;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      readyAt: false,\n    });\n  }\n\n  /**\n   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval} on a script\n   * with the client as `this`.\n   * @param {string} script Script to eval\n   * @returns {*}\n   * @private\n   */\n  _eval(script) {\n    return eval(script);\n  }\n\n  /**\n   * Validates the client options.\n   * @param {ClientOptions} [options=this.options] Options to validate\n   * @private\n   */\n  _validateOptions(options = this.options) {\n    if (typeof options.intents === 'undefined') {\n      throw new TypeError('CLIENT_MISSING_INTENTS');\n    } else {\n      options.intents = Intents.resolve(options.intents);\n    }\n    if (typeof options.shardCount !== 'number' || isNaN(options.shardCount) || options.shardCount < 1) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'shardCount', 'a number greater than or equal to 1');\n    }\n    if (options.shards && !(options.shards === 'auto' || Array.isArray(options.shards))) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'shards', \"'auto', a number or array of numbers\");\n    }\n    if (options.shards && !options.shards.length) throw new RangeError('CLIENT_INVALID_PROVIDED_SHARDS');\n    if (typeof options.makeCache !== 'function') {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'makeCache', 'a function');\n    }\n    if (typeof options.messageCacheLifetime !== 'number' || isNaN(options.messageCacheLifetime)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'The messageCacheLifetime', 'a number');\n    }\n    if (typeof options.messageSweepInterval !== 'number' || isNaN(options.messageSweepInterval)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'messageSweepInterval', 'a number');\n    }\n    if (typeof options.invalidRequestWarningInterval !== 'number' || isNaN(options.invalidRequestWarningInterval)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'invalidRequestWarningInterval', 'a number');\n    }\n    if (!Array.isArray(options.partials)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'partials', 'an Array');\n    }\n    if (typeof options.restWsBridgeTimeout !== 'number' || isNaN(options.restWsBridgeTimeout)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restWsBridgeTimeout', 'a number');\n    }\n    if (typeof options.restRequestTimeout !== 'number' || isNaN(options.restRequestTimeout)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restRequestTimeout', 'a number');\n    }\n    if (typeof options.restGlobalRateLimit !== 'number' || isNaN(options.restGlobalRateLimit)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restGlobalRateLimit', 'a number');\n    }\n    if (typeof options.restSweepInterval !== 'number' || isNaN(options.restSweepInterval)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restSweepInterval', 'a number');\n    }\n    if (typeof options.retryLimit !== 'number' || isNaN(options.retryLimit)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'retryLimit', 'a number');\n    }\n    if (typeof options.failIfNotExists !== 'boolean') {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'failIfNotExists', 'a boolean');\n    }\n    if (!Array.isArray(options.userAgentSuffix)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'userAgentSuffix', 'an array of strings');\n    }\n    if (\n      typeof options.rejectOnRateLimit !== 'undefined' &&\n      !(typeof options.rejectOnRateLimit === 'function' || Array.isArray(options.rejectOnRateLimit))\n    ) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'rejectOnRateLimit', 'an array or a function');\n    }\n  }\n}\n\nmodule.exports = Client;\n\n/**\n * Emitted for general warnings.\n * @event Client#warn\n * @param {string} info The warning\n */\n\n/**\n * Emitted for general debugging information.\n * @event Client#debug\n * @param {string} info The debug information\n */\n\n/**\n * @external Collection\n * @see {@link https://discord.js.org/#/docs/collection/main/class/Collection}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/Client.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/WebhookClient.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/client/WebhookClient.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseClient = __webpack_require__(/*! ./BaseClient */ \"./node_modules/discord.js/src/client/BaseClient.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Webhook = __webpack_require__(/*! ../structures/Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\");\n\n/**\n * The webhook client.\n * @implements {Webhook}\n * @extends {BaseClient}\n */\nclass WebhookClient extends BaseClient {\n  /**\n   * The data for the webhook client containing either an id and token or just a URL\n   * @typedef {Object} WebhookClientData\n   * @property {Snowflake} [id] The id of the webhook\n   * @property {string} [token] The token of the webhook\n   * @property {string} [url] The full url for the webhook client\n   */\n\n  /**\n   * @param {WebhookClientData} data The data of the webhook\n   * @param {ClientOptions} [options] Options for the client\n   */\n  constructor(data, options) {\n    super(options);\n    Object.defineProperty(this, 'client', { value: this });\n    let { id, token } = data;\n\n    if ('url' in data) {\n      const url = data.url.match(\n        // eslint-disable-next-line no-useless-escape\n        /^https?:\\/\\/(?:canary|ptb)?\\.?discord\\.com\\/api\\/webhooks(?:\\/v[0-9]\\d*)?\\/([^\\/]+)\\/([^\\/]+)/i,\n      );\n\n      if (!url || url.length <= 1) throw new Error('WEBHOOK_URL_INVALID');\n\n      [, id, token] = url;\n    }\n\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function */\n  send() {}\n  sendSlackMessage() {}\n  fetchMessage() {}\n  edit() {}\n  editMessage() {}\n  delete() {}\n  deleteMessage() {}\n  get createdTimestamp() {}\n  get createdAt() {}\n  get url() {}\n}\n\nWebhook.applyToClass(WebhookClient);\n\nmodule.exports = WebhookClient;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/WebhookClient.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/Action.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/Action.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { PartialTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/*\n\nABOUT ACTIONS\n\nActions are similar to WebSocket Packet Handlers, but since introducing\nthe REST API methods, in order to prevent rewriting code to handle data,\n\"actions\" have been introduced. They're basically what Packet Handlers\nused to be but they're strictly for manipulating data and making sure\nthat WebSocket events don't clash with REST methods.\n\n*/\n\nclass GenericAction {\n  constructor(client) {\n    this.client = client;\n  }\n\n  handle(data) {\n    return data;\n  }\n\n  getPayload(data, manager, id, partialType, cache) {\n    const existing = manager.cache.get(id);\n    if (!existing && this.client.options.partials.includes(partialType)) {\n      return manager._add(data, cache);\n    }\n    return existing;\n  }\n\n  getChannel(data) {\n    const id = data.channel_id ?? data.id;\n    return (\n      data.channel ??\n      this.getPayload(\n        {\n          id,\n          guild_id: data.guild_id,\n          recipients: [data.author ?? data.user ?? { id: data.user_id }],\n        },\n        this.client.channels,\n        id,\n        PartialTypes.CHANNEL,\n      )\n    );\n  }\n\n  getMessage(data, channel, cache) {\n    const id = data.message_id ?? data.id;\n    return (\n      data.message ??\n      this.getPayload(\n        {\n          id,\n          channel_id: channel.id,\n          guild_id: data.guild_id ?? channel.guild?.id,\n        },\n        channel.messages,\n        id,\n        PartialTypes.MESSAGE,\n        cache,\n      )\n    );\n  }\n\n  getReaction(data, message, user) {\n    const id = data.emoji.id ?? decodeURIComponent(data.emoji.name);\n    return this.getPayload(\n      {\n        emoji: data.emoji,\n        count: message.partial ? null : 0,\n        me: user?.id === this.client.user.id,\n      },\n      message.reactions,\n      id,\n      PartialTypes.REACTION,\n    );\n  }\n\n  getMember(data, guild) {\n    return this.getPayload(data, guild.members, data.user.id, PartialTypes.GUILD_MEMBER);\n  }\n\n  getUser(data) {\n    const id = data.user_id;\n    return data.user ?? this.getPayload({ id }, this.client.users, id, PartialTypes.USER);\n  }\n\n  getUserFromMember(data) {\n    if (data.guild_id && data.member?.user) {\n      const guild = this.client.guilds.cache.get(data.guild_id);\n      if (guild) {\n        return guild.members._add(data.member).user;\n      } else {\n        return this.client.users._add(data.member.user);\n      }\n    }\n    return this.getUser(data);\n  }\n}\n\nmodule.exports = GenericAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/Action.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ActionsManager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ActionsManager.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n\nclass ActionsManager {\n  constructor(client) {\n    this.client = client;\n\n    const files = fs.readdirSync(__dirname);\n\n    for (const file of files) {\n      if (['Action.js', 'ActionsManager.js'].includes(file)) continue;\n      this.register(__webpack_require__(\"./node_modules/discord.js/src/client/actions sync recursive ^\\\\.\\\\/.*$\")(`./${file}`));\n    }\n  }\n\n  register(Action) {\n    this[Action.name.replace(/Action$/, '')] = new Action(this.client);\n  }\n}\n\nmodule.exports = ActionsManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ActionsManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ChannelCreate.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ChannelCreate.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ChannelCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const existing = client.channels.cache.has(data.id);\n    const channel = client.channels._add(data);\n    if (!existing && channel) {\n      /**\n       * Emitted whenever a guild channel is created.\n       * @event Client#channelCreate\n       * @param {GuildChannel} channel The channel that was created\n       */\n      client.emit(Events.CHANNEL_CREATE, channel);\n    }\n    return { channel };\n  }\n}\n\nmodule.exports = ChannelCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ChannelCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ChannelDelete.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ChannelDelete.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst DMChannel = __webpack_require__(/*! ../../structures/DMChannel */ \"./node_modules/discord.js/src/structures/DMChannel.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ChannelDeleteAction extends Action {\n  constructor(client) {\n    super(client);\n    this.deleted = new Map();\n  }\n\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.id);\n\n    if (channel) {\n      client.channels._remove(channel.id);\n      channel.deleted = true;\n      if (channel.messages && !(channel instanceof DMChannel)) {\n        for (const message of channel.messages.cache.values()) {\n          message.deleted = true;\n        }\n      }\n      /**\n       * Emitted whenever a channel is deleted.\n       * @event Client#channelDelete\n       * @param {DMChannel|GuildChannel} channel The channel that was deleted\n       */\n      client.emit(Events.CHANNEL_DELETE, channel);\n    }\n\n    return { channel };\n  }\n}\n\nmodule.exports = ChannelDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ChannelDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ChannelUpdate.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ChannelUpdate.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst Channel = __webpack_require__(/*! ../../structures/Channel */ \"./node_modules/discord.js/src/structures/Channel.js\");\nconst { ChannelTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ChannelUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    let channel = client.channels.cache.get(data.id);\n    if (channel) {\n      const old = channel._update(data);\n\n      if (ChannelTypes[channel.type] !== data.type) {\n        const newChannel = Channel.create(this.client, data, channel.guild);\n        for (const [id, message] of channel.messages.cache) newChannel.messages.cache.set(id, message);\n        channel = newChannel;\n        this.client.channels.cache.set(channel.id, channel);\n      }\n\n      return {\n        old,\n        updated: channel,\n      };\n    } else {\n      client.channels._add(data);\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = ChannelUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ChannelUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildBanAdd.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildBanAdd.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildBanAdd extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    /**\n     * Emitted whenever a member is banned from a guild.\n     * @event Client#guildBanAdd\n     * @param {GuildBan} ban The ban that occurred\n     */\n    if (guild) client.emit(Events.GUILD_BAN_ADD, guild.bans._add(data));\n  }\n}\n\nmodule.exports = GuildBanAdd;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildBanAdd.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildBanRemove.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildBanRemove.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst GuildBan = __webpack_require__(/*! ../../structures/GuildBan */ \"./node_modules/discord.js/src/structures/GuildBan.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildBanRemove extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    /**\n     * Emitted whenever a member is unbanned from a guild.\n     * @event Client#guildBanRemove\n     * @param {GuildBan} ban The ban that was removed\n     */\n    if (guild) {\n      const ban = guild.bans.cache.get(data.user.id) ?? new GuildBan(client, data, guild);\n      guild.bans.cache.delete(ban.user.id);\n      client.emit(Events.GUILD_BAN_REMOVE, ban);\n    }\n  }\n}\n\nmodule.exports = GuildBanRemove;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildBanRemove.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\n\nclass GuildChannelsPositionUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      for (const partialChannel of data.channels) {\n        const channel = guild.channels.cache.get(partialChannel.id);\n        if (channel) channel.rawPosition = partialChannel.position;\n      }\n    }\n\n    return { guild };\n  }\n}\n\nmodule.exports = GuildChannelsPositionUpdate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildDelete.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildDelete.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildDeleteAction extends Action {\n  constructor(client) {\n    super(client);\n    this.deleted = new Map();\n  }\n\n  handle(data) {\n    const client = this.client;\n\n    let guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      if (data.unavailable) {\n        // Guild is unavailable\n        guild.available = false;\n\n        /**\n         * Emitted whenever a guild becomes unavailable, likely due to a server outage.\n         * @event Client#guildUnavailable\n         * @param {Guild} guild The guild that has become unavailable\n         */\n        client.emit(Events.GUILD_UNAVAILABLE, guild);\n\n        // Stops the GuildDelete packet thinking a guild was actually deleted,\n        // handles emitting of event itself\n        return {\n          guild: null,\n        };\n      }\n\n      for (const channel of guild.channels.cache.values()) this.client.channels._remove(channel.id);\n      client.voice.adapters.get(data.id)?.destroy();\n\n      // Delete guild\n      client.guilds.cache.delete(guild.id);\n      guild.deleted = true;\n\n      /**\n       * Emitted whenever a guild kicks the client or the guild is deleted/left.\n       * @event Client#guildDelete\n       * @param {Guild} guild The guild that was deleted\n       */\n      client.emit(Events.GUILD_DELETE, guild);\n\n      this.deleted.set(guild.id, guild);\n      this.scheduleForDeletion(guild.id);\n    } else {\n      guild = this.deleted.get(data.id) ?? null;\n    }\n\n    return { guild };\n  }\n\n  scheduleForDeletion(id) {\n    setTimeout(() => this.deleted.delete(id), this.client.options.restWsBridgeTimeout).unref();\n  }\n}\n\nmodule.exports = GuildDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildEmojiCreate.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildEmojiCreate.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildEmojiCreateAction extends Action {\n  handle(guild, createdEmoji) {\n    const already = guild.emojis.cache.has(createdEmoji.id);\n    const emoji = guild.emojis._add(createdEmoji);\n    /**\n     * Emitted whenever a custom emoji is created in a guild.\n     * @event Client#emojiCreate\n     * @param {GuildEmoji} emoji The emoji that was created\n     */\n    if (!already) this.client.emit(Events.GUILD_EMOJI_CREATE, emoji);\n    return { emoji };\n  }\n}\n\nmodule.exports = GuildEmojiCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildEmojiCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildEmojiDelete.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildEmojiDelete.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildEmojiDeleteAction extends Action {\n  handle(emoji) {\n    emoji.guild.emojis.cache.delete(emoji.id);\n    emoji.deleted = true;\n    /**\n     * Emitted whenever a custom emoji is deleted in a guild.\n     * @event Client#emojiDelete\n     * @param {GuildEmoji} emoji The emoji that was deleted\n     */\n    this.client.emit(Events.GUILD_EMOJI_DELETE, emoji);\n    return { emoji };\n  }\n}\n\nmodule.exports = GuildEmojiDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildEmojiDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildEmojiUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom emoji is updated in a guild.\n     * @event Client#emojiUpdate\n     * @param {GuildEmoji} oldEmoji The old emoji\n     * @param {GuildEmoji} newEmoji The new emoji\n     */\n    this.client.emit(Events.GUILD_EMOJI_UPDATE, old, current);\n    return { emoji: current };\n  }\n}\n\nmodule.exports = GuildEmojiUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\n\nclass GuildEmojisUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild?.emojis) return;\n\n    const deletions = new Map(guild.emojis.cache);\n\n    for (const emoji of data.emojis) {\n      // Determine type of emoji event\n      const cachedEmoji = guild.emojis.cache.get(emoji.id);\n      if (cachedEmoji) {\n        deletions.delete(emoji.id);\n        if (!cachedEmoji.equals(emoji)) {\n          // Emoji updated\n          this.client.actions.GuildEmojiUpdate.handle(cachedEmoji, emoji);\n        }\n      } else {\n        // Emoji added\n        this.client.actions.GuildEmojiCreate.handle(guild, emoji);\n      }\n    }\n\n    for (const emoji of deletions.values()) {\n      // Emoji deleted\n      this.client.actions.GuildEmojiDelete.handle(emoji);\n    }\n  }\n}\n\nmodule.exports = GuildEmojisUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildIntegrationsUpdate.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildIntegrationsUpdate.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildIntegrationsUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    /**\n     * Emitted whenever a guild integration is updated\n     * @event Client#guildIntegrationsUpdate\n     * @param {Guild} guild The guild whose integrations were updated\n     */\n    if (guild) client.emit(Events.GUILD_INTEGRATIONS_UPDATE, guild);\n  }\n}\n\nmodule.exports = GuildIntegrationsUpdate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildIntegrationsUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildMemberRemove.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildMemberRemove.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events, Status } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildMemberRemoveAction extends Action {\n  handle(data, shard) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let member = null;\n    if (guild) {\n      member = this.getMember({ user: data.user }, guild);\n      guild.memberCount--;\n      if (member) {\n        member.deleted = true;\n        guild.members.cache.delete(member.id);\n        /**\n         * Emitted whenever a member leaves a guild, or is kicked.\n         * @event Client#guildMemberRemove\n         * @param {GuildMember} member The member that has left/been kicked from the guild\n         */\n        if (shard.status === Status.READY) client.emit(Events.GUILD_MEMBER_REMOVE, member);\n      }\n      guild.voiceStates.cache.delete(data.user.id);\n    }\n    return { guild, member };\n  }\n}\n\nmodule.exports = GuildMemberRemoveAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildMemberRemove.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildMemberUpdate.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildMemberUpdate.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Status, Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildMemberUpdateAction extends Action {\n  handle(data, shard) {\n    const { client } = this;\n    if (data.user.username) {\n      const user = client.users.cache.get(data.user.id);\n      if (!user) {\n        client.users._add(data.user);\n      } else if (!user.equals(data.user)) {\n        client.actions.UserUpdate.handle(data.user);\n      }\n    }\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      const member = this.getMember({ user: data.user }, guild);\n      if (member) {\n        const old = member._update(data);\n        /**\n         * Emitted whenever a guild member changes - i.e. new role, removed role, nickname.\n         * Also emitted when the user's details (e.g. username) change.\n         * @event Client#guildMemberUpdate\n         * @param {GuildMember} oldMember The member before the update\n         * @param {GuildMember} newMember The member after the update\n         */\n        if (shard.status === Status.READY && !member.equals(old)) client.emit(Events.GUILD_MEMBER_UPDATE, old, member);\n      } else {\n        const newMember = guild.members._add(data);\n        /**\n         * Emitted whenever a member becomes available in a large guild.\n         * @event Client#guildMemberAvailable\n         * @param {GuildMember} member The member that became available\n         */\n        this.client.emit(Events.GUILD_MEMBER_AVAILABLE, newMember);\n      }\n    }\n  }\n}\n\nmodule.exports = GuildMemberUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildMemberUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildRoleCreate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildRoleCreate.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildRoleCreate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n    if (guild) {\n      const already = guild.roles.cache.has(data.role.id);\n      role = guild.roles._add(data.role);\n      /**\n       * Emitted whenever a role is created.\n       * @event Client#roleCreate\n       * @param {Role} role The role that was created\n       */\n      if (!already) client.emit(Events.GUILD_ROLE_CREATE, role);\n    }\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleCreate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildRoleCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildRoleDelete.js":
/*!***********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildRoleDelete.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildRoleDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n\n    if (guild) {\n      role = guild.roles.cache.get(data.role_id);\n      if (role) {\n        guild.roles.cache.delete(data.role_id);\n        role.deleted = true;\n        /**\n         * Emitted whenever a guild role is deleted.\n         * @event Client#roleDelete\n         * @param {Role} role The role that was deleted\n         */\n        client.emit(Events.GUILD_ROLE_DELETE, role);\n      }\n    }\n\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildRoleDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildRoleUpdate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildRoleUpdate.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildRoleUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      let old = null;\n\n      const role = guild.roles.cache.get(data.role.id);\n      if (role) {\n        old = role._update(data.role);\n        /**\n         * Emitted whenever a guild role is updated.\n         * @event Client#roleUpdate\n         * @param {Role} oldRole The role before the update\n         * @param {Role} newRole The role after the update\n         */\n        client.emit(Events.GUILD_ROLE_UPDATE, old, role);\n      }\n\n      return {\n        old,\n        updated: role,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = GuildRoleUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildRoleUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\n\nclass GuildRolesPositionUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      for (const partialRole of data.roles) {\n        const role = guild.roles.cache.get(partialRole.id);\n        if (role) role.rawPosition = partialRole.position;\n      }\n    }\n\n    return { guild };\n  }\n}\n\nmodule.exports = GuildRolesPositionUpdate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildStickerCreate.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildStickerCreate.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildStickerCreateAction extends Action {\n  handle(guild, createdSticker) {\n    const already = guild.stickers.cache.has(createdSticker.id);\n    const sticker = guild.stickers._add(createdSticker);\n    /**\n     * Emitted whenever a custom sticker is created in a guild.\n     * @event Client#stickerCreate\n     * @param {Sticker} sticker The sticker that was created\n     */\n    if (!already) this.client.emit(Events.GUILD_STICKER_CREATE, sticker);\n    return { sticker };\n  }\n}\n\nmodule.exports = GuildStickerCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildStickerCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildStickerDelete.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildStickerDelete.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildStickerDeleteAction extends Action {\n  handle(sticker) {\n    sticker.guild.stickers.cache.delete(sticker.id);\n    sticker.deleted = true;\n    /**\n     * Emitted whenever a custom sticker is deleted in a guild.\n     * @event Client#stickerDelete\n     * @param {Sticker} sticker The sticker that was deleted\n     */\n    this.client.emit(Events.GUILD_STICKER_DELETE, sticker);\n    return { sticker };\n  }\n}\n\nmodule.exports = GuildStickerDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildStickerDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildStickerUpdate.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildStickerUpdate.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildStickerUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom sticker is updated in a guild.\n     * @event Client#stickerUpdate\n     * @param {Sticker} oldSticker The old sticker\n     * @param {Sticker} newSticker The new sticker\n     */\n    this.client.emit(Events.GUILD_STICKER_UPDATE, old, current);\n    return { sticker: current };\n  }\n}\n\nmodule.exports = GuildStickerUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildStickerUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildStickersUpdate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildStickersUpdate.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\n\nclass GuildStickersUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild?.stickers) return;\n\n    const deletions = new Map(guild.stickers.cache);\n\n    for (const sticker of data.stickers) {\n      // Determine type of sticker event\n      const cachedSticker = guild.stickers.cache.get(sticker.id);\n      if (cachedSticker) {\n        deletions.delete(sticker.id);\n        if (!cachedSticker.equals(sticker)) {\n          // Sticker updated\n          this.client.actions.GuildStickerUpdate.handle(cachedSticker, sticker);\n        }\n      } else {\n        // Sticker added\n        this.client.actions.GuildStickerCreate.handle(guild, sticker);\n      }\n    }\n\n    for (const sticker of deletions.values()) {\n      // Sticker deleted\n      this.client.actions.GuildStickerDelete.handle(sticker);\n    }\n  }\n}\n\nmodule.exports = GuildStickersUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildStickersUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/GuildUpdate.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/GuildUpdate.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass GuildUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      const old = guild._update(data);\n      /**\n       * Emitted whenever a guild is updated - e.g. name change.\n       * @event Client#guildUpdate\n       * @param {Guild} oldGuild The guild before the update\n       * @param {Guild} newGuild The guild after the update\n       */\n      client.emit(Events.GUILD_UPDATE, old, guild);\n      return {\n        old,\n        updated: guild,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = GuildUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/GuildUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/InteractionCreate.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/InteractionCreate.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst ButtonInteraction = __webpack_require__(/*! ../../structures/ButtonInteraction */ \"./node_modules/discord.js/src/structures/ButtonInteraction.js\");\nconst CommandInteraction = __webpack_require__(/*! ../../structures/CommandInteraction */ \"./node_modules/discord.js/src/structures/CommandInteraction.js\");\nconst ContextMenuInteraction = __webpack_require__(/*! ../../structures/ContextMenuInteraction */ \"./node_modules/discord.js/src/structures/ContextMenuInteraction.js\");\nconst SelectMenuInteraction = __webpack_require__(/*! ../../structures/SelectMenuInteraction */ \"./node_modules/discord.js/src/structures/SelectMenuInteraction.js\");\nconst { Events, InteractionTypes, MessageComponentTypes, ApplicationCommandTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nlet deprecationEmitted = false;\n\nclass InteractionCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    // Resolve and cache partial channels for Interaction#channel getter\n    this.getChannel(data);\n\n    let InteractionType;\n    switch (data.type) {\n      case InteractionTypes.APPLICATION_COMMAND:\n        switch (data.data.type) {\n          case ApplicationCommandTypes.CHAT_INPUT:\n            InteractionType = CommandInteraction;\n            break;\n          case ApplicationCommandTypes.USER:\n          case ApplicationCommandTypes.MESSAGE:\n            InteractionType = ContextMenuInteraction;\n            break;\n          default:\n            client.emit(\n              Events.DEBUG,\n              `[INTERACTION] Received application command interaction with unknown type: ${data.data.type}`,\n            );\n            return;\n        }\n        break;\n      case InteractionTypes.MESSAGE_COMPONENT:\n        switch (data.data.component_type) {\n          case MessageComponentTypes.BUTTON:\n            InteractionType = ButtonInteraction;\n            break;\n          case MessageComponentTypes.SELECT_MENU:\n            InteractionType = SelectMenuInteraction;\n            break;\n          default:\n            client.emit(\n              Events.DEBUG,\n              `[INTERACTION] Received component interaction with unknown type: ${data.data.component_type}`,\n            );\n            return;\n        }\n        break;\n      default:\n        client.emit(Events.DEBUG, `[INTERACTION] Received interaction with unknown type: ${data.type}`);\n        return;\n    }\n\n    const interaction = new InteractionType(client, data);\n\n    /**\n     * Emitted when an interaction is created.\n     * @event Client#interactionCreate\n     * @param {Interaction} interaction The interaction which was created\n     */\n    client.emit(Events.INTERACTION_CREATE, interaction);\n\n    /**\n     * Emitted when an interaction is created.\n     * @event Client#interaction\n     * @param {Interaction} interaction The interaction which was created\n     * @deprecated Use {@link Client#interactionCreate} instead\n     */\n    if (client.emit('interaction', interaction) && !deprecationEmitted) {\n      deprecationEmitted = true;\n      process.emitWarning('The interaction event is deprecated. Use interactionCreate instead', 'DeprecationWarning');\n    }\n  }\n}\n\nmodule.exports = InteractionCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/InteractionCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/InviteCreate.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/InviteCreate.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass InviteCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!channel) return false;\n\n    const inviteData = Object.assign(data, { channel, guild });\n    const invite = guild.invites._add(inviteData);\n\n    /**\n     * Emitted when an invite is created.\n     * <info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\n     * or `MANAGE_CHANNELS` permissions for the channel.</info>\n     * @event Client#inviteCreate\n     * @param {Invite} invite The invite that was created\n     */\n    client.emit(Events.INVITE_CREATE, invite);\n    return { invite };\n  }\n}\n\nmodule.exports = InviteCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/InviteCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/InviteDelete.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/InviteDelete.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst Invite = __webpack_require__(/*! ../../structures/Invite */ \"./node_modules/discord.js/src/structures/Invite.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass InviteDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!channel) return false;\n\n    const inviteData = Object.assign(data, { channel, guild });\n    const invite = new Invite(client, inviteData);\n    guild.invites.cache.delete(invite.code);\n\n    /**\n     * Emitted when an invite is deleted.\n     * <info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\n     * or `MANAGE_CHANNELS` permissions for the channel.</info>\n     * @event Client#inviteDelete\n     * @param {Invite} invite The invite that was deleted\n     */\n    client.emit(Events.INVITE_DELETE, invite);\n    return { invite };\n  }\n}\n\nmodule.exports = InviteDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/InviteDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageCreate.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageCreate.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nlet deprecationEmitted = false;\n\nclass MessageCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n    if (channel) {\n      const existing = channel.messages.cache.get(data.id);\n      if (existing) return { message: existing };\n      const message = channel.messages._add(data);\n      channel.lastMessageId = data.id;\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#messageCreate\n       * @param {Message} message The created message\n       */\n      client.emit(Events.MESSAGE_CREATE, message);\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#message\n       * @param {Message} message The created message\n       * @deprecated Use {@link Client#messageCreate} instead\n       */\n      if (client.emit('message', message) && !deprecationEmitted) {\n        deprecationEmitted = true;\n        process.emitWarning('The message event is deprecated. Use messageCreate instead', 'DeprecationWarning');\n      }\n\n      return { message };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageDelete.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageDelete.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass MessageDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n    let message;\n    if (channel) {\n      message = this.getMessage(data, channel);\n      if (message) {\n        channel.messages.cache.delete(message.id);\n        message.deleted = true;\n        /**\n         * Emitted whenever a message is deleted.\n         * @event Client#messageDelete\n         * @param {Message} message The deleted message\n         */\n        client.emit(Events.MESSAGE_DELETE, message);\n      }\n    }\n\n    return { message };\n  }\n}\n\nmodule.exports = MessageDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageDeleteBulk.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageDeleteBulk.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage(\n          {\n            id,\n            guild_id: data.guild_id,\n          },\n          channel,\n          false,\n        );\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their id\n       */\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return { messages };\n    }\n    return {};\n  }\n}\n\nmodule.exports = MessageDeleteBulkAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageDeleteBulk.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageReactionAdd.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageReactionAdd.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events, VoiceBasedChannelTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst { PartialTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     // If originating from a guild\n     guild_id: 'id',\n     member: { ..., user: { ... } } }\n*/\n\nclass MessageReactionAdd extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n\n    const user = this.getUserFromMember(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    if (message.partial && !this.client.options.partials.includes(PartialTypes.REACTION)) return false;\n    const existing = message.reactions.cache.get(data.emoji.id ?? data.emoji.name);\n    if (existing?.users.cache.has(user.id)) return { message, reaction: existing, user };\n    const reaction = message.reactions._add({\n      emoji: data.emoji,\n      count: message.partial ? null : 0,\n      me: user.id === this.client.user.id,\n    });\n    if (!reaction) return false;\n    reaction._add(user);\n    /**\n     * Emitted whenever a reaction is added to a cached message.\n     * @event Client#messageReactionAdd\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user that applied the guild or reaction emoji\n     */\n    this.client.emit(Events.MESSAGE_REACTION_ADD, reaction, user);\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionAdd;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageReactionAdd.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageReactionRemove.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageReactionRemove.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events, VoiceBasedChannelTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     guild_id: 'id' }\n*/\n\nclass MessageReactionRemove extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n\n    const user = this.getUser(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    const reaction = this.getReaction(data, message, user);\n    if (!reaction) return false;\n    reaction._remove(user);\n    /**\n     * Emitted whenever a reaction is removed from a cached message.\n     * @event Client#messageReactionRemove\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user whose emoji or reaction emoji was removed\n     */\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE, reaction, user);\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionRemove;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageReactionRemove.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events, VoiceBasedChannelTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass MessageReactionRemoveAll extends Action {\n  handle(data) {\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    message.reactions.cache.clear();\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE_ALL, message);\n\n    return { message };\n  }\n}\n\n/**\n * Emitted whenever all reactions are removed from a cached message.\n * @event Client#messageReactionRemoveAll\n * @param {Message} message The message the reactions were removed from\n */\n\nmodule.exports = MessageReactionRemoveAll;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageReactionRemoveEmoji.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageReactionRemoveEmoji.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events, VoiceBasedChannelTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass MessageReactionRemoveEmoji extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    const reaction = this.getReaction(data, message);\n    if (!reaction) return false;\n    if (!message.partial) message.reactions.cache.delete(reaction.emoji.id ?? reaction.emoji.name);\n\n    /**\n     * Emitted when a bot removes an emoji reaction from a cached message.\n     * @event Client#messageReactionRemoveEmoji\n     * @param {MessageReaction} reaction The reaction that was removed\n     */\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE_EMOJI, reaction);\n    return { reaction };\n  }\n}\n\nmodule.exports = MessageReactionRemoveEmoji;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageReactionRemoveEmoji.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/MessageUpdate.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/MessageUpdate.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\n\nclass MessageUpdateAction extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n    if (channel) {\n      const { id, channel_id, guild_id, author, timestamp, type } = data;\n      const message = this.getMessage({ id, channel_id, guild_id, author, timestamp, type }, channel);\n      if (message) {\n        const old = message._update(data, true);\n        return {\n          old,\n          updated: message,\n        };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/MessageUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/PresenceUpdate.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/PresenceUpdate.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass PresenceUpdateAction extends Action {\n  handle(data) {\n    let user = this.client.users.cache.get(data.user.id);\n    if (!user && data.user?.username) user = this.client.users._add(data.user);\n    if (!user) return;\n\n    if (data.user?.username) {\n      if (!user.equals(data.user)) this.client.actions.UserUpdate.handle(data.user);\n    }\n\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild) return;\n\n    const oldPresence = guild.presences.cache.get(user.id)?._clone() ?? null;\n    let member = guild.members.cache.get(user.id);\n    if (!member && data.status !== 'offline') {\n      member = guild.members._add({\n        user,\n        deaf: false,\n        mute: false,\n      });\n      this.client.emit(Events.GUILD_MEMBER_AVAILABLE, member);\n    }\n    const newPresence = guild.presences._add(Object.assign(data, { guild }));\n    if (this.client.listenerCount(Events.PRESENCE_UPDATE) && !newPresence.equals(oldPresence)) {\n      /**\n       * Emitted whenever a guild member's presence (e.g. status, activity) is changed.\n       * @event Client#presenceUpdate\n       * @param {?Presence} oldPresence The presence before the update, if one at all\n       * @param {Presence} newPresence The presence after the update\n       */\n      this.client.emit(Events.PRESENCE_UPDATE, oldPresence, newPresence);\n    }\n  }\n}\n\nmodule.exports = PresenceUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/PresenceUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/StageInstanceCreate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/StageInstanceCreate.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass StageInstanceCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n\n    if (channel) {\n      const stageInstance = channel.guild.stageInstances._add(data);\n\n      /**\n       * Emitted whenever a stage instance is created.\n       * @event Client#stageInstanceCreate\n       * @param {StageInstance} stageInstance The created stage instance\n       */\n      client.emit(Events.STAGE_INSTANCE_CREATE, stageInstance);\n\n      return { stageInstance };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/StageInstanceCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/StageInstanceDelete.js":
/*!***************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/StageInstanceDelete.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass StageInstanceDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n\n    if (channel) {\n      const stageInstance = channel.guild.stageInstances._add(data);\n      if (stageInstance) {\n        channel.guild.stageInstances.cache.delete(stageInstance.id);\n        stageInstance.deleted = true;\n\n        /**\n         * Emitted whenever a stage instance is deleted.\n         * @event Client#stageInstanceDelete\n         * @param {StageInstance} stageInstance The deleted stage instance\n         */\n        client.emit(Events.STAGE_INSTANCE_DELETE, stageInstance);\n\n        return { stageInstance };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/StageInstanceDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/StageInstanceUpdate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/StageInstanceUpdate.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass StageInstanceUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n\n    if (channel) {\n      const oldStageInstance = channel.guild.stageInstances.cache.get(data.id)?._clone() ?? null;\n      const newStageInstance = channel.guild.stageInstances._add(data);\n\n      /**\n       * Emitted whenever a stage instance gets updated - e.g. change in topic or privacy level\n       * @event Client#stageInstanceUpdate\n       * @param {?StageInstance} oldStageInstance The stage instance before the update\n       * @param {StageInstance} newStageInstance The stage instance after the update\n       */\n      client.emit(Events.STAGE_INSTANCE_UPDATE, oldStageInstance, newStageInstance);\n\n      return { oldStageInstance, newStageInstance };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/StageInstanceUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ThreadCreate.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ThreadCreate.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ThreadCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const existing = client.channels.cache.has(data.id);\n    const thread = client.channels._add(data);\n    if (!existing && thread) {\n      /**\n       * Emitted whenever a thread is created or when the client user is added to a thread.\n       * @event Client#threadCreate\n       * @param {ThreadChannel} thread The thread that was created\n       */\n      client.emit(Events.THREAD_CREATE, thread);\n    }\n    return { thread };\n  }\n}\n\nmodule.exports = ThreadCreateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ThreadCreate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ThreadDelete.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ThreadDelete.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ThreadDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const thread = client.channels.cache.get(data.id);\n\n    if (thread) {\n      client.channels._remove(thread.id);\n      thread.deleted = true;\n      for (const message of thread.messages.cache.values()) {\n        message.deleted = true;\n      }\n\n      /**\n       * Emitted whenever a thread is deleted.\n       * @event Client#threadDelete\n       * @param {ThreadChannel} thread The thread that was deleted\n       */\n      client.emit(Events.THREAD_DELETE, thread);\n    }\n\n    return { thread };\n  }\n}\n\nmodule.exports = ThreadDeleteAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ThreadDelete.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ThreadListSync.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ThreadListSync.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ThreadListSyncAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!guild) return {};\n\n    if (data.channel_ids) {\n      for (const id of data.channel_ids) {\n        const channel = client.channels.resolve(id);\n        if (channel) this.removeStale(channel);\n      }\n    } else {\n      for (const channel of guild.channels.cache.values()) {\n        this.removeStale(channel);\n      }\n    }\n\n    const syncedThreads = data.threads.reduce((coll, rawThread) => {\n      const thread = client.channels._add(rawThread);\n      return coll.set(thread.id, thread);\n    }, new Collection());\n\n    for (const rawMember of Object.values(data.members)) {\n      // Discord sends the thread id as id in this object\n      const thread = client.channels.cache.get(rawMember.id);\n      if (thread) {\n        thread.members._add(rawMember);\n      }\n    }\n\n    /**\n     * Emitted whenever the client user gains access to a text or news channel that contains threads\n     * @event Client#threadListSync\n     * @param {Collection<Snowflake, ThreadChannel>} threads The threads that were synced\n     */\n    client.emit(Events.THREAD_LIST_SYNC, syncedThreads);\n\n    return {\n      syncedThreads,\n    };\n  }\n\n  removeStale(channel) {\n    channel.threads?.cache.forEach(thread => {\n      if (!thread.archived) {\n        this.client.channels._remove(thread.id);\n      }\n    });\n  }\n}\n\nmodule.exports = ThreadListSyncAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ThreadListSync.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ThreadMemberUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    // Discord sends the thread id as id in this object\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      const member = thread.members.cache.get(data.user_id);\n      if (!member) {\n        const newMember = thread.members._add(data);\n        return { newMember };\n      }\n      const old = member._update(data);\n      /**\n       * Emitted whenever the client user's thread member is updated.\n       * @event Client#threadMemberUpdate\n       * @param {ThreadMember} oldMember The member before the update\n       * @param {ThreadMember} newMember The member after the update\n       */\n      client.emit(Events.THREAD_MEMBER_UPDATE, old, member);\n    }\n    return {};\n  }\n}\n\nmodule.exports = ThreadMemberUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/ThreadMembersUpdate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ThreadMembersUpdate.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ThreadMembersUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      const old = thread.members.cache.clone();\n      thread.memberCount = data.member_count;\n\n      data.added_members?.forEach(rawMember => {\n        thread.members._add(rawMember);\n      });\n\n      data.removed_member_ids?.forEach(memberId => {\n        thread.members.cache.delete(memberId);\n      });\n\n      /**\n       * Emitted whenever members are added or removed from a thread. Requires `GUILD_MEMBERS` privileged intent\n       * @event Client#threadMembersUpdate\n       * @param {Collection<Snowflake, ThreadMember>} oldMembers The members before the update\n       * @param {Collection<Snowflake, ThreadMember>} newMembers The members after the update\n       */\n      client.emit(Events.THREAD_MEMBERS_UPDATE, old, thread.members.cache);\n    }\n    return {};\n  }\n}\n\nmodule.exports = ThreadMembersUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/ThreadMembersUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/TypingStart.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/TypingStart.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst Typing = __webpack_require__(/*! ../../structures/Typing */ \"./node_modules/discord.js/src/structures/Typing.js\");\nconst { Events, TextBasedChannelTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass TypingStart extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n    if (!channel) {\n      return;\n    }\n    if (!TextBasedChannelTypes.includes(channel.type)) {\n      this.client.emit(Events.WARN, `Discord sent a typing packet to a ${channel.type} channel ${channel.id}`);\n      return;\n    }\n\n    const user = this.getUserFromMember(data);\n    if (channel && user) {\n      /**\n       * Emitted whenever a user starts typing in a channel.\n       * @event Client#typingStart\n       * @param {Typing} typing The typing state\n       */\n      this.client.emit(Events.TYPING_START, new Typing(channel, user, data));\n    }\n  }\n}\n\nmodule.exports = TypingStart;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/TypingStart.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/UserUpdate.js":
/*!******************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/UserUpdate.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass UserUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const newUser = client.users.cache.get(data.id);\n    const oldUser = newUser._update(data);\n\n    if (!oldUser.equals(newUser)) {\n      /**\n       * Emitted whenever a user's details (e.g. username) are changed.\n       * Triggered by the Discord gateway events USER_UPDATE, GUILD_MEMBER_UPDATE, and PRESENCE_UPDATE.\n       * @event Client#userUpdate\n       * @param {User} oldUser The user before the update\n       * @param {User} newUser The user after the update\n       */\n      client.emit(Events.USER_UPDATE, oldUser, newUser);\n      return {\n        old: oldUser,\n        updated: newUser,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = UserUpdateAction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/UserUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/VoiceStateUpdate.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/VoiceStateUpdate.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst VoiceState = __webpack_require__(/*! ../../structures/VoiceState */ \"./node_modules/discord.js/src/structures/VoiceState.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass VoiceStateUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      // Update the state\n      const oldState =\n        guild.voiceStates.cache.get(data.user_id)?._clone() ?? new VoiceState(guild, { user_id: data.user_id });\n\n      const newState = guild.voiceStates._add(data);\n\n      // Get the member\n      let member = guild.members.cache.get(data.user_id);\n      if (member && data.member) {\n        member._patch(data.member);\n      } else if (data.member?.user && data.member.joined_at) {\n        member = guild.members._add(data.member);\n      }\n\n      // Emit event\n      if (member?.user.id === client.user.id) {\n        client.emit('debug', `[VOICE] received voice state update: ${JSON.stringify(data)}`);\n        client.voice.onVoiceStateUpdate(data);\n      }\n\n      /**\n       * Emitted whenever a member changes voice state - e.g. joins/leaves a channel, mutes/unmutes.\n       * @event Client#voiceStateUpdate\n       * @param {VoiceState} oldState The voice state before the update\n       * @param {VoiceState} newState The voice state after the update\n       */\n      client.emit(Events.VOICE_STATE_UPDATE, oldState, newState);\n    }\n  }\n}\n\nmodule.exports = VoiceStateUpdate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/VoiceStateUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions/WebhooksUpdate.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/WebhooksUpdate.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Action = __webpack_require__(/*! ./Action */ \"./node_modules/discord.js/src/client/actions/Action.js\");\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass WebhooksUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    /**\n     * Emitted whenever a guild text channel has its webhooks changed.\n     * @event Client#webhookUpdate\n     * @param {TextChannel} channel The channel that had a webhook update\n     */\n    if (channel) client.emit(Events.WEBHOOKS_UPDATE, channel);\n  }\n}\n\nmodule.exports = WebhooksUpdate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/WebhooksUpdate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/actions sync recursive ^\\.\\/.*$":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/client/actions/ sync ^\.\/.*$ ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./Action\": \"./node_modules/discord.js/src/client/actions/Action.js\",\n\t\"./Action.js\": \"./node_modules/discord.js/src/client/actions/Action.js\",\n\t\"./ActionsManager\": \"./node_modules/discord.js/src/client/actions/ActionsManager.js\",\n\t\"./ActionsManager.js\": \"./node_modules/discord.js/src/client/actions/ActionsManager.js\",\n\t\"./ChannelCreate\": \"./node_modules/discord.js/src/client/actions/ChannelCreate.js\",\n\t\"./ChannelCreate.js\": \"./node_modules/discord.js/src/client/actions/ChannelCreate.js\",\n\t\"./ChannelDelete\": \"./node_modules/discord.js/src/client/actions/ChannelDelete.js\",\n\t\"./ChannelDelete.js\": \"./node_modules/discord.js/src/client/actions/ChannelDelete.js\",\n\t\"./ChannelUpdate\": \"./node_modules/discord.js/src/client/actions/ChannelUpdate.js\",\n\t\"./ChannelUpdate.js\": \"./node_modules/discord.js/src/client/actions/ChannelUpdate.js\",\n\t\"./GuildBanAdd\": \"./node_modules/discord.js/src/client/actions/GuildBanAdd.js\",\n\t\"./GuildBanAdd.js\": \"./node_modules/discord.js/src/client/actions/GuildBanAdd.js\",\n\t\"./GuildBanRemove\": \"./node_modules/discord.js/src/client/actions/GuildBanRemove.js\",\n\t\"./GuildBanRemove.js\": \"./node_modules/discord.js/src/client/actions/GuildBanRemove.js\",\n\t\"./GuildChannelsPositionUpdate\": \"./node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js\",\n\t\"./GuildChannelsPositionUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js\",\n\t\"./GuildDelete\": \"./node_modules/discord.js/src/client/actions/GuildDelete.js\",\n\t\"./GuildDelete.js\": \"./node_modules/discord.js/src/client/actions/GuildDelete.js\",\n\t\"./GuildEmojiCreate\": \"./node_modules/discord.js/src/client/actions/GuildEmojiCreate.js\",\n\t\"./GuildEmojiCreate.js\": \"./node_modules/discord.js/src/client/actions/GuildEmojiCreate.js\",\n\t\"./GuildEmojiDelete\": \"./node_modules/discord.js/src/client/actions/GuildEmojiDelete.js\",\n\t\"./GuildEmojiDelete.js\": \"./node_modules/discord.js/src/client/actions/GuildEmojiDelete.js\",\n\t\"./GuildEmojiUpdate\": \"./node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js\",\n\t\"./GuildEmojiUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js\",\n\t\"./GuildEmojisUpdate\": \"./node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js\",\n\t\"./GuildEmojisUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js\",\n\t\"./GuildIntegrationsUpdate\": \"./node_modules/discord.js/src/client/actions/GuildIntegrationsUpdate.js\",\n\t\"./GuildIntegrationsUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildIntegrationsUpdate.js\",\n\t\"./GuildMemberRemove\": \"./node_modules/discord.js/src/client/actions/GuildMemberRemove.js\",\n\t\"./GuildMemberRemove.js\": \"./node_modules/discord.js/src/client/actions/GuildMemberRemove.js\",\n\t\"./GuildMemberUpdate\": \"./node_modules/discord.js/src/client/actions/GuildMemberUpdate.js\",\n\t\"./GuildMemberUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildMemberUpdate.js\",\n\t\"./GuildRoleCreate\": \"./node_modules/discord.js/src/client/actions/GuildRoleCreate.js\",\n\t\"./GuildRoleCreate.js\": \"./node_modules/discord.js/src/client/actions/GuildRoleCreate.js\",\n\t\"./GuildRoleDelete\": \"./node_modules/discord.js/src/client/actions/GuildRoleDelete.js\",\n\t\"./GuildRoleDelete.js\": \"./node_modules/discord.js/src/client/actions/GuildRoleDelete.js\",\n\t\"./GuildRoleUpdate\": \"./node_modules/discord.js/src/client/actions/GuildRoleUpdate.js\",\n\t\"./GuildRoleUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildRoleUpdate.js\",\n\t\"./GuildRolesPositionUpdate\": \"./node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js\",\n\t\"./GuildRolesPositionUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js\",\n\t\"./GuildStickerCreate\": \"./node_modules/discord.js/src/client/actions/GuildStickerCreate.js\",\n\t\"./GuildStickerCreate.js\": \"./node_modules/discord.js/src/client/actions/GuildStickerCreate.js\",\n\t\"./GuildStickerDelete\": \"./node_modules/discord.js/src/client/actions/GuildStickerDelete.js\",\n\t\"./GuildStickerDelete.js\": \"./node_modules/discord.js/src/client/actions/GuildStickerDelete.js\",\n\t\"./GuildStickerUpdate\": \"./node_modules/discord.js/src/client/actions/GuildStickerUpdate.js\",\n\t\"./GuildStickerUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildStickerUpdate.js\",\n\t\"./GuildStickersUpdate\": \"./node_modules/discord.js/src/client/actions/GuildStickersUpdate.js\",\n\t\"./GuildStickersUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildStickersUpdate.js\",\n\t\"./GuildUpdate\": \"./node_modules/discord.js/src/client/actions/GuildUpdate.js\",\n\t\"./GuildUpdate.js\": \"./node_modules/discord.js/src/client/actions/GuildUpdate.js\",\n\t\"./InteractionCreate\": \"./node_modules/discord.js/src/client/actions/InteractionCreate.js\",\n\t\"./InteractionCreate.js\": \"./node_modules/discord.js/src/client/actions/InteractionCreate.js\",\n\t\"./InviteCreate\": \"./node_modules/discord.js/src/client/actions/InviteCreate.js\",\n\t\"./InviteCreate.js\": \"./node_modules/discord.js/src/client/actions/InviteCreate.js\",\n\t\"./InviteDelete\": \"./node_modules/discord.js/src/client/actions/InviteDelete.js\",\n\t\"./InviteDelete.js\": \"./node_modules/discord.js/src/client/actions/InviteDelete.js\",\n\t\"./MessageCreate\": \"./node_modules/discord.js/src/client/actions/MessageCreate.js\",\n\t\"./MessageCreate.js\": \"./node_modules/discord.js/src/client/actions/MessageCreate.js\",\n\t\"./MessageDelete\": \"./node_modules/discord.js/src/client/actions/MessageDelete.js\",\n\t\"./MessageDelete.js\": \"./node_modules/discord.js/src/client/actions/MessageDelete.js\",\n\t\"./MessageDeleteBulk\": \"./node_modules/discord.js/src/client/actions/MessageDeleteBulk.js\",\n\t\"./MessageDeleteBulk.js\": \"./node_modules/discord.js/src/client/actions/MessageDeleteBulk.js\",\n\t\"./MessageReactionAdd\": \"./node_modules/discord.js/src/client/actions/MessageReactionAdd.js\",\n\t\"./MessageReactionAdd.js\": \"./node_modules/discord.js/src/client/actions/MessageReactionAdd.js\",\n\t\"./MessageReactionRemove\": \"./node_modules/discord.js/src/client/actions/MessageReactionRemove.js\",\n\t\"./MessageReactionRemove.js\": \"./node_modules/discord.js/src/client/actions/MessageReactionRemove.js\",\n\t\"./MessageReactionRemoveAll\": \"./node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js\",\n\t\"./MessageReactionRemoveAll.js\": \"./node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js\",\n\t\"./MessageReactionRemoveEmoji\": \"./node_modules/discord.js/src/client/actions/MessageReactionRemoveEmoji.js\",\n\t\"./MessageReactionRemoveEmoji.js\": \"./node_modules/discord.js/src/client/actions/MessageReactionRemoveEmoji.js\",\n\t\"./MessageUpdate\": \"./node_modules/discord.js/src/client/actions/MessageUpdate.js\",\n\t\"./MessageUpdate.js\": \"./node_modules/discord.js/src/client/actions/MessageUpdate.js\",\n\t\"./PresenceUpdate\": \"./node_modules/discord.js/src/client/actions/PresenceUpdate.js\",\n\t\"./PresenceUpdate.js\": \"./node_modules/discord.js/src/client/actions/PresenceUpdate.js\",\n\t\"./StageInstanceCreate\": \"./node_modules/discord.js/src/client/actions/StageInstanceCreate.js\",\n\t\"./StageInstanceCreate.js\": \"./node_modules/discord.js/src/client/actions/StageInstanceCreate.js\",\n\t\"./StageInstanceDelete\": \"./node_modules/discord.js/src/client/actions/StageInstanceDelete.js\",\n\t\"./StageInstanceDelete.js\": \"./node_modules/discord.js/src/client/actions/StageInstanceDelete.js\",\n\t\"./StageInstanceUpdate\": \"./node_modules/discord.js/src/client/actions/StageInstanceUpdate.js\",\n\t\"./StageInstanceUpdate.js\": \"./node_modules/discord.js/src/client/actions/StageInstanceUpdate.js\",\n\t\"./ThreadCreate\": \"./node_modules/discord.js/src/client/actions/ThreadCreate.js\",\n\t\"./ThreadCreate.js\": \"./node_modules/discord.js/src/client/actions/ThreadCreate.js\",\n\t\"./ThreadDelete\": \"./node_modules/discord.js/src/client/actions/ThreadDelete.js\",\n\t\"./ThreadDelete.js\": \"./node_modules/discord.js/src/client/actions/ThreadDelete.js\",\n\t\"./ThreadListSync\": \"./node_modules/discord.js/src/client/actions/ThreadListSync.js\",\n\t\"./ThreadListSync.js\": \"./node_modules/discord.js/src/client/actions/ThreadListSync.js\",\n\t\"./ThreadMemberUpdate\": \"./node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js\",\n\t\"./ThreadMemberUpdate.js\": \"./node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js\",\n\t\"./ThreadMembersUpdate\": \"./node_modules/discord.js/src/client/actions/ThreadMembersUpdate.js\",\n\t\"./ThreadMembersUpdate.js\": \"./node_modules/discord.js/src/client/actions/ThreadMembersUpdate.js\",\n\t\"./TypingStart\": \"./node_modules/discord.js/src/client/actions/TypingStart.js\",\n\t\"./TypingStart.js\": \"./node_modules/discord.js/src/client/actions/TypingStart.js\",\n\t\"./UserUpdate\": \"./node_modules/discord.js/src/client/actions/UserUpdate.js\",\n\t\"./UserUpdate.js\": \"./node_modules/discord.js/src/client/actions/UserUpdate.js\",\n\t\"./VoiceStateUpdate\": \"./node_modules/discord.js/src/client/actions/VoiceStateUpdate.js\",\n\t\"./VoiceStateUpdate.js\": \"./node_modules/discord.js/src/client/actions/VoiceStateUpdate.js\",\n\t\"./WebhooksUpdate\": \"./node_modules/discord.js/src/client/actions/WebhooksUpdate.js\",\n\t\"./WebhooksUpdate.js\": \"./node_modules/discord.js/src/client/actions/WebhooksUpdate.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/discord.js/src/client/actions sync recursive ^\\\\.\\\\/.*$\";\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/actions/_sync_^\\.\\/.*$?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/voice/ClientVoiceManager.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/voice/ClientVoiceManager.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Manages voice connections for the client\n */\nclass ClientVoiceManager {\n  constructor(client) {\n    /**\n     * The client that instantiated this voice manager\n     * @type {Client}\n     * @readonly\n     * @name ClientVoiceManager#client\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * Maps guild ids to voice adapters created for use with @discordjs/voice.\n     * @type {Map<Snowflake, Object>}\n     */\n    this.adapters = new Map();\n\n    client.on(Events.SHARD_DISCONNECT, (_, shardId) => {\n      for (const [guildId, adapter] of this.adapters.entries()) {\n        if (client.guilds.cache.get(guildId)?.shardId === shardId) {\n          adapter.destroy();\n        }\n      }\n    });\n  }\n\n  onVoiceServer(payload) {\n    this.adapters.get(payload.guild_id)?.onVoiceServerUpdate(payload);\n  }\n\n  onVoiceStateUpdate(payload) {\n    if (payload.guild_id && payload.session_id && payload.user_id === this.client.user?.id) {\n      this.adapters.get(payload.guild_id)?.onVoiceStateUpdate(payload);\n    }\n  }\n}\n\nmodule.exports = ClientVoiceManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/voice/ClientVoiceManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/WebSocketManager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/WebSocketManager.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst WebSocketShard = __webpack_require__(/*! ./WebSocketShard */ \"./node_modules/discord.js/src/client/websocket/WebSocketShard.js\");\nconst PacketHandlers = __webpack_require__(/*! ./handlers */ \"./node_modules/discord.js/src/client/websocket/handlers/index.js\");\nconst { Error } = __webpack_require__(/*! ../../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { Events, ShardEvents, Status, WSCodes, WSEvents } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Util = __webpack_require__(/*! ../../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\nconst BeforeReadyWhitelist = [\n  WSEvents.READY,\n  WSEvents.RESUMED,\n  WSEvents.GUILD_CREATE,\n  WSEvents.GUILD_DELETE,\n  WSEvents.GUILD_MEMBERS_CHUNK,\n  WSEvents.GUILD_MEMBER_ADD,\n  WSEvents.GUILD_MEMBER_REMOVE,\n];\n\nconst UNRECOVERABLE_CLOSE_CODES = Object.keys(WSCodes).slice(1).map(Number);\nconst UNRESUMABLE_CLOSE_CODES = [1000, 4006, 4007];\n\n/**\n * The WebSocket manager for this client.\n * <info>This class forwards raw dispatch events,\n * read more about it here {@link https://discord.com/developers/docs/topics/gateway}</info>\n * @extends EventEmitter\n */\nclass WebSocketManager extends EventEmitter {\n  constructor(client) {\n    super();\n\n    /**\n     * The client that instantiated this WebSocketManager\n     * @type {Client}\n     * @readonly\n     * @name WebSocketManager#client\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The gateway this manager uses\n     * @type {?string}\n     */\n    this.gateway = null;\n\n    /**\n     * The amount of shards this manager handles\n     * @private\n     * @type {number}\n     */\n    this.totalShards = this.client.options.shards.length;\n\n    /**\n     * A collection of all shards this manager handles\n     * @type {Collection<number, WebSocketShard>}\n     */\n    this.shards = new Collection();\n\n    /**\n     * An array of shards to be connected or that need to reconnect\n     * @type {Set<WebSocketShard>}\n     * @private\n     * @name WebSocketManager#shardQueue\n     */\n    Object.defineProperty(this, 'shardQueue', { value: new Set(), writable: true });\n\n    /**\n     * An array of queued events before this WebSocketManager became ready\n     * @type {Object[]}\n     * @private\n     * @name WebSocketManager#packetQueue\n     */\n    Object.defineProperty(this, 'packetQueue', { value: [] });\n\n    /**\n     * The current status of this WebSocketManager\n     * @type {Status}\n     */\n    this.status = Status.IDLE;\n\n    /**\n     * If this manager was destroyed. It will prevent shards from reconnecting\n     * @type {boolean}\n     * @private\n     */\n    this.destroyed = false;\n\n    /**\n     * If this manager is currently reconnecting one or multiple shards\n     * @type {boolean}\n     * @private\n     */\n    this.reconnecting = false;\n  }\n\n  /**\n   * The average ping of all WebSocketShards\n   * @type {number}\n   * @readonly\n   */\n  get ping() {\n    const sum = this.shards.reduce((a, b) => a + b.ping, 0);\n    return sum / this.shards.size;\n  }\n\n  /**\n   * Emits a debug message.\n   * @param {string} message The debug message\n   * @param {?WebSocketShard} [shard] The shard that emitted this message, if any\n   * @private\n   */\n  debug(message, shard) {\n    this.client.emit(Events.DEBUG, `[WS => ${shard ? `Shard ${shard.id}` : 'Manager'}] ${message}`);\n  }\n\n  /**\n   * Connects this manager to the gateway.\n   * @private\n   */\n  async connect() {\n    const invalidToken = new Error(WSCodes[4004]);\n    const {\n      url: gatewayURL,\n      shards: recommendedShards,\n      session_start_limit: sessionStartLimit,\n    } = await this.client.api.gateway.bot.get().catch(error => {\n      throw error.httpStatus === 401 ? invalidToken : error;\n    });\n\n    const { total, remaining } = sessionStartLimit;\n\n    this.debug(`Fetched Gateway Information\n    URL: ${gatewayURL}\n    Recommended Shards: ${recommendedShards}`);\n\n    this.debug(`Session Limit Information\n    Total: ${total}\n    Remaining: ${remaining}`);\n\n    this.gateway = `${gatewayURL}/`;\n\n    let { shards } = this.client.options;\n\n    if (shards === 'auto') {\n      this.debug(`Using the recommended shard count provided by Discord: ${recommendedShards}`);\n      this.totalShards = this.client.options.shardCount = recommendedShards;\n      shards = this.client.options.shards = Array.from({ length: recommendedShards }, (_, i) => i);\n    }\n\n    this.totalShards = shards.length;\n    this.debug(`Spawning shards: ${shards.join(', ')}`);\n    this.shardQueue = new Set(shards.map(id => new WebSocketShard(this, id)));\n\n    return this.createShards();\n  }\n\n  /**\n   * Handles the creation of a shard.\n   * @returns {Promise<boolean>}\n   * @private\n   */\n  async createShards() {\n    // If we don't have any shards to handle, return\n    if (!this.shardQueue.size) return false;\n\n    const [shard] = this.shardQueue;\n\n    this.shardQueue.delete(shard);\n\n    if (!shard.eventsAttached) {\n      shard.on(ShardEvents.ALL_READY, unavailableGuilds => {\n        /**\n         * Emitted when a shard turns ready.\n         * @event Client#shardReady\n         * @param {number} id The shard id that turned ready\n         * @param {?Set<Snowflake>} unavailableGuilds Set of unavailable guild ids, if any\n         */\n        this.client.emit(Events.SHARD_READY, shard.id, unavailableGuilds);\n\n        if (!this.shardQueue.size) this.reconnecting = false;\n        this.checkShardsReady();\n      });\n\n      shard.on(ShardEvents.CLOSE, event => {\n        if (event.code === 1000 ? this.destroyed : UNRECOVERABLE_CLOSE_CODES.includes(event.code)) {\n          /**\n           * Emitted when a shard's WebSocket disconnects and will no longer reconnect.\n           * @event Client#shardDisconnect\n           * @param {CloseEvent} event The WebSocket close event\n           * @param {number} id The shard id that disconnected\n           */\n          this.client.emit(Events.SHARD_DISCONNECT, event, shard.id);\n          this.debug(WSCodes[event.code], shard);\n          return;\n        }\n\n        if (UNRESUMABLE_CLOSE_CODES.includes(event.code)) {\n          // These event codes cannot be resumed\n          shard.sessionId = null;\n        }\n\n        /**\n         * Emitted when a shard is attempting to reconnect or re-identify.\n         * @event Client#shardReconnecting\n         * @param {number} id The shard id that is attempting to reconnect\n         */\n        this.client.emit(Events.SHARD_RECONNECTING, shard.id);\n\n        this.shardQueue.add(shard);\n\n        if (shard.sessionId) {\n          this.debug(`Session id is present, attempting an immediate reconnect...`, shard);\n          this.reconnect();\n        } else {\n          shard.destroy({ reset: true, emit: false, log: false });\n          this.reconnect();\n        }\n      });\n\n      shard.on(ShardEvents.INVALID_SESSION, () => {\n        this.client.emit(Events.SHARD_RECONNECTING, shard.id);\n      });\n\n      shard.on(ShardEvents.DESTROYED, () => {\n        this.debug('Shard was destroyed but no WebSocket connection was present! Reconnecting...', shard);\n\n        this.client.emit(Events.SHARD_RECONNECTING, shard.id);\n\n        this.shardQueue.add(shard);\n        this.reconnect();\n      });\n\n      shard.eventsAttached = true;\n    }\n\n    this.shards.set(shard.id, shard);\n\n    try {\n      await shard.connect();\n    } catch (error) {\n      if (error?.code && UNRECOVERABLE_CLOSE_CODES.includes(error.code)) {\n        throw new Error(WSCodes[error.code]);\n        // Undefined if session is invalid, error event for regular closes\n      } else if (!error || error.code) {\n        this.debug('Failed to connect to the gateway, requeueing...', shard);\n        this.shardQueue.add(shard);\n      } else {\n        throw error;\n      }\n    }\n    // If we have more shards, add a 5s delay\n    if (this.shardQueue.size) {\n      this.debug(`Shard Queue Size: ${this.shardQueue.size}; continuing in 5 seconds...`);\n      await Util.delayFor(5000);\n      return this.createShards();\n    }\n\n    return true;\n  }\n\n  /**\n   * Handles reconnects for this manager.\n   * @private\n   * @returns {Promise<boolean>}\n   */\n  async reconnect() {\n    if (this.reconnecting || this.status !== Status.READY) return false;\n    this.reconnecting = true;\n    try {\n      await this.createShards();\n    } catch (error) {\n      this.debug(`Couldn't reconnect or fetch information about the gateway. ${error}`);\n      if (error.httpStatus !== 401) {\n        this.debug(`Possible network error occurred. Retrying in 5s...`);\n        await Util.delayFor(5000);\n        this.reconnecting = false;\n        return this.reconnect();\n      }\n      // If we get an error at this point, it means we cannot reconnect anymore\n      if (this.client.listenerCount(Events.INVALIDATED)) {\n        /**\n         * Emitted when the client's session becomes invalidated.\n         * You are expected to handle closing the process gracefully and preventing a boot loop\n         * if you are listening to this event.\n         * @event Client#invalidated\n         */\n        this.client.emit(Events.INVALIDATED);\n        // Destroy just the shards. This means you have to handle the cleanup yourself\n        this.destroy();\n      } else {\n        this.client.destroy();\n      }\n    } finally {\n      this.reconnecting = false;\n    }\n    return true;\n  }\n\n  /**\n   * Broadcasts a packet to every shard this manager handles.\n   * @param {Object} packet The packet to send\n   * @private\n   */\n  broadcast(packet) {\n    for (const shard of this.shards.values()) shard.send(packet);\n  }\n\n  /**\n   * Destroys this manager and all its shards.\n   * @private\n   */\n  destroy() {\n    if (this.destroyed) return;\n    this.debug(`Manager was destroyed. Called by:\\n${new Error('MANAGER_DESTROYED').stack}`);\n    this.destroyed = true;\n    this.shardQueue.clear();\n    for (const shard of this.shards.values()) shard.destroy({ closeCode: 1000, reset: true, emit: false, log: false });\n  }\n\n  /**\n   * Processes a packet and queues it if this WebSocketManager is not ready.\n   * @param {Object} [packet] The packet to be handled\n   * @param {WebSocketShard} [shard] The shard that will handle this packet\n   * @returns {boolean}\n   * @private\n   */\n  handlePacket(packet, shard) {\n    if (packet && this.status !== Status.READY) {\n      if (!BeforeReadyWhitelist.includes(packet.t)) {\n        this.packetQueue.push({ packet, shard });\n        return false;\n      }\n    }\n\n    if (this.packetQueue.length) {\n      const item = this.packetQueue.shift();\n      setImmediate(() => {\n        this.handlePacket(item.packet, item.shard);\n      }).unref();\n    }\n\n    if (packet && PacketHandlers[packet.t]) {\n      PacketHandlers[packet.t](this.client, packet, shard);\n    }\n\n    return true;\n  }\n\n  /**\n   * Checks whether the client is ready to be marked as ready.\n   * @private\n   */\n  checkShardsReady() {\n    if (this.status === Status.READY) return;\n    if (this.shards.size !== this.totalShards || this.shards.some(s => s.status !== Status.READY)) {\n      return;\n    }\n\n    this.triggerClientReady();\n  }\n\n  /**\n   * Causes the client to be marked as ready and emits the ready event.\n   * @private\n   */\n  triggerClientReady() {\n    this.status = Status.READY;\n\n    this.client.readyAt = new Date();\n\n    /**\n     * Emitted when the client becomes ready to start working.\n     * @event Client#ready\n     * @param {Client} client The client\n     */\n    this.client.emit(Events.CLIENT_READY, this.client);\n\n    this.handlePacket();\n  }\n}\n\nmodule.exports = WebSocketManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/WebSocketManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/WebSocketShard.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/WebSocketShard.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst WebSocket = __webpack_require__(/*! ../../WebSocket */ \"./node_modules/discord.js/src/WebSocket.js\");\nconst { Status, Events, ShardEvents, Opcodes, WSEvents } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Intents = __webpack_require__(/*! ../../util/Intents */ \"./node_modules/discord.js/src/util/Intents.js\");\n\nconst STATUS_KEYS = Object.keys(Status);\nconst CONNECTION_STATE = Object.keys(WebSocket.WebSocket);\n\nlet zlib;\n\ntry {\n  zlib = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'zlib-sync'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n} catch {} // eslint-disable-line no-empty\n\n/**\n * Represents a Shard's WebSocket connection\n */\nclass WebSocketShard extends EventEmitter {\n  constructor(manager, id) {\n    super();\n\n    /**\n     * The WebSocketManager of the shard\n     * @type {WebSocketManager}\n     */\n    this.manager = manager;\n\n    /**\n     * The shard's id\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * The current status of the shard\n     * @type {Status}\n     */\n    this.status = Status.IDLE;\n\n    /**\n     * The current sequence of the shard\n     * @type {number}\n     * @private\n     */\n    this.sequence = -1;\n\n    /**\n     * The sequence of the shard after close\n     * @type {number}\n     * @private\n     */\n    this.closeSequence = 0;\n\n    /**\n     * The current session id of the shard\n     * @type {?string}\n     * @private\n     */\n    this.sessionId = null;\n\n    /**\n     * The previous heartbeat ping of the shard\n     * @type {number}\n     */\n    this.ping = -1;\n\n    /**\n     * The last time a ping was sent (a timestamp)\n     * @type {number}\n     * @private\n     */\n    this.lastPingTimestamp = -1;\n\n    /**\n     * If we received a heartbeat ack back. Used to identify zombie connections\n     * @type {boolean}\n     * @private\n     */\n    this.lastHeartbeatAcked = true;\n\n    /**\n     * Contains the rate limit queue and metadata\n     * @name WebSocketShard#ratelimit\n     * @type {Object}\n     * @private\n     */\n    Object.defineProperty(this, 'ratelimit', {\n      value: {\n        queue: [],\n        total: 120,\n        remaining: 120,\n        time: 60e3,\n        timer: null,\n      },\n    });\n\n    /**\n     * The WebSocket connection for the current shard\n     * @name WebSocketShard#connection\n     * @type {?WebSocket}\n     * @private\n     */\n    Object.defineProperty(this, 'connection', { value: null, writable: true });\n\n    /**\n     * @external Inflate\n     * @see {@link https://www.npmjs.com/package/zlib-sync}\n     */\n\n    /**\n     * The compression to use\n     * @name WebSocketShard#inflate\n     * @type {?Inflate}\n     * @private\n     */\n    Object.defineProperty(this, 'inflate', { value: null, writable: true });\n\n    /**\n     * The HELLO timeout\n     * @name WebSocketShard#helloTimeout\n     * @type {?NodeJS.Timeout}\n     * @private\n     */\n    Object.defineProperty(this, 'helloTimeout', { value: null, writable: true });\n\n    /**\n     * If the manager attached its event handlers on the shard\n     * @name WebSocketShard#eventsAttached\n     * @type {boolean}\n     * @private\n     */\n    Object.defineProperty(this, 'eventsAttached', { value: false, writable: true });\n\n    /**\n     * A set of guild ids this shard expects to receive\n     * @name WebSocketShard#expectedGuilds\n     * @type {?Set<string>}\n     * @private\n     */\n    Object.defineProperty(this, 'expectedGuilds', { value: null, writable: true });\n\n    /**\n     * The ready timeout\n     * @name WebSocketShard#readyTimeout\n     * @type {?NodeJS.Timeout}\n     * @private\n     */\n    Object.defineProperty(this, 'readyTimeout', { value: null, writable: true });\n\n    /**\n     * Time when the WebSocket connection was opened\n     * @name WebSocketShard#connectedAt\n     * @type {number}\n     * @private\n     */\n    Object.defineProperty(this, 'connectedAt', { value: 0, writable: true });\n  }\n\n  /**\n   * Emits a debug event.\n   * @param {string} message The debug message\n   * @private\n   */\n  debug(message) {\n    this.manager.debug(message, this);\n  }\n\n  /**\n   * Connects the shard to the gateway.\n   * @private\n   * @returns {Promise<void>} A promise that will resolve if the shard turns ready successfully,\n   * or reject if we couldn't connect\n   */\n  connect() {\n    const { gateway, client } = this.manager;\n\n    if (this.connection?.readyState === WebSocket.OPEN && this.status === Status.READY) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const cleanup = () => {\n        this.removeListener(ShardEvents.CLOSE, onClose);\n        this.removeListener(ShardEvents.READY, onReady);\n        this.removeListener(ShardEvents.RESUMED, onResumed);\n        this.removeListener(ShardEvents.INVALID_SESSION, onInvalidOrDestroyed);\n        this.removeListener(ShardEvents.DESTROYED, onInvalidOrDestroyed);\n      };\n\n      const onReady = () => {\n        cleanup();\n        resolve();\n      };\n\n      const onResumed = () => {\n        cleanup();\n        resolve();\n      };\n\n      const onClose = event => {\n        cleanup();\n        reject(event);\n      };\n\n      const onInvalidOrDestroyed = () => {\n        cleanup();\n        // eslint-disable-next-line prefer-promise-reject-errors\n        reject();\n      };\n\n      this.once(ShardEvents.READY, onReady);\n      this.once(ShardEvents.RESUMED, onResumed);\n      this.once(ShardEvents.CLOSE, onClose);\n      this.once(ShardEvents.INVALID_SESSION, onInvalidOrDestroyed);\n      this.once(ShardEvents.DESTROYED, onInvalidOrDestroyed);\n\n      if (this.connection?.readyState === WebSocket.OPEN) {\n        this.debug('An open connection was found, attempting an immediate identify.');\n        this.identify();\n        return;\n      }\n\n      if (this.connection) {\n        this.debug(`A connection object was found. Cleaning up before continuing.\n    State: ${CONNECTION_STATE[this.connection.readyState]}`);\n        this.destroy({ emit: false });\n      }\n\n      const wsQuery = { v: client.options.ws.version };\n\n      if (zlib) {\n        this.inflate = new zlib.Inflate({\n          chunkSize: 65535,\n          flush: zlib.Z_SYNC_FLUSH,\n          to: WebSocket.encoding === 'json' ? 'string' : '',\n        });\n        wsQuery.compress = 'zlib-stream';\n      }\n\n      this.debug(\n        `[CONNECT]\n    Gateway    : ${gateway}\n    Version    : ${client.options.ws.version}\n    Encoding   : ${WebSocket.encoding}\n    Compression: ${zlib ? 'zlib-stream' : 'none'}`,\n      );\n\n      this.status = this.status === Status.DISCONNECTED ? Status.RECONNECTING : Status.CONNECTING;\n      this.setHelloTimeout();\n\n      this.connectedAt = Date.now();\n\n      const ws = (this.connection = WebSocket.create(gateway, wsQuery));\n      ws.onopen = this.onOpen.bind(this);\n      ws.onmessage = this.onMessage.bind(this);\n      ws.onerror = this.onError.bind(this);\n      ws.onclose = this.onClose.bind(this);\n    });\n  }\n\n  /**\n   * Called whenever a connection is opened to the gateway.\n   * @private\n   */\n  onOpen() {\n    this.debug(`[CONNECTED] Took ${Date.now() - this.connectedAt}ms`);\n    this.status = Status.NEARLY;\n  }\n\n  /**\n   * Called whenever a message is received.\n   * @param {MessageEvent} event Event received\n   * @private\n   */\n  onMessage({ data }) {\n    let raw;\n    if (data instanceof ArrayBuffer) data = new Uint8Array(data);\n    if (zlib) {\n      const l = data.length;\n      const flush =\n        l >= 4 && data[l - 4] === 0x00 && data[l - 3] === 0x00 && data[l - 2] === 0xff && data[l - 1] === 0xff;\n\n      this.inflate.push(data, flush && zlib.Z_SYNC_FLUSH);\n      if (!flush) return;\n      raw = this.inflate.result;\n    } else {\n      raw = data;\n    }\n    let packet;\n    try {\n      packet = WebSocket.unpack(raw);\n    } catch (err) {\n      this.manager.client.emit(Events.SHARD_ERROR, err, this.id);\n      return;\n    }\n    this.manager.client.emit(Events.RAW, packet, this.id);\n    if (packet.op === Opcodes.DISPATCH) this.manager.emit(packet.t, packet.d, this.id);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called whenever an error occurs with the WebSocket.\n   * @param {ErrorEvent} event The error that occurred\n   * @private\n   */\n  onError(event) {\n    const error = event?.error ?? event;\n    if (!error) return;\n\n    /**\n     * Emitted whenever a shard's WebSocket encounters a connection error.\n     * @event Client#shardError\n     * @param {Error} error The encountered error\n     * @param {number} shardId The shard that encountered this error\n     */\n    this.manager.client.emit(Events.SHARD_ERROR, error, this.id);\n  }\n\n  /**\n   * @external CloseEvent\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n   */\n\n  /**\n   * @external ErrorEvent\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent}\n   */\n\n  /**\n   * @external MessageEvent\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent}\n   */\n\n  /**\n   * Called whenever a connection to the gateway is closed.\n   * @param {CloseEvent} event Close event that was received\n   * @private\n   */\n  onClose(event) {\n    if (this.sequence !== -1) this.closeSequence = this.sequence;\n    this.sequence = -1;\n\n    this.debug(`[CLOSE]\n    Event Code: ${event.code}\n    Clean     : ${event.wasClean}\n    Reason    : ${event.reason ?? 'No reason received'}`);\n\n    this.setHeartbeatTimer(-1);\n    this.setHelloTimeout(-1);\n    // If we still have a connection object, clean up its listeners\n    if (this.connection) this._cleanupConnection();\n\n    this.status = Status.DISCONNECTED;\n\n    /**\n     * Emitted when a shard's WebSocket closes.\n     * @private\n     * @event WebSocketShard#close\n     * @param {CloseEvent} event The received event\n     */\n    this.emit(ShardEvents.CLOSE, event);\n  }\n\n  /**\n   * Called whenever a packet is received.\n   * @param {Object} packet The received packet\n   * @private\n   */\n  onPacket(packet) {\n    if (!packet) {\n      this.debug(`Received broken packet: '${packet}'.`);\n      return;\n    }\n\n    switch (packet.t) {\n      case WSEvents.READY:\n        /**\n         * Emitted when the shard receives the READY payload and is now waiting for guilds\n         * @event WebSocketShard#ready\n         */\n        this.emit(ShardEvents.READY);\n\n        this.sessionId = packet.d.session_id;\n        this.expectedGuilds = new Set(packet.d.guilds.map(d => d.id));\n        this.status = Status.WAITING_FOR_GUILDS;\n        this.debug(`[READY] Session ${this.sessionId}.`);\n        this.lastHeartbeatAcked = true;\n        this.sendHeartbeat('ReadyHeartbeat');\n        break;\n      case WSEvents.RESUMED: {\n        /**\n         * Emitted when the shard resumes successfully\n         * @event WebSocketShard#resumed\n         */\n        this.emit(ShardEvents.RESUMED);\n\n        this.status = Status.READY;\n        const replayed = packet.s - this.closeSequence;\n        this.debug(`[RESUMED] Session ${this.sessionId} | Replayed ${replayed} events.`);\n        this.lastHeartbeatAcked = true;\n        this.sendHeartbeat('ResumeHeartbeat');\n        break;\n      }\n    }\n\n    if (packet.s > this.sequence) this.sequence = packet.s;\n\n    switch (packet.op) {\n      case Opcodes.HELLO:\n        this.setHelloTimeout(-1);\n        this.setHeartbeatTimer(packet.d.heartbeat_interval);\n        this.identify();\n        break;\n      case Opcodes.RECONNECT:\n        this.debug('[RECONNECT] Discord asked us to reconnect');\n        this.destroy({ closeCode: 4000 });\n        break;\n      case Opcodes.INVALID_SESSION:\n        this.debug(`[INVALID SESSION] Resumable: ${packet.d}.`);\n        // If we can resume the session, do so immediately\n        if (packet.d) {\n          this.identifyResume();\n          return;\n        }\n        // Reset the sequence\n        this.sequence = -1;\n        // Reset the session id as it's invalid\n        this.sessionId = null;\n        // Set the status to reconnecting\n        this.status = Status.RECONNECTING;\n        // Finally, emit the INVALID_SESSION event\n        this.emit(ShardEvents.INVALID_SESSION);\n        break;\n      case Opcodes.HEARTBEAT_ACK:\n        this.ackHeartbeat();\n        break;\n      case Opcodes.HEARTBEAT:\n        this.sendHeartbeat('HeartbeatRequest', true);\n        break;\n      default:\n        this.manager.handlePacket(packet, this);\n        if (this.status === Status.WAITING_FOR_GUILDS && packet.t === WSEvents.GUILD_CREATE) {\n          this.expectedGuilds.delete(packet.d.id);\n          this.checkReady();\n        }\n    }\n  }\n\n  /**\n   * Checks if the shard can be marked as ready\n   * @private\n   */\n  checkReady() {\n    // Step 0. Clear the ready timeout, if it exists\n    if (this.readyTimeout) {\n      clearTimeout(this.readyTimeout);\n      this.readyTimeout = null;\n    }\n    // Step 1. If we don't have any other guilds pending, we are ready\n    if (!this.expectedGuilds.size) {\n      this.debug('Shard received all its guilds. Marking as fully ready.');\n      this.status = Status.READY;\n\n      /**\n       * Emitted when the shard is fully ready.\n       * This event is emitted if:\n       * * all guilds were received by this shard\n       * * the ready timeout expired, and some guilds are unavailable\n       * @event WebSocketShard#allReady\n       * @param {?Set<string>} unavailableGuilds Set of unavailable guilds, if any\n       */\n      this.emit(ShardEvents.ALL_READY);\n      return;\n    }\n    const hasGuildsIntent = new Intents(this.manager.client.options.intents).has(Intents.FLAGS.GUILDS);\n    // Step 2. Create a 15s timeout that will mark the shard as ready if there are still unavailable guilds\n    this.readyTimeout = setTimeout(\n      () => {\n        this.debug(\n          `Shard ${hasGuildsIntent ? 'did' : 'will'} not receive any more guild packets` +\n            `${hasGuildsIntent ? ' in 15 seconds' : ''}.\\n   Unavailable guild count: ${this.expectedGuilds.size}`,\n        );\n\n        this.readyTimeout = null;\n\n        this.status = Status.READY;\n\n        this.emit(ShardEvents.ALL_READY, this.expectedGuilds);\n      },\n      hasGuildsIntent ? 15000 : 0,\n    ).unref();\n  }\n\n  /**\n   * Sets the HELLO packet timeout.\n   * @param {number} [time] If set to -1, it will clear the hello timeout timeout\n   * @private\n   */\n  setHelloTimeout(time) {\n    if (time === -1) {\n      if (this.helloTimeout) {\n        this.debug('Clearing the HELLO timeout.');\n        clearTimeout(this.helloTimeout);\n        this.helloTimeout = null;\n      }\n      return;\n    }\n    this.debug('Setting a HELLO timeout for 20s.');\n    this.helloTimeout = setTimeout(() => {\n      this.debug('Did not receive HELLO in time. Destroying and connecting again.');\n      this.destroy({ reset: true, closeCode: 4009 });\n    }, 20000).unref();\n  }\n\n  /**\n   * Sets the heartbeat timer for this shard.\n   * @param {number} time If -1, clears the interval, any other number sets an interval\n   * @private\n   */\n  setHeartbeatTimer(time) {\n    if (time === -1) {\n      if (this.heartbeatInterval) {\n        this.debug('Clearing the heartbeat interval.');\n        clearInterval(this.heartbeatInterval);\n        this.heartbeatInterval = null;\n      }\n      return;\n    }\n    this.debug(`Setting a heartbeat interval for ${time}ms.`);\n    // Sanity checks\n    if (this.heartbeatInterval) clearInterval(this.heartbeatInterval);\n    this.heartbeatInterval = setInterval(() => this.sendHeartbeat(), time).unref();\n  }\n\n  /**\n   * Sends a heartbeat to the WebSocket.\n   * If this shard didn't receive a heartbeat last time, it will destroy it and reconnect\n   * @param {string} [tag='HeartbeatTimer'] What caused this heartbeat to be sent\n   * @param {boolean} [ignoreHeartbeatAck] If we should send the heartbeat forcefully.\n   * @private\n   */\n  sendHeartbeat(\n    tag = 'HeartbeatTimer',\n    ignoreHeartbeatAck = [Status.WAITING_FOR_GUILDS, Status.IDENTIFYING, Status.RESUMING].includes(this.status),\n  ) {\n    if (ignoreHeartbeatAck && !this.lastHeartbeatAcked) {\n      this.debug(`[${tag}] Didn't process heartbeat ack yet but we are still connected. Sending one now.`);\n    } else if (!this.lastHeartbeatAcked) {\n      this.debug(\n        `[${tag}] Didn't receive a heartbeat ack last time, assuming zombie connection. Destroying and reconnecting.\n    Status          : ${STATUS_KEYS[this.status]}\n    Sequence        : ${this.sequence}\n    Connection State: ${this.connection ? CONNECTION_STATE[this.connection.readyState] : 'No Connection??'}`,\n      );\n\n      this.destroy({ closeCode: 4009, reset: true });\n      return;\n    }\n\n    this.debug(`[${tag}] Sending a heartbeat.`);\n    this.lastHeartbeatAcked = false;\n    this.lastPingTimestamp = Date.now();\n    this.send({ op: Opcodes.HEARTBEAT, d: this.sequence }, true);\n  }\n\n  /**\n   * Acknowledges a heartbeat.\n   * @private\n   */\n  ackHeartbeat() {\n    this.lastHeartbeatAcked = true;\n    const latency = Date.now() - this.lastPingTimestamp;\n    this.debug(`Heartbeat acknowledged, latency of ${latency}ms.`);\n    this.ping = latency;\n  }\n\n  /**\n   * Identifies the client on the connection.\n   * @private\n   * @returns {void}\n   */\n  identify() {\n    return this.sessionId ? this.identifyResume() : this.identifyNew();\n  }\n\n  /**\n   * Identifies as a new connection on the gateway.\n   * @private\n   */\n  identifyNew() {\n    const { client } = this.manager;\n    if (!client.token) {\n      this.debug('[IDENTIFY] No token available to identify a new session.');\n      return;\n    }\n\n    this.status = Status.IDENTIFYING;\n\n    // Clone the identify payload and assign the token and shard info\n    const d = {\n      ...client.options.ws,\n      intents: Intents.resolve(client.options.intents),\n      token: client.token,\n      shard: [this.id, Number(client.options.shardCount)],\n    };\n\n    this.debug(`[IDENTIFY] Shard ${this.id}/${client.options.shardCount} with intents: ${d.intents}`);\n    this.send({ op: Opcodes.IDENTIFY, d }, true);\n  }\n\n  /**\n   * Resumes a session on the gateway.\n   * @private\n   */\n  identifyResume() {\n    if (!this.sessionId) {\n      this.debug('[RESUME] No session id was present; identifying as a new session.');\n      this.identifyNew();\n      return;\n    }\n\n    this.status = Status.RESUMING;\n\n    this.debug(`[RESUME] Session ${this.sessionId}, sequence ${this.closeSequence}`);\n\n    const d = {\n      token: this.manager.client.token,\n      session_id: this.sessionId,\n      seq: this.closeSequence,\n    };\n\n    this.send({ op: Opcodes.RESUME, d }, true);\n  }\n\n  /**\n   * Adds a packet to the queue to be sent to the gateway.\n   * <warn>If you use this method, make sure you understand that you need to provide\n   * a full [Payload](https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-commands).\n   * Do not use this method if you don't know what you're doing.</warn>\n   * @param {Object} data The full packet to send\n   * @param {boolean} [important=false] If this packet should be added first in queue\n   */\n  send(data, important = false) {\n    this.ratelimit.queue[important ? 'unshift' : 'push'](data);\n    this.processQueue();\n  }\n\n  /**\n   * Sends data, bypassing the queue.\n   * @param {Object} data Packet to send\n   * @returns {void}\n   * @private\n   */\n  _send(data) {\n    if (this.connection?.readyState !== WebSocket.OPEN) {\n      this.debug(`Tried to send packet '${JSON.stringify(data)}' but no WebSocket is available!`);\n      this.destroy({ closeCode: 4000 });\n      return;\n    }\n\n    this.connection.send(WebSocket.pack(data), err => {\n      if (err) this.manager.client.emit(Events.SHARD_ERROR, err, this.id);\n    });\n  }\n\n  /**\n   * Processes the current WebSocket queue.\n   * @returns {void}\n   * @private\n   */\n  processQueue() {\n    if (this.ratelimit.remaining === 0) return;\n    if (this.ratelimit.queue.length === 0) return;\n    if (this.ratelimit.remaining === this.ratelimit.total) {\n      this.ratelimit.timer = setTimeout(() => {\n        this.ratelimit.remaining = this.ratelimit.total;\n        this.processQueue();\n      }, this.ratelimit.time).unref();\n    }\n    while (this.ratelimit.remaining > 0) {\n      const item = this.ratelimit.queue.shift();\n      if (!item) return;\n      this._send(item);\n      this.ratelimit.remaining--;\n    }\n  }\n\n  /**\n   * Destroys this shard and closes its WebSocket connection.\n   * @param {Object} [options={ closeCode: 1000, reset: false, emit: true, log: true }] Options for destroying the shard\n   * @private\n   */\n  destroy({ closeCode = 1000, reset = false, emit = true, log = true } = {}) {\n    if (log) {\n      this.debug(`[DESTROY]\n    Close Code    : ${closeCode}\n    Reset         : ${reset}\n    Emit DESTROYED: ${emit}`);\n    }\n\n    // Step 0: Remove all timers\n    this.setHeartbeatTimer(-1);\n    this.setHelloTimeout(-1);\n\n    // Step 1: Close the WebSocket connection, if any, otherwise, emit DESTROYED\n    if (this.connection) {\n      // If the connection is currently opened, we will (hopefully) receive close\n      if (this.connection.readyState === WebSocket.OPEN) {\n        this.connection.close(closeCode);\n      } else {\n        // Connection is not OPEN\n        this.debug(`WS State: ${CONNECTION_STATE[this.connection.readyState]}`);\n        // Remove listeners from the connection\n        this._cleanupConnection();\n        // Attempt to close the connection just in case\n        try {\n          this.connection.close(closeCode);\n        } catch {\n          // No-op\n        }\n        // Emit the destroyed event if needed\n        if (emit) this._emitDestroyed();\n      }\n    } else if (emit) {\n      // We requested a destroy, but we had no connection. Emit destroyed\n      this._emitDestroyed();\n    }\n\n    // Step 2: Null the connection object\n    this.connection = null;\n\n    // Step 3: Set the shard status to DISCONNECTED\n    this.status = Status.DISCONNECTED;\n\n    // Step 4: Cache the old sequence (use to attempt a resume)\n    if (this.sequence !== -1) this.closeSequence = this.sequence;\n\n    // Step 5: Reset the sequence and session id if requested\n    if (reset) {\n      this.sequence = -1;\n      this.sessionId = null;\n    }\n\n    // Step 6: reset the ratelimit data\n    this.ratelimit.remaining = this.ratelimit.total;\n    this.ratelimit.queue.length = 0;\n    if (this.ratelimit.timer) {\n      clearTimeout(this.ratelimit.timer);\n      this.ratelimit.timer = null;\n    }\n  }\n\n  /**\n   * Cleans up the WebSocket connection listeners.\n   * @private\n   */\n  _cleanupConnection() {\n    this.connection.onopen = this.connection.onclose = this.connection.onerror = this.connection.onmessage = null;\n  }\n\n  /**\n   * Emits the DESTROYED event on the shard\n   * @private\n   */\n  _emitDestroyed() {\n    /**\n     * Emitted when a shard is destroyed, but no WebSocket connection was present.\n     * @private\n     * @event WebSocketShard#destroyed\n     */\n    this.emit(ShardEvents.DESTROYED);\n  }\n}\n\nmodule.exports = WebSocketShard;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/WebSocketShard.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_CREATE.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_CREATE.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, { d: data }) => {\n  const commandManager = data.guild_id ? client.guilds.cache.get(data.guild_id)?.commands : client.application.commands;\n  if (!commandManager) return;\n\n  const command = commandManager._add(data, data.application_id === client.application.id);\n\n  /**\n   * Emitted when a guild application command is created.\n   * @event Client#applicationCommandCreate\n   * @param {ApplicationCommand} command The command which was created\n   */\n  client.emit(Events.APPLICATION_COMMAND_CREATE, command);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_DELETE.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_DELETE.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, { d: data }) => {\n  const commandManager = data.guild_id ? client.guilds.cache.get(data.guild_id)?.commands : client.application.commands;\n  if (!commandManager) return;\n\n  const isOwn = data.application_id === client.application.id;\n  const command = commandManager._add(data, isOwn);\n  if (isOwn) commandManager.cache.delete(data.id);\n\n  /**\n   * Emitted when a guild application command is deleted.\n   * @event Client#applicationCommandDelete\n   * @param {ApplicationCommand} command The command which was deleted\n   */\n  client.emit(Events.APPLICATION_COMMAND_DELETE, command);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_UPDATE.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_UPDATE.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, { d: data }) => {\n  const commandManager = data.guild_id ? client.guilds.cache.get(data.guild_id)?.commands : client.application.commands;\n  if (!commandManager) return;\n\n  const oldCommand = commandManager.cache.get(data.id)?._clone() ?? null;\n  const newCommand = commandManager._add(data, data.application_id === client.application.id);\n\n  /**\n   * Emitted when a guild application command is updated.\n   * @event Client#applicationCommandUpdate\n   * @param {?ApplicationCommand} oldCommand The command before the update\n   * @param {ApplicationCommand} newCommand The command after the update\n   */\n  client.emit(Events.APPLICATION_COMMAND_UPDATE, oldCommand, newCommand);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_CREATE.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_CREATE.js ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.ChannelCreate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_DELETE.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_DELETE.js ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.ChannelDelete.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, { d: data }) => {\n  const channel = client.channels.cache.get(data.channel_id);\n  const time = new Date(data.last_pin_timestamp);\n\n  if (channel && !Number.isNaN(time.getTime())) {\n    // Discord sends null for last_pin_timestamp if the last pinned message was removed\n    channel.lastPinTimestamp = time.getTime() ?? null;\n\n    /**\n     * Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event,\n     * not much information can be provided easily here - you need to manually check the pins yourself.\n     * @event Client#channelPinsUpdate\n     * @param {TextBasedChannels} channel The channel that the pins update occurred in\n     * @param {Date} time The time of the pins update\n     */\n    client.emit(Events.CHANNEL_PINS_UPDATE, channel, time);\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_UPDATE.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_UPDATE.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.ChannelUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a channel is updated - e.g. name change, topic change, channel type change.\n     * @event Client#channelUpdate\n     * @param {DMChannel|GuildChannel} oldChannel The channel before the update\n     * @param {DMChannel|GuildChannel} newChannel The channel after the update\n     */\n    client.emit(Events.CHANNEL_UPDATE, old, updated);\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_ADD.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_ADD.js ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildBanAdd.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_ADD.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_REMOVE.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_REMOVE.js ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildBanRemove.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_REMOVE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_CREATE.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_CREATE.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events, Status } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, { d: data }, shard) => {\n  let guild = client.guilds.cache.get(data.id);\n  if (guild) {\n    if (!guild.available && !data.unavailable) {\n      // A newly available guild\n      guild._patch(data);\n    }\n  } else {\n    // A new guild\n    data.shardId = shard.id;\n    guild = client.guilds._add(data);\n    if (client.ws.status === Status.READY) {\n      /**\n       * Emitted whenever the client joins a guild.\n       * @event Client#guildCreate\n       * @param {Guild} guild The created guild\n       */\n      client.emit(Events.GUILD_CREATE, guild);\n    }\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_DELETE.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_DELETE.js ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildDelete.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_EMOJIS_UPDATE.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_EMOJIS_UPDATE.js ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildEmojisUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_EMOJIS_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_INTEGRATIONS_UPDATE.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_INTEGRATIONS_UPDATE.js ***!
  \********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildIntegrationsUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_INTEGRATIONS_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBERS_CHUNK.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBERS_CHUNK.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, { d: data }) => {\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (!guild) return;\n  const members = new Collection();\n\n  for (const member of data.members) members.set(member.user.id, guild.members._add(member));\n  if (data.presences) {\n    for (const presence of data.presences) guild.presences._add(Object.assign(presence, { guild }));\n  }\n\n  /**\n   * Represents the properties of a guild members chunk\n   * @typedef {Object} GuildMembersChunk\n   * @property {number} index Index of the received chunk\n   * @property {number} count Number of chunks the client should receive\n   * @property {?string} nonce Nonce for this chunk\n   */\n\n  /**\n   * Emitted whenever a chunk of guild members is received (all members come from the same guild).\n   * @event Client#guildMembersChunk\n   * @param {Collection<Snowflake, GuildMember>} members The members in the chunk\n   * @param {Guild} guild The guild related to the member chunk\n   * @param {GuildMembersChunk} chunk Properties of the received chunk\n   */\n  client.emit(Events.GUILD_MEMBERS_CHUNK, members, guild, {\n    count: data.chunk_count,\n    index: data.chunk_index,\n    nonce: data.nonce,\n  });\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBERS_CHUNK.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_ADD.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_ADD.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events, Status } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, { d: data }, shard) => {\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (guild) {\n    guild.memberCount++;\n    const member = guild.members._add(data);\n    if (shard.status === Status.READY) {\n      /**\n       * Emitted whenever a user joins a guild.\n       * @event Client#guildMemberAdd\n       * @param {GuildMember} member The member that has joined a guild\n       */\n      client.emit(Events.GUILD_MEMBER_ADD, member);\n    }\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_ADD.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_REMOVE.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_REMOVE.js ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet, shard) => {\n  client.actions.GuildMemberRemove.handle(packet.d, shard);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_REMOVE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_UPDATE.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_UPDATE.js ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet, shard) => {\n  client.actions.GuildMemberUpdate.handle(packet.d, shard);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_CREATE.js":
/*!************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_CREATE.js ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleCreate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_DELETE.js":
/*!************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_DELETE.js ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleDelete.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_UPDATE.js":
/*!************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_UPDATE.js ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_STICKERS_UPDATE.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_STICKERS_UPDATE.js ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildStickersUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_STICKERS_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/GUILD_UPDATE.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/GUILD_UPDATE.js ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/GUILD_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/INTERACTION_CREATE.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/INTERACTION_CREATE.js ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.InteractionCreate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/INTERACTION_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/INVITE_CREATE.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/INVITE_CREATE.js ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.InviteCreate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/INVITE_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/INVITE_DELETE.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/INVITE_DELETE.js ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.InviteDelete.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/INVITE_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_CREATE.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_CREATE.js ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageCreate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE.js ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageDelete.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE_BULK.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE_BULK.js ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageDeleteBulk.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE_BULK.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_ADD.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_ADD.js ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionAdd.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_ADD.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE.js ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemove.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_ALL.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_ALL.js ***!
  \**********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemoveAll.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_ALL.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_EMOJI.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_EMOJI.js ***!
  \************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemoveEmoji.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_EMOJI.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_UPDATE.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_UPDATE.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.MessageUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a message is updated - e.g. embed or content change.\n     * @event Client#messageUpdate\n     * @param {Message} oldMessage The message before the update\n     * @param {Message} newMessage The message after the update\n     */\n    client.emit(Events.MESSAGE_UPDATE, old, updated);\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/PRESENCE_UPDATE.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/PRESENCE_UPDATE.js ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.PresenceUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/PRESENCE_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/READY.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/READY.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst ClientApplication = __webpack_require__(/*! ../../../structures/ClientApplication */ \"./node_modules/discord.js/src/structures/ClientApplication.js\");\nlet ClientUser;\n\nmodule.exports = (client, { d: data }, shard) => {\n  if (client.user) {\n    client.user._patch(data.user);\n  } else {\n    if (!ClientUser) ClientUser = __webpack_require__(/*! ../../../structures/ClientUser */ \"./node_modules/discord.js/src/structures/ClientUser.js\");\n    client.user = new ClientUser(client, data.user);\n    client.users.cache.set(client.user.id, client.user);\n  }\n\n  for (const guild of data.guilds) {\n    guild.shardId = shard.id;\n    client.guilds._add(guild);\n  }\n\n  if (client.application) {\n    client.application._patch(data.application);\n  } else {\n    client.application = new ClientApplication(client, data.application);\n  }\n\n  shard.checkReady();\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/READY.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/RESUMED.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/RESUMED.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, packet, shard) => {\n  const replayed = shard.sequence - shard.closeSequence;\n  /**\n   * Emitted when a shard resumes successfully.\n   * @event Client#shardResume\n   * @param {number} id The shard id that resumed\n   * @param {number} replayedEvents The amount of replayed events\n   */\n  client.emit(Events.SHARD_RESUME, shard.id, replayed);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/RESUMED.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_CREATE.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_CREATE.js ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceCreate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_DELETE.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_DELETE.js ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceDelete.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_UPDATE.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_UPDATE.js ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/THREAD_CREATE.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/THREAD_CREATE.js ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadCreate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/THREAD_CREATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/THREAD_DELETE.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/THREAD_DELETE.js ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadDelete.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/THREAD_DELETE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/THREAD_LIST_SYNC.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/THREAD_LIST_SYNC.js ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadListSync.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/THREAD_LIST_SYNC.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBERS_UPDATE.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBERS_UPDATE.js ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadMembersUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBERS_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBER_UPDATE.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBER_UPDATE.js ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadMemberUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBER_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/THREAD_UPDATE.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/THREAD_UPDATE.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Events } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.ChannelUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a thread is updated - e.g. name change, archive state change, locked state change.\n     * @event Client#threadUpdate\n     * @param {ThreadChannel} oldThread The thread before the update\n     * @param {ThreadChannel} newThread The thread after the update\n     */\n    client.emit(Events.THREAD_UPDATE, old, updated);\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/THREAD_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/TYPING_START.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/TYPING_START.js ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.TypingStart.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/TYPING_START.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/USER_UPDATE.js":
/*!******************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/USER_UPDATE.js ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.UserUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/USER_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/VOICE_SERVER_UPDATE.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/VOICE_SERVER_UPDATE.js ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.emit('debug', `[VOICE] received voice server: ${JSON.stringify(packet)}`);\n  client.voice.onVoiceServer(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/VOICE_SERVER_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/VOICE_STATE_UPDATE.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/VOICE_STATE_UPDATE.js ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.VoiceStateUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/VOICE_STATE_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/WEBHOOKS_UPDATE.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/WEBHOOKS_UPDATE.js ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (client, packet) => {\n  client.actions.WebhooksUpdate.handle(packet.d);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/WEBHOOKS_UPDATE.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { WSEvents } = __webpack_require__(/*! ../../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nconst handlers = {};\n\nfor (const name of Object.keys(WSEvents)) {\n  handlers[name] = __webpack_require__(\"./node_modules/discord.js/src/client/websocket/handlers sync recursive ^\\\\.\\\\/.*\\\\.js$\")(`./${name}.js`);\n}\n\nmodule.exports = handlers;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/index.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/client/websocket/handlers sync recursive ^\\.\\/.*\\.js$":
/*!**********************************************************************************!*\
  !*** ./node_modules/discord.js/src/client/websocket/handlers/ sync ^\.\/.*\.js$ ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./APPLICATION_COMMAND_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_CREATE.js\",\n\t\"./APPLICATION_COMMAND_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_DELETE.js\",\n\t\"./APPLICATION_COMMAND_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_UPDATE.js\",\n\t\"./CHANNEL_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_CREATE.js\",\n\t\"./CHANNEL_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_DELETE.js\",\n\t\"./CHANNEL_PINS_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js\",\n\t\"./CHANNEL_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_UPDATE.js\",\n\t\"./GUILD_BAN_ADD.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_ADD.js\",\n\t\"./GUILD_BAN_REMOVE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_REMOVE.js\",\n\t\"./GUILD_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_CREATE.js\",\n\t\"./GUILD_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_DELETE.js\",\n\t\"./GUILD_EMOJIS_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_EMOJIS_UPDATE.js\",\n\t\"./GUILD_INTEGRATIONS_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_INTEGRATIONS_UPDATE.js\",\n\t\"./GUILD_MEMBERS_CHUNK.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBERS_CHUNK.js\",\n\t\"./GUILD_MEMBER_ADD.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_ADD.js\",\n\t\"./GUILD_MEMBER_REMOVE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_REMOVE.js\",\n\t\"./GUILD_MEMBER_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_UPDATE.js\",\n\t\"./GUILD_ROLE_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_CREATE.js\",\n\t\"./GUILD_ROLE_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_DELETE.js\",\n\t\"./GUILD_ROLE_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_UPDATE.js\",\n\t\"./GUILD_STICKERS_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_STICKERS_UPDATE.js\",\n\t\"./GUILD_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/GUILD_UPDATE.js\",\n\t\"./INTERACTION_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/INTERACTION_CREATE.js\",\n\t\"./INVITE_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/INVITE_CREATE.js\",\n\t\"./INVITE_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/INVITE_DELETE.js\",\n\t\"./MESSAGE_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_CREATE.js\",\n\t\"./MESSAGE_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE.js\",\n\t\"./MESSAGE_DELETE_BULK.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE_BULK.js\",\n\t\"./MESSAGE_REACTION_ADD.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_ADD.js\",\n\t\"./MESSAGE_REACTION_REMOVE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE.js\",\n\t\"./MESSAGE_REACTION_REMOVE_ALL.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_ALL.js\",\n\t\"./MESSAGE_REACTION_REMOVE_EMOJI.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_EMOJI.js\",\n\t\"./MESSAGE_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_UPDATE.js\",\n\t\"./PRESENCE_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/PRESENCE_UPDATE.js\",\n\t\"./READY.js\": \"./node_modules/discord.js/src/client/websocket/handlers/READY.js\",\n\t\"./RESUMED.js\": \"./node_modules/discord.js/src/client/websocket/handlers/RESUMED.js\",\n\t\"./STAGE_INSTANCE_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_CREATE.js\",\n\t\"./STAGE_INSTANCE_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_DELETE.js\",\n\t\"./STAGE_INSTANCE_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_UPDATE.js\",\n\t\"./THREAD_CREATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/THREAD_CREATE.js\",\n\t\"./THREAD_DELETE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/THREAD_DELETE.js\",\n\t\"./THREAD_LIST_SYNC.js\": \"./node_modules/discord.js/src/client/websocket/handlers/THREAD_LIST_SYNC.js\",\n\t\"./THREAD_MEMBERS_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBERS_UPDATE.js\",\n\t\"./THREAD_MEMBER_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBER_UPDATE.js\",\n\t\"./THREAD_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/THREAD_UPDATE.js\",\n\t\"./TYPING_START.js\": \"./node_modules/discord.js/src/client/websocket/handlers/TYPING_START.js\",\n\t\"./USER_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/USER_UPDATE.js\",\n\t\"./VOICE_SERVER_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/VOICE_SERVER_UPDATE.js\",\n\t\"./VOICE_STATE_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/VOICE_STATE_UPDATE.js\",\n\t\"./WEBHOOKS_UPDATE.js\": \"./node_modules/discord.js/src/client/websocket/handlers/WEBHOOKS_UPDATE.js\",\n\t\"./index.js\": \"./node_modules/discord.js/src/client/websocket/handlers/index.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/discord.js/src/client/websocket/handlers sync recursive ^\\\\.\\\\/.*\\\\.js$\";\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/client/websocket/handlers/_sync_^\\.\\/.*\\.js$?");

/***/ }),

/***/ "./node_modules/discord.js/src/errors/DJSError.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/errors/DJSError.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Heavily inspired by node's `internal/errors` module\n\nconst kCode = Symbol('code');\nconst messages = new Map();\n\n/**\n * Extend an error of some sort into a DiscordjsError.\n * @param {Error} Base Base error to extend\n * @returns {DiscordjsError}\n */\nfunction makeDiscordjsError(Base) {\n  return class DiscordjsError extends Base {\n    constructor(key, ...args) {\n      super(message(key, args));\n      this[kCode] = key;\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DiscordjsError);\n    }\n\n    get name() {\n      return `${super.name} [${this[kCode]}]`;\n    }\n\n    get code() {\n      return this[kCode];\n    }\n  };\n}\n\n/**\n * Format the message for an error.\n * @param {string} key Error key\n * @param {Array<*>} args Arguments to pass for util format or as function args\n * @returns {string} Formatted string\n */\nfunction message(key, args) {\n  if (typeof key !== 'string') throw new Error('Error message key must be a string');\n  const msg = messages.get(key);\n  if (!msg) throw new Error(`An invalid error message key was used: ${key}.`);\n  if (typeof msg === 'function') return msg(...args);\n  if (!args?.length) return msg;\n  args.unshift(msg);\n  return String(...args);\n}\n\n/**\n * Register an error code and message.\n * @param {string} sym Unique name for the error\n * @param {*} val Value of the error\n */\nfunction register(sym, val) {\n  messages.set(sym, typeof val === 'function' ? val : String(val));\n}\n\nmodule.exports = {\n  register,\n  Error: makeDiscordjsError(Error),\n  TypeError: makeDiscordjsError(TypeError),\n  RangeError: makeDiscordjsError(RangeError),\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/errors/DJSError.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/errors/Messages.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/errors/Messages.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { register } = __webpack_require__(/*! ./DJSError */ \"./node_modules/discord.js/src/errors/DJSError.js\");\n\nconst Messages = {\n  CLIENT_INVALID_OPTION: (prop, must) => `The ${prop} option must be ${must}`,\n  CLIENT_INVALID_PROVIDED_SHARDS: 'None of the provided shards were valid.',\n  CLIENT_MISSING_INTENTS: 'Valid intents must be provided for the Client.',\n  CLIENT_NOT_READY: action => `The client needs to be logged in to ${action}.`,\n\n  TOKEN_INVALID: 'An invalid token was provided.',\n  TOKEN_MISSING: 'Request to use token, but token was unavailable to the client.',\n\n  WS_CLOSE_REQUESTED: 'WebSocket closed due to user request.',\n  WS_CONNECTION_EXISTS: 'There is already an existing WebSocket connection.',\n  WS_NOT_OPEN: (data = 'data') => `Websocket not open to send ${data}`,\n  MANAGER_DESTROYED: 'Manager was destroyed.',\n\n  BITFIELD_INVALID: bit => `Invalid bitfield flag or number: ${bit}.`,\n\n  SHARDING_INVALID: 'Invalid shard settings were provided.',\n  SHARDING_REQUIRED: 'This session would have handled too many guilds - Sharding is required.',\n  INVALID_INTENTS: 'Invalid intent provided for WebSocket intents.',\n  DISALLOWED_INTENTS: 'Privileged intent provided is not enabled or whitelisted.',\n  SHARDING_NO_SHARDS: 'No shards have been spawned.',\n  SHARDING_IN_PROCESS: 'Shards are still being spawned.',\n  SHARDING_INVALID_EVAL_BROADCAST: 'Script to evaluate must be a function',\n  SHARDING_SHARD_NOT_FOUND: id => `Shard ${id} could not be found.`,\n  SHARDING_ALREADY_SPAWNED: count => `Already spawned ${count} shards.`,\n  SHARDING_PROCESS_EXISTS: id => `Shard ${id} already has an active process.`,\n  SHARDING_WORKER_EXISTS: id => `Shard ${id} already has an active worker.`,\n  SHARDING_READY_TIMEOUT: id => `Shard ${id}'s Client took too long to become ready.`,\n  SHARDING_READY_DISCONNECTED: id => `Shard ${id}'s Client disconnected before becoming ready.`,\n  SHARDING_READY_DIED: id => `Shard ${id}'s process exited before its Client became ready.`,\n  SHARDING_NO_CHILD_EXISTS: id => `Shard ${id} has no active process or worker.`,\n  SHARDING_SHARD_MISCALCULATION: (shard, guild, count) =>\n    `Calculated invalid shard ${shard} for guild ${guild} with ${count} shards.`,\n\n  COLOR_RANGE: 'Color must be within the range 0 - 16777215 (0xFFFFFF).',\n  COLOR_CONVERT: 'Unable to convert color to a number.',\n\n  EMBED_TITLE: 'MessageEmbed title must be a string.',\n  EMBED_FIELD_NAME: 'MessageEmbed field names must be non-empty strings.',\n  EMBED_FIELD_VALUE: 'MessageEmbed field values must be non-empty strings.',\n  EMBED_FOOTER_TEXT: 'MessageEmbed footer text must be a string.',\n  EMBED_DESCRIPTION: 'MessageEmbed description must be a string.',\n  EMBED_AUTHOR_NAME: 'MessageEmbed author name must be a string.',\n\n  BUTTON_LABEL: 'MessageButton label must be a string',\n  BUTTON_URL: 'MessageButton url must be a string',\n  BUTTON_CUSTOM_ID: 'MessageButton customId must be a string',\n\n  SELECT_MENU_CUSTOM_ID: 'MessageSelectMenu customId must be a string',\n  SELECT_MENU_PLACEHOLDER: 'MessageSelectMenu placeholder must be a string',\n  SELECT_OPTION_LABEL: 'MessageSelectOption label must be a string',\n  SELECT_OPTION_VALUE: 'MessageSelectOption value must be a string',\n  SELECT_OPTION_DESCRIPTION: 'MessageSelectOption description must be a string',\n\n  INTERACTION_COLLECTOR_ERROR: reason => `Collector received no interactions before ending with reason: ${reason}`,\n\n  FILE_NOT_FOUND: file => `File could not be found: ${file}`,\n\n  USER_NO_DMCHANNEL: 'No DM Channel exists!',\n\n  VOICE_NOT_STAGE_CHANNEL: 'You are only allowed to do this in stage channels.',\n\n  VOICE_STATE_UNCACHED_MEMBER: 'The member of this voice state is uncached.',\n  VOICE_STATE_NOT_OWN:\n    'You cannot self-deafen/mute/request to speak on VoiceStates that do not belong to the ClientUser.',\n  VOICE_STATE_INVALID_TYPE: name => `${name} must be a boolean.`,\n\n  REQ_RESOURCE_TYPE: 'The resource must be a string, Buffer or a valid file stream.',\n\n  IMAGE_FORMAT: format => `Invalid image format: ${format}`,\n  IMAGE_SIZE: size => `Invalid image size: ${size}`,\n\n  MESSAGE_BULK_DELETE_TYPE: 'The messages must be an Array, Collection, or number.',\n  MESSAGE_NONCE_TYPE: 'Message nonce must be an integer or a string.',\n  MESSAGE_CONTENT_TYPE: 'Message content must be a non-empty string.',\n\n  SPLIT_MAX_LEN: 'Chunk exceeds the max length and contains no split characters.',\n\n  BAN_RESOLVE_ID: (ban = false) => `Couldn't resolve the user id to ${ban ? 'ban' : 'unban'}.`,\n  FETCH_BAN_RESOLVE_ID: \"Couldn't resolve the user id to fetch the ban.\",\n\n  PRUNE_DAYS_TYPE: 'Days must be a number',\n\n  GUILD_CHANNEL_RESOLVE: 'Could not resolve channel to a guild channel.',\n  GUILD_VOICE_CHANNEL_RESOLVE: 'Could not resolve channel to a guild voice channel.',\n  GUILD_CHANNEL_ORPHAN: 'Could not find a parent to this guild channel.',\n  GUILD_CHANNEL_UNOWNED: \"The fetched channel does not belong to this manager's guild.\",\n  GUILD_OWNED: 'Guild is owned by the client.',\n  GUILD_MEMBERS_TIMEOUT: \"Members didn't arrive in time.\",\n  GUILD_UNCACHED_ME: 'The client user as a member of this guild is uncached.',\n  STAGE_CHANNEL_RESOLVE: 'Could not resolve channel to a stage channel.',\n\n  INVALID_TYPE: (name, expected, an = false) => `Supplied ${name} is not a${an ? 'n' : ''} ${expected}.`,\n  INVALID_ELEMENT: (type, name, elem) => `Supplied ${type} ${name} includes an invalid element: ${elem}`,\n\n  MESSAGE_THREAD_PARENT: 'The message was not sent in a guild text or news channel',\n  MESSAGE_EXISTING_THREAD: 'The message already has a thread',\n\n  WEBHOOK_MESSAGE: 'The message was not sent by a webhook.',\n  WEBHOOK_TOKEN_UNAVAILABLE: 'This action requires a webhook token, but none is available.',\n  WEBHOOK_URL_INVALID: 'The provided webhook URL is not valid.',\n  MESSAGE_REFERENCE_MISSING: 'The message does not reference another message',\n\n  EMOJI_TYPE: 'Emoji must be a string or GuildEmoji/ReactionEmoji',\n  EMOJI_MANAGED: 'Emoji is managed and has no Author.',\n  MISSING_MANAGE_EMOJIS_AND_STICKERS_PERMISSION: guild =>\n    `Client must have Manage Emojis and Stickers permission in guild ${guild} to see emoji authors.`,\n  NOT_GUILD_STICKER: 'Sticker is a standard (non-guild) sticker and has no author.',\n\n  REACTION_RESOLVE_USER: \"Couldn't resolve the user id to remove from the reaction.\",\n\n  VANITY_URL: 'This guild does not have the VANITY_URL feature enabled.',\n\n  INVITE_RESOLVE_CODE: 'Could not resolve the code to fetch the invite.',\n\n  INVITE_NOT_FOUND: 'Could not find the requested invite.',\n\n  DELETE_GROUP_DM_CHANNEL: \"Bots don't have access to Group DM Channels and cannot delete them\",\n  FETCH_GROUP_DM_CHANNEL: \"Bots don't have access to Group DM Channels and cannot fetch them\",\n\n  MEMBER_FETCH_NONCE_LENGTH: 'Nonce length must not exceed 32 characters.',\n\n  GLOBAL_COMMAND_PERMISSIONS:\n    'Permissions for global commands may only be fetched or modified by providing a GuildResolvable ' +\n    \"or from a guild's application command manager.\",\n  GUILD_UNCACHED_ROLE_RESOLVE: 'Cannot resolve roles from an arbitrary guild, provide an id instead',\n\n  INTERACTION_ALREADY_REPLIED: 'The reply to this interaction has already been sent or deferred.',\n  INTERACTION_NOT_REPLIED: 'The reply to this interaction has not been sent or deferred.',\n  INTERACTION_EPHEMERAL_REPLIED: 'Ephemeral responses cannot be fetched or deleted.',\n  INTERACTION_FETCH_EPHEMERAL: 'Ephemeral responses cannot be fetched.',\n\n  COMMAND_INTERACTION_OPTION_NOT_FOUND: name => `Required option \"${name}\" not found.`,\n  COMMAND_INTERACTION_OPTION_TYPE: (name, type, expected) =>\n    `Option \"${name}\" is of type: ${type}; expected ${expected}.`,\n  COMMAND_INTERACTION_OPTION_EMPTY: (name, type) =>\n    `Required option \"${name}\" is of type: ${type}; expected a non-empty value.`,\n  COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND: 'No subcommand specified for interaction.',\n  COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND_GROUP: 'No subcommand group specified for interaction.',\n\n  INVITE_MISSING_SCOPES: 'At least one valid scope must be provided for the invite',\n\n  NOT_IMPLEMENTED: (what, name) => `Method ${what} not implemented on ${name}.`,\n\n  SWEEP_FILTER_RETURN: 'The return value of the sweepFilter function was not false or a Function',\n};\n\nfor (const [name, message] of Object.entries(Messages)) register(name, message);\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/errors/Messages.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/errors/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/discord.js/src/errors/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./DJSError */ \"./node_modules/discord.js/src/errors/DJSError.js\");\nmodule.exports.Messages = __webpack_require__(/*! ./Messages */ \"./node_modules/discord.js/src/errors/Messages.js\");\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/errors/index.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/discord.js/src/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nmodule.exports = {\n  // \"Root\" classes (starting points)\n  BaseClient: __webpack_require__(/*! ./client/BaseClient */ \"./node_modules/discord.js/src/client/BaseClient.js\"),\n  Client: __webpack_require__(/*! ./client/Client */ \"./node_modules/discord.js/src/client/Client.js\"),\n  Shard: __webpack_require__(/*! ./sharding/Shard */ \"./node_modules/discord.js/src/sharding/Shard.js\"),\n  ShardClientUtil: __webpack_require__(/*! ./sharding/ShardClientUtil */ \"./node_modules/discord.js/src/sharding/ShardClientUtil.js\"),\n  ShardingManager: __webpack_require__(/*! ./sharding/ShardingManager */ \"./node_modules/discord.js/src/sharding/ShardingManager.js\"),\n  WebhookClient: __webpack_require__(/*! ./client/WebhookClient */ \"./node_modules/discord.js/src/client/WebhookClient.js\"),\n\n  // Utilities\n  ActivityFlags: __webpack_require__(/*! ./util/ActivityFlags */ \"./node_modules/discord.js/src/util/ActivityFlags.js\"),\n  ApplicationFlags: __webpack_require__(/*! ./util/ApplicationFlags */ \"./node_modules/discord.js/src/util/ApplicationFlags.js\"),\n  BaseManager: __webpack_require__(/*! ./managers/BaseManager */ \"./node_modules/discord.js/src/managers/BaseManager.js\"),\n  BitField: __webpack_require__(/*! ./util/BitField */ \"./node_modules/discord.js/src/util/BitField.js\"),\n  Collection: __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\").Collection,\n  Constants: __webpack_require__(/*! ./util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\"),\n  DataResolver: __webpack_require__(/*! ./util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\"),\n  DiscordAPIError: __webpack_require__(/*! ./rest/DiscordAPIError */ \"./node_modules/discord.js/src/rest/DiscordAPIError.js\"),\n  Formatters: __webpack_require__(/*! ./util/Formatters */ \"./node_modules/discord.js/src/util/Formatters.js\"),\n  HTTPError: __webpack_require__(/*! ./rest/HTTPError */ \"./node_modules/discord.js/src/rest/HTTPError.js\"),\n  Intents: __webpack_require__(/*! ./util/Intents */ \"./node_modules/discord.js/src/util/Intents.js\"),\n  LimitedCollection: __webpack_require__(/*! ./util/LimitedCollection */ \"./node_modules/discord.js/src/util/LimitedCollection.js\"),\n  MessageFlags: __webpack_require__(/*! ./util/MessageFlags */ \"./node_modules/discord.js/src/util/MessageFlags.js\"),\n  Options: __webpack_require__(/*! ./util/Options */ \"./node_modules/discord.js/src/util/Options.js\"),\n  Permissions: __webpack_require__(/*! ./util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\"),\n  RateLimitError: __webpack_require__(/*! ./rest/RateLimitError */ \"./node_modules/discord.js/src/rest/RateLimitError.js\"),\n  SnowflakeUtil: __webpack_require__(/*! ./util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\"),\n  SystemChannelFlags: __webpack_require__(/*! ./util/SystemChannelFlags */ \"./node_modules/discord.js/src/util/SystemChannelFlags.js\"),\n  ThreadMemberFlags: __webpack_require__(/*! ./util/ThreadMemberFlags */ \"./node_modules/discord.js/src/util/ThreadMemberFlags.js\"),\n  UserFlags: __webpack_require__(/*! ./util/UserFlags */ \"./node_modules/discord.js/src/util/UserFlags.js\"),\n  Util: __webpack_require__(/*! ./util/Util */ \"./node_modules/discord.js/src/util/Util.js\"),\n  version: __webpack_require__(/*! ../package.json */ \"./node_modules/discord.js/package.json\").version,\n\n  // Managers\n  ApplicationCommandManager: __webpack_require__(/*! ./managers/ApplicationCommandManager */ \"./node_modules/discord.js/src/managers/ApplicationCommandManager.js\"),\n  ApplicationCommandPermissionsManager: __webpack_require__(/*! ./managers/ApplicationCommandPermissionsManager */ \"./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js\"),\n  BaseGuildEmojiManager: __webpack_require__(/*! ./managers/BaseGuildEmojiManager */ \"./node_modules/discord.js/src/managers/BaseGuildEmojiManager.js\"),\n  CachedManager: __webpack_require__(/*! ./managers/CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\"),\n  ChannelManager: __webpack_require__(/*! ./managers/ChannelManager */ \"./node_modules/discord.js/src/managers/ChannelManager.js\"),\n  ClientVoiceManager: __webpack_require__(/*! ./client/voice/ClientVoiceManager */ \"./node_modules/discord.js/src/client/voice/ClientVoiceManager.js\"),\n  DataManager: __webpack_require__(/*! ./managers/DataManager */ \"./node_modules/discord.js/src/managers/DataManager.js\"),\n  GuildApplicationCommandManager: __webpack_require__(/*! ./managers/GuildApplicationCommandManager */ \"./node_modules/discord.js/src/managers/GuildApplicationCommandManager.js\"),\n  GuildBanManager: __webpack_require__(/*! ./managers/GuildBanManager */ \"./node_modules/discord.js/src/managers/GuildBanManager.js\"),\n  GuildChannelManager: __webpack_require__(/*! ./managers/GuildChannelManager */ \"./node_modules/discord.js/src/managers/GuildChannelManager.js\"),\n  GuildEmojiManager: __webpack_require__(/*! ./managers/GuildEmojiManager */ \"./node_modules/discord.js/src/managers/GuildEmojiManager.js\"),\n  GuildEmojiRoleManager: __webpack_require__(/*! ./managers/GuildEmojiRoleManager */ \"./node_modules/discord.js/src/managers/GuildEmojiRoleManager.js\"),\n  GuildInviteManager: __webpack_require__(/*! ./managers/GuildInviteManager */ \"./node_modules/discord.js/src/managers/GuildInviteManager.js\"),\n  GuildManager: __webpack_require__(/*! ./managers/GuildManager */ \"./node_modules/discord.js/src/managers/GuildManager.js\"),\n  GuildMemberManager: __webpack_require__(/*! ./managers/GuildMemberManager */ \"./node_modules/discord.js/src/managers/GuildMemberManager.js\"),\n  GuildMemberRoleManager: __webpack_require__(/*! ./managers/GuildMemberRoleManager */ \"./node_modules/discord.js/src/managers/GuildMemberRoleManager.js\"),\n  GuildStickerManager: __webpack_require__(/*! ./managers/GuildStickerManager */ \"./node_modules/discord.js/src/managers/GuildStickerManager.js\"),\n  MessageManager: __webpack_require__(/*! ./managers/MessageManager */ \"./node_modules/discord.js/src/managers/MessageManager.js\"),\n  PermissionOverwriteManager: __webpack_require__(/*! ./managers/PermissionOverwriteManager */ \"./node_modules/discord.js/src/managers/PermissionOverwriteManager.js\"),\n  PresenceManager: __webpack_require__(/*! ./managers/PresenceManager */ \"./node_modules/discord.js/src/managers/PresenceManager.js\"),\n  ReactionManager: __webpack_require__(/*! ./managers/ReactionManager */ \"./node_modules/discord.js/src/managers/ReactionManager.js\"),\n  ReactionUserManager: __webpack_require__(/*! ./managers/ReactionUserManager */ \"./node_modules/discord.js/src/managers/ReactionUserManager.js\"),\n  RoleManager: __webpack_require__(/*! ./managers/RoleManager */ \"./node_modules/discord.js/src/managers/RoleManager.js\"),\n  StageInstanceManager: __webpack_require__(/*! ./managers/StageInstanceManager */ \"./node_modules/discord.js/src/managers/StageInstanceManager.js\"),\n  ThreadManager: __webpack_require__(/*! ./managers/ThreadManager */ \"./node_modules/discord.js/src/managers/ThreadManager.js\"),\n  ThreadMemberManager: __webpack_require__(/*! ./managers/ThreadMemberManager */ \"./node_modules/discord.js/src/managers/ThreadMemberManager.js\"),\n  UserManager: __webpack_require__(/*! ./managers/UserManager */ \"./node_modules/discord.js/src/managers/UserManager.js\"),\n  VoiceStateManager: __webpack_require__(/*! ./managers/VoiceStateManager */ \"./node_modules/discord.js/src/managers/VoiceStateManager.js\"),\n  WebSocketManager: __webpack_require__(/*! ./client/websocket/WebSocketManager */ \"./node_modules/discord.js/src/client/websocket/WebSocketManager.js\"),\n  WebSocketShard: __webpack_require__(/*! ./client/websocket/WebSocketShard */ \"./node_modules/discord.js/src/client/websocket/WebSocketShard.js\"),\n\n  // Structures\n  Activity: __webpack_require__(/*! ./structures/Presence */ \"./node_modules/discord.js/src/structures/Presence.js\").Activity,\n  AnonymousGuild: __webpack_require__(/*! ./structures/AnonymousGuild */ \"./node_modules/discord.js/src/structures/AnonymousGuild.js\"),\n  Application: __webpack_require__(/*! ./structures/interfaces/Application */ \"./node_modules/discord.js/src/structures/interfaces/Application.js\"),\n  ApplicationCommand: __webpack_require__(/*! ./structures/ApplicationCommand */ \"./node_modules/discord.js/src/structures/ApplicationCommand.js\"),\n  Base: __webpack_require__(/*! ./structures/Base */ \"./node_modules/discord.js/src/structures/Base.js\"),\n  BaseGuild: __webpack_require__(/*! ./structures/BaseGuild */ \"./node_modules/discord.js/src/structures/BaseGuild.js\"),\n  BaseGuildEmoji: __webpack_require__(/*! ./structures/BaseGuildEmoji */ \"./node_modules/discord.js/src/structures/BaseGuildEmoji.js\"),\n  BaseGuildVoiceChannel: __webpack_require__(/*! ./structures/BaseGuildVoiceChannel */ \"./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js\"),\n  BaseMessageComponent: __webpack_require__(/*! ./structures/BaseMessageComponent */ \"./node_modules/discord.js/src/structures/BaseMessageComponent.js\"),\n  ButtonInteraction: __webpack_require__(/*! ./structures/ButtonInteraction */ \"./node_modules/discord.js/src/structures/ButtonInteraction.js\"),\n  CategoryChannel: __webpack_require__(/*! ./structures/CategoryChannel */ \"./node_modules/discord.js/src/structures/CategoryChannel.js\"),\n  Channel: __webpack_require__(/*! ./structures/Channel */ \"./node_modules/discord.js/src/structures/Channel.js\"),\n  ClientApplication: __webpack_require__(/*! ./structures/ClientApplication */ \"./node_modules/discord.js/src/structures/ClientApplication.js\"),\n  ClientPresence: __webpack_require__(/*! ./structures/ClientPresence */ \"./node_modules/discord.js/src/structures/ClientPresence.js\"),\n  ClientUser: __webpack_require__(/*! ./structures/ClientUser */ \"./node_modules/discord.js/src/structures/ClientUser.js\"),\n  Collector: __webpack_require__(/*! ./structures/interfaces/Collector */ \"./node_modules/discord.js/src/structures/interfaces/Collector.js\"),\n  CommandInteraction: __webpack_require__(/*! ./structures/CommandInteraction */ \"./node_modules/discord.js/src/structures/CommandInteraction.js\"),\n  CommandInteractionOptionResolver: __webpack_require__(/*! ./structures/CommandInteractionOptionResolver */ \"./node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js\"),\n  DMChannel: __webpack_require__(/*! ./structures/DMChannel */ \"./node_modules/discord.js/src/structures/DMChannel.js\"),\n  Emoji: __webpack_require__(/*! ./structures/Emoji */ \"./node_modules/discord.js/src/structures/Emoji.js\"),\n  Guild: __webpack_require__(/*! ./structures/Guild */ \"./node_modules/discord.js/src/structures/Guild.js\"),\n  GuildAuditLogs: __webpack_require__(/*! ./structures/GuildAuditLogs */ \"./node_modules/discord.js/src/structures/GuildAuditLogs.js\"),\n  GuildAuditLogsEntry: __webpack_require__(/*! ./structures/GuildAuditLogs */ \"./node_modules/discord.js/src/structures/GuildAuditLogs.js\").Entry,\n  GuildBan: __webpack_require__(/*! ./structures/GuildBan */ \"./node_modules/discord.js/src/structures/GuildBan.js\"),\n  GuildChannel: __webpack_require__(/*! ./structures/GuildChannel */ \"./node_modules/discord.js/src/structures/GuildChannel.js\"),\n  GuildEmoji: __webpack_require__(/*! ./structures/GuildEmoji */ \"./node_modules/discord.js/src/structures/GuildEmoji.js\"),\n  GuildMember: __webpack_require__(/*! ./structures/GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\"),\n  GuildPreview: __webpack_require__(/*! ./structures/GuildPreview */ \"./node_modules/discord.js/src/structures/GuildPreview.js\"),\n  GuildPreviewEmoji: __webpack_require__(/*! ./structures/GuildPreviewEmoji */ \"./node_modules/discord.js/src/structures/GuildPreviewEmoji.js\"),\n  GuildTemplate: __webpack_require__(/*! ./structures/GuildTemplate */ \"./node_modules/discord.js/src/structures/GuildTemplate.js\"),\n  Integration: __webpack_require__(/*! ./structures/Integration */ \"./node_modules/discord.js/src/structures/Integration.js\"),\n  IntegrationApplication: __webpack_require__(/*! ./structures/IntegrationApplication */ \"./node_modules/discord.js/src/structures/IntegrationApplication.js\"),\n  Interaction: __webpack_require__(/*! ./structures/Interaction */ \"./node_modules/discord.js/src/structures/Interaction.js\"),\n  InteractionCollector: __webpack_require__(/*! ./structures/InteractionCollector */ \"./node_modules/discord.js/src/structures/InteractionCollector.js\"),\n  InteractionWebhook: __webpack_require__(/*! ./structures/InteractionWebhook */ \"./node_modules/discord.js/src/structures/InteractionWebhook.js\"),\n  Invite: __webpack_require__(/*! ./structures/Invite */ \"./node_modules/discord.js/src/structures/Invite.js\"),\n  InviteStageInstance: __webpack_require__(/*! ./structures/InviteStageInstance */ \"./node_modules/discord.js/src/structures/InviteStageInstance.js\"),\n  InviteGuild: __webpack_require__(/*! ./structures/InviteGuild */ \"./node_modules/discord.js/src/structures/InviteGuild.js\"),\n  Message: __webpack_require__(/*! ./structures/Message */ \"./node_modules/discord.js/src/structures/Message.js\"),\n  MessageActionRow: __webpack_require__(/*! ./structures/MessageActionRow */ \"./node_modules/discord.js/src/structures/MessageActionRow.js\"),\n  MessageAttachment: __webpack_require__(/*! ./structures/MessageAttachment */ \"./node_modules/discord.js/src/structures/MessageAttachment.js\"),\n  MessageButton: __webpack_require__(/*! ./structures/MessageButton */ \"./node_modules/discord.js/src/structures/MessageButton.js\"),\n  MessageCollector: __webpack_require__(/*! ./structures/MessageCollector */ \"./node_modules/discord.js/src/structures/MessageCollector.js\"),\n  MessageComponentInteraction: __webpack_require__(/*! ./structures/MessageComponentInteraction */ \"./node_modules/discord.js/src/structures/MessageComponentInteraction.js\"),\n  MessageEmbed: __webpack_require__(/*! ./structures/MessageEmbed */ \"./node_modules/discord.js/src/structures/MessageEmbed.js\"),\n  MessageMentions: __webpack_require__(/*! ./structures/MessageMentions */ \"./node_modules/discord.js/src/structures/MessageMentions.js\"),\n  MessagePayload: __webpack_require__(/*! ./structures/MessagePayload */ \"./node_modules/discord.js/src/structures/MessagePayload.js\"),\n  MessageReaction: __webpack_require__(/*! ./structures/MessageReaction */ \"./node_modules/discord.js/src/structures/MessageReaction.js\"),\n  MessageSelectMenu: __webpack_require__(/*! ./structures/MessageSelectMenu */ \"./node_modules/discord.js/src/structures/MessageSelectMenu.js\"),\n  NewsChannel: __webpack_require__(/*! ./structures/NewsChannel */ \"./node_modules/discord.js/src/structures/NewsChannel.js\"),\n  OAuth2Guild: __webpack_require__(/*! ./structures/OAuth2Guild */ \"./node_modules/discord.js/src/structures/OAuth2Guild.js\"),\n  PartialGroupDMChannel: __webpack_require__(/*! ./structures/PartialGroupDMChannel */ \"./node_modules/discord.js/src/structures/PartialGroupDMChannel.js\"),\n  PermissionOverwrites: __webpack_require__(/*! ./structures/PermissionOverwrites */ \"./node_modules/discord.js/src/structures/PermissionOverwrites.js\"),\n  Presence: __webpack_require__(/*! ./structures/Presence */ \"./node_modules/discord.js/src/structures/Presence.js\").Presence,\n  ReactionCollector: __webpack_require__(/*! ./structures/ReactionCollector */ \"./node_modules/discord.js/src/structures/ReactionCollector.js\"),\n  ReactionEmoji: __webpack_require__(/*! ./structures/ReactionEmoji */ \"./node_modules/discord.js/src/structures/ReactionEmoji.js\"),\n  RichPresenceAssets: __webpack_require__(/*! ./structures/Presence */ \"./node_modules/discord.js/src/structures/Presence.js\").RichPresenceAssets,\n  Role: __webpack_require__(/*! ./structures/Role */ \"./node_modules/discord.js/src/structures/Role.js\"),\n  SelectMenuInteraction: __webpack_require__(/*! ./structures/SelectMenuInteraction */ \"./node_modules/discord.js/src/structures/SelectMenuInteraction.js\"),\n  StageChannel: __webpack_require__(/*! ./structures/StageChannel */ \"./node_modules/discord.js/src/structures/StageChannel.js\"),\n  StageInstance: __webpack_require__(/*! ./structures/StageInstance */ \"./node_modules/discord.js/src/structures/StageInstance.js\"),\n  Sticker: __webpack_require__(/*! ./structures/Sticker */ \"./node_modules/discord.js/src/structures/Sticker.js\"),\n  StickerPack: __webpack_require__(/*! ./structures/StickerPack */ \"./node_modules/discord.js/src/structures/StickerPack.js\"),\n  StoreChannel: __webpack_require__(/*! ./structures/StoreChannel */ \"./node_modules/discord.js/src/structures/StoreChannel.js\"),\n  Team: __webpack_require__(/*! ./structures/Team */ \"./node_modules/discord.js/src/structures/Team.js\"),\n  TeamMember: __webpack_require__(/*! ./structures/TeamMember */ \"./node_modules/discord.js/src/structures/TeamMember.js\"),\n  TextChannel: __webpack_require__(/*! ./structures/TextChannel */ \"./node_modules/discord.js/src/structures/TextChannel.js\"),\n  ThreadChannel: __webpack_require__(/*! ./structures/ThreadChannel */ \"./node_modules/discord.js/src/structures/ThreadChannel.js\"),\n  ThreadMember: __webpack_require__(/*! ./structures/ThreadMember */ \"./node_modules/discord.js/src/structures/ThreadMember.js\"),\n  Typing: __webpack_require__(/*! ./structures/Typing */ \"./node_modules/discord.js/src/structures/Typing.js\"),\n  User: __webpack_require__(/*! ./structures/User */ \"./node_modules/discord.js/src/structures/User.js\"),\n  VoiceChannel: __webpack_require__(/*! ./structures/VoiceChannel */ \"./node_modules/discord.js/src/structures/VoiceChannel.js\"),\n  VoiceRegion: __webpack_require__(/*! ./structures/VoiceRegion */ \"./node_modules/discord.js/src/structures/VoiceRegion.js\"),\n  VoiceState: __webpack_require__(/*! ./structures/VoiceState */ \"./node_modules/discord.js/src/structures/VoiceState.js\"),\n  Webhook: __webpack_require__(/*! ./structures/Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\"),\n  Widget: __webpack_require__(/*! ./structures/Widget */ \"./node_modules/discord.js/src/structures/Widget.js\"),\n  WidgetMember: __webpack_require__(/*! ./structures/WidgetMember */ \"./node_modules/discord.js/src/structures/WidgetMember.js\"),\n  WelcomeChannel: __webpack_require__(/*! ./structures/WelcomeChannel */ \"./node_modules/discord.js/src/structures/WelcomeChannel.js\"),\n  WelcomeScreen: __webpack_require__(/*! ./structures/WelcomeScreen */ \"./node_modules/discord.js/src/structures/WelcomeScreen.js\"),\n\n  WebSocket: __webpack_require__(/*! ./WebSocket */ \"./node_modules/discord.js/src/WebSocket.js\"),\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/index.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/ApplicationCommandManager.js":
/*!***************************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/ApplicationCommandManager.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst ApplicationCommandPermissionsManager = __webpack_require__(/*! ./ApplicationCommandPermissionsManager */ \"./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst ApplicationCommand = __webpack_require__(/*! ../structures/ApplicationCommand */ \"./node_modules/discord.js/src/structures/ApplicationCommand.js\");\nconst { ApplicationCommandTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Manages API methods for application commands and stores their cache.\n * @extends {CachedManager}\n */\nclass ApplicationCommandManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, ApplicationCommand, iterable);\n\n    /**\n     * The manager for permissions of arbitrary commands on arbitrary guilds\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, ApplicationCommand>}\n   * @name ApplicationCommandManager#cache\n   */\n\n  _add(data, cache, guildId) {\n    return super._add(data, cache, { extras: [this.guild, guildId] });\n  }\n\n  /**\n   * The APIRouter path to the commands\n   * @param {Snowflake} [options.id] The application command's id\n   * @param {Snowflake} [options.guildId] The guild's id to use in the path,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Object}\n   * @private\n   */\n  commandPath({ id, guildId } = {}) {\n    let path = this.client.api.applications(this.client.application.id);\n    if (this.guild ?? guildId) path = path.guilds(this.guild?.id ?? guildId);\n    return id ? path.commands(id) : path.commands;\n  }\n\n  /**\n   * Data that resolves to give an ApplicationCommand object. This can be:\n   * * An ApplicationCommand object\n   * * A Snowflake\n   * @typedef {ApplicationCommand|Snowflake} ApplicationCommandResolvable\n   */\n\n  /**\n   * Options used to fetch data from discord\n   * @typedef {Object} BaseFetchOptions\n   * @property {boolean} [cache=true] Whether to cache the fetched data if it wasn't already\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Options used to fetch Application Commands from discord\n   * @typedef {BaseFetchOptions} FetchApplicationCommandOptions\n   * @property {Snowflake} [guildId] The guild's id to fetch commands for, for when the guild is not cached\n   */\n\n  /**\n   * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n   * @param {Snowflake} [id] The application command's id\n   * @param {FetchApplicationCommandOptions} [options] Additional options for this fetch\n   * @returns {Promise<ApplicationCommand|Collection<Snowflake, ApplicationCommand>>}\n   * @example\n   * // Fetch a single command\n   * client.application.commands.fetch('123456789012345678')\n   *   .then(command => console.log(`Fetched command ${command.name}`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch all commands\n   * guild.commands.fetch()\n   *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { guildId, cache = true, force = false } = {}) {\n    if (typeof id === 'object') {\n      ({ guildId, cache = true } = id);\n    } else if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const command = await this.commandPath({ id, guildId }).get();\n      return this._add(command, cache);\n    }\n\n    const data = await this.commandPath({ guildId }).get();\n    return data.reduce((coll, command) => coll.set(command.id, this._add(command, cache, guildId)), new Collection());\n  }\n\n  /**\n   * Creates an application command.\n   * @param {ApplicationCommandData} command The command\n   * @param {Snowflake} [guildId] The guild's id to create this command in,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Create a new command\n   * client.application.commands.create({\n   *   name: 'test',\n   *   description: 'A test command',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(command, guildId) {\n    const data = await this.commandPath({ guildId }).post({\n      data: this.constructor.transformCommand(command),\n    });\n    return this._add(data, !guildId, guildId);\n  }\n\n  /**\n   * Sets all the commands for this application or guild.\n   * @param {ApplicationCommandData[]} commands The commands\n   * @param {Snowflake} [guildId] The guild's id to create the commands in,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<Collection<Snowflake, ApplicationCommand>>}\n   * @example\n   * // Set all commands to just this one\n   * client.application.commands.set([\n   *   {\n   *     name: 'test',\n   *     description: 'A test command',\n   *   },\n   * ])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all commands\n   * guild.commands.set([])\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async set(commands, guildId) {\n    const data = await this.commandPath({ guildId }).put({\n      data: commands.map(c => this.constructor.transformCommand(c)),\n    });\n    return data.reduce(\n      (coll, command) => coll.set(command.id, this._add(command, !guildId, guildId)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Edits an application command.\n   * @param {ApplicationCommandResolvable} command The command to edit\n   * @param {ApplicationCommandData} data The data to update the command with\n   * @param {Snowflake} [guildId] The guild's id where the command registered,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit an existing command\n   * client.application.commands.edit('123456789012345678', {\n   *   description: 'New description',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async edit(command, data, guildId) {\n    const id = this.resolveId(command);\n    if (!id) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    const patched = await this.commandPath({ id, guildId }).patch({ data: this.constructor.transformCommand(data) });\n    return this._add(patched, !guildId, guildId);\n  }\n\n  /**\n   * Deletes an application command.\n   * @param {ApplicationCommandResolvable} command The command to delete\n   * @param {Snowflake} [guildId] The guild's id where the command is registered,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<?ApplicationCommand>}\n   * @example\n   * // Delete a command\n   * guild.commands.delete('123456789012345678')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete(command, guildId) {\n    const id = this.resolveId(command);\n    if (!id) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    await this.commandPath({ id, guildId }).delete();\n\n    const cached = this.cache.get(id);\n    if (!guildId) this.cache.delete(id);\n    return cached ?? null;\n  }\n\n  /**\n   * Transforms an {@link ApplicationCommandData} object into something that can be used with the API.\n   * @param {ApplicationCommandData} command The command to transform\n   * @returns {APIApplicationCommand}\n   * @private\n   */\n  static transformCommand(command) {\n    return {\n      name: command.name,\n      description: command.description,\n      type: typeof command.type === 'number' ? command.type : ApplicationCommandTypes[command.type],\n      options: command.options?.map(o => ApplicationCommand.transformOption(o)),\n      default_permission: command.defaultPermission,\n    };\n  }\n}\n\nmodule.exports = ApplicationCommandManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/ApplicationCommandManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst BaseManager = __webpack_require__(/*! ./BaseManager */ \"./node_modules/discord.js/src/managers/BaseManager.js\");\nconst { Error, TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { ApplicationCommandPermissionTypes, APIErrors } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Manages API methods for permissions of Application Commands.\n * @extends {BaseManager}\n */\nclass ApplicationCommandPermissionsManager extends BaseManager {\n  constructor(manager) {\n    super(manager.client);\n\n    /**\n     * The manager or command that this manager belongs to\n     * @type {ApplicationCommandManager|ApplicationCommand}\n     * @private\n     */\n    this.manager = manager;\n\n    /**\n     * The guild that this manager acts on\n     * @type {?Guild}\n     */\n    this.guild = manager.guild ?? null;\n\n    /**\n     * The id of the guild that this manager acts on\n     * @type {?Snowflake}\n     */\n    this.guildId = manager.guildId ?? manager.guild?.id ?? null;\n\n    /**\n     * The id of the command this manager acts on\n     * @type {?Snowflake}\n     */\n    this.commandId = manager.id ?? null;\n  }\n\n  /**\n   * The APIRouter path to the commands\n   * @param {Snowflake} guildId The guild's id to use in the path,\n   * @param {Snowflake} [commandId] The application command's id\n   * @returns {Object}\n   * @private\n   */\n  permissionsPath(guildId, commandId) {\n    return this.client.api.applications(this.client.application.id).guilds(guildId).commands(commandId).permissions;\n  }\n\n  /**\n   * Data for setting the permissions of an application command.\n   * @typedef {Object} ApplicationCommandPermissionData\n   * @property {Snowflake} id The role or user's id\n   * @property {ApplicationCommandPermissionType|number} type Whether this permission is for a role or a user\n   * @property {boolean} permission Whether the role or user has the permission to use this command\n   */\n\n  /**\n   * The object returned when fetching permissions for an application command.\n   * @typedef {Object} ApplicationCommandPermissions\n   * @property {Snowflake} id The role or user's id\n   * @property {ApplicationCommandPermissionType} type Whether this permission is for a role or a user\n   * @property {boolean} permission Whether the role or user has the permission to use this command\n   */\n\n  /**\n   * Options for managing permissions for one or more Application Commands\n   * <warn>When passing these options to a manager where `guildId` is `null`,\n   * `guild` is a required parameter</warn>\n   * @typedef {Object} BaseApplicationCommandPermissionsOptions\n   * @param {GuildResolvable} [guild] The guild to modify / check permissions for\n   * <warn>Ignored when the manager has a non-null `guildId` property</warn>\n   * @param {ApplicationCommandResolvable} [command] The command to modify / check permissions for\n   * <warn>Ignored when the manager has a non-null `commandId` property</warn>\n   */\n\n  /**\n   * Fetches the permissions for one or multiple commands.\n   * @param {BaseApplicationCommandPermissionsOptions} [options] Options used to fetch permissions\n   * @returns {Promise<ApplicationCommandPermissions[]|Collection<Snowflake, ApplicationCommandPermissions[]>>}\n   * @example\n   * // Fetch permissions for one command\n   * guild.commands.permissions.fetch({ command: '123456789012345678' })\n   *   .then(perms => console.log(`Fetched permissions for ${perms.length} users`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch permissions for all commands in a guild\n   * client.application.commands.permissions.fetch({ guild: '123456789012345678' })\n   *   .then(perms => console.log(`Fetched permissions for ${perms.size} commands`))\n   *   .catch(console.error);\n   */\n  async fetch({ guild, command } = {}) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (commandId) {\n      const data = await this.permissionsPath(guildId, commandId).get();\n      return data.permissions.map(perm => this.constructor.transformPermissions(perm, true));\n    }\n\n    const data = await this.permissionsPath(guildId).get();\n    return data.reduce(\n      (coll, perm) =>\n        coll.set(\n          perm.id,\n          perm.permissions.map(p => this.constructor.transformPermissions(p, true)),\n        ),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Data used for overwriting the permissions for all application commands in a guild.\n   * @typedef {Object} GuildApplicationCommandPermissionData\n   * @property {Snowflake} id The command's id\n   * @property {ApplicationCommandPermissionData[]} permissions The permissions for this command\n   */\n\n  /**\n   * Options used to set permissions for one or more Application Commands in a guild\n   * <warn>One of `command` AND `permissions`, OR `fullPermissions` is required.\n   * `fullPermissions` is not a valid option when passing to a manager where `commandId` is non-null</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} SetApplicationCommandPermissionsOptions\n   * @param {ApplicationCommandPermissionData[]} [permissions] The new permissions for the command\n   * @param {GuildApplicationCommandPermissionData[]} [fullPermissions] The new permissions for all commands\n   * in a guild <warn>When this parameter is set, `permissions` and `command` are ignored</warn>\n   */\n\n  /**\n   * Sets the permissions for one or more commands.\n   * @param {SetApplicationCommandPermissionsOptions} options Options used to set permissions\n   * @returns {Promise<ApplicationCommandPermissions[]|Collection<Snowflake, ApplicationCommandPermissions[]>>}\n   * @example\n   * // Set the permissions for one command\n   * client.application.commands.permissions.set({ command: '123456789012345678', permissions: [\n   *   {\n   *     id: '876543210987654321',\n   *     type: 'USER',\n   *     permission: false,\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Set the permissions for all commands\n   * guild.commands.permissions.set({ fullPermissions: [\n   *   {\n   *     id: '123456789012345678',\n   *     permissions: [{\n   *       id: '876543210987654321',\n   *       type: 'USER',\n   *       permission: false,\n   *     }],\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async set({ guild, command, permissions, fullPermissions } = {}) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n\n    if (commandId) {\n      if (!Array.isArray(permissions)) {\n        throw new TypeError('INVALID_TYPE', 'permissions', 'Array of ApplicationCommandPermissionData', true);\n      }\n      const data = await this.permissionsPath(guildId, commandId).put({\n        data: { permissions: permissions.map(perm => this.constructor.transformPermissions(perm)) },\n      });\n      return data.permissions.map(perm => this.constructor.transformPermissions(perm, true));\n    }\n\n    if (!Array.isArray(fullPermissions)) {\n      throw new TypeError('INVALID_TYPE', 'fullPermissions', 'Array of GuildApplicationCommandPermissionData', true);\n    }\n\n    const APIPermissions = [];\n    for (const perm of fullPermissions) {\n      if (!Array.isArray(perm.permissions)) throw new TypeError('INVALID_ELEMENT', 'Array', 'fullPermissions', perm);\n      APIPermissions.push({\n        id: perm.id,\n        permissions: perm.permissions.map(p => this.constructor.transformPermissions(p)),\n      });\n    }\n    const data = await this.permissionsPath(guildId).put({\n      data: APIPermissions,\n    });\n    return data.reduce(\n      (coll, perm) =>\n        coll.set(\n          perm.id,\n          perm.permissions.map(p => this.constructor.transformPermissions(p, true)),\n        ),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Options used to add permissions to a command\n   * <warn>The `command` parameter is not optional when the managers `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} AddApplicationCommandPermissionsOptions\n   * @param {ApplicationCommandPermissionData[]} permissions The permissions to add to the command\n   */\n\n  /**\n   * Add permissions to a command.\n   * @param {AddApplicationCommandPermissionsOptions} options Options used to add permissions\n   * @returns {Promise<ApplicationCommandPermissions[]>}\n   * @example\n   * // Block a role from the command permissions\n   * guild.commands.permissions.add({ command: '123456789012345678', permissions: [\n   *   {\n   *     id: '876543211234567890',\n   *     type: 'ROLE',\n   *     permission: false\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async add({ guild, command, permissions }) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n    if (!Array.isArray(permissions)) {\n      throw new TypeError('INVALID_TYPE', 'permissions', 'Array of ApplicationCommandPermissionData', true);\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== APIErrors.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS) throw error;\n    }\n\n    const newPermissions = permissions.slice();\n    for (const perm of existing) {\n      if (!newPermissions.some(x => x.id === perm.id)) {\n        newPermissions.push(perm);\n      }\n    }\n\n    return this.set({ guild: guildId, command: commandId, permissions: newPermissions });\n  }\n\n  /**\n   * Options used to remove permissions from a command\n   * <warn>The `command` parameter is not optional when the managers `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} RemoveApplicationCommandPermissionsOptions\n   * @param {UserResolvable|UserResolvable[]} [users] The user(s) to remove from the command permissions\n   * <warn>One of `users` or `roles` is required</warn>\n   * @param {RoleResolvable|RoleResolvable[]} [roles] The role(s) to remove from the command permissions\n   * <warn>One of `users` or `roles` is required</warn>\n   */\n\n  /**\n   * Remove permissions from a command.\n   * @param {RemoveApplicationCommandPermissionsOptions} options Options used to remove permissions\n   * @returns {Promise<ApplicationCommandPermissions[]>}\n   * @example\n   * // Remove a user permission from this command\n   * guild.commands.permissions.remove({ command: '123456789012345678', users: '876543210123456789' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove multiple roles from this command\n   * guild.commands.permissions.remove({\n   *   command: '123456789012345678', roles: ['876543210123456789', '765432101234567890']\n   * })\n   *    .then(console.log)\n   *    .catch(console.error);\n   */\n  async remove({ guild, command, users, roles }) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    if (!users && !roles) throw new TypeError('INVALID_TYPE', 'users OR roles', 'Array or Resolvable', true);\n\n    let resolvedIds = [];\n    if (Array.isArray(users)) {\n      users.forEach(user => {\n        const userId = this.client.users.resolveId(user);\n        if (!userId) throw new TypeError('INVALID_ELEMENT', 'Array', 'users', user);\n        resolvedIds.push(userId);\n      });\n    } else if (users) {\n      const userId = this.client.users.resolveId(users);\n      if (!userId) {\n        throw new TypeError('INVALID_TYPE', 'users', 'Array or UserResolvable');\n      }\n      resolvedIds.push(userId);\n    }\n\n    if (Array.isArray(roles)) {\n      roles.forEach(role => {\n        if (typeof role === 'string') {\n          resolvedIds.push(role);\n          return;\n        }\n        if (!this.guild) throw new Error('GUILD_UNCACHED_ROLE_RESOLVE');\n        const roleId = this.guild.roles.resolveId(role);\n        if (!roleId) throw new TypeError('INVALID_ELEMENT', 'Array', 'users', role);\n        resolvedIds.push(roleId);\n      });\n    } else if (roles) {\n      if (typeof roles === 'string') {\n        resolvedIds.push(roles);\n      } else {\n        if (!this.guild) throw new Error('GUILD_UNCACHED_ROLE_RESOLVE');\n        const roleId = this.guild.roles.resolveId(roles);\n        if (!roleId) {\n          throw new TypeError('INVALID_TYPE', 'users', 'Array or RoleResolvable');\n        }\n        resolvedIds.push(roleId);\n      }\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== APIErrors.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS) throw error;\n    }\n\n    const permissions = existing.filter(perm => !resolvedIds.includes(perm.id));\n\n    return this.set({ guild: guildId, command: commandId, permissions });\n  }\n\n  /**\n   * Options used to check existance of permissions on a command\n   * <warn>The `command` parameter is not optional when the managers `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} HasApplicationCommandPermissionsOptions\n   * @param {UserResolvable|RoleResolvable} permissionId The user or role to check if a permission exists for\n   * on this command.\n   */\n\n  /**\n   * Check whether a permission exists for a user or role\n   * @param {AddApplicationCommandPermissionsOptions} options Options used to check permissions\n   * @returns {Promise<boolean>}\n   * @example\n   * // Check whether a user has permission to use a command\n   * guild.commands.permissions.has({ command: '123456789012345678', permissionId: '876543210123456789' })\n   *  .then(console.log)\n   *  .catch(console.error);\n   */\n  async has({ guild, command, permissionId }) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    if (!permissionId) throw new TypeError('INVALID_TYPE', 'permissionId', 'UserResolvable or RoleResolvable');\n    let resolvedId = permissionId;\n    if (typeof permissionId !== 'string') {\n      resolvedId = this.client.users.resolveId(permissionId);\n      if (!resolvedId) {\n        if (!this.guild) throw new Error('GUILD_UNCACHED_ROLE_RESOLVE');\n        resolvedId = this.guild.roles.resolveId(permissionId);\n      }\n      if (!resolvedId) {\n        throw new TypeError('INVALID_TYPE', 'permissionId', 'UserResolvable or RoleResolvable');\n      }\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== APIErrors.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS) throw error;\n    }\n\n    return existing.some(perm => perm.id === resolvedId);\n  }\n\n  _validateOptions(guild, command) {\n    const guildId = this.guildId ?? this.client.guilds.resolveId(guild);\n    if (!guildId) throw new Error('GLOBAL_COMMAND_PERMISSIONS');\n    let commandId = this.commandId;\n    if (command && !commandId) {\n      commandId = this.manager.resolveId?.(command);\n      if (!commandId && this.guild) {\n        commandId = this.guild.commands.resolveId(command);\n      }\n      if (!commandId) {\n        commandId = this.client.application?.commands.resolveId(command);\n      }\n      if (!commandId) {\n        throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable', true);\n      }\n    }\n    return { guildId, commandId };\n  }\n\n  /**\n   * Transforms an {@link ApplicationCommandPermissionData} object into something that can be used with the API.\n   * @param {ApplicationCommandPermissionData} permissions The permissions to transform\n   * @param {boolean} [received] Whether these permissions have been received from Discord\n   * @returns {APIApplicationCommandPermissions}\n   * @private\n   */\n  static transformPermissions(permissions, received) {\n    return {\n      id: permissions.id,\n      permission: permissions.permission,\n      type:\n        typeof permissions.type === 'number' && !received\n          ? permissions.type\n          : ApplicationCommandPermissionTypes[permissions.type],\n    };\n  }\n}\n\nmodule.exports = ApplicationCommandPermissionsManager;\n\n/* eslint-disable max-len */\n/**\n * @external APIApplicationCommandPermissions\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permissions-structure}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/BaseGuildEmojiManager.js":
/*!***********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/BaseGuildEmojiManager.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst GuildEmoji = __webpack_require__(/*! ../structures/GuildEmoji */ \"./node_modules/discord.js/src/structures/GuildEmoji.js\");\nconst ReactionEmoji = __webpack_require__(/*! ../structures/ReactionEmoji */ \"./node_modules/discord.js/src/structures/ReactionEmoji.js\");\nconst { parseEmoji } = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Holds methods to resolve GuildEmojis and stores their cache.\n * @extends {CachedManager}\n */\nclass BaseGuildEmojiManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, GuildEmoji, iterable);\n  }\n\n  /**\n   * The cache of GuildEmojis\n   * @type {Collection<Snowflake, GuildEmoji>}\n   * @name BaseGuildEmojiManager#cache\n   */\n\n  /**\n   * Data that can be resolved into a GuildEmoji object. This can be:\n   * * A custom emoji identifier\n   * * A GuildEmoji object\n   * * A ReactionEmoji object\n   * @typedef {Snowflake|GuildEmoji|ReactionEmoji} EmojiResolvable\n   */\n\n  /**\n   * Resolves an EmojiResolvable to an Emoji object.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to identify\n   * @returns {?GuildEmoji}\n   */\n  resolve(emoji) {\n    if (emoji instanceof ReactionEmoji) return super.resolve(emoji.id);\n    return super.resolve(emoji);\n  }\n\n  /**\n   * Resolves an EmojiResolvable to an Emoji id string.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(emoji) {\n    if (emoji instanceof ReactionEmoji) return emoji.id;\n    return super.resolveId(emoji);\n  }\n\n  /**\n   * Data that can be resolved to give an emoji identifier. This can be:\n   * * The unicode representation of an emoji\n   * * The `<a:name:id>`, `<:name:id>`, `a:name:id` or `name:id` emoji identifier string of an emoji\n   * * An EmojiResolvable\n   * @typedef {string|EmojiResolvable} EmojiIdentifierResolvable\n   */\n\n  /**\n   * Resolves an EmojiResolvable to an emoji identifier.\n   * @param {EmojiIdentifierResolvable} emoji The emoji resolvable to resolve\n   * @returns {?string}\n   */\n  resolveIdentifier(emoji) {\n    const emojiResolvable = this.resolve(emoji);\n    if (emojiResolvable) return emojiResolvable.identifier;\n    if (emoji instanceof ReactionEmoji) return emoji.identifier;\n    if (typeof emoji === 'string') {\n      const res = parseEmoji(emoji);\n      if (res?.name.length) {\n        emoji = `${res.animated ? 'a:' : ''}${res.name}${res.id ? `:${res.id}` : ''}`;\n      }\n      if (!emoji.includes('%')) return encodeURIComponent(emoji);\n      return emoji;\n    }\n    return null;\n  }\n}\n\nmodule.exports = BaseGuildEmojiManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/BaseGuildEmojiManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/BaseManager.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/BaseManager.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Manages the API methods of a data model.\n * @abstract\n */\nclass BaseManager {\n  constructor(client) {\n    /**\n     * The client that instantiated this Manager\n     * @name BaseManager#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n  }\n}\n\nmodule.exports = BaseManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/BaseManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/CachedManager.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/CachedManager.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst DataManager = __webpack_require__(/*! ./DataManager */ \"./node_modules/discord.js/src/managers/DataManager.js\");\nconst { _cleanupSymbol } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Manages the API methods of a data model with a mutable cache of instances.\n * @extends {DataManager}\n * @abstract\n */\nclass CachedManager extends DataManager {\n  constructor(client, holds, iterable) {\n    super(client, holds);\n\n    Object.defineProperty(this, '_cache', { value: this.client.options.makeCache(this.constructor, this.holds) });\n\n    let cleanup = this._cache[_cleanupSymbol]?.();\n    if (cleanup) {\n      cleanup = cleanup.bind(this._cache);\n      client._cleanups.add(cleanup);\n      client._finalizers.register(this, {\n        cleanup,\n        message:\n          `Garbage collection completed on ${this.constructor.name}, ` +\n          `which had a ${this._cache.constructor.name} of ${this.holds.name}.`,\n        name: this.constructor.name,\n      });\n    }\n\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    return this._cache;\n  }\n\n  _add(data, cache = true, { id, extras = [] } = {}) {\n    const existing = this.cache.get(id ?? data.id);\n    if (cache) existing?._patch(data);\n    if (existing) return existing;\n\n    const entry = this.holds ? new this.holds(this.client, data, ...extras) : data;\n    if (cache) this.cache.set(id ?? entry.id, entry);\n    return entry;\n  }\n}\n\nmodule.exports = CachedManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/CachedManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/ChannelManager.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/ChannelManager.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst Channel = __webpack_require__(/*! ../structures/Channel */ \"./node_modules/discord.js/src/structures/Channel.js\");\nconst { Events, ThreadChannelTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nlet cacheWarningEmitted = false;\n\n/**\n * A manager of channels belonging to a client\n * @extends {CachedManager}\n */\nclass ChannelManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Channel, iterable);\n    const defaultCaching =\n      this._cache.constructor.name === 'Collection' ||\n      ((this._cache.maxSize === undefined || this._cache.maxSize === Infinity) &&\n        (this._cache.sweepFilter === undefined || this._cache.sweepFilter.isDefault));\n    if (!cacheWarningEmitted && !defaultCaching) {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n  }\n\n  /**\n   * The cache of Channels\n   * @type {Collection<Snowflake, Channel>}\n   * @name ChannelManager#cache\n   */\n\n  _add(data, guild, { cache = true, allowUnknownGuild = false, fromInteraction = false } = {}) {\n    const existing = this.cache.get(data.id);\n    if (existing) {\n      if (cache) existing._patch(data, fromInteraction);\n      guild?.channels?._add(existing);\n      if (ThreadChannelTypes.includes(existing.type)) {\n        existing.parent?.threads?._add(existing);\n      }\n      return existing;\n    }\n\n    const channel = Channel.create(this.client, data, guild, { allowUnknownGuild, fromInteraction });\n\n    if (!channel) {\n      this.client.emit(Events.DEBUG, `Failed to find guild, or unknown type for channel ${data.id} ${data.type}`);\n      return null;\n    }\n\n    if (cache && !allowUnknownGuild) this.cache.set(channel.id, channel);\n\n    return channel;\n  }\n\n  _remove(id) {\n    const channel = this.cache.get(id);\n    channel?.guild?.channels.cache.delete(id);\n    channel?.parent?.threads?.cache.delete(id);\n    this.cache.delete(id);\n  }\n\n  /**\n   * Data that can be resolved to give a Channel object. This can be:\n   * * A Channel object\n   * * A Snowflake\n   * @typedef {Channel|Snowflake} ChannelResolvable\n   */\n\n  /**\n   * Resolves a ChannelResolvable to a Channel object.\n   * @method resolve\n   * @memberof ChannelManager\n   * @instance\n   * @param {ChannelResolvable} channel The channel resolvable to resolve\n   * @returns {?Channel}\n   */\n\n  /**\n   * Resolves a ChannelResolvable to a channel id string.\n   * @method resolveId\n   * @memberof ChannelManager\n   * @instance\n   * @param {ChannelResolvable} channel The channel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Options for fetching a channel from discord\n   * @typedef {BaseFetchOptions} FetchChannelOptions\n   * @property {boolean} [allowUnknownGuild=false] Allows the channel to be returned even if the guild is not in cache,\n   * it will not be cached. <warn>Many of the properties and methods on the returned channel will throw errors</warn>\n   */\n\n  /**\n   * Obtains a channel from Discord, or the channel cache if it's already available.\n   * @param {Snowflake} id The channel's id\n   * @param {FetchChannelOptions} [options] Additional options for this fetch\n   * @returns {Promise<?Channel>}\n   * @example\n   * // Fetch a channel by its id\n   * client.channels.fetch('222109930545610754')\n   *   .then(channel => console.log(channel.name))\n   *   .catch(console.error);\n   */\n  async fetch(id, { allowUnknownGuild = false, cache = true, force = false } = {}) {\n    if (!force) {\n      const existing = this.cache.get(id);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.channels(id).get();\n    return this._add(data, null, { cache, allowUnknownGuild });\n  }\n}\n\nmodule.exports = ChannelManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/ChannelManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/DataManager.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/DataManager.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseManager = __webpack_require__(/*! ./BaseManager */ \"./node_modules/discord.js/src/managers/BaseManager.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\n\n/**\n * Manages the API methods of a data model along with a collection of instances.\n * @extends {BaseManager}\n * @abstract\n */\nclass DataManager extends BaseManager {\n  constructor(client, holds) {\n    super(client);\n\n    /**\n     * The data structure belonging to this manager.\n     * @name DataManager#holds\n     * @type {Function}\n     * @private\n     * @readonly\n     */\n    Object.defineProperty(this, 'holds', { value: holds });\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    throw new Error('NOT_IMPLEMENTED', 'get cache', this.constructor.name);\n  }\n\n  /**\n   * Resolves a data entry to a data Object.\n   * @param {string|Object} idOrInstance The id or instance of something in this Manager\n   * @returns {?Object} An instance from this Manager\n   */\n  resolve(idOrInstance) {\n    if (idOrInstance instanceof this.holds) return idOrInstance;\n    if (typeof idOrInstance === 'string') return this.cache.get(idOrInstance) ?? null;\n    return null;\n  }\n\n  /**\n   * Resolves a data entry to an instance id.\n   * @param {string|Object} idOrInstance The id or instance of something in this Manager\n   * @returns {?Snowflake}\n   */\n  resolveId(idOrInstance) {\n    if (idOrInstance instanceof this.holds) return idOrInstance.id;\n    if (typeof idOrInstance === 'string') return idOrInstance;\n    return null;\n  }\n\n  valueOf() {\n    return this.cache;\n  }\n}\n\nmodule.exports = DataManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/DataManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildApplicationCommandManager.js":
/*!********************************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildApplicationCommandManager.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst ApplicationCommandManager = __webpack_require__(/*! ./ApplicationCommandManager */ \"./node_modules/discord.js/src/managers/ApplicationCommandManager.js\");\nconst ApplicationCommandPermissionsManager = __webpack_require__(/*! ./ApplicationCommandPermissionsManager */ \"./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js\");\n\n/**\n * An extension for guild-specific application commands.\n * @extends {ApplicationCommandManager}\n */\nclass GuildApplicationCommandManager extends ApplicationCommandManager {\n  constructor(guild, iterable) {\n    super(guild.client, iterable);\n\n    /**\n     * The guild that this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The manager for permissions of arbitrary commands on this guild\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n  }\n}\n\nmodule.exports = GuildApplicationCommandManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildApplicationCommandManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildBanManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildBanManager.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError, Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst GuildBan = __webpack_require__(/*! ../structures/GuildBan */ \"./node_modules/discord.js/src/structures/GuildBan.js\");\nconst GuildMember = __webpack_require__(/*! ../structures/GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\");\n\n/**\n * Manages API methods for GuildBans and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildBanManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildBan, iterable);\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildBan>}\n   * @name GuildBanManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.user.id, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give a GuildBan object. This can be:\n   * * A GuildBan object\n   * * A User resolvable\n   * @typedef {GuildBan|UserResolvable} GuildBanResolvable\n   */\n\n  /**\n   * Resolves a GuildBanResolvable to a GuildBan object.\n   * @param {GuildBanResolvable} ban The ban that is in the guild\n   * @returns {?GuildBan}\n   */\n  resolve(ban) {\n    return super.resolve(ban) ?? super.resolve(this.client.users.resolveId(ban));\n  }\n\n  /**\n   * Options used to fetch a single ban from a guild.\n   * @typedef {BaseFetchOptions} FetchBanOptions\n   * @property {UserResolvable} user The ban to fetch\n   */\n\n  /**\n   * Options used to fetch all bans from a guild.\n   * @typedef {Object} FetchBansOptions\n   * @property {boolean} cache Whether or not to cache the fetched bans\n   */\n\n  /**\n   * Fetches ban(s) from Discord.\n   * @param {UserResolvable|FetchBanOptions|FetchBansOptions} [options] Options for fetching guild ban(s)\n   * @returns {Promise<GuildBan|Collection<Snowflake, GuildBan>>}\n   * @example\n   * // Fetch all bans from a guild\n   * guild.bans.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all bans from a guild without caching\n   * guild.bans.fetch({ cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single ban\n   * guild.bans.fetch('351871113346809860')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single ban without checking cache\n   * guild.bans.fetch({ user, force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single ban without caching\n   * guild.bans.fetch({ user, cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const user = this.client.users.resolveId(options);\n    if (user) return this._fetchSingle({ user, cache: true });\n    if (options.user) {\n      options.user = this.client.users.resolveId(options.user);\n    }\n    if (!options.user) {\n      if ('cache' in options) return this._fetchMany(options.cache);\n      return Promise.reject(new Error('FETCH_BAN_RESOLVE_ID'));\n    }\n    return this._fetchSingle(options);\n  }\n\n  async _fetchSingle({ user, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(user);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).bans(user).get();\n    return this._add(data, cache);\n  }\n\n  async _fetchMany(cache) {\n    const data = await this.client.api.guilds(this.guild.id).bans.get();\n    return data.reduce((col, ban) => col.set(ban.user.id, this._add(ban, cache)), new Collection());\n  }\n\n  /**\n   * Options used to ban a user from a guild.\n   * @typedef {Object} BanOptions\n   * @property {number} [days=0] Number of days of messages to delete, must be between 0 and 7, inclusive\n   * @property {string} [reason] The reason for the ban\n   */\n\n  /**\n   * Bans a user from the guild.\n   * @param {UserResolvable} user The user to ban\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user id will be the result.\n   * @example\n   * // Ban a user by id (or with a user/guild member object)\n   * guild.bans.create('84484653687267328')\n   *   .then(banInfo => console.log(`Banned ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n   *   .catch(console.error);\n   */\n  async create(user, options = { days: 0 }) {\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new Error('BAN_RESOLVE_ID', true);\n    await this.client.api\n      .guilds(this.guild.id)\n      .bans(id)\n      .put({\n        data: {\n          reason: options.reason,\n          delete_message_days: options.days,\n        },\n      });\n    if (user instanceof GuildMember) return user;\n    const _user = this.client.users.resolve(id);\n    if (_user) {\n      return this.guild.members.resolve(_user) ?? _user;\n    }\n    return id;\n  }\n\n  /**\n   * Unbans a user from the guild.\n   * @param {UserResolvable} user The user to unban\n   * @param {string} [reason] Reason for unbanning user\n   * @returns {Promise<User>}\n   * @example\n   * // Unban a user by id (or with a user/guild member object)\n   * guild.bans.remove('84484653687267328')\n   *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n   *   .catch(console.error);\n   */\n  async remove(user, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new Error('BAN_RESOLVE_ID');\n    await this.client.api.guilds(this.guild.id).bans(id).delete({ reason });\n    return this.client.users.resolve(user);\n  }\n}\n\nmodule.exports = GuildBanManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildBanManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildChannelManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildChannelManager.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst ThreadManager = __webpack_require__(/*! ./ThreadManager */ \"./node_modules/discord.js/src/managers/ThreadManager.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst GuildChannel = __webpack_require__(/*! ../structures/GuildChannel */ \"./node_modules/discord.js/src/structures/GuildChannel.js\");\nconst PermissionOverwrites = __webpack_require__(/*! ../structures/PermissionOverwrites */ \"./node_modules/discord.js/src/structures/PermissionOverwrites.js\");\nconst ThreadChannel = __webpack_require__(/*! ../structures/ThreadChannel */ \"./node_modules/discord.js/src/structures/ThreadChannel.js\");\nconst { ChannelTypes, ThreadChannelTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for GuildChannels and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildChannelManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildChannel, iterable);\n    const defaultCaching =\n      this._cache.constructor.name === 'Collection' ||\n      ((this._cache.maxSize === undefined || this._cache.maxSize === Infinity) &&\n        (this._cache.sweepFilter === undefined || this._cache.sweepFilter.isDefault));\n    if (!cacheWarningEmitted && !defaultCaching) {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The number of channels in this managers cache excluding thread channels\n   * that do not count towards a guild's maximum channels restriction.\n   * @type {number}\n   * @readonly\n   */\n  get channelCountWithoutThreads() {\n    return this.cache.reduce((acc, channel) => {\n      if (ThreadChannelTypes.includes(channel.type)) return acc;\n      return ++acc;\n    }, 0);\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildChannel|ThreadChannel>}\n   * @name GuildChannelManager#cache\n   */\n\n  _add(channel) {\n    const existing = this.cache.get(channel.id);\n    if (existing) return existing;\n    this.cache.set(channel.id, channel);\n    return channel;\n  }\n\n  /**\n   * Data that can be resolved to give a Guild Channel object. This can be:\n   * * A GuildChannel object\n   * * A ThreadChannel object\n   * * A Snowflake\n   * @typedef {GuildChannel|ThreadChannel|Snowflake} GuildChannelResolvable\n   */\n\n  /**\n   * Resolves a GuildChannelResolvable to a Channel object.\n   * @param {GuildChannelResolvable} channel The GuildChannel resolvable to resolve\n   * @returns {?(GuildChannel|ThreadChannel)}\n   */\n  resolve(channel) {\n    if (channel instanceof ThreadChannel) return super.resolve(channel.id);\n    return super.resolve(channel);\n  }\n\n  /**\n   * Resolves a GuildChannelResolvable to a channel id.\n   * @param {GuildChannelResolvable} channel The GuildChannel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n  resolveId(channel) {\n    if (channel instanceof ThreadChannel) return super.resolveId(channel.id);\n    return super.resolveId(channel);\n  }\n\n  /**\n   * Options used to create a new channel in a guild.\n   * @typedef {Object} GuildChannelCreateOptions\n   * @property {string|number} [type='GUILD_TEXT'] The type of the new channel, either `GUILD_TEXT`, `GUILD_VOICE`,\n   * `GUILD_CATEGORY`, `GUILD_NEWS`, `GUILD_STORE`, or `GUILD_STAGE_VOICE`\n   * @property {string} [topic] The topic for the new channel\n   * @property {boolean} [nsfw] Whether the new channel is nsfw\n   * @property {number} [bitrate] Bitrate of the new channel in bits (only voice)\n   * @property {number} [userLimit] Maximum amount of users allowed in the new channel (only voice)\n   * @property {CategoryChannelResolvable} [parent] Parent of the new channel\n   * @property {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} [permissionOverwrites]\n   * Permission overwrites of the new channel\n   * @property {number} [position] Position of the new channel\n   * @property {number} [rateLimitPerUser] The ratelimit per user for the new channel\n   * @property {string} [reason] Reason for creating the new channel\n   */\n\n  /**\n   * Creates a new channel in the guild.\n   * @param {string} name The name of the new channel\n   * @param {GuildChannelCreateOptions} [options={}] Options for creating the new channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Create a new text channel\n   * guild.channels.create('new-general', { reason: 'Needed a cool new channel' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Create a new channel with permission overwrites\n   * guild.channels.create('new-voice', {\n   *   type: 'GUILD_VOICE',\n   *   permissionOverwrites: [\n   *      {\n   *        id: message.author.id,\n   *        deny: [Permissions.FLAGS.VIEW_CHANNEL],\n   *     },\n   *   ],\n   * })\n   */\n  async create(\n    name,\n    { type, topic, nsfw, bitrate, userLimit, parent, permissionOverwrites, position, rateLimitPerUser, reason } = {},\n  ) {\n    if (parent) parent = this.client.channels.resolveId(parent);\n    if (permissionOverwrites) {\n      permissionOverwrites = permissionOverwrites.map(o => PermissionOverwrites.resolve(o, this.guild));\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).channels.post({\n      data: {\n        name,\n        topic,\n        type: typeof type === 'number' ? type : ChannelTypes[type] ?? ChannelTypes.GUILD_TEXT,\n        nsfw,\n        bitrate,\n        user_limit: userLimit,\n        parent_id: parent,\n        position,\n        permission_overwrites: permissionOverwrites,\n        rate_limit_per_user: rateLimitPerUser,\n      },\n      reason,\n    });\n    return this.client.actions.ChannelCreate.handle(data).channel;\n  }\n\n  /**\n   * Obtains one or more guild channels from Discord, or the channel cache if they're already available.\n   * @param {Snowflake} [id] The channel's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<?GuildChannel|Collection<Snowflake, GuildChannel>>}\n   * @example\n   * // Fetch all channels from the guild (excluding threads)\n   * message.guild.channels.fetch()\n   *   .then(channels => console.log(`There are ${channels.size} channels.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single channel\n   * message.guild.channels.fetch('222197033908436994')\n   *   .then(channel => console.log(`The channel name is: ${channel.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id && !force) {\n      const existing = this.cache.get(id);\n      if (existing) return existing;\n    }\n\n    if (id) {\n      const data = await this.client.api.channels(id).get();\n      // Since this is the guild manager, throw if on a different guild\n      if (this.guild.id !== data.guild_id) throw new Error('GUILD_CHANNEL_UNOWNED');\n      return this.client.channels._add(data, this.guild, { cache });\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).channels.get();\n    const channels = new Collection();\n    for (const channel of data) channels.set(channel.id, this.client.channels._add(channel, this.guild, { cache }));\n    return channels;\n  }\n\n  /**\n   * Obtains all active thread channels in the guild from Discord\n   * @param {boolean} [cache=true] Whether to cache the fetched data\n   * @returns {Promise<FetchedThreads>}\n   * @example\n   * // Fetch all threads from the guild\n   * message.guild.channels.fetchActiveThreads()\n   *   .then(fetched => console.log(`There are ${fetched.threads.size} threads.`))\n   *   .catch(console.error);\n   */\n  async fetchActiveThreads(cache = true) {\n    const raw = await this.client.api.guilds(this.guild.id).threads.active.get();\n    return ThreadManager._mapThreads(raw, this.client, { guild: this.guild, cache });\n  }\n}\n\nmodule.exports = GuildChannelManager;\n\n/**\n * @external APIActiveThreadsList\n * @see {@link https://discord.com/developers/docs/resources/guild#list-active-threads-response-body}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildChannelManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildEmojiManager.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildEmojiManager.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst BaseGuildEmojiManager = __webpack_require__(/*! ./BaseGuildEmojiManager */ \"./node_modules/discord.js/src/managers/BaseGuildEmojiManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\n\n/**\n * Manages API methods for GuildEmojis and stores their cache.\n * @extends {BaseGuildEmojiManager}\n */\nclass GuildEmojiManager extends BaseGuildEmojiManager {\n  constructor(guild, iterable) {\n    super(guild.client, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Options used for creating an emoji in a guild.\n   * @typedef {Object} GuildEmojiCreateOptions\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles to limit the emoji to\n   * @property {string} [reason] The reason for creating the emoji\n   */\n\n  /**\n   * Creates a new custom emoji in the guild.\n   * @param {BufferResolvable|Base64Resolvable} attachment The image for the emoji\n   * @param {string} name The name for the emoji\n   * @param {GuildEmojiCreateOptions} [options] Options for creating the emoji\n   * @returns {Promise<Emoji>} The created emoji\n   * @example\n   * // Create a new emoji from a url\n   * guild.emojis.create('https://i.imgur.com/w3duR07.png', 'rip')\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   * @example\n   * // Create a new emoji from a file on your computer\n   * guild.emojis.create('./memes/banana.png', 'banana')\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   */\n  async create(attachment, name, { roles, reason } = {}) {\n    attachment = await DataResolver.resolveImage(attachment);\n    if (!attachment) throw new TypeError('REQ_RESOURCE_TYPE');\n\n    const data = { image: attachment, name };\n    if (roles) {\n      if (!Array.isArray(roles) && !(roles instanceof Collection)) {\n        throw new TypeError('INVALID_TYPE', 'options.roles', 'Array or Collection of Roles or Snowflakes', true);\n      }\n      data.roles = [];\n      for (const role of roles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'options.roles', role);\n        data.roles.push(resolvedRole);\n      }\n    }\n\n    const emoji = await this.client.api.guilds(this.guild.id).emojis.post({ data, reason });\n    return this.client.actions.GuildEmojiCreate.handle(this.guild, emoji).emoji;\n  }\n\n  /**\n   * Obtains one or more emojis from Discord, or the emoji cache if they're already available.\n   * @param {Snowflake} [id] The emoji's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<GuildEmoji|Collection<Snowflake, GuildEmoji>>}\n   * @example\n   * // Fetch all emojis from the guild\n   * message.guild.emojis.fetch()\n   *   .then(emojis => console.log(`There are ${emojis.size} emojis.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single emoji\n   * message.guild.emojis.fetch('222078108977594368')\n   *   .then(emoji => console.log(`The emoji name is: ${emoji.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const emoji = await this.client.api.guilds(this.guild.id).emojis(id).get();\n      return this._add(emoji, cache);\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).emojis.get();\n    const emojis = new Collection();\n    for (const emoji of data) emojis.set(emoji.id, this._add(emoji, cache));\n    return emojis;\n  }\n}\n\nmodule.exports = GuildEmojiManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildEmojiManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildEmojiRoleManager.js":
/*!***********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildEmojiRoleManager.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst DataManager = __webpack_require__(/*! ./DataManager */ \"./node_modules/discord.js/src/managers/DataManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Role = __webpack_require__(/*! ../structures/Role */ \"./node_modules/discord.js/src/structures/Role.js\");\n\n/**\n * Manages API methods for roles belonging to emojis and stores their cache.\n * @extends {DataManager}\n */\nclass GuildEmojiRoleManager extends DataManager {\n  constructor(emoji) {\n    super(emoji.client, Role);\n\n    /**\n     * The emoji belonging to this manager\n     * @type {GuildEmoji}\n     */\n    this.emoji = emoji;\n    /**\n     * The guild belonging to this manager\n     * @type {Guild}\n     */\n    this.guild = emoji.guild;\n  }\n\n  /**\n   * The cache of roles belonging to this emoji\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get cache() {\n    return this.guild.roles.cache.filter(role => this.emoji._roles.includes(role.id));\n  }\n\n  /**\n   * Adds a role (or multiple roles) to the list of roles that can use this emoji.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to add\n   * @returns {Promise<GuildEmoji>}\n   */\n  add(roleOrRoles) {\n    if (!Array.isArray(roleOrRoles) && !(roleOrRoles instanceof Collection)) roleOrRoles = [roleOrRoles];\n\n    const resolvedRoles = [];\n    for (const role of roleOrRoles.values()) {\n      const resolvedRole = this.guild.roles.resolveId(role);\n      if (!resolvedRole) {\n        return Promise.reject(new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role));\n      }\n      resolvedRoles.push(resolvedRole);\n    }\n\n    const newRoles = [...new Set(resolvedRoles.concat(...this.cache.values()))];\n    return this.set(newRoles);\n  }\n\n  /**\n   * Removes a role (or multiple roles) from the list of roles that can use this emoji.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to remove\n   * @returns {Promise<GuildEmoji>}\n   */\n  remove(roleOrRoles) {\n    if (!Array.isArray(roleOrRoles) && !(roleOrRoles instanceof Collection)) roleOrRoles = [roleOrRoles];\n\n    const resolvedRoleIds = [];\n    for (const role of roleOrRoles.values()) {\n      const roleId = this.guild.roles.resolveId(role);\n      if (!roleId) {\n        return Promise.reject(new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role));\n      }\n      resolvedRoleIds.push(roleId);\n    }\n\n    const newRoles = [...this.cache.keys()].filter(id => !resolvedRoleIds.includes(id));\n    return this.set(newRoles);\n  }\n\n  /**\n   * Sets the role(s) that can use this emoji.\n   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role ids to apply\n   * @returns {Promise<GuildEmoji>}\n   * @example\n   * // Set the emoji's roles to a single role\n   * guildEmoji.roles.set(['391156570408615936'])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all roles from an emoji\n   * guildEmoji.roles.set([])\n   *    .then(console.log)\n   *    .catch(console.error);\n   */\n  set(roles) {\n    return this.emoji.edit({ roles });\n  }\n\n  clone() {\n    const clone = new this.constructor(this.emoji);\n    clone._patch([...this.cache.keys()]);\n    return clone;\n  }\n\n  /**\n   * Patches the roles for this manager's cache\n   * @param {Snowflake[]} roles The new roles\n   * @private\n   */\n  _patch(roles) {\n    this.emoji._roles = roles;\n  }\n\n  valueOf() {\n    return this.cache;\n  }\n}\n\nmodule.exports = GuildEmojiRoleManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildEmojiRoleManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildInviteManager.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildInviteManager.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Invite = __webpack_require__(/*! ../structures/Invite */ \"./node_modules/discord.js/src/structures/Invite.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\n\n/**\n * Manages API methods for GuildInvites and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildInviteManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Invite, iterable);\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<string, Invite>}\n   * @name GuildInviteManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.code, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give an Invite object. This can be:\n   * * An invite code\n   * * An invite URL\n   * @typedef {string} InviteResolvable\n   */\n\n  /**\n   * Resolves an InviteResolvable to an Invite object.\n   * @method resolve\n   * @memberof GuildInviteManager\n   * @instance\n   * @param {InviteResolvable} invite The invite resolvable to resolve\n   * @returns {?Invite}\n   */\n\n  /**\n   * Resolves an InviteResolvable to an invite code string.\n   * @method resolveId\n   * @memberof GuildInviteManager\n   * @instance\n   * @param {InviteResolvable} invite The invite resolvable to resolve\n   * @returns {?string}\n   */\n\n  /**\n   * Options used to fetch a single invite from a guild.\n   * @typedef {Object} FetchInviteOptions\n   * @property {InviteResolvable} code The invite to fetch\n   * @property {boolean} [cache=true] Whether or not to cache the fetched invite\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Options used to fetch all invites from a guild.\n   * @typedef {Object} FetchInvitesOptions\n   * @property {GuildChannelResolvable} [channelId] The channel to fetch all invites from\n   * @property {boolean} [cache=true] Whether or not to cache the fetched invites\n   */\n\n  /**\n   * Fetches invite(s) from Discord.\n   * @param {InviteResolvable|FetchInviteOptions|FetchInvitesOptions} [options] Options for fetching guild invite(s)\n   * @returns {Promise<Invite|Collection<string, Invite>>}\n   * @example\n   * // Fetch all invites from a guild\n   * guild.invites.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all invites from a guild without caching\n   * guild.invites.fetch({ cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all invites from a channel\n   * guild.invites.fetch({ channelId: '222197033908436994' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single invite\n   * guild.invites.fetch('bRCvFy9')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single invite without checking cache\n   * guild.invites.fetch({ code: 'bRCvFy9', force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single invite without caching\n   * guild.invites.fetch({ code: 'bRCvFy9', cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    if (typeof options === 'string') {\n      const code = DataResolver.resolveInviteCode(options);\n      if (!code) return Promise.reject(new Error('INVITE_RESOLVE_CODE'));\n      return this._fetchSingle({ code, cache: true });\n    }\n    if (!options.code) {\n      if (options.channelId) {\n        const id = this.guild.channels.resolveId(options.channelId);\n        if (!id) return Promise.reject(new Error('GUILD_CHANNEL_RESOLVE'));\n        return this._fetchChannelMany(id, options.cache);\n      }\n\n      if ('cache' in options) return this._fetchMany(options.cache);\n      return Promise.reject(new Error('INVITE_RESOLVE_CODE'));\n    }\n    return this._fetchSingle({\n      ...options,\n      code: DataResolver.resolveInviteCode(options.code),\n    });\n  }\n\n  async _fetchSingle({ code, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(code);\n      if (existing) return existing;\n    }\n\n    const invites = await this._fetchMany(cache);\n    const invite = invites.get(code);\n    if (!invite) throw new Error('INVITE_NOT_FOUND');\n    return invite;\n  }\n\n  async _fetchMany(cache) {\n    const data = await this.client.api.guilds(this.guild.id).invites.get();\n    return data.reduce((col, invite) => col.set(invite.code, this._add(invite, cache)), new Collection());\n  }\n\n  async _fetchChannelMany(channelId, cache) {\n    const data = await this.client.api.channels(channelId).invites.get();\n    return data.reduce((col, invite) => col.set(invite.code, this._add(invite, cache)), new Collection());\n  }\n\n  /**\n   * Create an invite to the guild from the provided channel.\n   * @param {GuildChannelResolvable} channel The options for creating the invite from a channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite from a channel.\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a selected channel\n   * guild.invites.create('599942732013764608')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(\n    channel,\n    { temporary = false, maxAge = 86400, maxUses = 0, unique, targetUser, targetApplication, targetType, reason } = {},\n  ) {\n    const id = this.guild.channels.resolveId(channel);\n    if (!id) throw new Error('GUILD_CHANNEL_RESOLVE');\n\n    const invite = await this.client.api.channels(id).invites.post({\n      data: {\n        temporary,\n        max_age: maxAge,\n        max_uses: maxUses,\n        unique,\n        target_user_id: this.client.users.resolveId(targetUser),\n        target_application_id: targetApplication?.id ?? targetApplication?.applicationId ?? targetApplication,\n        target_type: targetType,\n      },\n      reason,\n    });\n    return new Invite(this.client, invite);\n  }\n\n  /**\n   * Deletes an invite.\n   * @param {InviteResolvable} invite The invite to delete\n   * @param {string} [reason] Reason for deleting the invite\n   * @returns {Promise<void>}\n   */\n  async delete(invite, reason) {\n    const code = DataResolver.resolveInviteCode(invite);\n\n    await this.client.api.invites(code).delete({ reason });\n  }\n}\n\nmodule.exports = GuildInviteManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildInviteManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildManager.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildManager.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst Guild = __webpack_require__(/*! ../structures/Guild */ \"./node_modules/discord.js/src/structures/Guild.js\");\nconst GuildChannel = __webpack_require__(/*! ../structures/GuildChannel */ \"./node_modules/discord.js/src/structures/GuildChannel.js\");\nconst GuildEmoji = __webpack_require__(/*! ../structures/GuildEmoji */ \"./node_modules/discord.js/src/structures/GuildEmoji.js\");\nconst GuildMember = __webpack_require__(/*! ../structures/GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\");\nconst Invite = __webpack_require__(/*! ../structures/Invite */ \"./node_modules/discord.js/src/structures/Invite.js\");\nconst OAuth2Guild = __webpack_require__(/*! ../structures/OAuth2Guild */ \"./node_modules/discord.js/src/structures/OAuth2Guild.js\");\nconst Role = __webpack_require__(/*! ../structures/Role */ \"./node_modules/discord.js/src/structures/Role.js\");\nconst {\n  ChannelTypes,\n  Events,\n  VerificationLevels,\n  DefaultMessageNotificationLevels,\n  ExplicitContentFilterLevels,\n} = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\nconst SystemChannelFlags = __webpack_require__(/*! ../util/SystemChannelFlags */ \"./node_modules/discord.js/src/util/SystemChannelFlags.js\");\nconst { resolveColor } = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for Guilds and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Guild, iterable);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, Guild>}\n   * @name GuildManager#cache\n   */\n\n  /**\n   * Data that resolves to give a Guild object. This can be:\n   * * A Guild object\n   * * A GuildChannel object\n   * * A GuildEmoji object\n   * * A Role object\n   * * A Snowflake\n   * * An Invite object\n   * @typedef {Guild|GuildChannel|GuildMember|GuildEmoji|Role|Snowflake|Invite} GuildResolvable\n   */\n\n  /**\n   * Partial data for a Role.\n   * @typedef {Object} PartialRoleData\n   * @property {Snowflake|number} [id] The role's id, used to set channel overrides,\n   * this is a placeholder and will be replaced by the API after consumption\n   * @property {string} [name] The name of the role\n   * @property {ColorResolvable} [color] The color of the role, either a hex string or a base 10 number\n   * @property {boolean} [hoist] Whether or not the role should be hoisted\n   * @property {number} [position] The position of the role\n   * @property {PermissionResolvable} [permissions] The permissions of the role\n   * @property {boolean} [mentionable] Whether or not the role should be mentionable\n   */\n\n  /**\n   * Partial overwrite data.\n   * @typedef {Object} PartialOverwriteData\n   * @property {Snowflake|number} id The id of the {@link Role} or {@link User} this overwrite belongs to\n   * @property {string} [type] The type of this overwrite\n   * @property {PermissionResolvable} [allow] The permissions to allow\n   * @property {PermissionResolvable} [deny] The permissions to deny\n   */\n\n  /**\n   * Partial data for a Channel.\n   * @typedef {Object} PartialChannelData\n   * @property {Snowflake|number} [id] The channel's id, used to set its parent,\n   * this is a placeholder and will be replaced by the API after consumption\n   * @property {Snowflake|number} [parentId] The parent id for this channel\n   * @property {ChannelType} [type] The type of the channel\n   * @property {string} name The name of the channel\n   * @property {string} [topic] The topic of the text channel\n   * @property {boolean} [nsfw] Whether the channel is NSFW\n   * @property {number} [bitrate] The bitrate of the voice channel\n   * @property {number} [userLimit] The user limit of the channel\n   * @property {PartialOverwriteData[]} [permissionOverwrites]\n   * Overwrites of the channel\n   * @property {number} [rateLimitPerUser] The rate limit per user of the channel in seconds\n   */\n\n  /**\n   * Resolves a GuildResolvable to a Guild object.\n   * @method resolve\n   * @memberof GuildManager\n   * @instance\n   * @param {GuildResolvable} guild The guild resolvable to identify\n   * @returns {?Guild}\n   */\n  resolve(guild) {\n    if (\n      guild instanceof GuildChannel ||\n      guild instanceof GuildMember ||\n      guild instanceof GuildEmoji ||\n      guild instanceof Role ||\n      (guild instanceof Invite && guild.guild)\n    ) {\n      return super.resolve(guild.guild);\n    }\n    return super.resolve(guild);\n  }\n\n  /**\n   * Resolves a {@link GuildResolvable} to a {@link Guild} id string.\n   * @method resolveId\n   * @memberof GuildManager\n   * @instance\n   * @param {GuildResolvable} guild The guild resolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(guild) {\n    if (\n      guild instanceof GuildChannel ||\n      guild instanceof GuildMember ||\n      guild instanceof GuildEmoji ||\n      guild instanceof Role ||\n      (guild instanceof Invite && guild.guild)\n    ) {\n      return super.resolveId(guild.guild.id);\n    }\n    return super.resolveId(guild);\n  }\n\n  /**\n   * Options used to create a guild.\n   * @typedef {Object} GuildCreateOptions\n   * @property {Snowflake|number} [afkChannelId] The AFK channel's id\n   * @property {number} [afkTimeout] The AFK timeout in seconds\n   * @property {PartialChannelData[]} [channels=[]] The channels for this guild\n   * @property {DefaultMessageNotificationLevel|number} [defaultMessageNotifications] The default message notifications\n   * for the guild\n   * @property {ExplicitContentFilterLevel} [explicitContentFilter] The explicit content filter level for the guild\n   * @property {BufferResolvable|Base64Resolvable} [icon=null] The icon for the guild\n   * @property {PartialRoleData[]} [roles=[]] The roles for this guild,\n   * the first element of this array is used to change properties of the guild's everyone role.\n   * @property {Snowflake|number} [systemChannelId] The system channel's id\n   * @property {SystemChannelFlagsResolvable} [systemChannelFlags] The flags of the system channel\n   * @property {VerificationLevel} [verificationLevel] The verification level for the guild\n   */\n\n  /**\n   * Creates a guild.\n   * <warn>This is only available to bots in fewer than 10 guilds.</warn>\n   * @param {string} name The name of the guild\n   * @param {GuildCreateOptions} [options] Options for creating the guild\n   * @returns {Promise<Guild>} The guild that was created\n   */\n  async create(\n    name,\n    {\n      afkChannelId,\n      afkTimeout,\n      channels = [],\n      defaultMessageNotifications,\n      explicitContentFilter,\n      icon = null,\n      roles = [],\n      systemChannelId,\n      systemChannelFlags,\n      verificationLevel,\n    } = {},\n  ) {\n    icon = await DataResolver.resolveImage(icon);\n    if (typeof verificationLevel === 'string') {\n      verificationLevel = VerificationLevels[verificationLevel];\n    }\n    if (typeof defaultMessageNotifications === 'string') {\n      defaultMessageNotifications = DefaultMessageNotificationLevels[defaultMessageNotifications];\n    }\n    if (typeof explicitContentFilter === 'string') {\n      explicitContentFilter = ExplicitContentFilterLevels[explicitContentFilter];\n    }\n    for (const channel of channels) {\n      if (channel.type) channel.type = ChannelTypes[channel.type.toUpperCase()];\n      channel.parent_id = channel.parentId;\n      delete channel.parentId;\n      if (!channel.permissionOverwrites) continue;\n      for (const overwrite of channel.permissionOverwrites) {\n        if (overwrite.allow) overwrite.allow = Permissions.resolve(overwrite.allow).toString();\n        if (overwrite.deny) overwrite.deny = Permissions.resolve(overwrite.deny).toString();\n      }\n      channel.permission_overwrites = channel.permissionOverwrites;\n      delete channel.permissionOverwrites;\n    }\n    for (const role of roles) {\n      if (role.color) role.color = resolveColor(role.color);\n      if (role.permissions) role.permissions = Permissions.resolve(role.permissions).toString();\n    }\n    if (systemChannelFlags) systemChannelFlags = SystemChannelFlags.resolve(systemChannelFlags);\n\n    const data = await this.client.api.guilds.post({\n      data: {\n        name,\n        icon,\n        verification_level: verificationLevel,\n        default_message_notifications: defaultMessageNotifications,\n        explicit_content_filter: explicitContentFilter,\n        roles,\n        channels,\n        afk_channel_id: afkChannelId,\n        afk_timeout: afkTimeout,\n        system_channel_id: systemChannelId,\n        system_channel_flags: systemChannelFlags,\n      },\n    });\n\n    if (this.client.guilds.cache.has(data.id)) return this.client.guilds.cache.get(data.id);\n\n    return new Promise(resolve => {\n      const handleGuild = guild => {\n        if (guild.id === data.id) {\n          clearTimeout(timeout);\n          this.client.removeListener(Events.GUILD_CREATE, handleGuild);\n          this.client.decrementMaxListeners();\n          resolve(guild);\n        }\n      };\n      this.client.incrementMaxListeners();\n      this.client.on(Events.GUILD_CREATE, handleGuild);\n\n      const timeout = setTimeout(() => {\n        this.client.removeListener(Events.GUILD_CREATE, handleGuild);\n        this.client.decrementMaxListeners();\n        resolve(this.client.guilds._add(data));\n      }, 10000).unref();\n    });\n  }\n\n  /**\n   * Options used to fetch a single guild.\n   * @typedef {BaseFetchOptions} FetchGuildOptions\n   * @property {GuildResolvable} guild The guild to fetch\n   * @property {boolean} [withCounts=true] Whether the approximate member and presence counts should be returned\n   */\n\n  /**\n   * Options used to fetch multiple guilds.\n   * @typedef {Object} FetchGuildsOptions\n   * @property {Snowflake} [before] Get guilds before this guild id\n   * @property {Snowflake} [after] Get guilds after this guild id\n   * @property {number} [limit=200] Maximum number of guilds to request (1-200)\n   */\n\n  /**\n   * Obtains one or multiple guilds from Discord, or the guild cache if it's already available.\n   * @param {GuildResolvable|FetchGuildOptions|FetchGuildsOptions} [options] The guild's id or options\n   * @returns {Promise<Guild|Collection<Snowflake, OAuth2Guild>>}\n   */\n  async fetch(options = {}) {\n    const id = this.resolveId(options) ?? this.resolveId(options.guild);\n\n    if (id) {\n      if (!options.force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n\n      const data = await this.client.api.guilds(id).get({ query: { with_counts: options.withCounts ?? true } });\n      return this._add(data, options.cache);\n    }\n\n    const data = await this.client.api.users('@me').guilds.get({ query: options });\n    return data.reduce((coll, guild) => coll.set(guild.id, new OAuth2Guild(this.client, guild)), new Collection());\n  }\n}\n\nmodule.exports = GuildManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildMemberManager.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildMemberManager.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { Error, TypeError, RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst BaseGuildVoiceChannel = __webpack_require__(/*! ../structures/BaseGuildVoiceChannel */ \"./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js\");\nconst GuildMember = __webpack_require__(/*! ../structures/GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\");\nconst Role = __webpack_require__(/*! ../structures/Role */ \"./node_modules/discord.js/src/structures/Role.js\");\nconst { Events, Opcodes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Manages API methods for GuildMembers and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildMemberManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildMember, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildMember>}\n   * @name GuildMemberManager#cache\n   */\n\n  _add(data, cache = true) {\n    return super._add(data, cache, { id: data.user.id, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give a GuildMember object. This can be:\n   * * A GuildMember object\n   * * A User resolvable\n   * @typedef {GuildMember|UserResolvable} GuildMemberResolvable\n   */\n\n  /**\n   * Resolves a {@link GuildMemberResolvable} to a {@link GuildMember} object.\n   * @param {GuildMemberResolvable} member The user that is part of the guild\n   * @returns {?GuildMember}\n   */\n  resolve(member) {\n    const memberResolvable = super.resolve(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    if (userResolvable) return super.resolve(userResolvable);\n    return null;\n  }\n\n  /**\n   * Resolves a {@link GuildMemberResolvable} to a member id.\n   * @param {GuildMemberResolvable} member The user that is part of the guild\n   * @returns {?Snowflake}\n   */\n  resolveId(member) {\n    const memberResolvable = super.resolveId(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n\n  /**\n   * Options used to add a user to a guild using OAuth2.\n   * @typedef {Object} AddGuildMemberOptions\n   * @property {string} accessToken An OAuth2 access token for the user with the `guilds.join` scope granted to the\n   * bot's application\n   * @property {string} [nick] The nickname to give to the member (requires `MANAGE_NICKNAMES`)\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles to add to the member\n   * (requires `MANAGE_ROLES`)\n   * @property {boolean} [mute] Whether the member should be muted (requires `MUTE_MEMBERS`)\n   * @property {boolean} [deaf] Whether the member should be deafened (requires `DEAFEN_MEMBERS`)\n   * @property {boolean} [force] Whehter to skip the cache check and call the API directly\n   * @property {boolean} [fetchWhenExisting=true] Whether to fetch the user if not cached and already a member\n   */\n\n  /**\n   * Adds a user to the guild using OAuth2. Requires the `CREATE_INSTANT_INVITE` permission.\n   * @param {UserResolvable} user The user to add to the guild\n   * @param {AddGuildMemberOptions} options Options for adding the user to the guild\n   * @returns {Promise<GuildMember|null>}\n   */\n  async add(user, options) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) throw new TypeError('INVALID_TYPE', 'user', 'UserResolvable');\n    if (!options.force) {\n      const cachedUser = this.cache.get(userId);\n      if (cachedUser) return cachedUser;\n    }\n    const resolvedOptions = {\n      access_token: options.accessToken,\n      nick: options.nick,\n      mute: options.mute,\n      deaf: options.deaf,\n    };\n    if (options.roles) {\n      if (!Array.isArray(options.roles) && !(options.roles instanceof Collection)) {\n        throw new TypeError('INVALID_TYPE', 'options.roles', 'Array or Collection of Roles or Snowflakes', true);\n      }\n      const resolvedRoles = [];\n      for (const role of options.roles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'options.roles', role);\n        resolvedRoles.push(resolvedRole);\n      }\n      resolvedOptions.roles = resolvedRoles;\n    }\n    const data = await this.client.api.guilds(this.guild.id).members(userId).put({ data: resolvedOptions });\n    // Data is an empty buffer if the member is already part of the guild.\n    return data instanceof Buffer ? (options.fetchWhenExisting === false ? null : this.fetch(userId)) : this._add(data);\n  }\n\n  /**\n   * Options used to fetch a single member from a guild.\n   * @typedef {BaseFetchOptions} FetchMemberOptions\n   * @property {UserResolvable} user The user to fetch\n   */\n\n  /**\n   * Options used to fetch multiple members from a guild.\n   * @typedef {Object} FetchMembersOptions\n   * @property {UserResolvable|UserResolvable[]} user The user(s) to fetch\n   * @property {?string} query Limit fetch to members with similar usernames\n   * @property {number} [limit=0] Maximum number of members to request\n   * @property {boolean} [withPresences=false] Whether or not to include the presences\n   * @property {number} [time=120e3] Timeout for receipt of members\n   * @property {?string} nonce Nonce for this request (32 characters max - default to base 16 now timestamp)\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Fetches member(s) from Discord, even if they're offline.\n   * @param {UserResolvable|FetchMemberOptions|FetchMembersOptions} [options] If a UserResolvable, the user to fetch.\n   * If undefined, fetches all members.\n   * If a query, it limits the results to users with similar usernames.\n   * @returns {Promise<GuildMember|Collection<Snowflake, GuildMember>>}\n   * @example\n   * // Fetch all members from a guild\n   * guild.members.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single member\n   * guild.members.fetch('66564597481480192')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single member without checking cache\n   * guild.members.fetch({ user, force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single member without caching\n   * guild.members.fetch({ user, cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch by an array of users including their presences\n   * guild.members.fetch({ user: ['66564597481480192', '191615925336670208'], withPresences: true })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch by query\n   * guild.members.fetch({ query: 'hydra', limit: 1 })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const user = this.client.users.resolveId(options);\n    if (user) return this._fetchSingle({ user, cache: true });\n    if (options.user) {\n      if (Array.isArray(options.user)) {\n        options.user = options.user.map(u => this.client.users.resolveId(u));\n        return this._fetchMany(options);\n      } else {\n        options.user = this.client.users.resolveId(options.user);\n      }\n      if (!options.limit && !options.withPresences) return this._fetchSingle(options);\n    }\n    return this._fetchMany(options);\n  }\n\n  /**\n   * Options used for searching guild members.\n   * @typedef {Object} GuildSearchMembersOptions\n   * @property {string} query Filter members whose username or nickname start with this query\n   * @property {number} [limit=1] Maximum number of members to search\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member(s)\n   */\n\n  /**\n   * Searches for members in the guild based on a query.\n   * @param {GuildSearchMembersOptions} options Options for searching members\n   * @returns {Promise<Collection<Snowflake, GuildMember>>}\n   */\n  async search({ query, limit = 1, cache = true } = {}) {\n    const data = await this.client.api.guilds(this.guild.id).members.search.get({ query: { query, limit } });\n    return data.reduce((col, member) => col.set(member.user.id, this._add(member, cache)), new Collection());\n  }\n\n  /**\n   * Options used for listing guild members.\n   * @typedef {Object} GuildListMembersOptions\n   * @property {Snowflake} [after] Limit fetching members to those with an id greater than the supplied id\n   * @property {number} [limit=1] Maximum number of members to list\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member(s)\n   */\n\n  /**\n   * Lists up to 1000 members of the guild.\n   * @param {GuildListMembersOptions} [options] Options for listing members\n   * @returns {Promise<Collection<Snowflake, GuildMember>>}\n   */\n  async list({ after, limit = 1, cache = true } = {}) {\n    const data = await this.client.api.guilds(this.guild.id).members.get({ query: { after, limit } });\n    return data.reduce((col, member) => col.set(member.user.id, this._add(member, cache)), new Collection());\n  }\n\n  /**\n   * Edits a member of the guild.\n   * <info>The user must be a member of the guild</info>\n   * @param {UserResolvable} user The member to edit\n   * @param {GuildMemberEditData} data The data to edit the member with\n   * @param {string} [reason] Reason for editing this user\n   * @returns {Promise<GuildMember>}\n   */\n  async edit(user, data, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new TypeError('INVALID_TYPE', 'user', 'UserResolvable');\n\n    // Clone the data object for immutability\n    const _data = { ...data };\n    if (_data.channel) {\n      _data.channel = this.guild.channels.resolve(_data.channel);\n      if (!(_data.channel instanceof BaseGuildVoiceChannel)) {\n        throw new Error('GUILD_VOICE_CHANNEL_RESOLVE');\n      }\n      _data.channel_id = _data.channel.id;\n      _data.channel = undefined;\n    } else if (_data.channel === null) {\n      _data.channel_id = null;\n      _data.channel = undefined;\n    }\n    if (_data.roles) _data.roles = _data.roles.map(role => (role instanceof Role ? role.id : role));\n    let endpoint = this.client.api.guilds(this.guild.id);\n    if (id === this.client.user.id) {\n      const keys = Object.keys(_data);\n      if (keys.length === 1 && keys[0] === 'nick') endpoint = endpoint.members('@me').nick;\n      else endpoint = endpoint.members(id);\n    } else {\n      endpoint = endpoint.members(id);\n    }\n    const d = await endpoint.patch({ data: _data, reason });\n\n    const clone = this.cache.get(id)?._clone();\n    clone?._patch(d);\n    return clone ?? this._add(d, false);\n  }\n\n  /**\n   * Options used for pruning guild members.\n   * <info>It's recommended to set {@link GuildPruneMembersOptions#count options.count}\n   * to `false` for large guilds.</info>\n   * @typedef {Object} GuildPruneMembersOptions\n   * @property {number} [days=7] Number of days of inactivity required to kick\n   * @property {boolean} [dry=false] Get the number of users that will be kicked, without actually kicking them\n   * @property {boolean} [count=true] Whether or not to return the number of users that have been kicked.\n   * @property {RoleResolvable[]} [roles] Array of roles to bypass the \"...and no roles\" constraint when pruning\n   * @property {string} [reason] Reason for this prune\n   */\n\n  /**\n   * Prunes members from the guild based on how long they have been inactive.\n   * @param {GuildPruneMembersOptions} [options] Options for pruning\n   * @returns {Promise<number|null>} The number of members that were/will be kicked\n   * @example\n   * // See how many members will be pruned\n   * guild.members.prune({ dry: true })\n   *   .then(pruned => console.log(`This will prune ${pruned} people!`))\n   *   .catch(console.error);\n   * @example\n   * // Actually prune the members\n   * guild.members.prune({ days: 1, reason: 'too many people!' })\n   *   .then(pruned => console.log(`I just pruned ${pruned} people!`))\n   *   .catch(console.error);\n   * @example\n   * // Include members with a specified role\n   * guild.members.prune({ days: 7, roles: ['657259391652855808'] })\n   *    .then(pruned => console.log(`I just pruned ${pruned} people!`))\n   *    .catch(console.error);\n   */\n  async prune({ days = 7, dry = false, count: compute_prune_count = true, roles = [], reason } = {}) {\n    if (typeof days !== 'number') throw new TypeError('PRUNE_DAYS_TYPE');\n\n    const query = { days };\n    const resolvedRoles = [];\n\n    for (const role of roles) {\n      const resolvedRole = this.guild.roles.resolveId(role);\n      if (!resolvedRole) {\n        throw new TypeError('INVALID_ELEMENT', 'Array', 'options.roles', role);\n      }\n      resolvedRoles.push(resolvedRole);\n    }\n\n    if (resolvedRoles.length) {\n      query.include_roles = dry ? resolvedRoles.join(',') : resolvedRoles;\n    }\n\n    const endpoint = this.client.api.guilds(this.guild.id).prune;\n\n    const { pruned } = await (dry\n      ? endpoint.get({ query, reason })\n      : endpoint.post({ data: { ...query, compute_prune_count }, reason }));\n\n    return pruned;\n  }\n\n  /**\n   * Kicks a user from the guild.\n   * <info>The user must be a member of the guild</info>\n   * @param {UserResolvable} user The member to kick\n   * @param {string} [reason] Reason for kicking\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user's id will be the result.\n   * @example\n   * // Kick a user by id (or with a user/guild member object)\n   * guild.members.kick('84484653687267328')\n   *   .then(banInfo => console.log(`Kicked ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n   *   .catch(console.error);\n   */\n  async kick(user, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) return Promise.reject(new TypeError('INVALID_TYPE', 'user', 'UserResolvable'));\n\n    await this.client.api.guilds(this.guild.id).members(id).delete({ reason });\n\n    return this.resolve(user) ?? this.client.users.resolve(user) ?? id;\n  }\n\n  /**\n   * Bans a user from the guild.\n   * @param {UserResolvable} user The user to ban\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user id will be the result.\n   * Internally calls the GuildBanManager#create method.\n   * @example\n   * // Ban a user by id (or with a user/guild member object)\n   * guild.members.ban('84484653687267328')\n   *   .then(kickInfo => console.log(`Banned ${kickInfo.user?.tag ?? kickInfo.tag ?? kickInfo}`))\n   *   .catch(console.error);\n   */\n  ban(user, options = { days: 0 }) {\n    return this.guild.bans.create(user, options);\n  }\n\n  /**\n   * Unbans a user from the guild. Internally calls the {@link GuildBanManager#remove} method.\n   * @param {UserResolvable} user The user to unban\n   * @param {string} [reason] Reason for unbanning user\n   * @returns {Promise<User>} The user that was unbanned\n   * @example\n   * // Unban a user by id (or with a user/guild member object)\n   * guild.members.unban('84484653687267328')\n   *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n   *   .catch(console.error);\n   */\n  unban(user, reason) {\n    return this.guild.bans.remove(user, reason);\n  }\n\n  async _fetchSingle({ user, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(user);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).members(user).get();\n    return this._add(data, cache);\n  }\n\n  _fetchMany({\n    limit = 0,\n    withPresences: presences = false,\n    user: user_ids,\n    query,\n    time = 120e3,\n    nonce = SnowflakeUtil.generate(),\n  } = {}) {\n    return new Promise((resolve, reject) => {\n      if (!query && !user_ids) query = '';\n      if (nonce.length > 32) throw new RangeError('MEMBER_FETCH_NONCE_LENGTH');\n      this.guild.shard.send({\n        op: Opcodes.REQUEST_GUILD_MEMBERS,\n        d: {\n          guild_id: this.guild.id,\n          presences,\n          user_ids,\n          query,\n          nonce,\n          limit,\n        },\n      });\n      const fetchedMembers = new Collection();\n      let i = 0;\n      const handler = (members, _, chunk) => {\n        timeout.refresh();\n        if (chunk.nonce !== nonce) return;\n        i++;\n        for (const member of members.values()) {\n          fetchedMembers.set(member.id, member);\n        }\n        if (members.size < 1000 || (limit && fetchedMembers.size >= limit) || i === chunk.count) {\n          clearTimeout(timeout);\n          this.client.removeListener(Events.GUILD_MEMBERS_CHUNK, handler);\n          this.client.decrementMaxListeners();\n          let fetched = fetchedMembers;\n          if (user_ids && !Array.isArray(user_ids) && fetched.size) fetched = fetched.first();\n          resolve(fetched);\n        }\n      };\n      const timeout = setTimeout(() => {\n        this.client.removeListener(Events.GUILD_MEMBERS_CHUNK, handler);\n        this.client.decrementMaxListeners();\n        reject(new Error('GUILD_MEMBERS_TIMEOUT'));\n      }, time).unref();\n      this.client.incrementMaxListeners();\n      this.client.on(Events.GUILD_MEMBERS_CHUNK, handler);\n    });\n  }\n}\n\nmodule.exports = GuildMemberManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildMemberManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildMemberRoleManager.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildMemberRoleManager.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst DataManager = __webpack_require__(/*! ./DataManager */ \"./node_modules/discord.js/src/managers/DataManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Role = __webpack_require__(/*! ../structures/Role */ \"./node_modules/discord.js/src/structures/Role.js\");\n\n/**\n * Manages API methods for roles of a GuildMember and stores their cache.\n * @extends {DataManager}\n */\nclass GuildMemberRoleManager extends DataManager {\n  constructor(member) {\n    super(member.client, Role);\n\n    /**\n     * The GuildMember this manager belongs to\n     * @type {GuildMember}\n     */\n    this.member = member;\n\n    /**\n     * The Guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = member.guild;\n  }\n\n  /**\n   * The roles of this member\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get cache() {\n    const everyone = this.guild.roles.everyone;\n    return this.guild.roles.cache.filter(role => this.member._roles.includes(role.id)).set(everyone.id, everyone);\n  }\n\n  /**\n   * The role of the member used to hoist them in a separate category in the users list\n   * @type {?Role}\n   * @readonly\n   */\n  get hoist() {\n    const hoistedRoles = this.cache.filter(role => role.hoist);\n    if (!hoistedRoles.size) return null;\n    return hoistedRoles.reduce((prev, role) => (!prev || role.comparePositionTo(prev) > 0 ? role : prev));\n  }\n\n  /**\n   * The role of the member used to set their color\n   * @type {?Role}\n   * @readonly\n   */\n  get color() {\n    const coloredRoles = this.cache.filter(role => role.color);\n    if (!coloredRoles.size) return null;\n    return coloredRoles.reduce((prev, role) => (!prev || role.comparePositionTo(prev) > 0 ? role : prev));\n  }\n\n  /**\n   * The role of the member with the highest position\n   * @type {Role}\n   * @readonly\n   */\n  get highest() {\n    return this.cache.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev), this.cache.first());\n  }\n\n  /**\n   * The premium subscriber role of the guild, if present on the member\n   * @type {?Role}\n   * @readonly\n   */\n  get premiumSubscriberRole() {\n    return this.cache.find(role => role.tags?.premiumSubscriberRole) ?? null;\n  }\n\n  /**\n   * The managed role this member created when joining the guild, if any\n   * <info>Only ever available on bots</info>\n   * @type {?Role}\n   * @readonly\n   */\n  get botRole() {\n    if (!this.member.user.bot) return null;\n    return this.cache.find(role => role.tags?.botId === this.member.user.id) ?? null;\n  }\n\n  /**\n   * Adds a role (or multiple roles) to the member.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to add\n   * @param {string} [reason] Reason for adding the role(s)\n   * @returns {Promise<GuildMember>}\n   */\n  async add(roleOrRoles, reason) {\n    if (roleOrRoles instanceof Collection || Array.isArray(roleOrRoles)) {\n      const resolvedRoles = [];\n      for (const role of roleOrRoles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role);\n        resolvedRoles.push(resolvedRole);\n      }\n\n      const newRoles = [...new Set(resolvedRoles.concat(...this.cache.values()))];\n      return this.set(newRoles, reason);\n    } else {\n      roleOrRoles = this.guild.roles.resolveId(roleOrRoles);\n      if (roleOrRoles === null) {\n        throw new TypeError('INVALID_TYPE', 'roles', 'Role, Snowflake or Array or Collection of Roles or Snowflakes');\n      }\n\n      await this.client.api.guilds[this.guild.id].members[this.member.id].roles[roleOrRoles].put({ reason });\n\n      const clone = this.member._clone();\n      clone._roles = [...this.cache.keys(), roleOrRoles];\n      return clone;\n    }\n  }\n\n  /**\n   * Removes a role (or multiple roles) from the member.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to remove\n   * @param {string} [reason] Reason for removing the role(s)\n   * @returns {Promise<GuildMember>}\n   */\n  async remove(roleOrRoles, reason) {\n    if (roleOrRoles instanceof Collection || Array.isArray(roleOrRoles)) {\n      const resolvedRoles = [];\n      for (const role of roleOrRoles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role);\n        resolvedRoles.push(resolvedRole);\n      }\n\n      const newRoles = this.cache.filter(role => !resolvedRoles.includes(role.id));\n      return this.set(newRoles, reason);\n    } else {\n      roleOrRoles = this.guild.roles.resolveId(roleOrRoles);\n      if (roleOrRoles === null) {\n        throw new TypeError('INVALID_TYPE', 'roles', 'Role, Snowflake or Array or Collection of Roles or Snowflakes');\n      }\n\n      await this.client.api.guilds[this.guild.id].members[this.member.id].roles[roleOrRoles].delete({ reason });\n\n      const clone = this.member._clone();\n      const newRoles = this.cache.filter(role => role.id !== roleOrRoles);\n      clone._roles = [...newRoles.keys()];\n      return clone;\n    }\n  }\n\n  /**\n   * Sets the roles applied to the member.\n   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role ids to apply\n   * @param {string} [reason] Reason for applying the roles\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // Set the member's roles to a single role\n   * guildMember.roles.set(['391156570408615936'])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all the roles from a member\n   * guildMember.roles.set([])\n   *   .then(member => console.log(`Member roles is now of ${member.roles.cache.size} size`))\n   *   .catch(console.error);\n   */\n  set(roles, reason) {\n    return this.member.edit({ roles }, reason);\n  }\n\n  clone() {\n    const clone = new this.constructor(this.member);\n    clone.member._roles = [...this.cache.keys()];\n    return clone;\n  }\n}\n\nmodule.exports = GuildMemberRoleManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildMemberRoleManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/GuildStickerManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/GuildStickerManager.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst MessagePayload = __webpack_require__(/*! ../structures/MessagePayload */ \"./node_modules/discord.js/src/structures/MessagePayload.js\");\nconst Sticker = __webpack_require__(/*! ../structures/Sticker */ \"./node_modules/discord.js/src/structures/Sticker.js\");\n\n/**\n * Manages API methods for Guild Stickers and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildStickerManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Sticker, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of Guild Stickers\n   * @type {Collection<Snowflake, Sticker>}\n   * @name GuildStickerManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Options for creating a guild sticker.\n   * @typedef {Object} GuildStickerCreateOptions\n   * @param {?string} [description] The description for the sticker\n   * @param {string} [reason] Reason for creating the sticker\n   */\n\n  /**\n   * Creates a new custom sticker in the guild.\n   * @param {BufferResolvable|Stream|FileOptions|MessageAttachment} file The file for the sticker\n   * @param {string} name The name for the sticker\n   * @param {string} tags The Discord name of a unicode emoji representing the sticker's expression\n   * @param {GuildStickerCreateOptions} [options] Options\n   * @returns {Promise<Sticker>} The created sticker\n   * @example\n   * // Create a new sticker from a url\n   * guild.stickers.create('https://i.imgur.com/w3duR07.png', 'rip')\n   *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n   *   .catch(console.error);\n   * @example\n   * // Create a new sticker from a file on your computer\n   * guild.stickers.create('./memes/banana.png', 'banana')\n   *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n   *   .catch(console.error);\n   */\n  async create(file, name, tags, { description, reason } = {}) {\n    file = { ...(await MessagePayload.resolveFile(file)), key: 'file' };\n    if (!file) throw new TypeError('REQ_RESOURCE_TYPE');\n\n    const data = { name, tags, description: description ?? '' };\n\n    const sticker = await this.client.api\n      .guilds(this.guild.id)\n      .stickers.post({ data, files: [file], reason, dontUsePayloadJSON: true });\n    return this.client.actions.GuildStickerCreate.handle(this.guild, sticker).sticker;\n  }\n\n  /**\n   * Data that resolves to give a Sticker object. This can be:\n   * * A Sticker object\n   * * A Snowflake\n   * @typedef {Sticker|Snowflake} StickerResolvable\n   */\n\n  /**\n   * Resolves a StickerResolvable to a Sticker object.\n   * @method resolve\n   * @memberof GuildStickerManager\n   * @instance\n   * @param {StickerResolvable} sticker The Sticker resolvable to identify\n   * @returns {?Sticker}\n   */\n\n  /**\n   * Resolves a StickerResolvable to a Sticker id string.\n   * @method resolveId\n   * @memberof GuildStickerManager\n   * @instance\n   * @param {StickerResolvable} sticker The Sticker resolvable to identify\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Edits a sticker.\n   * @param {StickerResolvable} sticker The sticker to edit\n   * @param {GuildStickerEditData} [data] The new data for the sticker\n   * @param {string} [reason] Reason for editing this sticker\n   * @returns {Promise<Sticker>}\n   */\n  async edit(sticker, data, reason) {\n    const stickerId = this.resolveId(sticker);\n    if (!stickerId) throw new TypeError('INVALID_TYPE', 'sticker', 'StickerResolvable');\n\n    const d = await this.client.api.guilds(this.guild.id).stickers(stickerId).patch({\n      data,\n      reason,\n    });\n\n    const existing = this.cache.get(stickerId);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this._add(d);\n  }\n\n  /**\n   * Deletes a sticker.\n   * @param {StickerResolvable} sticker The sticker to delete\n   * @param {string} [reason] Reason for deleting this sticker\n   * @returns {Promise<void>}\n   */\n  async delete(sticker, reason) {\n    sticker = this.resolveId(sticker);\n    if (!sticker) throw new TypeError('INVALID_TYPE', 'sticker', 'StickerResolvable');\n\n    await this.client.api.guilds(this.guild.id).stickers(sticker).delete({ reason });\n  }\n\n  /**\n   * Obtains one or more stickers from Discord, or the sticker cache if they're already available.\n   * @param {Snowflake} [id] The Sticker's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<Sticker|Collection<Snowflake, Sticker>>}\n   * @example\n   * // Fetch all stickers from the guild\n   * message.guild.stickers.fetch()\n   *   .then(stickers => console.log(`There are ${stickers.size} stickers.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single sticker\n   * message.guild.stickers.fetch('222078108977594368')\n   *   .then(sticker => console.log(`The sticker name is: ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const sticker = await this.client.api.guilds(this.guild.id).stickers(id).get();\n      return this._add(sticker, cache);\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).stickers.get();\n    return new Collection(data.map(sticker => [sticker.id, this._add(sticker, cache)]));\n  }\n}\n\nmodule.exports = GuildStickerManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/GuildStickerManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/MessageManager.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/MessageManager.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Message = __webpack_require__(/*! ../structures/Message */ \"./node_modules/discord.js/src/structures/Message.js\");\nconst MessagePayload = __webpack_require__(/*! ../structures/MessagePayload */ \"./node_modules/discord.js/src/structures/MessagePayload.js\");\n\n/**\n * Manages API methods for Messages and holds their cache.\n * @extends {CachedManager}\n */\nclass MessageManager extends CachedManager {\n  constructor(channel, iterable) {\n    super(channel.client, Message, iterable);\n\n    /**\n     * The channel that the messages belong to\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n  }\n\n  /**\n   * The cache of Messages\n   * @type {Collection<Snowflake, Message>}\n   * @name MessageManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache);\n  }\n\n  /**\n   * The parameters to pass in when requesting previous messages from a channel. `around`, `before` and\n   * `after` are mutually exclusive. All the parameters are optional.\n   * @typedef {Object} ChannelLogsQueryOptions\n   * @property {number} [limit=50] Number of messages to acquire\n   * @property {Snowflake} [before] The message's id to get the messages that were posted before it\n   * @property {Snowflake} [after] The message's id to get the messages that were posted after it\n   * @property {Snowflake} [around] The message's id to get the messages that were posted around it\n   */\n\n  /**\n   * Gets a message, or messages, from this channel.\n   * <info>The returned Collection does not contain reaction users of the messages if they were not cached.\n   * Those need to be fetched separately in such a case.</info>\n   * @param {Snowflake|ChannelLogsQueryOptions} [message] The id of the message to fetch, or query parameters.\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<Message|Collection<Snowflake, Message>>}\n   * @example\n   * // Get message\n   * channel.messages.fetch('99539446449315840')\n   *   .then(message => console.log(message.content))\n   *   .catch(console.error);\n   * @example\n   * // Get messages\n   * channel.messages.fetch({ limit: 10 })\n   *   .then(messages => console.log(`Received ${messages.size} messages`))\n   *   .catch(console.error);\n   * @example\n   * // Get messages and filter by user id\n   * channel.messages.fetch()\n   *   .then(messages => console.log(`${messages.filter(m => m.author.id === '84484653687267328').size} messages`))\n   *   .catch(console.error);\n   */\n  fetch(message, { cache = true, force = false } = {}) {\n    return typeof message === 'string' ? this._fetchId(message, cache, force) : this._fetchMany(message, cache);\n  }\n\n  /**\n   * Fetches the pinned messages of this channel and returns a collection of them.\n   * <info>The returned Collection does not contain any reaction data of the messages.\n   * Those need to be fetched separately.</info>\n   * @param {boolean} [cache=true] Whether to cache the message(s)\n   * @returns {Promise<Collection<Snowflake, Message>>}\n   * @example\n   * // Get pinned messages\n   * channel.messages.fetchPinned()\n   *   .then(messages => console.log(`Received ${messages.size} messages`))\n   *   .catch(console.error);\n   */\n  async fetchPinned(cache = true) {\n    const data = await this.client.api.channels[this.channel.id].pins.get();\n    const messages = new Collection();\n    for (const message of data) messages.set(message.id, this._add(message, cache));\n    return messages;\n  }\n\n  /**\n   * Data that can be resolved to a Message object. This can be:\n   * * A Message\n   * * A Snowflake\n   * @typedef {Message|Snowflake} MessageResolvable\n   */\n\n  /**\n   * Resolves a {@link MessageResolvable} to a {@link Message} object.\n   * @method resolve\n   * @memberof MessageManager\n   * @instance\n   * @param {MessageResolvable} message The message resolvable to resolve\n   * @returns {?Message}\n   */\n\n  /**\n   * Resolves a {@link MessageResolvable} to a {@link Message} id.\n   * @method resolveId\n   * @memberof MessageManager\n   * @instance\n   * @param {MessageResolvable} message The message resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Edits a message, even if it's not cached.\n   * @param {MessageResolvable} message The message to edit\n   * @param {MessageEditOptions|MessagePayload} options The options to edit the message\n   * @returns {Promise<Message>}\n   */\n  async edit(message, options) {\n    const messageId = this.resolveId(message);\n    if (!messageId) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    const { data, files } = await (options instanceof MessagePayload\n      ? options\n      : MessagePayload.create(message instanceof Message ? message : this, options)\n    )\n      .resolveData()\n      .resolveFiles();\n    const d = await this.client.api.channels[this.channel.id].messages[messageId].patch({ data, files });\n\n    const existing = this.cache.get(messageId);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this._add(d);\n  }\n\n  /**\n   * Publishes a message in an announcement channel to all channels following it, even if it's not cached.\n   * @param {MessageResolvable} message The message to publish\n   * @returns {Promise<Message>}\n   */\n  async crosspost(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    const data = await this.client.api.channels(this.channel.id).messages(message).crosspost.post();\n    return this.cache.get(data.id) ?? this._add(data);\n  }\n\n  /**\n   * Pins a message to the channel's pinned messages, even if it's not cached.\n   * @param {MessageResolvable} message The message to pin\n   * @returns {Promise<void>}\n   */\n  async pin(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    await this.client.api.channels(this.channel.id).pins(message).put();\n  }\n\n  /**\n   * Unpins a message from the channel's pinned messages, even if it's not cached.\n   * @param {MessageResolvable} message The message to unpin\n   * @returns {Promise<void>}\n   */\n  async unpin(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    await this.client.api.channels(this.channel.id).pins(message).delete();\n  }\n\n  /**\n   * Adds a reaction to a message, even if it's not cached.\n   * @param {MessageResolvable} message The messag to react to\n   * @param {EmojiIdentifierResolvable} emoji The emoji to react with\n   * @returns {Promise<void>}\n   */\n  async react(message, emoji) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    emoji = this.client.emojis.resolveIdentifier(emoji);\n    if (!emoji) throw new TypeError('EMOJI_TYPE', 'emoji', 'EmojiIdentifierResolvable');\n\n    // eslint-disable-next-line newline-per-chained-call\n    await this.client.api.channels(this.channel.id).messages(message).reactions(emoji, '@me').put();\n  }\n\n  /**\n   * Deletes a message, even if it's not cached.\n   * @param {MessageResolvable} message The message to delete\n   * @returns {Promise<void>}\n   */\n  async delete(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    await this.client.api.channels(this.channel.id).messages(message).delete();\n  }\n\n  async _fetchId(messageId, cache, force) {\n    if (!force) {\n      const existing = this.cache.get(messageId);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.channels[this.channel.id].messages[messageId].get();\n    return this._add(data, cache);\n  }\n\n  async _fetchMany(options = {}, cache) {\n    const data = await this.client.api.channels[this.channel.id].messages.get({ query: options });\n    const messages = new Collection();\n    for (const message of data) messages.set(message.id, this._add(message, cache));\n    return messages;\n  }\n}\n\nmodule.exports = MessageManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/MessageManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/PermissionOverwriteManager.js":
/*!****************************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/PermissionOverwriteManager.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst PermissionOverwrites = __webpack_require__(/*! ../structures/PermissionOverwrites */ \"./node_modules/discord.js/src/structures/PermissionOverwrites.js\");\nconst Role = __webpack_require__(/*! ../structures/Role */ \"./node_modules/discord.js/src/structures/Role.js\");\nconst { OverwriteTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for guild channel permission overwrites and stores their cache.\n * @extends {CachedManager}\n */\nclass PermissionOverwriteManager extends CachedManager {\n  constructor(channel, iterable) {\n    super(channel.client, PermissionOverwrites);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The channel of the permission overwrite this manager belongs to\n     * @type {GuildChannel}\n     */\n    this.channel = channel;\n\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, PermissionOverwrites>}\n   * @name PermissionOverwriteManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.channel] });\n  }\n\n  /**\n   * Replaces the permission overwrites in this channel.\n   * @param {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} overwrites\n   * Permission overwrites the channel gets updated with\n   * @param {string} [reason] Reason for updating the channel overwrites\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * message.channel.permissionOverwrites.set([\n   *   {\n   *      id: message.author.id,\n   *      deny: [Permissions.FLAGS.VIEW_CHANNEL],\n   *   },\n   * ], 'Needed to change permissions');\n   */\n  set(overwrites, reason) {\n    if (!Array.isArray(overwrites) && !(overwrites instanceof Collection)) {\n      return Promise.reject(\n        new TypeError('INVALID_TYPE', 'overwrites', 'Array or Collection of Permission Overwrites', true),\n      );\n    }\n    return this.channel.edit({ permissionOverwrites: overwrites, reason });\n  }\n\n  /**\n   * Extra information about the overwrite\n   * @typedef {Object} GuildChannelOverwriteOptions\n   * @property {string} [reason] Reason for creating/editing this overwrite\n   * @property {number} [type] The type of overwrite, either `0` for a role or `1` for a member. Use this to bypass\n   * automatic resolution of type that results in an error for uncached structure\n   */\n\n  /**\n   * Creates or edits permission overwrites for a user or role in this channel.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @param {PermissionOverwrites} [existing] The existing overwrites to merge with this update\n   * @returns {Promise<GuildChannel>}\n   * @private\n   */\n  async upsert(userOrRole, options, overwriteOptions = {}, existing) {\n    let userOrRoleId = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    let { type, reason } = overwriteOptions;\n    if (typeof type !== 'number') {\n      userOrRole = this.channel.guild.roles.resolve(userOrRole) ?? this.client.users.resolve(userOrRole);\n      if (!userOrRole) throw new TypeError('INVALID_TYPE', 'parameter', 'User nor a Role');\n      type = userOrRole instanceof Role ? OverwriteTypes.role : OverwriteTypes.member;\n    }\n\n    const { allow, deny } = PermissionOverwrites.resolveOverwriteOptions(options, existing);\n\n    await this.client.api\n      .channels(this.channel.id)\n      .permissions(userOrRoleId)\n      .put({\n        data: { id: userOrRoleId, type, allow, deny },\n        reason,\n      });\n    return this.channel;\n  }\n\n  /**\n   * Creates permission overwrites for a user or role in this channel, or replaces them if already present.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Create or Replace permission overwrites for a message author\n   * message.channel.permissionOverwrites.create(message.author, {\n   *   SEND_MESSAGES: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  create(userOrRole, options, overwriteOptions) {\n    return this.upsert(userOrRole, options, overwriteOptions);\n  }\n\n  /**\n   * Edits permission overwrites for a user or role in this channel, or creates an entry if not already present.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Edit or Create permission overwrites for a message author\n   * message.channel.permissionOverwrites.edit(message.author, {\n   *   SEND_MESSAGES: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  edit(userOrRole, options, overwriteOptions) {\n    userOrRole = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    const existing = this.cache.get(userOrRole);\n    return this.upsert(userOrRole, options, overwriteOptions, existing);\n  }\n\n  /**\n   * Deletes permission overwrites for a user or role in this channel.\n   * @param {UserResolvable|RoleResolvable} userOrRole The user or role to delete\n   * @param {string} [reason] The reason for deleting the overwrite\n   * @returns {GuildChannel}\n   */\n  async delete(userOrRole, reason) {\n    const userOrRoleId = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    if (!userOrRoleId) throw new TypeError('INVALID_TYPE', 'parameter', 'User nor a Role');\n\n    await this.client.api.channels(this.channel.id).permissions(userOrRoleId).delete({ reason });\n    return this.channel;\n  }\n}\n\nmodule.exports = PermissionOverwriteManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/PermissionOverwriteManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/PresenceManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/PresenceManager.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { Presence } = __webpack_require__(/*! ../structures/Presence */ \"./node_modules/discord.js/src/structures/Presence.js\");\n\n/**\n * Manages API methods for Presences and holds their cache.\n * @extends {CachedManager}\n */\nclass PresenceManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Presence, iterable);\n  }\n\n  /**\n   * The cache of Presences\n   * @type {Collection<Snowflake, Presence>}\n   * @name PresenceManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.user.id });\n  }\n\n  /**\n   * Data that can be resolved to a Presence object. This can be:\n   * * A Presence\n   * * A UserResolvable\n   * * A Snowflake\n   * @typedef {Presence|UserResolvable|Snowflake} PresenceResolvable\n   */\n\n  /**\n   * Resolves a {@link PresenceResolvable} to a {@link Presence} object.\n   * @param {PresenceResolvable} presence The presence resolvable to resolve\n   * @returns {?Presence}\n   */\n  resolve(presence) {\n    const presenceResolvable = super.resolve(presence);\n    if (presenceResolvable) return presenceResolvable;\n    const UserResolvable = this.client.users.resolveId(presence);\n    return super.resolve(UserResolvable);\n  }\n\n  /**\n   * Resolves a {@link PresenceResolvable} to a {@link Presence} id.\n   * @param {PresenceResolvable} presence The presence resolvable to resolve\n   * @returns {?Snowflake}\n   */\n  resolveId(presence) {\n    const presenceResolvable = super.resolveId(presence);\n    if (presenceResolvable) return presenceResolvable;\n    const userResolvable = this.client.users.resolveId(presence);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n}\n\nmodule.exports = PresenceManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/PresenceManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/ReactionManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/ReactionManager.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst MessageReaction = __webpack_require__(/*! ../structures/MessageReaction */ \"./node_modules/discord.js/src/structures/MessageReaction.js\");\n\n/**\n * Manages API methods for reactions and holds their cache.\n * @extends {CachedManager}\n */\nclass ReactionManager extends CachedManager {\n  constructor(message, iterable) {\n    super(message.client, MessageReaction, iterable);\n\n    /**\n     * The message that this manager belongs to\n     * @type {Message}\n     */\n    this.message = message;\n  }\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.emoji.id ?? data.emoji.name, extras: [this.message] });\n  }\n\n  /**\n   * The reaction cache of this manager\n   * @type {Collection<string|Snowflake, MessageReaction>}\n   * @name ReactionManager#cache\n   */\n\n  /**\n   * Data that can be resolved to a MessageReaction object. This can be:\n   * * A MessageReaction\n   * * A Snowflake\n   * @typedef {MessageReaction|Snowflake} MessageReactionResolvable\n   */\n\n  /**\n   * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} object.\n   * @method resolve\n   * @memberof ReactionManager\n   * @instance\n   * @param {MessageReactionResolvable} reaction The MessageReaction to resolve\n   * @returns {?MessageReaction}\n   */\n\n  /**\n   * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} id.\n   * @method resolveId\n   * @memberof ReactionManager\n   * @instance\n   * @param {MessageReactionResolvable} reaction The MessageReaction to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Removes all reactions from a message.\n   * @returns {Promise<Message>}\n   */\n  async removeAll() {\n    await this.client.api.channels(this.message.channelId).messages(this.message.id).reactions.delete();\n    return this.message;\n  }\n}\n\nmodule.exports = ReactionManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/ReactionManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/ReactionUserManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/ReactionUserManager.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst User = __webpack_require__(/*! ../structures/User */ \"./node_modules/discord.js/src/structures/User.js\");\n\n/**\n * Manages API methods for users who reacted to a reaction and stores their cache.\n * @extends {CachedManager}\n */\nclass ReactionUserManager extends CachedManager {\n  constructor(reaction, iterable) {\n    super(reaction.client, User, iterable);\n\n    /**\n     * The reaction that this manager belongs to\n     * @type {MessageReaction}\n     */\n    this.reaction = reaction;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, User>}\n   * @name ReactionUserManager#cache\n   */\n\n  /**\n   * Options used to fetch users who gave a reaction.\n   * @typedef {Object} FetchReactionUsersOptions\n   * @property {number} [limit=100] The maximum amount of users to fetch, defaults to `100`\n   * @property {Snowflake} [after] Limit fetching users to those with an id greater than the supplied id\n   */\n\n  /**\n   * Fetches all the users that gave this reaction. Resolves with a collection of users, mapped by their ids.\n   * @param {FetchReactionUsersOptions} [options] Options for fetching the users\n   * @returns {Promise<Collection<Snowflake, User>>}\n   */\n  async fetch({ limit = 100, after } = {}) {\n    const message = this.reaction.message;\n    const data = await this.client.api.channels[message.channelId].messages[message.id].reactions[\n      this.reaction.emoji.identifier\n    ].get({ query: { limit, after } });\n    const users = new Collection();\n    for (const rawUser of data) {\n      const user = this.client.users._add(rawUser);\n      this.cache.set(user.id, user);\n      users.set(user.id, user);\n    }\n    return users;\n  }\n\n  /**\n   * Removes a user from this reaction.\n   * @param {UserResolvable} [user=this.client.user] The user to remove the reaction of\n   * @returns {Promise<MessageReaction>}\n   */\n  async remove(user = this.client.user) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) throw new Error('REACTION_RESOLVE_USER');\n    const message = this.reaction.message;\n    await this.client.api.channels[message.channelId].messages[message.id].reactions[this.reaction.emoji.identifier][\n      userId === this.client.user.id ? '@me' : userId\n    ].delete();\n    return this.reaction;\n  }\n}\n\nmodule.exports = ReactionUserManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/ReactionUserManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/RoleManager.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/RoleManager.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Role = __webpack_require__(/*! ../structures/Role */ \"./node_modules/discord.js/src/structures/Role.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\nconst { resolveColor, setPosition } = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for roles and stores their cache.\n * @extends {CachedManager}\n */\nclass RoleManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Role, iterable);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The guild belonging to this manager\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The role cache of this manager\n   * @type {Collection<Snowflake, Role>}\n   * @name RoleManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Obtains a role from Discord, or the role cache if they're already available.\n   * @param {Snowflake} [id] The role's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<?Role|Collection<Snowflake, Role>>}\n   * @example\n   * // Fetch all roles from the guild\n   * message.guild.roles.fetch()\n   *   .then(roles => console.log(`There are ${roles.cache.size} roles.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single role\n   * message.guild.roles.fetch('222078108977594368')\n   *   .then(role => console.log(`The role color is: ${role.color}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id && !force) {\n      const existing = this.cache.get(id);\n      if (existing) return existing;\n    }\n\n    // We cannot fetch a single role, as of this commit's date, Discord API throws with 405\n    const data = await this.client.api.guilds(this.guild.id).roles.get();\n    const roles = new Collection();\n    for (const role of data) roles.set(role.id, this._add(role, cache));\n    return id ? roles.get(id) ?? null : roles;\n  }\n\n  /**\n   * Data that can be resolved to a Role object. This can be:\n   * * A Role\n   * * A Snowflake\n   * @typedef {Role|Snowflake} RoleResolvable\n   */\n\n  /**\n   * Resolves a {@link RoleResolvable} to a {@link Role} object.\n   * @method resolve\n   * @memberof RoleManager\n   * @instance\n   * @param {RoleResolvable} role The role resolvable to resolve\n   * @returns {?Role}\n   */\n\n  /**\n   * Resolves a {@link RoleResolvable} to a {@link Role} id.\n   * @method resolveId\n   * @memberof RoleManager\n   * @instance\n   * @param {RoleResolvable} role The role resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Options used to create a new role.\n   * @typedef {Object} CreateRoleOptions\n   * @property {string} [name] The name of the new role\n   * @property {ColorResolvable} [color] The data to create the role with\n   * @property {boolean} [hoist] Whether or not the new role should be hoisted\n   * @property {PermissionResolvable} [permissions] The permissions for the new role\n   * @property {number} [position] The position of the new role\n   * @property {boolean} [mentionable] Whether or not the new role should be mentionable\n   * @property {string} [reason] The reason for creating this role\n   */\n\n  /**\n   * Creates a new role in the guild with given information.\n   * <warn>The position will silently reset to 1 if an invalid one is provided, or none.</warn>\n   * @param {CreateRoleOptions} [options] Options for creating the new role\n   * @returns {Promise<Role>}\n   * @example\n   * // Create a new role\n   * guild.roles.create()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Create a new role with data and a reason\n   * guild.roles.create({\n   *   name: 'Super Cool Blue People',\n   *   color: 'BLUE',\n   *   reason: 'we needed a role for Super Cool People',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(options = {}) {\n    let { name, color, hoist, permissions, position, mentionable, reason } = options;\n    if (color) color = resolveColor(color);\n    if (typeof permissions !== 'undefined') permissions = new Permissions(permissions);\n\n    const data = await this.client.api.guilds(this.guild.id).roles.post({\n      data: {\n        name,\n        color,\n        hoist,\n        permissions,\n        mentionable,\n      },\n      reason,\n    });\n    const { role } = this.client.actions.GuildRoleCreate.handle({\n      guild_id: this.guild.id,\n      role: data,\n    });\n    if (position) return role.setPosition(position, reason);\n    return role;\n  }\n\n  /**\n   * Edits a role of the guild.\n   * @param {RoleResolvable} role The role to edit\n   * @param {RoleData} data The new data for the role\n   * @param {string} [reason] Reason for editing this role\n   * @returns {Promise<Role>}\n   * @example\n   * // Edit a role\n   * guild.roles.edit('222079219327434752', { name: 'buddies' })\n   *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  async edit(role, data, reason) {\n    role = this.resolve(role);\n    if (!role) throw new TypeError('INVALID_TYPE', 'role', 'RoleResolvable');\n\n    if (typeof data.position === 'number') {\n      const updatedRoles = await setPosition(\n        role,\n        data.position,\n        false,\n        this.guild._sortedRoles(),\n        this.client.api.guilds(this.guild.id).roles,\n        reason,\n      );\n\n      this.client.actions.GuildRolesPositionUpdate.handle({\n        guild_id: this.guild.id,\n        roles: updatedRoles,\n      });\n    }\n\n    const _data = {\n      name: data.name,\n      color: typeof data.color === 'undefined' ? undefined : resolveColor(data.color),\n      hoist: data.hoist,\n      permissions: typeof data.permissions === 'undefined' ? undefined : new Permissions(data.permissions),\n      mentionable: data.mentionable,\n    };\n\n    const d = await this.client.api.guilds(this.guild.id).roles(role.id).patch({ data: _data, reason });\n\n    const clone = role._clone();\n    clone._patch(d);\n    return clone;\n  }\n\n  /**\n   * Gets the managed role a user created when joining the guild, if any\n   * <info>Only ever available for bots</info>\n   * @param {UserResolvable} user The user to access the bot role for\n   * @returns {?Role}\n   */\n  botRoleFor(user) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) return null;\n    return this.cache.find(role => role.tags?.botId === userId) ?? null;\n  }\n\n  /**\n   * The `@everyone` role of the guild\n   * @type {Role}\n   * @readonly\n   */\n  get everyone() {\n    return this.cache.get(this.guild.id);\n  }\n\n  /**\n   * The premium subscriber role of the guild, if any\n   * @type {?Role}\n   * @readonly\n   */\n  get premiumSubscriberRole() {\n    return this.cache.find(role => role.tags?.premiumSubscriberRole) ?? null;\n  }\n\n  /**\n   * The role with the highest position in the cache\n   * @type {Role}\n   * @readonly\n   */\n  get highest() {\n    return this.cache.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev), this.cache.first());\n  }\n}\n\nmodule.exports = RoleManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/RoleManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/StageInstanceManager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/StageInstanceManager.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError, Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst StageInstance = __webpack_require__(/*! ../structures/StageInstance */ \"./node_modules/discord.js/src/structures/StageInstance.js\");\nconst { PrivacyLevels } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Manages API methods for {@link StageInstance} objects and holds their cache.\n * @extends {CachedManager}\n */\nclass StageInstanceManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, StageInstance, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, StageInstance>}\n   * @name StageInstanceManager#cache\n   */\n\n  /**\n   * Options used to create a stage instance.\n   * @typedef {Object} StageInstanceCreateOptions\n   * @property {string} topic The topic of the stage instance\n   * @property {PrivacyLevel|number} [privacyLevel] The privacy level of the stage instance\n   */\n\n  /**\n   * Creates a new stage instance.\n   * @param {StageChannel|Snowflake} channel The stage channel to associate the created stage instance to\n   * @param {StageInstanceCreateOptions} options The options to create the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Create a stage instance\n   * guild.stageInstances.create('1234567890123456789', {\n   *  topic: 'A very creative topic',\n   *  privacyLevel: 'GUILD_ONLY'\n   * })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async create(channel, options) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    let { topic, privacyLevel } = options;\n\n    if (privacyLevel) privacyLevel = typeof privacyLevel === 'number' ? privacyLevel : PrivacyLevels[privacyLevel];\n\n    const data = await this.client.api['stage-instances'].post({\n      data: {\n        channel_id: channelId,\n        topic,\n        privacy_level: privacyLevel,\n      },\n    });\n\n    return this._add(data);\n  }\n\n  /**\n   * Fetches the stage instance associated with a stage channel, if it exists.\n   * @param {StageChannel|Snowflake} channel The stage channel whose associated stage instance is to be fetched\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Fetch a stage instance\n   * guild.stageInstances.fetch('1234567890123456789')\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async fetch(channel, { cache = true, force = false } = {}) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n\n    if (!force) {\n      const existing = this.cache.find(stageInstance => stageInstance.channelId === channelId);\n      if (existing) return existing;\n    }\n\n    const data = await this.client.api('stage-instances', channelId).get();\n    return this._add(data, cache);\n  }\n\n  /**\n   * Options used to edit an existing stage instance.\n   * @typedef {Object} StageInstanceEditOptions\n   * @property {string} [topic] The new topic of the stage instance\n   * @property {PrivacyLevel|number} [privacyLevel] The new privacy level of the stage instance\n   */\n\n  /**\n   * Edits an existing stage instance.\n   * @param {StageChannel|Snowflake} channel The stage channel whose associated stage instance is to be edited\n   * @param {StageInstanceEditOptions} options The options to edit the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Edit a stage instance\n   * guild.stageInstances.edit('1234567890123456789', { topic: 'new topic' })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async edit(channel, options) {\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n\n    let { topic, privacyLevel } = options;\n\n    if (privacyLevel) privacyLevel = typeof privacyLevel === 'number' ? privacyLevel : PrivacyLevels[privacyLevel];\n\n    const data = await this.client.api('stage-instances', channelId).patch({\n      data: {\n        topic,\n        privacy_level: privacyLevel,\n      },\n    });\n\n    if (this.cache.has(data.id)) {\n      const clone = this.cache.get(data.id)._clone();\n      clone._patch(data);\n      return clone;\n    }\n\n    return this._add(data);\n  }\n\n  /**\n   * Deletes an existing stage instance.\n   * @param {StageChannel|Snowflake} channel The stage channel whose associated stage instance is to be deleted\n   * @returns {Promise<void>}\n   */\n  async delete(channel) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n\n    await this.client.api('stage-instances', channelId).delete();\n  }\n}\n\nmodule.exports = StageInstanceManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/StageInstanceManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/ThreadManager.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/ThreadManager.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst ThreadChannel = __webpack_require__(/*! ../structures/ThreadChannel */ \"./node_modules/discord.js/src/structures/ThreadChannel.js\");\nconst { ChannelTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Manages API methods for {@link ThreadChannel} objects and stores their cache.\n * @extends {CachedManager}\n */\nclass ThreadManager extends CachedManager {\n  constructor(channel, iterable) {\n    super(channel.client, ThreadChannel, iterable);\n\n    /**\n     * The channel this Manager belongs to\n     * @type {NewsChannel|TextChannel}\n     */\n    this.channel = channel;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, ThreadChannel>}\n   * @name ThreadManager#cache\n   */\n\n  _add(thread) {\n    const existing = this.cache.get(thread.id);\n    if (existing) return existing;\n    this.cache.set(thread.id, thread);\n    return thread;\n  }\n\n  /**\n   * Data that can be resolved to a Thread Channel object. This can be:\n   * * A ThreadChannel object\n   * * A Snowflake\n   * @typedef {ThreadChannel|Snowflake} ThreadChannelResolvable\n   */\n\n  /**\n   * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} object.\n   * @method resolve\n   * @memberof ThreadManager\n   * @instance\n   * @param {ThreadChannelResolvable} thread The ThreadChannel resolvable to resolve\n   * @returns {?ThreadChannel}\n   */\n\n  /**\n   * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} id.\n   * @method resolveId\n   * @memberof ThreadManager\n   * @instance\n   * @param {ThreadChannelResolvable} thread The ThreadChannel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * A number that is allowed to be the duration (in minutes) of inactivity after which a thread is automatically\n   * archived. This can be:\n   * * `60` (1 hour)\n   * * `1440` (1 day)\n   * * `4320` (3 days) <warn>This is only available when the guild has the `THREE_DAY_THREAD_ARCHIVE` feature.</warn>\n   * * `10080` (7 days) <warn>This is only available when the guild has the `SEVEN_DAY_THREAD_ARCHIVE` feature.</warn>\n   * * `'MAX'` Based on the guilds boost count\n   * @typedef {number|string} ThreadAutoArchiveDuration\n   */\n\n  /**\n   * Options for creating a thread. <warn>Only one of `startMessage` or `type` can be defined.</warn>\n   * @typedef {StartThreadOptions} ThreadCreateOptions\n   * @property {MessageResolvable} [startMessage] The message to start a thread from. <warn>If this is defined then type\n   * of thread gets automatically defined and cannot be changed. The provided `type` field will be ignored</warn>\n   * @property {ThreadChannelTypes|number} [type] The type of thread to create. Defaults to `GUILD_PUBLIC_THREAD` if\n   * created in a {@link TextChannel} <warn>When creating threads in a {@link NewsChannel} this is ignored and is always\n   * `GUILD_NEWS_THREAD`</warn>\n   */\n\n  /**\n   * Creates a new thread in the channel.\n   * @param {ThreadCreateOptions} [options] Options to create a new thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Create a new public thread\n   * channel.threads\n   *   .create({\n   *     name: 'food-talk',\n   *     autoArchiveDuration: 60,\n   *     reason: 'Needed a separate thread for food',\n   *   })\n   *   .then(threadChannel => console.log(threadChannel))\n   *   .catch(console.error);\n   * @example\n   * // Create a new private thread\n   * channel.threads\n   *   .create({\n   *      name: 'mod-talk',\n   *      autoArchiveDuration: 60,\n   *      type: 'GUILD_PRIVATE_THREAD',\n   *      reason: 'Needed a separate thread for moderation',\n   *    })\n   *   .then(threadChannel => console.log(threadChannel))\n   *   .catch(console.error);\n   */\n  async create({ name, autoArchiveDuration, startMessage, type, reason } = {}) {\n    let path = this.client.api.channels(this.channel.id);\n    if (type && typeof type !== 'string' && typeof type !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'type', 'ThreadChannelType or Number');\n    }\n    let resolvedType =\n      this.channel.type === 'GUILD_NEWS' ? ChannelTypes.GUILD_NEWS_THREAD : ChannelTypes.GUILD_PUBLIC_THREAD;\n    if (startMessage) {\n      const startMessageId = this.channel.messages.resolveId(startMessage);\n      if (!startMessageId) throw new TypeError('INVALID_TYPE', 'startMessage', 'MessageResolvable');\n      path = path.messages(startMessageId);\n    } else if (this.channel.type !== 'GUILD_NEWS') {\n      resolvedType = typeof type === 'string' ? ChannelTypes[type] : type ?? resolvedType;\n    }\n    if (autoArchiveDuration === 'MAX') {\n      autoArchiveDuration = 1440;\n      if (this.channel.guild.features.includes('SEVEN_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 10080;\n      } else if (this.channel.guild.features.includes('THREE_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 4320;\n      }\n    }\n\n    const data = await path.threads.post({\n      data: {\n        name,\n        auto_archive_duration: autoArchiveDuration,\n        type: resolvedType,\n      },\n      reason,\n    });\n\n    return this.client.actions.ThreadCreate.handle(data).thread;\n  }\n\n  /**\n   * The options for fetching multiple threads, the properties are mutually exclusive\n   * @typedef {Object} FetchThreadsOptions\n   * @property {FetchArchivedThreadOptions} [archived] The options used to fetch archived threads\n   * @property {boolean} [active] When true, fetches active threads. <warn>If `archived` is set, this is ignored!</warn>\n   */\n\n  /**\n   * Obtains a thread from Discord, or the channel cache if it's already available.\n   * @param {ThreadChannelResolvable|FetchThreadsOptions} [options] The options to fetch threads. If it is a\n   * ThreadChannelResolvable then the specified thread will be fetched. Fetches all active threads if `undefined`\n   * @param {BaseFetchOptions} [cacheOptions] Additional options for this fetch. <warn>The `force` field gets ignored\n   * if `options` is not a {@link ThreadChannelResolvable}</warn>\n   * @returns {Promise<?(ThreadChannel|FetchedThreads)>}\n   * @example\n   * // Fetch a thread by its id\n   * channel.threads.fetch('831955138126104859')\n   *   .then(channel => console.log(channel.name))\n   *   .catch(console.error);\n   */\n  fetch(options, { cache = true, force = false } = {}) {\n    if (!options) return this.fetchActive(cache);\n    const channel = this.client.channels.resolveId(options);\n    if (channel) return this.client.channels.fetch(channel, cache, force);\n    if (options.archived) {\n      return this.fetchArchived(options.archived, cache);\n    }\n    return this.fetchActive(cache);\n  }\n\n  /**\n   * Data that can be resolved to a Date object. This can be:\n   * * A Date object\n   * * A number representing a timestamp\n   * * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string\n   * @typedef {Date|number|string} DateResolvable\n   */\n\n  /**\n   * The options used to fetch archived threads.\n   * @typedef {Object} FetchArchivedThreadOptions\n   * @property {string} [type='public'] The type of threads to fetch, either `public` or `private`\n   * @property {boolean} [fetchAll=false] Whether to fetch **all** archived threads when type is `private`.\n   * Requires `MANAGE_THREADS` if true\n   * @property {DateResolvable|ThreadChannelResolvable} [before] Only return threads that were created before this Date\n   * or Snowflake. <warn>Must be a {@link ThreadChannelResolvable} when type is `private` and fetchAll is `false`</warn>\n   * @property {number} [limit] Maximum number of threads to return\n   */\n\n  /**\n   * The data returned from a thread fetch that returns multiple threads.\n   * @typedef {Object} FetchedThreads\n   * @property {Collection<Snowflake, ThreadChannel>} threads The threads that were fetched, with any members returned\n   * @property {?boolean} hasMore Whether there are potentially additional threads that require a subsequent call\n   */\n\n  /**\n   * Obtains a set of archived threads from Discord, requires `READ_MESSAGE_HISTORY` in the parent channel.\n   * @param {FetchArchivedThreadOptions} [options] The options to fetch archived threads\n   * @param {boolean} [cache=true] Whether to cache the new thread objects if they aren't already\n   * @returns {Promise<FetchedThreads>}\n   */\n  async fetchArchived({ type = 'public', fetchAll = false, before, limit } = {}, cache = true) {\n    let path = this.client.api.channels(this.channel.id);\n    if (type === 'private' && !fetchAll) {\n      path = path.users('@me');\n    }\n    let timestamp;\n    let id;\n    if (typeof before !== 'undefined') {\n      if (before instanceof ThreadChannel || /^\\d{16,19}$/.test(String(before))) {\n        id = this.resolveId(before);\n        timestamp = this.resolve(before)?.archivedAt?.toISOString();\n      } else {\n        try {\n          timestamp = new Date(before).toISOString();\n        } catch {\n          throw new TypeError('INVALID_TYPE', 'before', 'DateResolvable or ThreadChannelResolvable');\n        }\n      }\n    }\n    const raw = await path.threads\n      .archived(type)\n      .get({ query: { before: type === 'private' && !fetchAll ? id : timestamp, limit } });\n    return this.constructor._mapThreads(raw, this.client, { parent: this.channel, cache });\n  }\n\n  /**\n   * Obtains the accessible active threads from Discord, requires `READ_MESSAGE_HISTORY` in the parent channel.\n   * @param {boolean} [cache=true] Whether to cache the new thread objects if they aren't already\n   * @returns {Promise<FetchedThreads>}\n   */\n  async fetchActive(cache = true) {\n    const raw = await this.client.api.guilds(this.channel.guild.id).threads.active.get();\n    return this.constructor._mapThreads(raw, this.client, { parent: this.channel, cache });\n  }\n\n  static _mapThreads(rawThreads, client, { parent, guild, cache }) {\n    const threads = rawThreads.threads.reduce((coll, raw) => {\n      const thread = client.channels._add(raw, guild ?? parent?.guild, { cache });\n      if (parent && thread.parentId !== parent.id) return coll;\n      return coll.set(thread.id, thread);\n    }, new Collection());\n    // Discord sends the thread id as id in this object\n    for (const rawMember of rawThreads.members) client.channels.cache.get(rawMember.id)?.members._add(rawMember);\n    return {\n      threads,\n      hasMore: rawThreads.has_more ?? false,\n    };\n  }\n}\n\nmodule.exports = ThreadManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/ThreadManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/ThreadMemberManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/ThreadMemberManager.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst ThreadMember = __webpack_require__(/*! ../structures/ThreadMember */ \"./node_modules/discord.js/src/structures/ThreadMember.js\");\n\n/**\n * Manages API methods for GuildMembers and stores their cache.\n * @extends {CachedManager}\n */\nclass ThreadMemberManager extends CachedManager {\n  constructor(thread, iterable) {\n    super(thread.client, ThreadMember, iterable);\n\n    /**\n     * The thread this manager belongs to\n     * @type {ThreadChannel}\n     */\n    this.thread = thread;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, ThreadMember>}\n   * @name ThreadMemberManager#cache\n   */\n\n  _add(data, cache = true) {\n    const existing = this.cache.get(data.user_id);\n    if (cache) existing?._patch(data);\n    if (existing) return existing;\n\n    const member = new ThreadMember(this.thread, data);\n    if (cache) this.cache.set(data.user_id, member);\n    return member;\n  }\n\n  /**\n   * Data that resolves to give a ThreadMember object. This can be:\n   * * A ThreadMember object\n   * * A User resolvable\n   * @typedef {ThreadMember|UserResolvable} ThreadMemberResolvable\n   */\n\n  /**\n   * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} object.\n   * @param {ThreadMemberResolvable} member The user that is part of the thread\n   * @returns {?GuildMember}\n   */\n  resolve(member) {\n    const memberResolvable = super.resolve(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    if (userResolvable) return super.resolve(userResolvable);\n    return null;\n  }\n\n  /**\n   * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} id string.\n   * @param {ThreadMemberResolvable} member The user that is part of the guild\n   * @returns {?Snowflake}\n   */\n  resolveId(member) {\n    const memberResolvable = super.resolveId(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n\n  /**\n   * Adds a member to the thread.\n   * @param {UserResolvable|'@me'} member The member to add\n   * @param {string} [reason] The reason for adding this member\n   * @returns {Promise<Snowflake>}\n   */\n  async add(member, reason) {\n    const id = member === '@me' ? member : this.client.users.resolveId(member);\n    if (!id) throw new TypeError('INVALID_TYPE', 'member', 'UserResolvable');\n    await this.client.api.channels(this.thread.id, 'thread-members', id).put({ reason });\n    return id;\n  }\n\n  /**\n   * Remove a user from the thread.\n   * @param {Snowflake|'@me'} id The id of the member to remove\n   * @param {string} [reason] The reason for removing this member from the thread\n   * @returns {Promise<Snowflake>}\n   */\n  async remove(id, reason) {\n    await this.client.api.channels(this.thread.id, 'thread-members', id).delete({ reason });\n    return id;\n  }\n\n  /**\n   * Fetches member(s) for the thread from Discord, requires access to the `GUILD_MEMBERS` gateway intent.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched members\n   * @returns {Promise<Collection<Snowflake, ThreadMember>>}\n   */\n  async fetch(cache = true) {\n    const raw = await this.client.api.channels(this.thread.id, 'thread-members').get();\n    return raw.reduce((col, rawMember) => {\n      const member = this._add(rawMember, cache);\n      return col.set(member.id, member);\n    }, new Collection());\n  }\n}\n\nmodule.exports = ThreadMemberManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/ThreadMemberManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/UserManager.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/UserManager.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst GuildMember = __webpack_require__(/*! ../structures/GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\");\nconst Message = __webpack_require__(/*! ../structures/Message */ \"./node_modules/discord.js/src/structures/Message.js\");\nconst ThreadMember = __webpack_require__(/*! ../structures/ThreadMember */ \"./node_modules/discord.js/src/structures/ThreadMember.js\");\nconst User = __webpack_require__(/*! ../structures/User */ \"./node_modules/discord.js/src/structures/User.js\");\n\n/**\n * Manages API methods for users and stores their cache.\n * @extends {CachedManager}\n */\nclass UserManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, User, iterable);\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, User>}\n   * @name UserManager#cache\n   */\n\n  /**\n   * Data that resolves to give a User object. This can be:\n   * * A User object\n   * * A Snowflake\n   * * A Message object (resolves to the message author)\n   * * A GuildMember object\n   * * A ThreadMember object\n   * @typedef {User|Snowflake|Message|GuildMember|ThreadMember} UserResolvable\n   */\n\n  /**\n   * Resolves a {@link UserResolvable} to a {@link User} object.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @returns {?User}\n   */\n  resolve(user) {\n    if (user instanceof GuildMember || user instanceof ThreadMember) return user.user;\n    if (user instanceof Message) return user.author;\n    return super.resolve(user);\n  }\n\n  /**\n   * Resolves a {@link UserResolvable} to a {@link User} id.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(user) {\n    if (user instanceof ThreadMember) return user.id;\n    if (user instanceof GuildMember) return user.user.id;\n    if (user instanceof Message) return user.author.id;\n    return super.resolveId(user);\n  }\n\n  /**\n   * Obtains a user from Discord, or the user cache if it's already available.\n   * @param {Snowflake} id The user's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<User>}\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (!force) {\n      const existing = this.cache.get(id);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.users(id).get();\n    return this._add(data, cache);\n  }\n}\n\nmodule.exports = UserManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/UserManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/managers/VoiceStateManager.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/managers/VoiceStateManager.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CachedManager = __webpack_require__(/*! ./CachedManager */ \"./node_modules/discord.js/src/managers/CachedManager.js\");\nconst VoiceState = __webpack_require__(/*! ../structures/VoiceState */ \"./node_modules/discord.js/src/structures/VoiceState.js\");\n\n/**\n * Manages API methods for VoiceStates and stores their cache.\n * @extends {CachedManager}\n */\nclass VoiceStateManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, VoiceState, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, VoiceState>}\n   * @name VoiceStateManager#cache\n   */\n\n  _add(data, cache = true) {\n    const existing = this.cache.get(data.user_id);\n    if (existing) return existing._patch(data);\n\n    const entry = new this.holds(this.guild, data);\n    if (cache) this.cache.set(data.user_id, entry);\n    return entry;\n  }\n}\n\nmodule.exports = VoiceStateManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/managers/VoiceStateManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/rest/APIRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/rest/APIRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst https = __webpack_require__(/*! https */ \"https\");\nconst FormData = __webpack_require__(/*! @discordjs/form-data */ \"./node_modules/@discordjs/form-data/lib/form_data.js\");\nconst fetch = __webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/lib/index.mjs\");\nconst { UserAgent } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nconst agent = new https.Agent({ keepAlive: true });\n\nclass APIRequest {\n  constructor(rest, method, path, options) {\n    this.rest = rest;\n    this.client = rest.client;\n    this.method = method;\n    this.route = options.route;\n    this.options = options;\n    this.retries = 0;\n\n    const { userAgentSuffix } = this.client.options;\n    this.fullUserAgent = `${UserAgent}${userAgentSuffix.length ? `, ${userAgentSuffix.join(', ')}` : ''}`;\n\n    let queryString = '';\n    if (options.query) {\n      const query = Object.entries(options.query)\n        .filter(([, value]) => value !== null && typeof value !== 'undefined')\n        .flatMap(([key, value]) => (Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]));\n      queryString = new URLSearchParams(query).toString();\n    }\n    this.path = `${path}${queryString && `?${queryString}`}`;\n  }\n\n  make() {\n    const API =\n      this.options.versioned === false\n        ? this.client.options.http.api\n        : `${this.client.options.http.api}/v${this.client.options.http.version}`;\n    const url = API + this.path;\n\n    let headers = {\n      ...this.client.options.http.headers,\n      'User-Agent': this.fullUserAgent,\n    };\n\n    if (this.options.auth !== false) headers.Authorization = this.rest.getAuth();\n    if (this.options.reason) headers['X-Audit-Log-Reason'] = encodeURIComponent(this.options.reason);\n    if (this.options.headers) headers = Object.assign(headers, this.options.headers);\n\n    let body;\n    if (this.options.files && this.options.files.length) {\n      body = new FormData();\n      for (const file of this.options.files) {\n        if (file?.file) body.append(file.key ?? file.name, file.file, file.name);\n      }\n      if (typeof this.options.data !== 'undefined') {\n        if (this.options.dontUsePayloadJSON) {\n          for (const [key, value] of Object.entries(this.options.data)) body.append(key, value);\n        } else {\n          body.append('payload_json', JSON.stringify(this.options.data));\n        }\n      }\n      headers = Object.assign(headers, body.getHeaders());\n      // eslint-disable-next-line eqeqeq\n    } else if (this.options.data != null) {\n      body = JSON.stringify(this.options.data);\n      headers['Content-Type'] = 'application/json';\n    }\n\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), this.client.options.restRequestTimeout).unref();\n    return fetch(url, {\n      method: this.method,\n      headers,\n      agent,\n      body,\n      signal: controller.signal,\n    }).finally(() => clearTimeout(timeout));\n  }\n}\n\nmodule.exports = APIRequest;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/rest/APIRequest.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/rest/APIRouter.js":
/*!*******************************************************!*\
  !*** ./node_modules/discord.js/src/rest/APIRouter.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst noop = () => {}; // eslint-disable-line no-empty-function\nconst methods = ['get', 'post', 'delete', 'patch', 'put'];\nconst reflectors = [\n  'toString',\n  'valueOf',\n  'inspect',\n  'constructor',\n  Symbol.toPrimitive,\n  Symbol.for('nodejs.util.inspect.custom'),\n];\n\nfunction buildRoute(manager) {\n  const route = [''];\n  const handler = {\n    get(target, name) {\n      if (reflectors.includes(name)) return () => route.join('/');\n      if (methods.includes(name)) {\n        const routeBucket = [];\n        for (let i = 0; i < route.length; i++) {\n          // Reactions routes and sub-routes all share the same bucket\n          if (route[i - 1] === 'reactions') break;\n          // Literal ids should only be taken account if they are the Major id (the Channel/Guild id)\n          if (/\\d{16,19}/g.test(route[i]) && !/channels|guilds/.test(route[i - 1])) routeBucket.push(':id');\n          // All other parts of the route should be considered as part of the bucket identifier\n          else routeBucket.push(route[i]);\n        }\n        return options =>\n          manager.request(\n            name,\n            route.join('/'),\n            Object.assign(\n              {\n                versioned: manager.versioned,\n                route: routeBucket.join('/'),\n              },\n              options,\n            ),\n          );\n      }\n      route.push(name);\n      return new Proxy(noop, handler);\n    },\n    apply(target, _, args) {\n      route.push(...args.filter(x => x != null)); // eslint-disable-line eqeqeq\n      return new Proxy(noop, handler);\n    },\n  };\n  return new Proxy(noop, handler);\n}\n\nmodule.exports = buildRoute;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/rest/APIRouter.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/rest/DiscordAPIError.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/rest/DiscordAPIError.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Represents an error from the Discord API.\n * @extends Error\n */\nclass DiscordAPIError extends Error {\n  constructor(error, status, request) {\n    super();\n    const flattened = this.constructor.flattenErrors(error.errors ?? error).join('\\n');\n    this.name = 'DiscordAPIError';\n    this.message = error.message && flattened ? `${error.message}\\n${flattened}` : error.message ?? flattened;\n\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n    this.method = request.method;\n\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.path = request.path;\n\n    /**\n     * HTTP error code returned by Discord\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * The HTTP status code\n     * @type {number}\n     */\n    this.httpStatus = status;\n\n    /**\n     * The data associated with the request that caused this error\n     * @type {HTTPErrorData}\n     */\n    this.requestData = {\n      json: request.options.data,\n      files: request.options.files ?? [],\n    };\n  }\n\n  /**\n   * Flattens an errors object returned from the API into an array.\n   * @param {APIError} obj Discord errors object\n   * @param {string} [key] Used internally to determine key names of nested fields\n   * @returns {string[]}\n   * @private\n   */\n  static flattenErrors(obj, key = '') {\n    let messages = [];\n\n    for (const [k, v] of Object.entries(obj)) {\n      if (k === 'message') continue;\n      const newKey = key ? (isNaN(k) ? `${key}.${k}` : `${key}[${k}]`) : k;\n\n      if (v._errors) {\n        messages.push(`${newKey}: ${v._errors.map(e => e.message).join(' ')}`);\n      } else if (v.code ?? v.message) {\n        messages.push(`${v.code ? `${v.code}: ` : ''}${v.message}`.trim());\n      } else if (typeof v === 'string') {\n        messages.push(v);\n      } else {\n        messages = messages.concat(this.flattenErrors(v, newKey));\n      }\n    }\n\n    return messages;\n  }\n}\n\nmodule.exports = DiscordAPIError;\n\n/**\n * @external APIError\n * @see {@link https://discord.com/developers/docs/reference#error-messages}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/rest/DiscordAPIError.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/rest/HTTPError.js":
/*!*******************************************************!*\
  !*** ./node_modules/discord.js/src/rest/HTTPError.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Represents an HTTP error from a request.\n * @extends Error\n */\nclass HTTPError extends Error {\n  constructor(message, name, code, request) {\n    super(message);\n\n    /**\n     * The name of the error\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * HTTP error code returned from the request\n     * @type {number}\n     */\n    this.code = code ?? 500;\n\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n    this.method = request.method;\n\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.path = request.path;\n\n    /**\n     * The HTTP data that was sent to Discord\n     * @typedef {Object} HTTPErrorData\n     * @property {*} json The JSON data that was sent\n     * @property {HTTPAttachmentData[]} files The files that were sent with this request, if any\n     */\n\n    /**\n     * The attachment data that is sent to Discord\n     * @typedef {Object} HTTPAttachmentData\n     * @property {string|Buffer|Stream} attachment The source of this attachment data\n     * @property {string} name The file name\n     * @property {Buffer|Stream} file The file buffer\n     */\n\n    /**\n     * The data associated with the request that caused this error\n     * @type {HTTPErrorData}\n     */\n    this.requestData = {\n      json: request.options.data,\n      files: request.options.files ?? [],\n    };\n  }\n}\n\nmodule.exports = HTTPError;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/rest/HTTPError.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/rest/RESTManager.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord.js/src/rest/RESTManager.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst APIRequest = __webpack_require__(/*! ./APIRequest */ \"./node_modules/discord.js/src/rest/APIRequest.js\");\nconst routeBuilder = __webpack_require__(/*! ./APIRouter */ \"./node_modules/discord.js/src/rest/APIRouter.js\");\nconst RequestHandler = __webpack_require__(/*! ./RequestHandler */ \"./node_modules/discord.js/src/rest/RequestHandler.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { Endpoints } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass RESTManager {\n  constructor(client, tokenPrefix = 'Bot') {\n    this.client = client;\n    this.handlers = new Collection();\n    this.tokenPrefix = tokenPrefix;\n    this.versioned = true;\n    this.globalLimit = client.options.restGlobalRateLimit > 0 ? client.options.restGlobalRateLimit : Infinity;\n    this.globalRemaining = this.globalLimit;\n    this.globalReset = null;\n    this.globalDelay = null;\n    if (client.options.restSweepInterval > 0) {\n      this.sweepInterval = setInterval(() => {\n        this.handlers.sweep(handler => handler._inactive);\n      }, client.options.restSweepInterval * 1000).unref();\n    }\n  }\n\n  get api() {\n    return routeBuilder(this);\n  }\n\n  getAuth() {\n    const token = this.client.token ?? this.client.accessToken;\n    if (token) return `${this.tokenPrefix} ${token}`;\n    throw new Error('TOKEN_MISSING');\n  }\n\n  get cdn() {\n    return Endpoints.CDN(this.client.options.http.cdn);\n  }\n\n  request(method, url, options = {}) {\n    const apiRequest = new APIRequest(this, method, url, options);\n    let handler = this.handlers.get(apiRequest.route);\n\n    if (!handler) {\n      handler = new RequestHandler(this);\n      this.handlers.set(apiRequest.route, handler);\n    }\n\n    return handler.push(apiRequest);\n  }\n\n  get endpoint() {\n    return this.client.options.http.api;\n  }\n\n  set endpoint(endpoint) {\n    this.client.options.http.api = endpoint;\n  }\n}\n\nmodule.exports = RESTManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/rest/RESTManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/rest/RateLimitError.js":
/*!************************************************************!*\
  !*** ./node_modules/discord.js/src/rest/RateLimitError.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Represents a RateLimit error from a request.\n * @extends Error\n */\nclass RateLimitError extends Error {\n  constructor({ timeout, limit, method, path, route, global }) {\n    super(`A ${global ? 'global ' : ''}rate limit was hit on route ${route}`);\n\n    /**\n     * The name of the error\n     * @type {string}\n     */\n    this.name = 'RateLimitError';\n\n    /**\n     * Time until this rate limit ends, in ms\n     * @type {number}\n     */\n    this.timeout = timeout;\n\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n    this.method = method;\n\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.path = path;\n\n    /**\n     * The route of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.route = route;\n\n    /**\n     * Whether this rate limit is global\n     * @type {boolean}\n     */\n    this.global = global;\n\n    /**\n     * The maximum amount of requests of this end point\n     * @type {number}\n     */\n    this.limit = limit;\n  }\n}\n\nmodule.exports = RateLimitError;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/rest/RateLimitError.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/rest/RequestHandler.js":
/*!************************************************************!*\
  !*** ./node_modules/discord.js/src/rest/RequestHandler.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { AsyncQueue } = __webpack_require__(/*! @sapphire/async-queue */ \"./node_modules/@sapphire/async-queue/dist/index.js\");\nconst DiscordAPIError = __webpack_require__(/*! ./DiscordAPIError */ \"./node_modules/discord.js/src/rest/DiscordAPIError.js\");\nconst HTTPError = __webpack_require__(/*! ./HTTPError */ \"./node_modules/discord.js/src/rest/HTTPError.js\");\nconst RateLimitError = __webpack_require__(/*! ./RateLimitError */ \"./node_modules/discord.js/src/rest/RateLimitError.js\");\nconst {\n  Events: { DEBUG, RATE_LIMIT, INVALID_REQUEST_WARNING },\n} = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\nfunction parseResponse(res) {\n  if (res.headers.get('content-type').startsWith('application/json')) return res.json();\n  return res.buffer();\n}\n\nfunction getAPIOffset(serverDate) {\n  return new Date(serverDate).getTime() - Date.now();\n}\n\nfunction calculateReset(reset, resetAfter, serverDate) {\n  // Use direct reset time when available, server date becomes irrelevant in this case\n  if (resetAfter) {\n    return Date.now() + Number(resetAfter) * 1000;\n  }\n  return new Date(Number(reset) * 1000).getTime() - getAPIOffset(serverDate);\n}\n\n/* Invalid request limiting is done on a per-IP basis, not a per-token basis.\n * The best we can do is track invalid counts process-wide (on the theory that\n * users could have multiple bots run from one process) rather than per-bot.\n * Therefore, store these at file scope here rather than in the client's\n * RESTManager object.\n */\nlet invalidCount = 0;\nlet invalidCountResetTime = null;\n\nclass RequestHandler {\n  constructor(manager) {\n    this.manager = manager;\n    this.queue = new AsyncQueue();\n    this.reset = -1;\n    this.remaining = -1;\n    this.limit = -1;\n  }\n\n  async push(request) {\n    await this.queue.wait();\n    try {\n      return await this.execute(request);\n    } finally {\n      this.queue.shift();\n    }\n  }\n\n  get globalLimited() {\n    return this.manager.globalRemaining <= 0 && Date.now() < this.manager.globalReset;\n  }\n\n  get localLimited() {\n    return this.remaining <= 0 && Date.now() < this.reset;\n  }\n\n  get limited() {\n    return this.globalLimited || this.localLimited;\n  }\n\n  get _inactive() {\n    return this.queue.remaining === 0 && !this.limited;\n  }\n\n  globalDelayFor(ms) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.manager.globalDelay = null;\n        resolve();\n      }, ms).unref();\n    });\n  }\n\n  /*\n   * Determines whether the request should be queued or whether a RateLimitError should be thrown\n   */\n  async onRateLimit(request, limit, timeout, isGlobal) {\n    const { options } = this.manager.client;\n    if (!options.rejectOnRateLimit) return;\n\n    const rateLimitData = {\n      timeout,\n      limit,\n      method: request.method,\n      path: request.path,\n      route: request.route,\n      global: isGlobal,\n    };\n    const shouldThrow =\n      typeof options.rejectOnRateLimit === 'function'\n        ? await options.rejectOnRateLimit(rateLimitData)\n        : options.rejectOnRateLimit.some(route => rateLimitData.route.startsWith(route.toLowerCase()));\n    if (shouldThrow) {\n      throw new RateLimitError(rateLimitData);\n    }\n  }\n\n  async execute(request) {\n    /*\n     * After calculations have been done, pre-emptively stop further requests\n     * Potentially loop until this task can run if e.g. the global rate limit is hit twice\n     */\n    while (this.limited) {\n      const isGlobal = this.globalLimited;\n      let limit, timeout, delayPromise;\n\n      if (isGlobal) {\n        // Set the variables based on the global rate limit\n        limit = this.manager.globalLimit;\n        timeout = this.manager.globalReset + this.manager.client.options.restTimeOffset - Date.now();\n      } else {\n        // Set the variables based on the route-specific rate limit\n        limit = this.limit;\n        timeout = this.reset + this.manager.client.options.restTimeOffset - Date.now();\n      }\n\n      if (this.manager.client.listenerCount(RATE_LIMIT)) {\n        /**\n         * Emitted when the client hits a rate limit while making a request\n         * @event Client#rateLimit\n         * @param {RateLimitData} rateLimitData Object containing the rate limit info\n         */\n        this.manager.client.emit(RATE_LIMIT, {\n          timeout,\n          limit,\n          method: request.method,\n          path: request.path,\n          route: request.route,\n          global: isGlobal,\n        });\n      }\n\n      if (isGlobal) {\n        // If this is the first task to reach the global timeout, set the global delay\n        if (!this.manager.globalDelay) {\n          // The global delay function should clear the global delay state when it is resolved\n          this.manager.globalDelay = this.globalDelayFor(timeout);\n        }\n        delayPromise = this.manager.globalDelay;\n      } else {\n        delayPromise = Util.delayFor(timeout);\n      }\n\n      // Determine whether a RateLimitError should be thrown\n      await this.onRateLimit(request, limit, timeout, isGlobal); // eslint-disable-line no-await-in-loop\n\n      // Wait for the timeout to expire in order to avoid an actual 429\n      await delayPromise; // eslint-disable-line no-await-in-loop\n    }\n\n    // As the request goes out, update the global usage information\n    if (!this.manager.globalReset || this.manager.globalReset < Date.now()) {\n      this.manager.globalReset = Date.now() + 1000;\n      this.manager.globalRemaining = this.manager.globalLimit;\n    }\n    this.manager.globalRemaining--;\n\n    // Perform the request\n    let res;\n    try {\n      res = await request.make();\n    } catch (error) {\n      // Retry the specified number of times for request abortions\n      if (request.retries === this.manager.client.options.retryLimit) {\n        throw new HTTPError(error.message, error.constructor.name, error.status, request);\n      }\n\n      request.retries++;\n      return this.execute(request);\n    }\n\n    let sublimitTimeout;\n    if (res && res.headers) {\n      const serverDate = res.headers.get('date');\n      const limit = res.headers.get('x-ratelimit-limit');\n      const remaining = res.headers.get('x-ratelimit-remaining');\n      const reset = res.headers.get('x-ratelimit-reset');\n      const resetAfter = res.headers.get('x-ratelimit-reset-after');\n      this.limit = limit ? Number(limit) : Infinity;\n      this.remaining = remaining ? Number(remaining) : 1;\n\n      this.reset = reset || resetAfter ? calculateReset(reset, resetAfter, serverDate) : Date.now();\n\n      // https://github.com/discord/discord-api-docs/issues/182\n      if (!resetAfter && request.route.includes('reactions')) {\n        this.reset = new Date(serverDate).getTime() - getAPIOffset(serverDate) + 250;\n      }\n\n      // Handle retryAfter, which means we have actually hit a rate limit\n      let retryAfter = res.headers.get('retry-after');\n      retryAfter = retryAfter ? Number(retryAfter) * 1000 : -1;\n      if (retryAfter > 0) {\n        // If the global ratelimit header is set, that means we hit the global rate limit\n        if (res.headers.get('x-ratelimit-global')) {\n          this.manager.globalRemaining = 0;\n          this.manager.globalReset = Date.now() + retryAfter;\n        } else if (!this.localLimited) {\n          /*\n           * This is a sublimit (e.g. 2 channel name changes/10 minutes) since the headers don't indicate a\n           * route-wide rate limit. Don't update remaining or reset to avoid rate limiting the whole\n           * endpoint, just set a reset time on the request itself to avoid retrying too soon.\n           */\n          sublimitTimeout = retryAfter;\n        }\n      }\n    }\n\n    // Count the invalid requests\n    if (res.status === 401 || res.status === 403 || res.status === 429) {\n      if (!invalidCountResetTime || invalidCountResetTime < Date.now()) {\n        invalidCountResetTime = Date.now() + 1000 * 60 * 10;\n        invalidCount = 0;\n      }\n      invalidCount++;\n\n      const emitInvalid =\n        this.manager.client.listenerCount(INVALID_REQUEST_WARNING) &&\n        this.manager.client.options.invalidRequestWarningInterval > 0 &&\n        invalidCount % this.manager.client.options.invalidRequestWarningInterval === 0;\n      if (emitInvalid) {\n        /**\n         * @typedef {Object} InvalidRequestWarningData\n         * @property {number} count Number of invalid requests that have been made in the window\n         * @property {number} remainingTime Time in ms remaining before the count resets\n         */\n\n        /**\n         * Emitted periodically when the process sends invalid requests to let users avoid the\n         * 10k invalid requests in 10 minutes threshold that causes a ban\n         * @event Client#invalidRequestWarning\n         * @param {InvalidRequestWarningData} invalidRequestWarningData Object containing the invalid request info\n         */\n        this.manager.client.emit(INVALID_REQUEST_WARNING, {\n          count: invalidCount,\n          remainingTime: invalidCountResetTime - Date.now(),\n        });\n      }\n    }\n\n    // Handle 2xx and 3xx responses\n    if (res.ok) {\n      // Nothing wrong with the request, proceed with the next one\n      return parseResponse(res);\n    }\n\n    // Handle 4xx responses\n    if (res.status >= 400 && res.status < 500) {\n      // Handle ratelimited requests\n      if (res.status === 429) {\n        const isGlobal = this.globalLimited;\n        let limit, timeout;\n        if (isGlobal) {\n          // Set the variables based on the global rate limit\n          limit = this.manager.globalLimit;\n          timeout = this.manager.globalReset + this.manager.client.options.restTimeOffset - Date.now();\n        } else {\n          // Set the variables based on the route-specific rate limit\n          limit = this.limit;\n          timeout = this.reset + this.manager.client.options.restTimeOffset - Date.now();\n        }\n\n        this.manager.client.emit(\n          DEBUG,\n          `Hit a 429 while executing a request.\n    Global  : ${isGlobal}\n    Method  : ${request.method}\n    Path    : ${request.path}\n    Route   : ${request.route}\n    Limit   : ${limit}\n    Timeout : ${timeout}ms\n    Sublimit: ${sublimitTimeout ? `${sublimitTimeout}ms` : 'None'}`,\n        );\n\n        await this.onRateLimit(request, limit, timeout, isGlobal);\n\n        // If caused by a sublimit, wait it out here so other requests on the route can be handled\n        if (sublimitTimeout) {\n          await Util.delayFor(sublimitTimeout);\n        }\n        return this.execute(request);\n      }\n\n      // Handle possible malformed requests\n      let data;\n      try {\n        data = await parseResponse(res);\n      } catch (err) {\n        throw new HTTPError(err.message, err.constructor.name, err.status, request);\n      }\n\n      throw new DiscordAPIError(data, res.status, request);\n    }\n\n    // Handle 5xx responses\n    if (res.status >= 500 && res.status < 600) {\n      // Retry the specified number of times for possible serverside issues\n      if (request.retries === this.manager.client.options.retryLimit) {\n        throw new HTTPError(res.statusText, res.constructor.name, res.status, request);\n      }\n\n      request.retries++;\n      return this.execute(request);\n    }\n\n    // Fallback in the rare case a status code outside the range 200..=599 is returned\n    return null;\n  }\n}\n\nmodule.exports = RequestHandler;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/rest/RequestHandler.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/sharding/Shard.js":
/*!*******************************************************!*\
  !*** ./node_modules/discord.js/src/sharding/Shard.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\nlet childProcess = null;\nlet Worker = null;\n\n/**\n * A self-contained shard created by the {@link ShardingManager}. Each one has a {@link ChildProcess} that contains\n * an instance of the bot and its {@link Client}. When its child process/worker exits for any reason, the shard will\n * spawn a new one to replace it as necessary.\n * @extends EventEmitter\n */\nclass Shard extends EventEmitter {\n  /**\n   * @param {ShardingManager} manager Manager that is creating this shard\n   * @param {number} id The shard's id\n   */\n  constructor(manager, id) {\n    super();\n\n    if (manager.mode === 'process') childProcess = __webpack_require__(/*! child_process */ \"child_process\");\n    else if (manager.mode === 'worker') Worker = __webpack_require__(/*! worker_threads */ \"worker_threads\").Worker;\n\n    /**\n     * Manager that created the shard\n     * @type {ShardingManager}\n     */\n    this.manager = manager;\n\n    /**\n     * The shard's id in the manager\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * Arguments for the shard's process (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.args = manager.shardArgs ?? [];\n\n    /**\n     * Arguments for the shard's process executable (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.execArgv = manager.execArgv;\n\n    /**\n     * Environment variables for the shard's process, or workerData for the shard's worker\n     * @type {Object}\n     */\n    this.env = Object.assign({}, process.env, {\n      SHARDING_MANAGER: true,\n      SHARDS: this.id,\n      SHARD_COUNT: this.manager.totalShards,\n      DISCORD_TOKEN: this.manager.token,\n    });\n\n    /**\n     * Whether the shard's {@link Client} is ready\n     * @type {boolean}\n     */\n    this.ready = false;\n\n    /**\n     * Process of the shard (if {@link ShardingManager#mode} is `process`)\n     * @type {?ChildProcess}\n     */\n    this.process = null;\n\n    /**\n     * Worker of the shard (if {@link ShardingManager#mode} is `worker`)\n     * @type {?Worker}\n     */\n    this.worker = null;\n\n    /**\n     * Ongoing promises for calls to {@link Shard#eval}, mapped by the `script` they were called with\n     * @type {Map<string, Promise>}\n     * @private\n     */\n    this._evals = new Map();\n\n    /**\n     * Ongoing promises for calls to {@link Shard#fetchClientValue}, mapped by the `prop` they were called with\n     * @type {Map<string, Promise>}\n     * @private\n     */\n    this._fetches = new Map();\n\n    /**\n     * Listener function for the {@link ChildProcess}' `exit` event\n     * @type {Function}\n     * @private\n     */\n    this._exitListener = this._handleExit.bind(this, undefined);\n  }\n\n  /**\n   * Forks a child process or creates a worker thread for the shard.\n   * <warn>You should not need to call this manually.</warn>\n   * @param {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client} has become ready\n   * before resolving (`-1` or `Infinity` for no wait)\n   * @returns {Promise<ChildProcess>}\n   */\n  spawn(timeout = 30000) {\n    if (this.process) throw new Error('SHARDING_PROCESS_EXISTS', this.id);\n    if (this.worker) throw new Error('SHARDING_WORKER_EXISTS', this.id);\n\n    if (this.manager.mode === 'process') {\n      this.process = childProcess\n        .fork(path.resolve(this.manager.file), this.args, {\n          env: this.env,\n          execArgv: this.execArgv,\n        })\n        .on('message', this._handleMessage.bind(this))\n        .on('exit', this._exitListener);\n    } else if (this.manager.mode === 'worker') {\n      this.worker = new Worker(path.resolve(this.manager.file), { workerData: this.env })\n        .on('message', this._handleMessage.bind(this))\n        .on('exit', this._exitListener);\n    }\n\n    this._evals.clear();\n    this._fetches.clear();\n\n    const child = this.process ?? this.worker;\n\n    /**\n     * Emitted upon the creation of the shard's child process/worker.\n     * @event Shard#spawn\n     * @param {ChildProcess|Worker} process Child process/worker that was created\n     */\n    this.emit('spawn', child);\n\n    if (timeout === -1 || timeout === Infinity) return child;\n    return new Promise((resolve, reject) => {\n      const cleanup = () => {\n        clearTimeout(spawnTimeoutTimer);\n        this.off('ready', onReady);\n        this.off('disconnect', onDisconnect);\n        this.off('death', onDeath);\n      };\n\n      const onReady = () => {\n        cleanup();\n        resolve(child);\n      };\n\n      const onDisconnect = () => {\n        cleanup();\n        reject(new Error('SHARDING_READY_DISCONNECTED', this.id));\n      };\n\n      const onDeath = () => {\n        cleanup();\n        reject(new Error('SHARDING_READY_DIED', this.id));\n      };\n\n      const onTimeout = () => {\n        cleanup();\n        reject(new Error('SHARDING_READY_TIMEOUT', this.id));\n      };\n\n      const spawnTimeoutTimer = setTimeout(onTimeout, timeout);\n      this.once('ready', onReady);\n      this.once('disconnect', onDisconnect);\n      this.once('death', onDeath);\n    });\n  }\n\n  /**\n   * Immediately kills the shard's process/worker and does not restart it.\n   */\n  kill() {\n    if (this.process) {\n      this.process.removeListener('exit', this._exitListener);\n      this.process.kill();\n    } else {\n      this.worker.removeListener('exit', this._exitListener);\n      this.worker.terminate();\n    }\n\n    this._handleExit(false);\n  }\n\n  /**\n   * Options used to respawn a shard.\n   * @typedef {Object} ShardRespawnOptions\n   * @property {number} [delay=500] How long to wait between killing the process/worker and\n   * restarting it (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client}\n   * has become ready before resolving (`-1` or `Infinity` for no wait)\n   */\n\n  /**\n   * Kills and restarts the shard's process/worker.\n   * @param {ShardRespawnOptions} [options] Options for respawning the shard\n   * @returns {Promise<ChildProcess>}\n   */\n  async respawn({ delay = 500, timeout = 30000 } = {}) {\n    this.kill();\n    if (delay > 0) await Util.delayFor(delay);\n    return this.spawn(timeout);\n  }\n\n  /**\n   * Sends a message to the shard's process/worker.\n   * @param {*} message Message to send to the shard\n   * @returns {Promise<Shard>}\n   */\n  send(message) {\n    return new Promise((resolve, reject) => {\n      if (this.process) {\n        this.process.send(message, err => {\n          if (err) reject(err);\n          else resolve(this);\n        });\n      } else {\n        this.worker.postMessage(message);\n        resolve(this);\n      }\n    });\n  }\n\n  /**\n   * Fetches a client property value of the shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @returns {Promise<*>}\n   * @example\n   * shard.fetchClientValue('guilds.cache.size')\n   *   .then(count => console.log(`${count} guilds in shard ${shard.id}`))\n   *   .catch(console.error);\n   */\n  fetchClientValue(prop) {\n    // Shard is dead (maybe respawning), don't cache anything and error immediately\n    if (!this.process && !this.worker) return Promise.reject(new Error('SHARDING_NO_CHILD_EXISTS', this.id));\n\n    // Cached promise from previous call\n    if (this._fetches.has(prop)) return this._fetches.get(prop);\n\n    const promise = new Promise((resolve, reject) => {\n      const child = this.process ?? this.worker;\n\n      const listener = message => {\n        if (message?._fetchProp !== prop) return;\n        child.removeListener('message', listener);\n        this._fetches.delete(prop);\n        resolve(message._result);\n      };\n      child.on('message', listener);\n\n      this.send({ _fetchProp: prop }).catch(err => {\n        child.removeListener('message', listener);\n        this._fetches.delete(prop);\n        reject(err);\n      });\n    });\n\n    this._fetches.set(prop, promise);\n    return promise;\n  }\n\n  /**\n   * Evaluates a script or function on the shard, in the context of the {@link Client}.\n   * @param {string|Function} script JavaScript to run on the shard\n   * @returns {Promise<*>} Result of the script execution\n   */\n  eval(script) {\n    // Shard is dead (maybe respawning), don't cache anything and error immediately\n    if (!this.process && !this.worker) return Promise.reject(new Error('SHARDING_NO_CHILD_EXISTS', this.id));\n\n    // Cached promise from previous call\n    if (this._evals.has(script)) return this._evals.get(script);\n\n    const promise = new Promise((resolve, reject) => {\n      const child = this.process ?? this.worker;\n\n      const listener = message => {\n        if (message?._eval !== script) return;\n        child.removeListener('message', listener);\n        this._evals.delete(script);\n        if (!message._error) resolve(message._result);\n        else reject(Util.makeError(message._error));\n      };\n      child.on('message', listener);\n\n      const _eval = typeof script === 'function' ? `(${script})(this)` : script;\n      this.send({ _eval }).catch(err => {\n        child.removeListener('message', listener);\n        this._evals.delete(script);\n        reject(err);\n      });\n    });\n\n    this._evals.set(script, promise);\n    return promise;\n  }\n\n  /**\n   * Handles a message received from the child process/worker.\n   * @param {*} message Message received\n   * @private\n   */\n  _handleMessage(message) {\n    if (message) {\n      // Shard is ready\n      if (message._ready) {\n        this.ready = true;\n        /**\n         * Emitted upon the shard's {@link Client#ready} event.\n         * @event Shard#ready\n         */\n        this.emit('ready');\n        return;\n      }\n\n      // Shard has disconnected\n      if (message._disconnect) {\n        this.ready = false;\n        /**\n         * Emitted upon the shard's {@link Client#disconnect} event.\n         * @event Shard#disconnect\n         */\n        this.emit('disconnect');\n        return;\n      }\n\n      // Shard is attempting to reconnect\n      if (message._reconnecting) {\n        this.ready = false;\n        /**\n         * Emitted upon the shard's {@link Client#reconnecting} event.\n         * @event Shard#reconnecting\n         */\n        this.emit('reconnecting');\n        return;\n      }\n\n      // Shard is requesting a property fetch\n      if (message._sFetchProp) {\n        const resp = { _sFetchProp: message._sFetchProp, _sFetchPropShard: message._sFetchPropShard };\n        this.manager.fetchClientValues(message._sFetchProp, message._sFetchPropShard).then(\n          results => this.send({ ...resp, _result: results }),\n          err => this.send({ ...resp, _error: Util.makePlainError(err) }),\n        );\n        return;\n      }\n\n      // Shard is requesting an eval broadcast\n      if (message._sEval) {\n        const resp = { _sEval: message._sEval, _sEvalShard: message._sEvalShard };\n        this.manager._performOnShards('eval', [message._sEval], message._sEvalShard).then(\n          results => this.send({ ...resp, _result: results }),\n          err => this.send({ ...resp, _error: Util.makePlainError(err) }),\n        );\n        return;\n      }\n\n      // Shard is requesting a respawn of all shards\n      if (message._sRespawnAll) {\n        const { shardDelay, respawnDelay, timeout } = message._sRespawnAll;\n        this.manager.respawnAll({ shardDelay, respawnDelay, timeout }).catch(() => {\n          // Do nothing\n        });\n        return;\n      }\n    }\n\n    /**\n     * Emitted upon receiving a message from the child process/worker.\n     * @event Shard#message\n     * @param {*} message Message that was received\n     */\n    this.emit('message', message);\n  }\n\n  /**\n   * Handles the shard's process/worker exiting.\n   * @param {boolean} [respawn=this.manager.respawn] Whether to spawn the shard again\n   * @private\n   */\n  _handleExit(respawn = this.manager.respawn) {\n    /**\n     * Emitted upon the shard's child process/worker exiting.\n     * @event Shard#death\n     * @param {ChildProcess|Worker} process Child process/worker that exited\n     */\n    this.emit('death', this.process ?? this.worker);\n\n    this.ready = false;\n    this.process = null;\n    this.worker = null;\n    this._evals.clear();\n    this._fetches.clear();\n\n    if (respawn) this.spawn().catch(err => this.emit('error', err));\n  }\n}\n\nmodule.exports = Shard;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/sharding/Shard.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/sharding/ShardClientUtil.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/sharding/ShardClientUtil.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { Events } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Helper class for sharded clients spawned as a child process/worker, such as from a {@link ShardingManager}.\n * Utilises IPC to send and receive data to/from the master process and other shards.\n */\nclass ShardClientUtil {\n  /**\n   * @param {Client} client Client of the current shard\n   * @param {ShardingManagerMode} mode Mode the shard was spawned with\n   */\n  constructor(client, mode) {\n    /**\n     * Client for the shard\n     * @type {Client}\n     */\n    this.client = client;\n\n    /**\n     * Mode the shard was spawned with\n     * @type {ShardingManagerMode}\n     */\n    this.mode = mode;\n\n    /**\n     * Message port for the master process (only when {@link ShardClientUtil#mode} is `worker`)\n     * @type {?MessagePort}\n     */\n    this.parentPort = null;\n\n    if (mode === 'process') {\n      process.on('message', this._handleMessage.bind(this));\n      client.on('ready', () => {\n        process.send({ _ready: true });\n      });\n      client.on('disconnect', () => {\n        process.send({ _disconnect: true });\n      });\n      client.on('reconnecting', () => {\n        process.send({ _reconnecting: true });\n      });\n    } else if (mode === 'worker') {\n      this.parentPort = __webpack_require__(/*! worker_threads */ \"worker_threads\").parentPort;\n      this.parentPort.on('message', this._handleMessage.bind(this));\n      client.on('ready', () => {\n        this.parentPort.postMessage({ _ready: true });\n      });\n      client.on('disconnect', () => {\n        this.parentPort.postMessage({ _disconnect: true });\n      });\n      client.on('reconnecting', () => {\n        this.parentPort.postMessage({ _reconnecting: true });\n      });\n    }\n  }\n\n  /**\n   * Array of shard ids of this client\n   * @type {number[]}\n   * @readonly\n   */\n  get ids() {\n    return this.client.options.shards;\n  }\n\n  /**\n   * Total number of shards\n   * @type {number}\n   * @readonly\n   */\n  get count() {\n    return this.client.options.shardCount;\n  }\n\n  /**\n   * Sends a message to the master process.\n   * @param {*} message Message to send\n   * @returns {Promise<void>}\n   * @emits Shard#message\n   */\n  send(message) {\n    return new Promise((resolve, reject) => {\n      if (this.mode === 'process') {\n        process.send(message, err => {\n          if (err) reject(err);\n          else resolve();\n        });\n      } else if (this.mode === 'worker') {\n        this.parentPort.postMessage(message);\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Fetches a client property value of each shard, or a given shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @param {number} [shard] Shard to fetch property from, all if undefined\n   * @returns {Promise<*|Array<*>>}\n   * @example\n   * client.shard.fetchClientValues('guilds.cache.size')\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   * @see {@link ShardingManager#fetchClientValues}\n   */\n  fetchClientValues(prop, shard) {\n    return new Promise((resolve, reject) => {\n      const parent = this.parentPort ?? process;\n\n      const listener = message => {\n        if (message?._sFetchProp !== prop || message._sFetchPropShard !== shard) return;\n        parent.removeListener('message', listener);\n        if (!message._error) resolve(message._result);\n        else reject(Util.makeError(message._error));\n      };\n      parent.on('message', listener);\n\n      this.send({ _sFetchProp: prop, _sFetchPropShard: shard }).catch(err => {\n        parent.removeListener('message', listener);\n        reject(err);\n      });\n    });\n  }\n\n  /**\n   * Evaluates a script or function on all shards, or a given shard, in the context of the {@link Client}s.\n   * @param {Function} script JavaScript to run on each shard\n   * @param {BroadcastEvalOptions} [options={}] The options for the broadcast\n   * @returns {Promise<*|Array<*>>} Results of the script execution\n   * @example\n   * client.shard.broadcastEval(client => client.guilds.cache.size)\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   * @see {@link ShardingManager#broadcastEval}\n   */\n  broadcastEval(script, options = {}) {\n    return new Promise((resolve, reject) => {\n      const parent = this.parentPort ?? process;\n      if (typeof script !== 'function') {\n        reject(new TypeError('SHARDING_INVALID_EVAL_BROADCAST'));\n        return;\n      }\n      script = `(${script})(this, ${JSON.stringify(options.context)})`;\n\n      const listener = message => {\n        if (message?._sEval !== script || message._sEvalShard !== options.shard) return;\n        parent.removeListener('message', listener);\n        if (!message._error) resolve(message._result);\n        else reject(Util.makeError(message._error));\n      };\n      parent.on('message', listener);\n\n      this.send({ _sEval: script, _sEvalShard: options.shard }).catch(err => {\n        parent.removeListener('message', listener);\n        reject(err);\n      });\n    });\n  }\n\n  /**\n   * Requests a respawn of all shards.\n   * @param {MultipleShardRespawnOptions} [options] Options for respawning shards\n   * @returns {Promise<void>} Resolves upon the message being sent\n   * @see {@link ShardingManager#respawnAll}\n   */\n  respawnAll({ shardDelay = 5000, respawnDelay = 500, timeout = 30000 } = {}) {\n    return this.send({ _sRespawnAll: { shardDelay, respawnDelay, timeout } });\n  }\n\n  /**\n   * Handles an IPC message.\n   * @param {*} message Message received\n   * @private\n   */\n  async _handleMessage(message) {\n    if (!message) return;\n    if (message._fetchProp) {\n      const props = message._fetchProp.split('.');\n      let value = this.client;\n      for (const prop of props) value = value[prop];\n      this._respond('fetchProp', { _fetchProp: message._fetchProp, _result: value });\n    } else if (message._eval) {\n      try {\n        this._respond('eval', { _eval: message._eval, _result: await this.client._eval(message._eval) });\n      } catch (err) {\n        this._respond('eval', { _eval: message._eval, _error: Util.makePlainError(err) });\n      }\n    }\n  }\n\n  /**\n   * Sends a message to the master process, emitting an error from the client upon failure.\n   * @param {string} type Type of response to send\n   * @param {*} message Message to send\n   * @private\n   */\n  _respond(type, message) {\n    this.send(message).catch(err => {\n      const error = new Error(`Error when sending ${type} response to master process: ${err.message}`);\n      error.stack = err.stack;\n      /**\n       * Emitted when the client encounters an error.\n       * @event Client#error\n       * @param {Error} error The error encountered\n       */\n      this.client.emit(Events.ERROR, error);\n    });\n  }\n\n  /**\n   * Creates/gets the singleton of this class.\n   * @param {Client} client The client to use\n   * @param {ShardingManagerMode} mode Mode the shard was spawned with\n   * @returns {ShardClientUtil}\n   */\n  static singleton(client, mode) {\n    if (!this._singleton) {\n      this._singleton = new this(client, mode);\n    } else {\n      client.emit(\n        Events.WARN,\n        'Multiple clients created in child process/worker; only the first will handle sharding helpers.',\n      );\n    }\n    return this._singleton;\n  }\n\n  /**\n   * Get the shard id for a given guild id.\n   * @param {Snowflake} guildId Snowflake guild id to get shard id for\n   * @param {number} shardCount Number of shards\n   * @returns {number}\n   */\n  static shardIdForGuildId(guildId, shardCount) {\n    const shard = Number(BigInt(guildId) >> 22n) % shardCount;\n    if (shard < 0) throw new Error('SHARDING_SHARD_MISCALCULATION', shard, guildId, shardCount);\n    return shard;\n  }\n}\n\nmodule.exports = ShardClientUtil;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/sharding/ShardClientUtil.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/sharding/ShardingManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/sharding/ShardingManager.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Shard = __webpack_require__(/*! ./Shard */ \"./node_modules/discord.js/src/sharding/Shard.js\");\nconst { Error, TypeError, RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * This is a utility class that makes multi-process sharding of a bot an easy and painless experience.\n * It works by spawning a self-contained {@link ChildProcess} or {@link Worker} for each individual shard, each\n * containing its own instance of your bot's {@link Client}. They all have a line of communication with the master\n * process, and there are several useful methods that utilise it in order to simplify tasks that are normally difficult\n * with sharding. It can spawn a specific number of shards or the amount that Discord suggests for the bot, and takes a\n * path to your main bot script to launch for each one.\n * @extends {EventEmitter}\n */\nclass ShardingManager extends EventEmitter {\n  /**\n   * The mode to spawn shards with for a {@link ShardingManager}. Can be either one of:\n   * * 'process' to use child processes\n   * * 'worker' to use [Worker threads](https://nodejs.org/api/worker_threads.html)\n   * @typedef {string} ShardingManagerMode\n   */\n\n  /**\n   * The options to spawn shards with for a {@link ShardingManager}.\n   * @typedef {Object} ShardingManagerOptions\n   * @property {string|number} [totalShards='auto'] Number of total shards of all shard managers or \"auto\"\n   * @property {string|number[]} [shardList='auto'] List of shards to spawn or \"auto\"\n   * @property {ShardingManagerMode} [mode='process'] Which mode to use for shards\n   * @property {boolean} [respawn=true] Whether shards should automatically respawn upon exiting\n   * @property {string[]} [shardArgs=[]] Arguments to pass to the shard script when spawning\n   * (only available when mode is set to 'process')\n   * @property {string} [execArgv=[]] Arguments to pass to the shard script executable when spawning\n   * (only available when mode is set to 'process')\n   * @property {string} [token] Token to use for automatic shard count and passing to shards\n   */\n\n  /**\n   * @param {string} file Path to your shard script file\n   * @param {ShardingManagerOptions} [options] Options for the sharding manager\n   */\n  constructor(file, options = {}) {\n    super();\n    options = Util.mergeDefault(\n      {\n        totalShards: 'auto',\n        mode: 'process',\n        respawn: true,\n        shardArgs: [],\n        execArgv: [],\n        token: process.env.DISCORD_TOKEN,\n      },\n      options,\n    );\n\n    /**\n     * Path to the shard script file\n     * @type {string}\n     */\n    this.file = file;\n    if (!file) throw new Error('CLIENT_INVALID_OPTION', 'File', 'specified.');\n    if (!path.isAbsolute(file)) this.file = path.resolve(process.cwd(), file);\n    const stats = fs.statSync(this.file);\n    if (!stats.isFile()) throw new Error('CLIENT_INVALID_OPTION', 'File', 'a file');\n\n    /**\n     * List of shards this sharding manager spawns\n     * @type {string|number[]}\n     */\n    this.shardList = options.shardList ?? 'auto';\n    if (this.shardList !== 'auto') {\n      if (!Array.isArray(this.shardList)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'shardList', 'an array.');\n      }\n      this.shardList = [...new Set(this.shardList)];\n      if (this.shardList.length < 1) throw new RangeError('CLIENT_INVALID_OPTION', 'shardList', 'at least 1 id.');\n      if (\n        this.shardList.some(\n          shardId => typeof shardId !== 'number' || isNaN(shardId) || !Number.isInteger(shardId) || shardId < 0,\n        )\n      ) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'shardList', 'an array of positive integers.');\n      }\n    }\n\n    /**\n     * Amount of shards that all sharding managers spawn in total\n     * @type {number}\n     */\n    this.totalShards = options.totalShards || 'auto';\n    if (this.totalShards !== 'auto') {\n      if (typeof this.totalShards !== 'number' || isNaN(this.totalShards)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'a number.');\n      }\n      if (this.totalShards < 1) throw new RangeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'at least 1.');\n      if (!Number.isInteger(this.totalShards)) {\n        throw new RangeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'an integer.');\n      }\n    }\n\n    /**\n     * Mode for shards to spawn with\n     * @type {ShardingManagerMode}\n     */\n    this.mode = options.mode;\n    if (this.mode !== 'process' && this.mode !== 'worker') {\n      throw new RangeError('CLIENT_INVALID_OPTION', 'Sharding mode', '\"process\" or \"worker\"');\n    }\n\n    /**\n     * Whether shards should automatically respawn upon exiting\n     * @type {boolean}\n     */\n    this.respawn = options.respawn;\n\n    /**\n     * An array of arguments to pass to shards (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.shardArgs = options.shardArgs;\n\n    /**\n     * An array of arguments to pass to the executable (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.execArgv = options.execArgv;\n\n    /**\n     * Token to use for obtaining the automatic shard count, and passing to shards\n     * @type {?string}\n     */\n    this.token = options.token?.replace(/^Bot\\s*/i, '') ?? null;\n\n    /**\n     * A collection of shards that this manager has spawned\n     * @type {Collection<number, Shard>}\n     */\n    this.shards = new Collection();\n\n    process.env.SHARDING_MANAGER = true;\n    process.env.SHARDING_MANAGER_MODE = this.mode;\n    process.env.DISCORD_TOKEN = this.token;\n  }\n\n  /**\n   * Creates a single shard.\n   * <warn>Using this method is usually not necessary if you use the spawn method.</warn>\n   * @param {number} [id=this.shards.size] Id of the shard to create\n   * <info>This is usually not necessary to manually specify.</info>\n   * @returns {Shard} Note that the created shard needs to be explicitly spawned using its spawn method.\n   */\n  createShard(id = this.shards.size) {\n    const shard = new Shard(this, id);\n    this.shards.set(id, shard);\n    /**\n     * Emitted upon creating a shard.\n     * @event ShardingManager#shardCreate\n     * @param {Shard} shard Shard that was created\n     */\n    this.emit('shardCreate', shard);\n    return shard;\n  }\n\n  /**\n   * Option used to spawn multiple shards.\n   * @typedef {Object} MultipleShardSpawnOptions\n   * @property {number|string} [amount=this.totalShards] Number of shards to spawn\n   * @property {number} [delay=5500] How long to wait in between spawning each shard (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client} has become ready\n   */\n\n  /**\n   * Spawns multiple shards.\n   * @param {MultipleShardSpawnOptions} [options] Options for spawning shards\n   * @returns {Promise<Collection<number, Shard>>}\n   */\n  async spawn({ amount = this.totalShards, delay = 5500, timeout = 30000 } = {}) {\n    // Obtain/verify the number of shards to spawn\n    if (amount === 'auto') {\n      amount = await Util.fetchRecommendedShards(this.token);\n    } else {\n      if (typeof amount !== 'number' || isNaN(amount)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'a number.');\n      }\n      if (amount < 1) throw new RangeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'at least 1.');\n      if (!Number.isInteger(amount)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'an integer.');\n      }\n    }\n\n    // Make sure this many shards haven't already been spawned\n    if (this.shards.size >= amount) throw new Error('SHARDING_ALREADY_SPAWNED', this.shards.size);\n    if (this.shardList === 'auto' || this.totalShards === 'auto' || this.totalShards !== amount) {\n      this.shardList = [...Array(amount).keys()];\n    }\n    if (this.totalShards === 'auto' || this.totalShards !== amount) {\n      this.totalShards = amount;\n    }\n\n    if (this.shardList.some(shardId => shardId >= amount)) {\n      throw new RangeError(\n        'CLIENT_INVALID_OPTION',\n        'Amount of shards',\n        'bigger than the highest shardId in the shardList option.',\n      );\n    }\n\n    // Spawn the shards\n    for (const shardId of this.shardList) {\n      const promises = [];\n      const shard = this.createShard(shardId);\n      promises.push(shard.spawn(timeout));\n      if (delay > 0 && this.shards.size !== this.shardList.length) promises.push(Util.delayFor(delay));\n      await Promise.all(promises); // eslint-disable-line no-await-in-loop\n    }\n\n    return this.shards;\n  }\n\n  /**\n   * Sends a message to all shards.\n   * @param {*} message Message to be sent to the shards\n   * @returns {Promise<Shard[]>}\n   */\n  broadcast(message) {\n    const promises = [];\n    for (const shard of this.shards.values()) promises.push(shard.send(message));\n    return Promise.all(promises);\n  }\n\n  /**\n   * Options for {@link ShardingManager#broadcastEval} and {@link ShardClientUtil#broadcastEval}.\n   * @typedef {Object} BroadcastEvalOptions\n   * @property {number} [shard] Shard to run script on, all if undefined\n   * @property {*} [context] The JSON-serializable values to call the script with\n   */\n\n  /**\n   * Evaluates a script on all shards, or a given shard, in the context of the {@link Client}s.\n   * @param {Function} script JavaScript to run on each shard\n   * @param {BroadcastEvalOptions} [options={}] The options for the broadcast\n   * @returns {Promise<*|Array<*>>} Results of the script execution\n   */\n  broadcastEval(script, options = {}) {\n    if (typeof script !== 'function') return Promise.reject(new TypeError('SHARDING_INVALID_EVAL_BROADCAST'));\n    return this._performOnShards('eval', [`(${script})(this, ${JSON.stringify(options.context)})`], options.shard);\n  }\n\n  /**\n   * Fetches a client property value of each shard, or a given shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @param {number} [shard] Shard to fetch property from, all if undefined\n   * @returns {Promise<*|Array<*>>}\n   * @example\n   * manager.fetchClientValues('guilds.cache.size')\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   */\n  fetchClientValues(prop, shard) {\n    return this._performOnShards('fetchClientValue', [prop], shard);\n  }\n\n  /**\n   * Runs a method with given arguments on all shards, or a given shard.\n   * @param {string} method Method name to run on each shard\n   * @param {Array<*>} args Arguments to pass through to the method call\n   * @param {number} [shard] Shard to run on, all if undefined\n   * @returns {Promise<*|Array<*>>} Results of the method execution\n   * @private\n   */\n  _performOnShards(method, args, shard) {\n    if (this.shards.size === 0) return Promise.reject(new Error('SHARDING_NO_SHARDS'));\n\n    if (typeof shard === 'number') {\n      if (this.shards.has(shard)) return this.shards.get(shard)[method](...args);\n      return Promise.reject(new Error('SHARDING_SHARD_NOT_FOUND', shard));\n    }\n\n    if (this.shards.size !== this.shardList.length) return Promise.reject(new Error('SHARDING_IN_PROCESS'));\n\n    const promises = [];\n    for (const sh of this.shards.values()) promises.push(sh[method](...args));\n    return Promise.all(promises);\n  }\n\n  /**\n   * Options used to respawn all shards.\n   * @typedef {Object} MultipleShardRespawnOptions\n   * @property {number} [shardDelay=5000] How long to wait between shards (in milliseconds)\n   * @property {number} [respawnDelay=500] How long to wait between killing a shard's process and restarting it\n   * (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait for a shard to become ready before\n   * continuing to another (`-1` or `Infinity` for no wait)\n   */\n\n  /**\n   * Kills all running shards and respawns them.\n   * @param {MultipleShardRespawnOptions} [options] Options for respawning shards\n   * @returns {Promise<Collection<string, Shard>>}\n   */\n  async respawnAll({ shardDelay = 5000, respawnDelay = 500, timeout = 30000 } = {}) {\n    let s = 0;\n    for (const shard of this.shards.values()) {\n      const promises = [shard.respawn({ respawnDelay, timeout })];\n      if (++s < this.shards.size && shardDelay > 0) promises.push(Util.delayFor(shardDelay));\n      await Promise.all(promises); // eslint-disable-line no-await-in-loop\n    }\n    return this.shards;\n  }\n}\n\nmodule.exports = ShardingManager;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/sharding/ShardingManager.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/AnonymousGuild.js":
/*!******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/AnonymousGuild.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuild = __webpack_require__(/*! ./BaseGuild */ \"./node_modules/discord.js/src/structures/BaseGuild.js\");\nconst { VerificationLevels, NSFWLevels } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Bundles common attributes and methods between {@link Guild} and {@link InviteGuild}\n * @extends {BaseGuild}\n * @abstract\n */\nclass AnonymousGuild extends BaseGuild {\n  constructor(client, data, immediatePatch = true) {\n    super(client, data);\n    if (immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    this.features = data.features;\n    /**\n     * The hash of the guild invite splash image\n     * @type {?string}\n     */\n    this.splash = data.splash;\n\n    /**\n     * The hash of the guild banner\n     * @type {?string}\n     */\n    this.banner = data.banner;\n\n    /**\n     * The description of the guild, if any\n     * @type {?string}\n     */\n    this.description = data.description;\n\n    /**\n     * The verification level of the guild\n     * @type {VerificationLevel}\n     */\n    this.verificationLevel = VerificationLevels[data.verification_level];\n\n    /**\n     * The vanity invite code of the guild, if any\n     * @type {?string}\n     */\n    this.vanityURLCode = data.vanity_url_code;\n\n    if ('nsfw_level' in data) {\n      /**\n       * The NSFW level of this guild\n       * @type {NSFWLevel}\n       */\n      this.nsfwLevel = NSFWLevels[data.nsfw_level];\n    }\n  }\n\n  /**\n   * The URL to this guild's banner.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  bannerURL({ format, size } = {}) {\n    if (!this.banner) return null;\n    return this.client.rest.cdn.Banner(this.id, this.banner, format, size);\n  }\n\n  /**\n   * The URL to this guild's invite splash image.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  splashURL({ format, size } = {}) {\n    if (!this.splash) return null;\n    return this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n}\n\nmodule.exports = AnonymousGuild;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/AnonymousGuild.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ApplicationCommand.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ApplicationCommand.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst ApplicationCommandPermissionsManager = __webpack_require__(/*! ../managers/ApplicationCommandPermissionsManager */ \"./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js\");\nconst { ApplicationCommandOptionTypes, ApplicationCommandTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents an application command.\n * @extends {Base}\n */\nclass ApplicationCommand extends Base {\n  constructor(client, data, guild, guildId) {\n    super(client);\n\n    /**\n     * The command's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The parent application's id\n     * @type {Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The guild this command is part of\n     * @type {?Guild}\n     */\n    this.guild = guild ?? null;\n\n    /**\n     * The guild's id this command is part of, this may be non-null when `guild` is `null` if the command\n     * was fetched from the `ApplicationCommandManager`\n     * @type {?Snowflake}\n     */\n    this.guildId = guild?.id ?? guildId ?? null;\n\n    /**\n     * The manager for permissions of this command on its guild or arbitrary guilds when the command is global\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n\n    /**\n     * The type of this application command\n     * @type {ApplicationCommandType}\n     */\n    this.type = ApplicationCommandTypes[data.type];\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The name of this command\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The description of this command\n     * @type {string}\n     */\n    this.description = data.description;\n\n    /**\n     * The options of this command\n     * @type {ApplicationCommandOption[]}\n     */\n    this.options = data.options?.map(o => this.constructor.transformOption(o, true)) ?? [];\n\n    /**\n     * Whether the command is enabled by default when the app is added to a guild\n     * @type {boolean}\n     */\n    this.defaultPermission = data.default_permission;\n  }\n\n  /**\n   * The timestamp the command was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the command was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The manager that this command belongs to\n   * @type {ApplicationCommandManager}\n   * @readonly\n   */\n  get manager() {\n    return (this.guild ?? this.client.application).commands;\n  }\n\n  /**\n   * Data for creating or editing an application command.\n   * @typedef {Object} ApplicationCommandData\n   * @property {string} name The name of the command\n   * @property {string} description The description of the command\n   * @property {ApplicationCommandType} [type] The type of the command\n   * @property {ApplicationCommandOptionData[]} [options] Options for the command\n   * @property {boolean} [defaultPermission] Whether the command is enabled by default when the app is added to a guild\n   */\n\n  /**\n   * An option for an application command or subcommand.\n   * @typedef {Object} ApplicationCommandOptionData\n   * @property {ApplicationCommandOptionType|number} type The type of the option\n   * @property {string} name The name of the option\n   * @property {string} description The description of the option\n   * @property {boolean} [required] Whether the option is required\n   * @property {ApplicationCommandOptionChoice[]} [choices] The choices of the option for the user to pick from\n   * @property {ApplicationCommandOptionData[]} [options] Additional options if this option is a subcommand (group)\n   */\n\n  /**\n   * Edits this application command.\n   * @param {ApplicationCommandData} data The data to update the command with\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit the description of this command\n   * command.edit({\n   *   description: 'New description',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  edit(data) {\n    return this.manager.edit(this, data, this.guildId);\n  }\n\n  /**\n   * Deletes this command.\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Delete this command\n   * command.delete()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  delete() {\n    return this.manager.delete(this, this.guildId);\n  }\n\n  /**\n   * An option for an application command or subcommand.\n   * @typedef {Object} ApplicationCommandOption\n   * @property {ApplicationCommandOptionType} type The type of the option\n   * @property {string} name The name of the option\n   * @property {string} description The description of the option\n   * @property {boolean} [required] Whether the option is required\n   * @property {ApplicationCommandOptionChoice[]} [choices] The choices of the option for the user to pick from\n   * @property {ApplicationCommandOption[]} [options] Additional options if this option is a subcommand (group)\n   */\n\n  /**\n   * A choice for an application command option.\n   * @typedef {Object} ApplicationCommandOptionChoice\n   * @property {string} name The name of the choice\n   * @property {string|number} value The value of the choice\n   */\n\n  /**\n   * Transforms an {@link ApplicationCommandOptionData} object into something that can be used with the API.\n   * @param {ApplicationCommandOptionData} option The option to transform\n   * @param {boolean} [received] Whether this option has been received from Discord\n   * @returns {APIApplicationCommandOption}\n   * @private\n   */\n  static transformOption(option, received) {\n    const stringType = typeof option.type === 'string' ? option.type : ApplicationCommandOptionTypes[option.type];\n    return {\n      type: typeof option.type === 'number' && !received ? option.type : ApplicationCommandOptionTypes[option.type],\n      name: option.name,\n      description: option.description,\n      required:\n        option.required ?? (stringType === 'SUB_COMMAND' || stringType === 'SUB_COMMAND_GROUP' ? undefined : false),\n      choices: option.choices,\n      options: option.options?.map(o => this.transformOption(o, received)),\n    };\n  }\n}\n\nmodule.exports = ApplicationCommand;\n\n/* eslint-disable max-len */\n/**\n * @external APIApplicationCommand\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure}\n */\n\n/**\n * @external APIApplicationCommandOption\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-structure}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ApplicationCommand.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Base.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Base.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a data model that is identifiable by a Snowflake (i.e. Discord API data models).\n * @abstract\n */\nclass Base {\n  constructor(client) {\n    /**\n     * The client that instantiated this\n     * @name Base#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n  }\n\n  _clone() {\n    return Object.assign(Object.create(this), this);\n  }\n\n  _patch(data) {\n    return data;\n  }\n\n  _update(data) {\n    const clone = this._clone();\n    this._patch(data);\n    return clone;\n  }\n\n  toJSON(...props) {\n    return Util.flatten(this, ...props);\n  }\n\n  valueOf() {\n    return this.id;\n  }\n}\n\nmodule.exports = Base;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Base.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/BaseCommandInteraction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/BaseCommandInteraction.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Interaction = __webpack_require__(/*! ./Interaction */ \"./node_modules/discord.js/src/structures/Interaction.js\");\nconst InteractionWebhook = __webpack_require__(/*! ./InteractionWebhook */ \"./node_modules/discord.js/src/structures/InteractionWebhook.js\");\nconst InteractionResponses = __webpack_require__(/*! ./interfaces/InteractionResponses */ \"./node_modules/discord.js/src/structures/interfaces/InteractionResponses.js\");\nconst { ApplicationCommandOptionTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Represents a command interaction.\n * @extends {Interaction}\n * @implements {InteractionResponses}\n * @abstract\n */\nclass BaseCommandInteraction extends Interaction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The channel this interaction was sent in\n     * @type {?TextBasedChannels}\n     * @name BaseCommandInteraction#channel\n     * @readonly\n     */\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {Snowflake}\n     * @name BaseCommandInteraction#channelId\n     */\n\n    /**\n     * The invoked application command's id\n     * @type {Snowflake}\n     */\n    this.commandId = data.data.id;\n\n    /**\n     * The invoked application command's name\n     * @type {string}\n     */\n    this.commandName = data.data.name;\n\n    /**\n     * Whether the reply to this interaction has been deferred\n     * @type {boolean}\n     */\n    this.deferred = false;\n\n    /**\n     * Whether this interaction has already been replied to\n     * @type {boolean}\n     */\n    this.replied = false;\n\n    /**\n     * Whether the reply to this interaction is ephemeral\n     * @type {?boolean}\n     */\n    this.ephemeral = null;\n\n    /**\n     * An associated interaction webhook, can be used to further interact with this interaction\n     * @type {InteractionWebhook}\n     */\n    this.webhook = new InteractionWebhook(this.client, this.applicationId, this.token);\n  }\n\n  /**\n   * The invoked application command, if it was fetched before\n   * @type {?ApplicationCommand}\n   */\n  get command() {\n    const id = this.commandId;\n    return this.guild?.commands.cache.get(id) ?? this.client.application.commands.cache.get(id) ?? null;\n  }\n\n  /**\n   * Represents the resolved data of a received command interaction.\n   * @typedef {Object} CommandInteractionResolvedData\n   * @property {Collection<string, User>} [users] The resolved users\n   * @property {Collection<string, GuildMember|APIGuildMember>} [members] The resolved guild members\n   * @property {Collection<string, Role|APIRole>} [roles] The resolved roles\n   * @property {Collection<string, Channel|APIChannel>} [channels] The resolved channels\n   * @property {Collection<string, Message|APIMessage>} [messages] The resolved messages\n   */\n\n  /**\n   * Transforms the resolved received from the API.\n   * @param {APIInteractionDataResolved} resolved The received resolved objects\n   * @returns {CommandInteractionResolvedData}\n   * @private\n   */\n  transformResolved({ members, users, channels, roles, messages }) {\n    const result = {};\n\n    if (members) {\n      result.members = new Collection();\n      for (const [id, member] of Object.entries(members)) {\n        const user = users[id];\n        result.members.set(id, this.guild?.members._add({ user, ...member }) ?? member);\n      }\n    }\n\n    if (users) {\n      result.users = new Collection();\n      for (const user of Object.values(users)) {\n        result.users.set(user.id, this.client.users._add(user));\n      }\n    }\n\n    if (roles) {\n      result.roles = new Collection();\n      for (const role of Object.values(roles)) {\n        result.roles.set(role.id, this.guild?.roles._add(role) ?? role);\n      }\n    }\n\n    if (channels) {\n      result.channels = new Collection();\n      for (const channel of Object.values(channels)) {\n        result.channels.set(channel.id, this.client.channels._add(channel, this.guild) ?? channel);\n      }\n    }\n\n    if (messages) {\n      result.messages = new Collection();\n      for (const message of Object.values(messages)) {\n        result.messages.set(message.id, this.channel?.messages?._add(message) ?? message);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Represents an option of a received command interaction.\n   * @typedef {Object} CommandInteractionOption\n   * @property {string} name The name of the option\n   * @property {ApplicationCommandOptionType} type The type of the option\n   * @property {string|number|boolean} [value] The value of the option\n   * @property {CommandInteractionOption[]} [options] Additional options if this option is a\n   * subcommand (group)\n   * @property {User} [user] The resolved user\n   * @property {GuildMember|APIGuildMember} [member] The resolved member\n   * @property {GuildChannel|APIChannel} [channel] The resolved channel\n   * @property {Role|APIRole} [role] The resolved role\n   */\n\n  /**\n   * Transforms an option received from the API.\n   * @param {APIApplicationCommandOption} option The received option\n   * @param {APIInteractionDataResolved} resolved The resolved interaction data\n   * @returns {CommandInteractionOption}\n   * @private\n   */\n  transformOption(option, resolved) {\n    const result = {\n      name: option.name,\n      type: ApplicationCommandOptionTypes[option.type],\n    };\n\n    if ('value' in option) result.value = option.value;\n    if ('options' in option) result.options = option.options.map(opt => this.transformOption(opt, resolved));\n\n    if (resolved) {\n      const user = resolved.users?.[option.value];\n      if (user) result.user = this.client.users._add(user);\n\n      const member = resolved.members?.[option.value];\n      if (member) result.member = this.guild?.members._add({ user, ...member }) ?? member;\n\n      const channel = resolved.channels?.[option.value];\n      if (channel) result.channel = this.client.channels._add(channel, this.guild) ?? channel;\n\n      const role = resolved.roles?.[option.value];\n      if (role) result.role = this.guild?.roles._add(role) ?? role;\n    }\n\n    return result;\n  }\n\n  // These are here only for documentation purposes - they are implemented by InteractionResponses\n  /* eslint-disable no-empty-function */\n  defer() {}\n  reply() {}\n  fetchReply() {}\n  editReply() {}\n  deleteReply() {}\n  followUp() {}\n}\n\nInteractionResponses.applyToClass(BaseCommandInteraction, ['deferUpdate', 'update']);\n\nmodule.exports = BaseCommandInteraction;\n\n/* eslint-disable max-len */\n/**\n * @external APIInteractionDataResolved\n * @see {@link https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-resolved-data-structure}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/BaseCommandInteraction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/BaseGuild.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/BaseGuild.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * The base class for {@link Guild}, {@link OAuth2Guild} and {@link InviteGuild}.\n * @extends {Base}\n * @abstract\n */\nclass BaseGuild extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The guild's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of this guild\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The icon hash of this guild\n     * @type {?string}\n     */\n    this.icon = data.icon;\n\n    /**\n     * An array of features available to this guild\n     * @type {Features[]}\n     */\n    this.features = data.features;\n  }\n\n  /**\n   * The timestamp this guild was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this guild was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The acronym that shows up in place of a guild icon\n   * @type {string}\n   * @readonly\n   */\n  get nameAcronym() {\n    return this.name\n      .replace(/'s /g, ' ')\n      .replace(/\\w+/g, e => e[0])\n      .replace(/\\s/g, '');\n  }\n\n  /**\n   * Whether this guild is partnered\n   * @type {boolean}\n   * @readonly\n   */\n  get partnered() {\n    return this.features.includes('PARTNERED');\n  }\n\n  /**\n   * Whether this guild is verified\n   * @type {boolean}\n   * @readonly\n   */\n  get verified() {\n    return this.features.includes('VERIFIED');\n  }\n\n  /**\n   * The URL to this guild's icon.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size, dynamic } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.Icon(this.id, this.icon, format, size, dynamic);\n  }\n\n  /**\n   * Fetches this guild.\n   * @returns {Promise<Guild>}\n   */\n  async fetch() {\n    const data = await this.client.api.guilds(this.id).get({ query: { with_counts: true } });\n    return this.client.guilds._add(data);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n}\n\nmodule.exports = BaseGuild;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/BaseGuild.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/BaseGuildEmoji.js":
/*!******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/BaseGuildEmoji.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Emoji = __webpack_require__(/*! ./Emoji */ \"./node_modules/discord.js/src/structures/Emoji.js\");\n\n/**\n * Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.\n * @extends {Emoji}\n * @abstract\n */\nclass BaseGuildEmoji extends Emoji {\n  constructor(client, data, guild) {\n    super(client, data);\n\n    /**\n     * The guild this emoji is a part of\n     * @type {Guild|GuildPreview}\n     */\n    this.guild = guild;\n\n    this.requiresColons = null;\n    this.managed = null;\n    this.available = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if (data.name) this.name = data.name;\n\n    if (typeof data.require_colons !== 'undefined') {\n      /**\n       * Whether or not this emoji requires colons surrounding it\n       * @type {?boolean}\n       */\n      this.requiresColons = data.require_colons;\n    }\n\n    if (typeof data.managed !== 'undefined') {\n      /**\n       * Whether this emoji is managed by an external service\n       * @type {?boolean}\n       */\n      this.managed = data.managed;\n    }\n\n    if (typeof data.available !== 'undefined') {\n      /**\n       * Whether this emoji is available\n       * @type {?boolean}\n       */\n      this.available = data.available;\n    }\n  }\n}\n\nmodule.exports = BaseGuildEmoji;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/BaseGuildEmoji.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/BaseGuildTextChannel.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/BaseGuildTextChannel.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst GuildChannel = __webpack_require__(/*! ./GuildChannel */ \"./node_modules/discord.js/src/structures/GuildChannel.js\");\nconst Webhook = __webpack_require__(/*! ./Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\");\nconst TextBasedChannel = __webpack_require__(/*! ./interfaces/TextBasedChannel */ \"./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js\");\nconst MessageManager = __webpack_require__(/*! ../managers/MessageManager */ \"./node_modules/discord.js/src/managers/MessageManager.js\");\nconst ThreadManager = __webpack_require__(/*! ../managers/ThreadManager */ \"./node_modules/discord.js/src/managers/ThreadManager.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\n\n/**\n * Represents a text-based guild channel on Discord.\n * @extends {GuildChannel}\n * @implements {TextBasedChannel}\n */\nclass BaseGuildTextChannel extends GuildChannel {\n  /**\n   * @param {Guild} guild The guild the text channel is part of\n   * @param {APIChannel} data The data for the text channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   */\n  constructor(guild, data, client) {\n    super(guild, data, client, false);\n\n    /**\n     * A manager of the messages sent to this channel\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n\n    /**\n     * A manager of the threads belonging to this channel\n     * @type {ThreadManager}\n     */\n    this.threads = new ThreadManager(this);\n\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n    this.nsfw = Boolean(data.nsfw);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('topic' in data) {\n      /**\n       * The topic of the text channel\n       * @type {?string}\n       */\n      this.topic = data.topic;\n    }\n\n    if ('nsfw' in data) {\n      this.nsfw = Boolean(data.nsfw);\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The last message id sent in the channel, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    }\n\n    if ('last_pin_timestamp' in data) {\n      /**\n       * The timestamp when the last pinned message was pinned, if there was one\n       * @type {?number}\n       */\n      this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;\n    }\n\n    if ('default_auto_archive_duration' in data) {\n      /**\n       * The default auto archive duration for newly created threads in this channel\n       * @type {?ThreadAutoArchiveDuration}\n       */\n      this.defaultAutoArchiveDuration = data.default_auto_archive_duration;\n    }\n\n    if ('messages' in data) {\n      for (const message of data.messages) this.messages._add(message);\n    }\n  }\n\n  /**\n   * Sets the default auto archive duration for all newly created threads in this channel.\n   * @param {ThreadAutoArchiveDuration} defaultAutoArchiveDuration The new default auto archive duration\n   * @param {string} [reason] Reason for changing the channel's default auto archive duration\n   * @returns {Promise<TextChannel>}\n   */\n  setDefaultAutoArchiveDuration(defaultAutoArchiveDuration, reason) {\n    return this.edit({ defaultAutoArchiveDuration }, reason);\n  }\n\n  /**\n   * Sets whether this channel is flagged as NSFW.\n   * @param {boolean} nsfw Whether the channel should be considered NSFW\n   * @param {string} [reason] Reason for changing the channel's NSFW flag\n   * @returns {Promise<TextChannel>}\n   */\n  setNSFW(nsfw, reason) {\n    return this.edit({ nsfw }, reason);\n  }\n\n  /**\n   * Sets the type of this channel (only conversion between text and news is supported)\n   * @param {string} type The new channel type\n   * @param {string} [reason] Reason for changing the channel's type\n   * @returns {Promise<GuildChannel>}\n   */\n  setType(type, reason) {\n    return this.edit({ type }, reason);\n  }\n\n  /**\n   * Fetches all webhooks for the channel.\n   * @returns {Promise<Collection<Snowflake, Webhook>>}\n   * @example\n   * // Fetch webhooks\n   * channel.fetchWebhooks()\n   *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n   *   .catch(console.error);\n   */\n  async fetchWebhooks() {\n    const data = await this.client.api.channels[this.id].webhooks.get();\n    const hooks = new Collection();\n    for (const hook of data) hooks.set(hook.id, new Webhook(this.client, hook));\n    return hooks;\n  }\n\n  /**\n   * Options used to create a {@link Webhook} for {@link TextChannel} and {@link NewsChannel}.\n   * @typedef {Object} ChannelWebhookCreateOptions\n   * @property {BufferResolvable|Base64Resolvable} [avatar] Avatar for the webhook\n   * @property {string} [reason] Reason for creating the webhook\n   */\n\n  /**\n   * Creates a webhook for the channel.\n   * @param {string} name The name of the webhook\n   * @param {ChannelWebhookCreateOptions} [options] Options for creating the webhook\n   * @returns {Promise<Webhook>} Returns the created Webhook\n   * @example\n   * // Create a webhook for the current channel\n   * channel.createWebhook('Snek', {\n   *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n   *   reason: 'Needed a cool new Webhook'\n   * })\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async createWebhook(name, { avatar, reason } = {}) {\n    if (typeof avatar === 'string' && !avatar.startsWith('data:')) {\n      avatar = await DataResolver.resolveImage(avatar);\n    }\n    const data = await this.client.api.channels[this.id].webhooks.post({\n      data: {\n        name,\n        avatar,\n      },\n      reason,\n    });\n    return new Webhook(this.client, data);\n  }\n\n  /**\n   * Sets a new topic for the guild channel.\n   * @param {?string} topic The new topic for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's topic\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel topic\n   * channel.setTopic('needs more rate limiting')\n   *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n   *   .catch(console.error);\n   */\n  setTopic(topic, reason) {\n    return this.edit({ topic }, reason);\n  }\n\n  /**\n   * Options used to create an invite to a guild channel.\n   * @typedef {Object} CreateInviteOptions\n   * @property {boolean} [temporary=false] Whether members that joined via the invite should be automatically\n   * kicked after 24 hours if they have not yet received a role\n   * @property {number} [maxAge=86400] How long the invite should last (in seconds, 0 for forever)\n   * @property {number} [maxUses=0] Maximum number of uses\n   * @property {boolean} [unique=false] Create a unique invite, or use an existing one with similar settings\n   * @property {UserResolvable} [targetUser] The user whose stream to display for this invite,\n   * required if `targetType` is 1, the user must be streaming in the channel\n   * @property {ApplicationResolvable} [targetApplication] The embedded application to open for this invite,\n   * required if `targetType` is 2, the application must have the `EMBEDDED` flag\n   * @property {TargetType} [targetType] The type of the target for this voice channel invite\n   * @property {string} [reason] The reason for creating the invite\n   */\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  bulkDelete() {}\n}\n\nTextBasedChannel.applyToClass(BaseGuildTextChannel, true);\n\nmodule.exports = BaseGuildTextChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/BaseGuildTextChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst GuildChannel = __webpack_require__(/*! ./GuildChannel */ \"./node_modules/discord.js/src/structures/GuildChannel.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * Represents a voice-based guild channel on Discord.\n * @extends {GuildChannel}\n */\nclass BaseGuildVoiceChannel extends GuildChannel {\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The RTC region for this voice-based channel. This region is automatically selected if `null`.\n     * @type {?string}\n     */\n    this.rtcRegion = data.rtc_region;\n\n    /**\n     * The bitrate of this voice-based channel\n     * @type {number}\n     */\n    this.bitrate = data.bitrate;\n\n    /**\n     * The maximum amount of users allowed in this channel.\n     * @type {number}\n     */\n    this.userLimit = data.user_limit;\n  }\n\n  /**\n   * The members in this voice-based channel\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    const coll = new Collection();\n    for (const state of this.guild.voiceStates.cache.values()) {\n      if (state.channelId === this.id && state.member) {\n        coll.set(state.id, state.member);\n      }\n    }\n    return coll;\n  }\n\n  /**\n   * Checks if the voice-based channel is full\n   * @type {boolean}\n   * @readonly\n   */\n  get full() {\n    return this.userLimit > 0 && this.members.size >= this.userLimit;\n  }\n\n  /**\n   * Whether the channel is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    if (!this.viewable) return false;\n    if (!this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false)) return false;\n    return true;\n  }\n\n  /**\n   * Sets the RTC region of the channel.\n   * @param {?string} region The new region of the channel. Set to `null` to remove a specific region for the channel\n   * @returns {Promise<BaseGuildVoiceChannel>}\n   * @example\n   * // Set the RTC region to europe\n   * channel.setRTCRegion('europe');\n   * @example\n   * // Remove a fixed region for this channel - let Discord decide automatically\n   * channel.setRTCRegion(null);\n   */\n  setRTCRegion(region) {\n    return this.edit({ rtcRegion: region });\n  }\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n}\n\nmodule.exports = BaseGuildVoiceChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/BaseMessageComponent.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/BaseMessageComponent.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { MessageComponentTypes, Events } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Represents an interactive component of a Message. It should not be necessary to construct this directly.\n * See {@link MessageComponent}\n */\nclass BaseMessageComponent {\n  /**\n   * Options for a BaseMessageComponent\n   * @typedef {Object} BaseMessageComponentOptions\n   * @property {MessageComponentTypeResolvable} type The type of this component\n   */\n\n  /**\n   * Data that can be resolved into options for a MessageComponent. This can be:\n   * * MessageActionRowOptions\n   * * MessageButtonOptions\n   * * MessageSelectMenuOptions\n   * @typedef {MessageActionRowOptions|MessageButtonOptions|MessageSelectMenuOptions} MessageComponentOptions\n   */\n\n  /**\n   * Components that can be sent in a message. These can be:\n   * * MessageActionRow\n   * * MessageButton\n   * * MessageSelectMenu\n   * @typedef {MessageActionRow|MessageButton|MessageSelectMenu} MessageComponent\n   * @see {@link https://discord.com/developers/docs/interactions/message-components#component-object-component-types}\n   */\n\n  /**\n   * Data that can be resolved to a MessageComponentType. This can be:\n   * * MessageComponentType\n   * * string\n   * * number\n   * @typedef {string|number|MessageComponentType} MessageComponentTypeResolvable\n   */\n\n  /**\n   * @param {BaseMessageComponent|BaseMessageComponentOptions} [data={}] The options for this component\n   */\n  constructor(data) {\n    /**\n     * The type of this component\n     * @type {?MessageComponentType}\n     */\n    this.type = 'type' in data ? BaseMessageComponent.resolveType(data.type) : null;\n  }\n\n  /**\n   * Constructs a MessageComponent based on the type of the incoming data\n   * @param {MessageComponentOptions} data Data for a MessageComponent\n   * @param {Client|WebhookClient} [client] Client constructing this component\n   * @returns {?MessageComponent}\n   * @private\n   */\n  static create(data, client) {\n    let component;\n    let type = data.type;\n\n    if (typeof type === 'string') type = MessageComponentTypes[type];\n\n    switch (type) {\n      case MessageComponentTypes.ACTION_ROW: {\n        const MessageActionRow = __webpack_require__(/*! ./MessageActionRow */ \"./node_modules/discord.js/src/structures/MessageActionRow.js\");\n        component = new MessageActionRow(data, client);\n        break;\n      }\n      case MessageComponentTypes.BUTTON: {\n        const MessageButton = __webpack_require__(/*! ./MessageButton */ \"./node_modules/discord.js/src/structures/MessageButton.js\");\n        component = new MessageButton(data);\n        break;\n      }\n      case MessageComponentTypes.SELECT_MENU: {\n        const MessageSelectMenu = __webpack_require__(/*! ./MessageSelectMenu */ \"./node_modules/discord.js/src/structures/MessageSelectMenu.js\");\n        component = new MessageSelectMenu(data);\n        break;\n      }\n      default:\n        if (client) {\n          client.emit(Events.DEBUG, `[BaseMessageComponent] Received component with unknown type: ${data.type}`);\n        } else {\n          throw new TypeError('INVALID_TYPE', 'data.type', 'valid MessageComponentType');\n        }\n    }\n    return component;\n  }\n\n  /**\n   * Resolves the type of a MessageComponent\n   * @param {MessageComponentTypeResolvable} type The type to resolve\n   * @returns {MessageComponentType}\n   * @private\n   */\n  static resolveType(type) {\n    return typeof type === 'string' ? type : MessageComponentTypes[type];\n  }\n}\n\nmodule.exports = BaseMessageComponent;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/BaseMessageComponent.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ButtonInteraction.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ButtonInteraction.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst MessageComponentInteraction = __webpack_require__(/*! ./MessageComponentInteraction */ \"./node_modules/discord.js/src/structures/MessageComponentInteraction.js\");\n\n/**\n * Represents a button interaction.\n * @extends {MessageComponentInteraction}\n */\nclass ButtonInteraction extends MessageComponentInteraction {}\n\nmodule.exports = ButtonInteraction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ButtonInteraction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/CategoryChannel.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/CategoryChannel.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst GuildChannel = __webpack_require__(/*! ./GuildChannel */ \"./node_modules/discord.js/src/structures/GuildChannel.js\");\n\n/**\n * Represents a guild category channel on Discord.\n * @extends {GuildChannel}\n */\nclass CategoryChannel extends GuildChannel {\n  /**\n   * Channels that are a part of this category\n   * @type {Collection<Snowflake, GuildChannel>}\n   * @readonly\n   */\n  get children() {\n    return this.guild.channels.cache.filter(c => c.parentId === this.id);\n  }\n\n  /**\n   * Sets the category parent of this channel.\n   * <warn>It is not currently possible to set the parent of a CategoryChannel.</warn>\n   * @method setParent\n   * @memberof CategoryChannel\n   * @instance\n   * @param {?CategoryChannelResolvable} channel The channel to set as parent\n   * @param {SetParentOptions} [options={}] The options for setting the parent\n   * @returns {Promise<GuildChannel>}\n   */\n}\n\nmodule.exports = CategoryChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/CategoryChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Channel.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Channel.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nlet CategoryChannel;\nlet DMChannel;\nlet NewsChannel;\nlet StageChannel;\nlet StoreChannel;\nlet TextChannel;\nlet ThreadChannel;\nlet VoiceChannel;\nconst { ChannelTypes, ThreadChannelTypes, VoiceBasedChannelTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents any channel on Discord.\n * @extends {Base}\n * @abstract\n */\nclass Channel extends Base {\n  constructor(client, data, immediatePatch = true) {\n    super(client);\n\n    const type = ChannelTypes[data.type];\n    /**\n     * The type of the channel\n     * @type {ChannelType}\n     */\n    this.type = type ?? 'UNKNOWN';\n\n    /**\n     * Whether the channel has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    if (data && immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The channel's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n  }\n\n  /**\n   * The timestamp the channel was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the channel was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * Whether this Channel is a partial\n   * <info>This is always false outside of DM channels.</info>\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return false;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <#123456789012345678>!\n   * console.log(`Hello from ${channel}!`);\n   */\n  toString() {\n    return `<#${this.id}>`;\n  }\n\n  /**\n   * Deletes this channel.\n   * @returns {Promise<Channel>}\n   * @example\n   * // Delete the channel\n   * channel.delete()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  delete() {\n    return this.client.api\n      .channels(this.id)\n      .delete()\n      .then(() => this);\n  }\n\n  /**\n   * Fetches this channel.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<Channel>}\n   */\n  fetch(force = true) {\n    return this.client.channels.fetch(this.id, { force });\n  }\n\n  /**\n   * Indicates whether this channel is {@link TextBasedChannels text-based}.\n   * @returns {boolean}\n   */\n  isText() {\n    return 'messages' in this;\n  }\n\n  /**\n   * Indicates whether this channel is voice-based\n   * ({@link VoiceChannel} or {@link StageChannel}).\n   * @returns {boolean}\n   */\n  isVoice() {\n    return VoiceBasedChannelTypes.includes(this.type);\n  }\n\n  /**\n   * Indicates whether this channel is a {@link ThreadChannel}.\n   * @returns {boolean}\n   */\n  isThread() {\n    return ThreadChannelTypes.includes(this.type);\n  }\n\n  static create(client, data, guild, { allowUnknownGuild, fromInteraction } = {}) {\n    if (!CategoryChannel) CategoryChannel = __webpack_require__(/*! ./CategoryChannel */ \"./node_modules/discord.js/src/structures/CategoryChannel.js\");\n    if (!DMChannel) DMChannel = __webpack_require__(/*! ./DMChannel */ \"./node_modules/discord.js/src/structures/DMChannel.js\");\n    if (!NewsChannel) NewsChannel = __webpack_require__(/*! ./NewsChannel */ \"./node_modules/discord.js/src/structures/NewsChannel.js\");\n    if (!StageChannel) StageChannel = __webpack_require__(/*! ./StageChannel */ \"./node_modules/discord.js/src/structures/StageChannel.js\");\n    if (!StoreChannel) StoreChannel = __webpack_require__(/*! ./StoreChannel */ \"./node_modules/discord.js/src/structures/StoreChannel.js\");\n    if (!TextChannel) TextChannel = __webpack_require__(/*! ./TextChannel */ \"./node_modules/discord.js/src/structures/TextChannel.js\");\n    if (!ThreadChannel) ThreadChannel = __webpack_require__(/*! ./ThreadChannel */ \"./node_modules/discord.js/src/structures/ThreadChannel.js\");\n    if (!VoiceChannel) VoiceChannel = __webpack_require__(/*! ./VoiceChannel */ \"./node_modules/discord.js/src/structures/VoiceChannel.js\");\n\n    let channel;\n    if (!data.guild_id && !guild) {\n      if ((data.recipients && data.type !== ChannelTypes.GROUP_DM) || data.type === ChannelTypes.DM) {\n        channel = new DMChannel(client, data);\n      } else if (data.type === ChannelTypes.GROUP_DM) {\n        const PartialGroupDMChannel = __webpack_require__(/*! ./PartialGroupDMChannel */ \"./node_modules/discord.js/src/structures/PartialGroupDMChannel.js\");\n        channel = new PartialGroupDMChannel(client, data);\n      }\n    } else {\n      if (!guild) guild = client.guilds.cache.get(data.guild_id);\n\n      if (guild || allowUnknownGuild) {\n        switch (data.type) {\n          case ChannelTypes.GUILD_TEXT: {\n            channel = new TextChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_VOICE: {\n            channel = new VoiceChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_CATEGORY: {\n            channel = new CategoryChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_NEWS: {\n            channel = new NewsChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_STORE: {\n            channel = new StoreChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_STAGE_VOICE: {\n            channel = new StageChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_NEWS_THREAD:\n          case ChannelTypes.GUILD_PUBLIC_THREAD:\n          case ChannelTypes.GUILD_PRIVATE_THREAD: {\n            channel = new ThreadChannel(guild, data, client, fromInteraction);\n            if (!allowUnknownGuild) channel.parent?.threads.cache.set(channel.id, channel);\n            break;\n          }\n        }\n        if (channel && !allowUnknownGuild) guild.channels?.cache.set(channel.id, channel);\n      }\n    }\n    return channel;\n  }\n\n  toJSON(...props) {\n    return super.toJSON({ createdTimestamp: true }, ...props);\n  }\n}\n\nmodule.exports = Channel;\n\n/**\n * @external APIChannel\n * @see {@link https://discord.com/developers/docs/resources/channel#channel-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Channel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ClientApplication.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ClientApplication.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Team = __webpack_require__(/*! ./Team */ \"./node_modules/discord.js/src/structures/Team.js\");\nconst Application = __webpack_require__(/*! ./interfaces/Application */ \"./node_modules/discord.js/src/structures/interfaces/Application.js\");\nconst ApplicationCommandManager = __webpack_require__(/*! ../managers/ApplicationCommandManager */ \"./node_modules/discord.js/src/managers/ApplicationCommandManager.js\");\nconst ApplicationFlags = __webpack_require__(/*! ../util/ApplicationFlags */ \"./node_modules/discord.js/src/util/ApplicationFlags.js\");\n\n/**\n * Represents a Client OAuth2 Application.\n * @extends {Application}\n */\nclass ClientApplication extends Application {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The application command manager for this application\n     * @type {ApplicationCommandManager}\n     */\n    this.commands = new ApplicationCommandManager(this.client);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The flags this application has\n     * @type {ApplicationFlags}\n     */\n    this.flags = 'flags' in data ? new ApplicationFlags(data.flags).freeze() : this.flags;\n\n    /**\n     * The hash of the application's cover image\n     * @type {?string}\n     */\n    this.cover = data.cover_image ?? this.cover ?? null;\n\n    /**\n     * The application's RPC origins, if enabled\n     * @type {string[]}\n     */\n    this.rpcOrigins = data.rpc_origins ?? this.rpcOrigins ?? [];\n\n    /**\n     * If this application's bot requires a code grant when using the OAuth2 flow\n     * @type {?boolean}\n     */\n    this.botRequireCodeGrant = data.bot_require_code_grant ?? this.botRequireCodeGrant ?? null;\n\n    /**\n     * If this application's bot is public\n     * @type {?boolean}\n     */\n    this.botPublic = data.bot_public ?? this.botPublic ?? null;\n\n    /**\n     * The owner of this OAuth application\n     * @type {?(User|Team)}\n     */\n    this.owner = data.team\n      ? new Team(this.client, data.team)\n      : data.owner\n      ? this.client.users._add(data.owner)\n      : this.owner ?? null;\n  }\n\n  /**\n   * Whether this application is partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.name;\n  }\n\n  /**\n   * Obtains this application from Discord.\n   * @returns {Promise<ClientApplication>}\n   */\n  async fetch() {\n    const app = await this.client.api.oauth2.applications('@me').get();\n    this._patch(app);\n    return this;\n  }\n}\n\nmodule.exports = ClientApplication;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ClientApplication.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ClientPresence.js":
/*!******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ClientPresence.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Presence } = __webpack_require__(/*! ./Presence */ \"./node_modules/discord.js/src/structures/Presence.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { ActivityTypes, Opcodes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\nclass ClientPresence extends Presence {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIPresence} [data={}] The data for the client presence\n   */\n  constructor(client, data = {}) {\n    super(client, Object.assign(data, { status: data.status ?? 'online', user: { id: null } }));\n  }\n\n  set(presence) {\n    const packet = this._parse(presence);\n    this._patch(packet);\n    if (typeof presence.shardId === 'undefined') {\n      this.client.ws.broadcast({ op: Opcodes.STATUS_UPDATE, d: packet });\n    } else if (Array.isArray(presence.shardId)) {\n      for (const shardId of presence.shardId) {\n        this.client.ws.shards.get(shardId).send({ op: Opcodes.STATUS_UPDATE, d: packet });\n      }\n    } else {\n      this.client.ws.shards.get(presence.shardId).send({ op: Opcodes.STATUS_UPDATE, d: packet });\n    }\n    return this;\n  }\n\n  _parse({ status, since, afk, activities }) {\n    const data = {\n      activities: [],\n      afk: typeof afk === 'boolean' ? afk : false,\n      since: typeof since === 'number' && !Number.isNaN(since) ? since : null,\n      status: status ?? this.status,\n    };\n    if (activities?.length) {\n      for (const [i, activity] of activities.entries()) {\n        if (typeof activity.name !== 'string') throw new TypeError('INVALID_TYPE', `activities[${i}].name`, 'string');\n        if (!activity.type) activity.type = 0;\n\n        data.activities.push({\n          type: typeof activity.type === 'number' ? activity.type : ActivityTypes[activity.type],\n          name: activity.name,\n          url: activity.url,\n        });\n      }\n    } else if (!activities && (status || afk || since) && this.activities.length) {\n      data.activities.push(\n        ...this.activities.map(a => ({\n          name: a.name,\n          type: ActivityTypes[a.type],\n          url: a.url ?? undefined,\n        })),\n      );\n    }\n\n    return data;\n  }\n}\n\nmodule.exports = ClientPresence;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ClientPresence.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ClientUser.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ClientUser.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst User = __webpack_require__(/*! ./User */ \"./node_modules/discord.js/src/structures/User.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\n\n/**\n * Represents the logged in client's Discord user.\n * @extends {User}\n */\nclass ClientUser extends User {\n  _patch(data) {\n    super._patch(data);\n\n    if ('verified' in data) {\n      /**\n       * Whether or not this account has been verified\n       * @type {boolean}\n       */\n      this.verified = data.verified;\n    }\n\n    if ('mfa_enabled' in data) {\n      /**\n       * If the bot's {@link ClientApplication#owner Owner} has MFA enabled on their account\n       * @type {?boolean}\n       */\n      this.mfaEnabled = typeof data.mfa_enabled === 'boolean' ? data.mfa_enabled : null;\n    } else if (typeof this.mfaEnabled === 'undefined') {\n      this.mfaEnabled = null;\n    }\n\n    if (data.token) this.client.token = data.token;\n  }\n\n  /**\n   * ClientUser's presence\n   * @type {Presence}\n   * @readonly\n   */\n  get presence() {\n    return this.client.presence;\n  }\n\n  /**\n   * Data used to edit the logged in client\n   * @typdef {Object} ClientUserEditData\n   * @property {string} [username] The new username\n   * @property {BufferResolvable|Base64Resolvable} [avatar] The new avatar\n   */\n\n  /**\n   * Edits the logged in client.\n   * @param {ClientUserEditData} data The new data\n   */\n  async edit(data) {\n    const newData = await this.client.api.users('@me').patch({ data });\n    this.client.token = newData.token;\n    const { updated } = this.client.actions.UserUpdate.handle(newData);\n    return updated ?? this;\n  }\n\n  /**\n   * Sets the username of the logged in client.\n   * <info>Changing usernames in Discord is heavily rate limited, with only 2 requests\n   * every hour. Use this sparingly!</info>\n   * @param {string} username The new username\n   * @returns {Promise<ClientUser>}\n   * @example\n   * // Set username\n   * client.user.setUsername('discordjs')\n   *   .then(user => console.log(`My new username is ${user.username}`))\n   *   .catch(console.error);\n   */\n  setUsername(username) {\n    return this.edit({ username });\n  }\n\n  /**\n   * Sets the avatar of the logged in client.\n   * @param {BufferResolvable|Base64Resolvable} avatar The new avatar\n   * @returns {Promise<ClientUser>}\n   * @example\n   * // Set avatar\n   * client.user.setAvatar('./avatar.png')\n   *   .then(user => console.log(`New avatar set!`))\n   *   .catch(console.error);\n   */\n  async setAvatar(avatar) {\n    return this.edit({ avatar: await DataResolver.resolveImage(avatar) });\n  }\n\n  /**\n   * Options for setting activities\n   * @typedef {Object} ActivitiesOptions\n   * @property {string} [name] Name of the activity\n   * @property {ActivityType|number} [type] Type of the activity\n   * @property {string} [url] Twitch / YouTube stream URL\n   */\n\n  /**\n   * Data resembling a raw Discord presence.\n   * @typedef {Object} PresenceData\n   * @property {PresenceStatusData} [status] Status of the user\n   * @property {boolean} [afk] Whether the user is AFK\n   * @property {ActivitiesOptions[]} [activities] Activity the user is playing\n   * @property {number|number[]} [shardId] Shard id(s) to have the activity set on\n   */\n\n  /**\n   * Sets the full presence of the client user.\n   * @param {PresenceData} data Data for the presence\n   * @returns {Presence}\n   * @example\n   * // Set the client user's presence\n   * client.user.setPresence({ activities: [{ name: 'with discord.js' }], status: 'idle' });\n   */\n  setPresence(data) {\n    return this.client.presence.set(data);\n  }\n\n  /**\n   * A user's status. Must be one of:\n   * * `online`\n   * * `idle`\n   * * `invisible`\n   * * `dnd` (do not disturb)\n   * @typedef {string} PresenceStatusData\n   */\n\n  /**\n   * Sets the status of the client user.\n   * @param {PresenceStatusData} status Status to change to\n   * @param {number|number[]} [shardId] Shard id(s) to have the activity set on\n   * @returns {Presence}\n   * @example\n   * // Set the client user's status\n   * client.user.setStatus('idle');\n   */\n  setStatus(status, shardId) {\n    return this.setPresence({ status, shardId });\n  }\n\n  /**\n   * Options for setting an activity.\n   * @typedef {Object} ActivityOptions\n   * @property {string} [name] Name of the activity\n   * @property {string} [url] Twitch / YouTube stream URL\n   * @property {ActivityType|number} [type] Type of the activity\n   * @property {number|number[]} [shardId] Shard Id(s) to have the activity set on\n   */\n\n  /**\n   * Sets the activity the client user is playing.\n   * @param {string|ActivityOptions} [name] Activity being played, or options for setting the activity\n   * @param {ActivityOptions} [options] Options for setting the activity\n   * @returns {Presence}\n   * @example\n   * // Set the client user's activity\n   * client.user.setActivity('discord.js', { type: 'WATCHING' });\n   */\n  setActivity(name, options = {}) {\n    if (!name) return this.setPresence({ activities: [], shardId: options.shardId });\n\n    const activity = Object.assign({}, options, typeof name === 'object' ? name : { name });\n    return this.setPresence({ activities: [activity], shardId: activity.shardId });\n  }\n\n  /**\n   * Sets/removes the AFK flag for the client user.\n   * @param {boolean} afk Whether or not the user is AFK\n   * @param {number|number[]} [shardId] Shard Id(s) to have the AFK flag set on\n   * @returns {Presence}\n   */\n  setAFK(afk, shardId) {\n    return this.setPresence({ afk, shardId });\n  }\n}\n\nmodule.exports = ClientUser;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ClientUser.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/CommandInteraction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/CommandInteraction.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseCommandInteraction = __webpack_require__(/*! ./BaseCommandInteraction */ \"./node_modules/discord.js/src/structures/BaseCommandInteraction.js\");\nconst CommandInteractionOptionResolver = __webpack_require__(/*! ./CommandInteractionOptionResolver */ \"./node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js\");\n\n/**\n * Represents a command interaction.\n * @extends {BaseCommandInteraction}\n */\nclass CommandInteraction extends BaseCommandInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The options passed to the command.\n     * @type {CommandInteractionOptionResolver}\n     */\n    this.options = new CommandInteractionOptionResolver(\n      this.client,\n      data.data.options?.map(option => this.transformOption(option, data.data.resolved)) ?? [],\n      this.transformResolved(data.data.resolved ?? {}),\n    );\n  }\n}\n\nmodule.exports = CommandInteraction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/CommandInteraction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js":
/*!************************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\n\n/**\n * A resolver for command interaction options.\n */\nclass CommandInteractionOptionResolver {\n  constructor(client, options, resolved) {\n    /**\n     * The client that instantiated this.\n     * @name CommandInteractionOptionResolver#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The name of the subcommand group.\n     * @type {?string}\n     * @private\n     */\n    this._group = null;\n\n    /**\n     * The name of the subcommand.\n     * @type {?string}\n     * @private\n     */\n    this._subcommand = null;\n\n    /**\n     * The bottom-level options for the interaction.\n     * If there is a subcommand (or subcommand and group), this is the options for the subcommand.\n     * @type {CommandInteractionOption[]}\n     * @private\n     */\n    this._hoistedOptions = options;\n\n    // Hoist subcommand group if present\n    if (this._hoistedOptions[0]?.type === 'SUB_COMMAND_GROUP') {\n      this._group = this._hoistedOptions[0].name;\n      this._hoistedOptions = this._hoistedOptions[0].options ?? [];\n    }\n    // Hoist subcommand if present\n    if (this._hoistedOptions[0]?.type === 'SUB_COMMAND') {\n      this._subcommand = this._hoistedOptions[0].name;\n      this._hoistedOptions = this._hoistedOptions[0].options ?? [];\n    }\n\n    /**\n     * The interaction options array.\n     * @name CommandInteractionOptionResolver#data\n     * @type {ReadonlyArray<CommandInteractionOption>}\n     * @readonly\n     */\n    Object.defineProperty(this, 'data', { value: Object.freeze([...options]) });\n\n    /**\n     * The interaction resolved data\n     * @name CommandInteractionOptionResolver#resolved\n     * @type {Readonly<CommandInteractionResolvedData>}\n     */\n    Object.defineProperty(this, 'resolved', { value: Object.freeze(resolved) });\n  }\n\n  /**\n   * Gets an option by its name.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?CommandInteractionOption} The option, if found.\n   */\n  get(name, required = false) {\n    const option = this._hoistedOptions.find(opt => opt.name === name);\n    if (!option) {\n      if (required) {\n        throw new TypeError('COMMAND_INTERACTION_OPTION_NOT_FOUND', name);\n      }\n      return null;\n    }\n    return option;\n  }\n\n  /**\n   * Gets an option by name and property and checks its type.\n   * @param {string} name The name of the option.\n   * @param {ApplicationCommandOptionType} type The type of the option.\n   * @param {string[]} properties The properties to check for for `required`.\n   * @param {boolean} required Whether to throw an error if the option is not found.\n   * @returns {?CommandInteractionOption} The option, if found.\n   * @private\n   */\n  _getTypedOption(name, type, properties, required) {\n    const option = this.get(name, required);\n    if (!option) {\n      return null;\n    } else if (option.type !== type) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_TYPE', name, option.type, type);\n    } else if (required && properties.every(prop => option[prop] === null || typeof option[prop] === 'undefined')) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_EMPTY', name, option.type);\n    }\n    return option;\n  }\n\n  /**\n   * Gets the selected subcommand.\n   * @param {boolean} [required=true] Whether to throw an error if there is no subcommand.\n   * @returns {?string} The name of the selected subcommand, or null if not set and not required.\n   */\n  getSubcommand(required = true) {\n    if (required && !this._subcommand) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND');\n    }\n    return this._subcommand;\n  }\n\n  /**\n   * Gets the selected subcommand group.\n   * @param {boolean} [required=true] Whether to throw an error if there is no subcommand group.\n   * @returns {?string} The name of the selected subcommand group, or null if not set and not required.\n   */\n  getSubcommandGroup(required = true) {\n    if (required && !this._group) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND_GROUP');\n    }\n    return this._group;\n  }\n\n  /**\n   * Gets a boolean option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?boolean} The value of the option, or null if not set and not required.\n   */\n  getBoolean(name, required = false) {\n    const option = this._getTypedOption(name, 'BOOLEAN', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a channel option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(GuildChannel|APIGuildChannel)}\n   * The value of the option, or null if not set and not required.\n   */\n  getChannel(name, required = false) {\n    const option = this._getTypedOption(name, 'CHANNEL', ['channel'], required);\n    return option?.channel ?? null;\n  }\n\n  /**\n   * Gets a string option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?string} The value of the option, or null if not set and not required.\n   */\n  getString(name, required = false) {\n    const option = this._getTypedOption(name, 'STRING', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets an integer option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?number} The value of the option, or null if not set and not required.\n   */\n  getInteger(name, required = false) {\n    const option = this._getTypedOption(name, 'INTEGER', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a number option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?number} The value of the option, or null if not set and not required.\n   */\n  getNumber(name, required = false) {\n    const option = this._getTypedOption(name, 'NUMBER', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a user option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?User} The value of the option, or null if not set and not required.\n   */\n  getUser(name, required = false) {\n    const option = this._getTypedOption(name, 'USER', ['user'], required);\n    return option?.user ?? null;\n  }\n\n  /**\n   * Gets a member option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(GuildMember|APIGuildMember)}\n   * The value of the option, or null if not set and not required.\n   */\n  getMember(name, required = false) {\n    const option = this._getTypedOption(name, 'USER', ['member'], required);\n    return option?.member ?? null;\n  }\n\n  /**\n   * Gets a role option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(Role|APIRole)} The value of the option, or null if not set and not required.\n   */\n  getRole(name, required = false) {\n    const option = this._getTypedOption(name, 'ROLE', ['role'], required);\n    return option?.role ?? null;\n  }\n\n  /**\n   * Gets a mentionable option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(User|GuildMember|APIGuildMember|Role|APIRole)}\n   * The value of the option, or null if not set and not required.\n   */\n  getMentionable(name, required = false) {\n    const option = this._getTypedOption(name, 'MENTIONABLE', ['user', 'member', 'role'], required);\n    return option?.member ?? option?.user ?? option?.role ?? null;\n  }\n\n  /**\n   * Gets a message option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(Message|APIMessage)}\n   * The value of the option, or null if not set and not required.\n   */\n  getMessage(name, required = false) {\n    const option = this._getTypedOption(name, '_MESSAGE', ['message'], required);\n    return option?.message ?? null;\n  }\n}\n\nmodule.exports = CommandInteractionOptionResolver;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ContextMenuInteraction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ContextMenuInteraction.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseCommandInteraction = __webpack_require__(/*! ./BaseCommandInteraction */ \"./node_modules/discord.js/src/structures/BaseCommandInteraction.js\");\nconst CommandInteractionOptionResolver = __webpack_require__(/*! ./CommandInteractionOptionResolver */ \"./node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js\");\nconst { ApplicationCommandOptionTypes, ApplicationCommandTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Represents a context menu interaction.\n * @extends {BaseCommandInteraction}\n */\nclass ContextMenuInteraction extends BaseCommandInteraction {\n  constructor(client, data) {\n    super(client, data);\n    /**\n     * The target of the interaction, parsed into options\n     * @type {CommandInteractionOptionResolver}\n     */\n    this.options = new CommandInteractionOptionResolver(\n      this.client,\n      this.resolveContextMenuOptions(data.data),\n      this.transformResolved(data.data.resolved),\n    );\n\n    /**\n     * The id of the target of the interaction\n     * @type {Snowflake}\n     */\n    this.targetId = data.data.target_id;\n\n    /**\n     * The type of the target of the interaction; either USER or MESSAGE\n     * @type {ApplicationCommandType}\n     */\n    this.targetType = ApplicationCommandTypes[data.data.type];\n  }\n\n  /**\n   * Resolves and transforms options received from the API for a context menu interaction.\n   * @param {APIApplicationCommandInteractionData} data The interaction data\n   * @returns {CommandInteractionOption[]}\n   * @private\n   */\n  resolveContextMenuOptions({ target_id, resolved }) {\n    const result = [];\n\n    if (resolved.users?.[target_id]) {\n      result.push(\n        this.transformOption({ name: 'user', type: ApplicationCommandOptionTypes.USER, value: target_id }, resolved),\n      );\n    }\n\n    if (resolved.messages?.[target_id]) {\n      result.push({\n        name: 'message',\n        type: '_MESSAGE',\n        value: target_id,\n        message: this.channel?.messages._add(resolved.messages[target_id]) ?? resolved.messages[target_id],\n      });\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = ContextMenuInteraction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ContextMenuInteraction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/DMChannel.js":
/*!*************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/DMChannel.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Channel = __webpack_require__(/*! ./Channel */ \"./node_modules/discord.js/src/structures/Channel.js\");\nconst TextBasedChannel = __webpack_require__(/*! ./interfaces/TextBasedChannel */ \"./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js\");\nconst MessageManager = __webpack_require__(/*! ../managers/MessageManager */ \"./node_modules/discord.js/src/managers/MessageManager.js\");\n\n/**\n * Represents a direct message channel between two users.\n * @extends {Channel}\n * @implements {TextBasedChannel}\n */\nclass DMChannel extends Channel {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIChannel} data The data for the DM channel\n   */\n  constructor(client, data) {\n    super(client, data);\n\n    // Override the channel type so partials have a known type\n    this.type = 'DM';\n\n    /**\n     * A manager of the messages belonging to this channel\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if (data.recipients) {\n      /**\n       * The recipient on the other end of the DM\n       * @type {User}\n       */\n      this.recipient = this.client.users._add(data.recipients[0]);\n    }\n\n    /**\n     * The channel's last message id, if one was sent\n     * @type {?Snowflake}\n     */\n    this.lastMessageId = data.last_message_id;\n\n    /**\n     * The timestamp when the last pinned message was pinned, if there was one\n     * @type {?number}\n     */\n    this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;\n  }\n\n  /**\n   * Whether this DMChannel is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.lastMessageId === 'undefined';\n  }\n\n  /**\n   * Fetch this DMChannel.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<DMChannel>}\n   */\n  fetch(force = true) {\n    return this.recipient.createDM(force);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the recipient's mention instead of the\n   * DMChannel object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${channel}!`);\n   */\n  toString() {\n    return this.recipient.toString();\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  // Doesn't work on DM channels; bulkDelete() {}\n}\n\nTextBasedChannel.applyToClass(DMChannel, true, ['bulkDelete']);\n\nmodule.exports = DMChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/DMChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Emoji.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Emoji.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents raw emoji data from the API\n * @typedef {APIEmoji} RawEmoji\n * @property {?Snowflake} id The emoji's id\n * @property {?string} name The emoji's name\n * @property {?boolean} animated Whether the emoji is animated\n */\n\n/**\n * Represents an emoji, see {@link GuildEmoji} and {@link ReactionEmoji}.\n * @extends {Base}\n */\nclass Emoji extends Base {\n  constructor(client, emoji) {\n    super(client);\n    /**\n     * Whether or not the emoji is animated\n     * @type {?boolean}\n     */\n    this.animated = emoji.animated ?? null;\n\n    /**\n     * The emoji's name\n     * @type {?string}\n     */\n    this.name = emoji.name ?? null;\n\n    /**\n     * The emoji's id\n     * @type {?Snowflake}\n     */\n    this.id = emoji.id;\n\n    /**\n     * Whether this emoji has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n  }\n\n  /**\n   * The identifier of this emoji, used for message reactions\n   * @type {string}\n   * @readonly\n   */\n  get identifier() {\n    if (this.id) return `${this.animated ? 'a:' : ''}${this.name}:${this.id}`;\n    return encodeURIComponent(this.name);\n  }\n\n  /**\n   * The URL to the emoji file if its a custom emoji\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.id && this.client.rest.cdn.Emoji(this.id, this.animated ? 'gif' : 'png');\n  }\n\n  /**\n   * The timestamp the emoji was created at, or null if unicode\n   * @type {?number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return this.id && SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the emoji was created at, or null if unicode\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.id && new Date(this.createdTimestamp);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the text required to form a graphical emoji on Discord\n   * instead of the Emoji object.\n   * @returns {string}\n   * @example\n   * // Send a custom emoji from a guild:\n   * const emoji = guild.emojis.cache.first();\n   * msg.channel.send(`Hello! ${emoji}`);\n   * @example\n   * // Send the emoji used in a reaction to the channel the reaction is part of\n   * reaction.message.channel.send(`The emoji used was: ${reaction.emoji}`);\n   */\n  toString() {\n    return this.id ? `<${this.animated ? 'a' : ''}:${this.name}:${this.id}>` : this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      guild: 'guildId',\n      createdTimestamp: true,\n      url: true,\n      identifier: true,\n    });\n  }\n}\n\nmodule.exports = Emoji;\n\n/**\n * @external APIEmoji\n * @see {@link https://discord.com/developers/docs/resources/emoji#emoji-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Emoji.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Guild.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Guild.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst AnonymousGuild = __webpack_require__(/*! ./AnonymousGuild */ \"./node_modules/discord.js/src/structures/AnonymousGuild.js\");\nconst GuildAuditLogs = __webpack_require__(/*! ./GuildAuditLogs */ \"./node_modules/discord.js/src/structures/GuildAuditLogs.js\");\nconst GuildPreview = __webpack_require__(/*! ./GuildPreview */ \"./node_modules/discord.js/src/structures/GuildPreview.js\");\nconst GuildTemplate = __webpack_require__(/*! ./GuildTemplate */ \"./node_modules/discord.js/src/structures/GuildTemplate.js\");\nconst Integration = __webpack_require__(/*! ./Integration */ \"./node_modules/discord.js/src/structures/Integration.js\");\nconst Webhook = __webpack_require__(/*! ./Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\");\nconst WelcomeScreen = __webpack_require__(/*! ./WelcomeScreen */ \"./node_modules/discord.js/src/structures/WelcomeScreen.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst GuildApplicationCommandManager = __webpack_require__(/*! ../managers/GuildApplicationCommandManager */ \"./node_modules/discord.js/src/managers/GuildApplicationCommandManager.js\");\nconst GuildBanManager = __webpack_require__(/*! ../managers/GuildBanManager */ \"./node_modules/discord.js/src/managers/GuildBanManager.js\");\nconst GuildChannelManager = __webpack_require__(/*! ../managers/GuildChannelManager */ \"./node_modules/discord.js/src/managers/GuildChannelManager.js\");\nconst GuildEmojiManager = __webpack_require__(/*! ../managers/GuildEmojiManager */ \"./node_modules/discord.js/src/managers/GuildEmojiManager.js\");\nconst GuildInviteManager = __webpack_require__(/*! ../managers/GuildInviteManager */ \"./node_modules/discord.js/src/managers/GuildInviteManager.js\");\nconst GuildMemberManager = __webpack_require__(/*! ../managers/GuildMemberManager */ \"./node_modules/discord.js/src/managers/GuildMemberManager.js\");\nconst GuildStickerManager = __webpack_require__(/*! ../managers/GuildStickerManager */ \"./node_modules/discord.js/src/managers/GuildStickerManager.js\");\nconst PresenceManager = __webpack_require__(/*! ../managers/PresenceManager */ \"./node_modules/discord.js/src/managers/PresenceManager.js\");\nconst RoleManager = __webpack_require__(/*! ../managers/RoleManager */ \"./node_modules/discord.js/src/managers/RoleManager.js\");\nconst StageInstanceManager = __webpack_require__(/*! ../managers/StageInstanceManager */ \"./node_modules/discord.js/src/managers/StageInstanceManager.js\");\nconst VoiceStateManager = __webpack_require__(/*! ../managers/VoiceStateManager */ \"./node_modules/discord.js/src/managers/VoiceStateManager.js\");\nconst {\n  ChannelTypes,\n  DefaultMessageNotificationLevels,\n  PartialTypes,\n  VerificationLevels,\n  ExplicitContentFilterLevels,\n  Status,\n  MFALevels,\n  PremiumTiers,\n} = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\nconst SystemChannelFlags = __webpack_require__(/*! ../util/SystemChannelFlags */ \"./node_modules/discord.js/src/util/SystemChannelFlags.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a guild (or a server) on Discord.\n * <info>It's recommended to see if a guild is available before performing operations or reading data from it. You can\n * check this with {@link Guild#available}.</info>\n * @extends {AnonymousGuild}\n */\nclass Guild extends AnonymousGuild {\n  constructor(client, data) {\n    super(client, data, false);\n\n    /**\n     * A manager of the application commands belonging to this guild\n     * @type {GuildApplicationCommandManager}\n     */\n    this.commands = new GuildApplicationCommandManager(this);\n\n    /**\n     * A manager of the members belonging to this guild\n     * @type {GuildMemberManager}\n     */\n    this.members = new GuildMemberManager(this);\n\n    /**\n     * A manager of the channels belonging to this guild\n     * @type {GuildChannelManager}\n     */\n    this.channels = new GuildChannelManager(this);\n\n    /**\n     * A manager of the bans belonging to this guild\n     * @type {GuildBanManager}\n     */\n    this.bans = new GuildBanManager(this);\n\n    /**\n     * A manager of the roles belonging to this guild\n     * @type {RoleManager}\n     */\n    this.roles = new RoleManager(this);\n\n    /**\n     * A manager of the presences belonging to this guild\n     * @type {PresenceManager}\n     */\n    this.presences = new PresenceManager(this.client);\n\n    /**\n     * A manager of the voice states of this guild\n     * @type {VoiceStateManager}\n     */\n    this.voiceStates = new VoiceStateManager(this);\n\n    /**\n     * A manager of the stage instances of this guild\n     * @type {StageInstanceManager}\n     */\n    this.stageInstances = new StageInstanceManager(this);\n\n    /**\n     * A manager of the invites of this guild\n     * @type {GuildInviteManager}\n     */\n    this.invites = new GuildInviteManager(this);\n\n    /**\n     * Whether the bot has been removed from the guild\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    if (!data) return;\n    if (data.unavailable) {\n      /**\n       * Whether the guild is available to access. If it is not available, it indicates a server outage\n       * @type {boolean}\n       */\n      this.available = false;\n    } else {\n      this._patch(data);\n      if (!data.channels) this.available = false;\n    }\n\n    /**\n     * The id of the shard this Guild belongs to.\n     * @type {number}\n     */\n    this.shardId = data.shardId;\n  }\n\n  /**\n   * The Shard this Guild belongs to.\n   * @type {WebSocketShard}\n   * @readonly\n   */\n  get shard() {\n    return this.client.ws.shards.get(this.shardId);\n  }\n\n  /**\n   * Sets up the guild.\n   * @param {*} data The raw data of the guild\n   * @private\n   */\n  _patch(data) {\n    super._patch(data);\n    this.id = data.id;\n    this.name = data.name;\n    this.icon = data.icon;\n    this.available = !data.unavailable;\n\n    /**\n     * The hash of the guild discovery splash image\n     * @type {?string}\n     */\n    this.discoverySplash = data.discovery_splash;\n\n    /**\n     * The full amount of members in this guild\n     * @type {number}\n     */\n    this.memberCount = data.member_count ?? this.memberCount;\n\n    /**\n     * Whether the guild is \"large\" (has more than large_threshold members, 50 by default)\n     * @type {boolean}\n     */\n    this.large = Boolean(data.large ?? this.large);\n\n    /**\n     * An array of enabled guild features, here are the possible values:\n     * * ANIMATED_ICON\n     * * BANNER\n     * * COMMERCE\n     * * COMMUNITY\n     * * DISCOVERABLE\n     * * FEATURABLE\n     * * INVITE_SPLASH\n     * * MEMBER_VERIFICATION_GATE_ENABLED\n     * * NEWS\n     * * PARTNERED\n     * * PREVIEW_ENABLED\n     * * VANITY_URL\n     * * VERIFIED\n     * * VIP_REGIONS\n     * * WELCOME_SCREEN_ENABLED\n     * * TICKETED_EVENTS_ENABLED\n     * * MONETIZATION_ENABLED\n     * * MORE_STICKERS\n     * * THREE_DAY_THREAD_ARCHIVE\n     * * SEVEN_DAY_THREAD_ARCHIVE\n     * * PRIVATE_THREADS\n     * @typedef {string} Features\n     * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-guild-features}\n     */\n\n    /**\n     * The id of the application that created this guild (if applicable)\n     * @type {?Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The time in seconds before a user is counted as \"away from keyboard\"\n     * @type {?number}\n     */\n    this.afkTimeout = data.afk_timeout;\n\n    /**\n     * The id of the voice channel where AFK members are moved\n     * @type {?Snowflake}\n     */\n    this.afkChannelId = data.afk_channel_id;\n\n    /**\n     * The system channel's id\n     * @type {?Snowflake}\n     */\n    this.systemChannelId = data.system_channel_id;\n\n    /**\n     * The premium tier of this guild\n     * @type {PremiumTier}\n     */\n    this.premiumTier = PremiumTiers[data.premium_tier];\n\n    if (typeof data.premium_subscription_count !== 'undefined') {\n      /**\n       * The total number of boosts for this server\n       * @type {?number}\n       */\n      this.premiumSubscriptionCount = data.premium_subscription_count;\n    }\n\n    if (typeof data.widget_enabled !== 'undefined') {\n      /**\n       * Whether widget images are enabled on this guild\n       * @type {?boolean}\n       */\n      this.widgetEnabled = data.widget_enabled;\n    }\n\n    if (typeof data.widget_channel_id !== 'undefined') {\n      /**\n       * The widget channel's id, if enabled\n       * @type {?string}\n       */\n      this.widgetChannelId = data.widget_channel_id;\n    }\n\n    /**\n     * The explicit content filter level of the guild\n     * @type {ExplicitContentFilterLevel}\n     */\n    this.explicitContentFilter = ExplicitContentFilterLevels[data.explicit_content_filter];\n\n    /**\n     * The required MFA level for this guild\n     * @type {MFALevel}\n     */\n    this.mfaLevel = MFALevels[data.mfa_level];\n\n    /**\n     * The timestamp the client user joined the guild at\n     * @type {number}\n     */\n    this.joinedTimestamp = data.joined_at ? new Date(data.joined_at).getTime() : this.joinedTimestamp;\n\n    /**\n     * The default message notification level of the guild\n     * @type {DefaultMessageNotificationLevel}\n     */\n    this.defaultMessageNotifications = DefaultMessageNotificationLevels[data.default_message_notifications];\n\n    /**\n     * The value set for the guild's system channel flags\n     * @type {Readonly<SystemChannelFlags>}\n     */\n    this.systemChannelFlags = new SystemChannelFlags(data.system_channel_flags).freeze();\n\n    if (typeof data.max_members !== 'undefined') {\n      /**\n       * The maximum amount of members the guild can have\n       * @type {?number}\n       */\n      this.maximumMembers = data.max_members;\n    } else if (typeof this.maximumMembers === 'undefined') {\n      this.maximumMembers = null;\n    }\n\n    if (typeof data.max_presences !== 'undefined') {\n      /**\n       * The maximum amount of presences the guild can have\n       * <info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>\n       * @type {?number}\n       */\n      this.maximumPresences = data.max_presences ?? 25000;\n    } else if (typeof this.maximumPresences === 'undefined') {\n      this.maximumPresences = null;\n    }\n\n    if (typeof data.approximate_member_count !== 'undefined') {\n      /**\n       * The approximate amount of members the guild has\n       * <info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>\n       * @type {?number}\n       */\n      this.approximateMemberCount = data.approximate_member_count;\n    } else if (typeof this.approximateMemberCount === 'undefined') {\n      this.approximateMemberCount = null;\n    }\n\n    if (typeof data.approximate_presence_count !== 'undefined') {\n      /**\n       * The approximate amount of presences the guild has\n       * <info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>\n       * @type {?number}\n       */\n      this.approximatePresenceCount = data.approximate_presence_count;\n    } else if (typeof this.approximatePresenceCount === 'undefined') {\n      this.approximatePresenceCount = null;\n    }\n\n    /**\n     * The use count of the vanity URL code of the guild, if any\n     * <info>You will need to fetch this parameter using {@link Guild#fetchVanityData} if you want to receive it</info>\n     * @type {?number}\n     */\n    this.vanityURLUses = null;\n\n    /**\n     * The rules channel's id for the guild\n     * @type {?Snowflake}\n     */\n    this.rulesChannelId = data.rules_channel_id;\n\n    /**\n     * The community updates channel's id for the guild\n     * @type {?Snowflake}\n     */\n    this.publicUpdatesChannelId = data.public_updates_channel_id;\n\n    /**\n     * The preferred locale of the guild, defaults to `en-US`\n     * @type {string}\n     * @see {@link https://discord.com/developers/docs/dispatch/field-values#predefined-field-values-accepted-locales}\n     */\n    this.preferredLocale = data.preferred_locale;\n\n    if (data.channels) {\n      this.channels.cache.clear();\n      for (const rawChannel of data.channels) {\n        this.client.channels._add(rawChannel, this);\n      }\n    }\n\n    if (data.threads) {\n      for (const rawThread of data.threads) {\n        this.client.channels._add(rawThread, this);\n      }\n    }\n\n    if (data.roles) {\n      this.roles.cache.clear();\n      for (const role of data.roles) this.roles._add(role);\n    }\n\n    if (data.members) {\n      this.members.cache.clear();\n      for (const guildUser of data.members) this.members._add(guildUser);\n    }\n\n    if (data.owner_id) {\n      /**\n       * The user id of this guild's owner\n       * @type {Snowflake}\n       */\n      this.ownerId = data.owner_id;\n    }\n\n    if (data.presences) {\n      for (const presence of data.presences) {\n        this.presences._add(Object.assign(presence, { guild: this }));\n      }\n    }\n\n    if (data.stage_instances) {\n      this.stageInstances.cache.clear();\n      for (const stageInstance of data.stage_instances) {\n        this.stageInstances._add(stageInstance);\n      }\n    }\n\n    if (data.voice_states) {\n      this.voiceStates.cache.clear();\n      for (const voiceState of data.voice_states) {\n        this.voiceStates._add(voiceState);\n      }\n    }\n\n    if (!this.emojis) {\n      /**\n       * A manager of the emojis belonging to this guild\n       * @type {GuildEmojiManager}\n       */\n      this.emojis = new GuildEmojiManager(this);\n      if (data.emojis) for (const emoji of data.emojis) this.emojis._add(emoji);\n    } else if (data.emojis) {\n      this.client.actions.GuildEmojisUpdate.handle({\n        guild_id: this.id,\n        emojis: data.emojis,\n      });\n    }\n\n    if (!this.stickers) {\n      /**\n       * A manager of the stickers belonging to this guild\n       * @type {GuildStickerManager}\n       */\n      this.stickers = new GuildStickerManager(this);\n      if (data.stickers) for (const sticker of data.stickers) this.stickers._add(sticker);\n    } else if (data.stickers) {\n      this.client.actions.GuildStickersUpdate.handle({\n        guild_id: this.id,\n        stickers: data.stickers,\n      });\n    }\n  }\n\n  /**\n   * The URL to this guild's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  bannerURL({ format, size } = {}) {\n    return this.banner && this.client.rest.cdn.Banner(this.id, this.banner, format, size);\n  }\n\n  /**\n   * The time the client user joined the guild\n   * @type {Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return new Date(this.joinedTimestamp);\n  }\n\n  /**\n   * The URL to this guild's invite splash image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  splashURL({ format, size } = {}) {\n    return this.splash && this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n\n  /**\n   * The URL to this guild's discovery splash image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  discoverySplashURL({ format, size } = {}) {\n    return this.discoverySplash && this.client.rest.cdn.DiscoverySplash(this.id, this.discoverySplash, format, size);\n  }\n\n  /**\n   * Options used to fetch the owner of a guild or a thread.\n   * @typedef {Object} FetchOwnerOptions\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Fetches the owner of the guild.\n   * If the member object isn't needed, use {@link Guild#ownerId} instead.\n   * @param {FetchOwnerOptions} [options] The options for fetching the member\n   * @returns {Promise<GuildMember>}\n   */\n  fetchOwner(options) {\n    return this.members.fetch({ ...options, user: this.ownerId });\n  }\n\n  /**\n   * AFK voice channel for this guild\n   * @type {?VoiceChannel}\n   * @readonly\n   */\n  get afkChannel() {\n    return this.client.channels.resolve(this.afkChannelId);\n  }\n\n  /**\n   * System channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get systemChannel() {\n    return this.client.channels.resolve(this.systemChannelId);\n  }\n\n  /**\n   * Widget channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get widgetChannel() {\n    return this.client.channels.resolve(this.widgetChannelId);\n  }\n\n  /**\n   * Rules channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get rulesChannel() {\n    return this.client.channels.resolve(this.rulesChannelId);\n  }\n\n  /**\n   * Public updates channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get publicUpdatesChannel() {\n    return this.client.channels.resolve(this.publicUpdatesChannelId);\n  }\n\n  /**\n   * The client user as a GuildMember of this guild\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get me() {\n    return (\n      this.members.resolve(this.client.user.id) ??\n      (this.client.options.partials.includes(PartialTypes.GUILD_MEMBER)\n        ? this.members._add({ user: { id: this.client.user.id } }, true)\n        : null)\n    );\n  }\n\n  /**\n   * Fetches a collection of integrations to this guild.\n   * Resolves with a collection mapping integrations by their ids.\n   * @returns {Promise<Collection<string, Integration>>}\n   * @example\n   * // Fetch integrations\n   * guild.fetchIntegrations()\n   *   .then(integrations => console.log(`Fetched ${integrations.size} integrations`))\n   *   .catch(console.error);\n   */\n  async fetchIntegrations() {\n    const data = await this.client.api.guilds(this.id).integrations.get();\n    return data.reduce(\n      (collection, integration) => collection.set(integration.id, new Integration(this.client, integration, this)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Fetches a collection of templates from this guild.\n   * Resolves with a collection mapping templates by their codes.\n   * @returns {Promise<Collection<string, GuildTemplate>>}\n   */\n  async fetchTemplates() {\n    const templates = await this.client.api.guilds(this.id).templates.get();\n    return templates.reduce((col, data) => col.set(data.code, new GuildTemplate(this.client, data)), new Collection());\n  }\n\n  /**\n   * Fetches the welcome screen for this guild.\n   * @returns {Promise<WelcomeScreen>}\n   */\n  async fetchWelcomeScreen() {\n    const data = await this.client.api.guilds(this.id, 'welcome-screen').get();\n    return new WelcomeScreen(this, data);\n  }\n\n  /**\n   * Creates a template for the guild.\n   * @param {string} name The name for the template\n   * @param {string} [description] The description for the template\n   * @returns {Promise<GuildTemplate>}\n   */\n  async createTemplate(name, description) {\n    const data = await this.client.api.guilds(this.id).templates.post({ data: { name, description } });\n    return new GuildTemplate(this.client, data);\n  }\n\n  /**\n   * Obtains a guild preview for this guild from Discord.\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetchPreview() {\n    const data = await this.client.api.guilds(this.id).preview.get();\n    return new GuildPreview(this.client, data);\n  }\n\n  /**\n   * An object containing information about a guild's vanity invite.\n   * @typedef {Object} Vanity\n   * @property {?string} code Vanity invite code\n   * @property {?number} uses How many times this invite has been used\n   */\n\n  /**\n   * Fetches the vanity url invite object to this guild.\n   * Resolves with an object containing the vanity url invite code and the use count\n   * @returns {Promise<Vanity>}\n   * @example\n   * // Fetch invite data\n   * guild.fetchVanityData()\n   *   .then(res => {\n   *     console.log(`Vanity URL: https://discord.gg/${res.code} with ${res.uses} uses`);\n   *   })\n   *   .catch(console.error);\n   */\n  async fetchVanityData() {\n    if (!this.features.includes('VANITY_URL')) {\n      throw new Error('VANITY_URL');\n    }\n    const data = await this.client.api.guilds(this.id, 'vanity-url').get();\n    this.vanityURLCode = data.code;\n    this.vanityURLUses = data.uses;\n\n    return data;\n  }\n\n  /**\n   * Fetches all webhooks for the guild.\n   * @returns {Promise<Collection<Snowflake, Webhook>>}\n   * @example\n   * // Fetch webhooks\n   * guild.fetchWebhooks()\n   *   .then(webhooks => console.log(`Fetched ${webhooks.size} webhooks`))\n   *   .catch(console.error);\n   */\n  async fetchWebhooks() {\n    const apiHooks = await this.client.api.guilds(this.id).webhooks.get();\n    const hooks = new Collection();\n    for (const hook of apiHooks) hooks.set(hook.id, new Webhook(this.client, hook));\n    return hooks;\n  }\n\n  /**\n   * Fetches the guild widget data, requires the widget to be enabled.\n   * @returns {Promise<Widget>}\n   * @example\n   * // Fetches the guild widget data\n   * guild.fetchWidget()\n   *   .then(widget => console.log(`The widget shows ${widget.channels.size} channels`))\n   *   .catch(console.error);\n   */\n  fetchWidget() {\n    return this.client.fetchGuildWidget(this.id);\n  }\n\n  /**\n   * Data for the Guild Widget Settings object\n   * @typedef {Object} GuildWidgetSettings\n   * @property {boolean} enabled Whether the widget is enabled\n   * @property {?GuildChannel} channel The widget invite channel\n   */\n\n  /**\n   * The Guild Widget Settings object\n   * @typedef {Object} GuildWidgetSettingsData\n   * @property {boolean} enabled Whether the widget is enabled\n   * @property {?GuildChannelResolvable} channel The widget invite channel\n   */\n\n  /**\n   * Fetches the guild widget settings.\n   * @returns {Promise<GuildWidgetSettings>}\n   * @example\n   * // Fetches the guild widget settings\n   * guild.fetchWidgetSettings()\n   *   .then(widget => console.log(`The widget is ${widget.enabled ? 'enabled' : 'disabled'}`))\n   *   .catch(console.error);\n   */\n  async fetchWidgetSettings() {\n    const data = await this.client.api.guilds(this.id).widget.get();\n    this.widgetEnabled = data.enabled;\n    this.widgetChannelId = data.channel_id;\n    return {\n      enabled: data.enabled,\n      channel: data.channel_id ? this.channels.cache.get(data.channel_id) : null,\n    };\n  }\n\n  /**\n   * Options used to fetch audit logs.\n   * @typedef {Object} GuildAuditLogsFetchOptions\n   * @property {Snowflake|GuildAuditLogsEntry} [before] Only return entries before this entry\n   * @property {number} [limit] The number of entries to return\n   * @property {UserResolvable} [user] Only return entries for actions made by this user\n   * @property {AuditLogAction|number} [type] Only return entries for this action type\n   */\n\n  /**\n   * Fetches audit logs for this guild.\n   * @param {GuildAuditLogsFetchOptions} [options={}] Options for fetching audit logs\n   * @returns {Promise<GuildAuditLogs>}\n   * @example\n   * // Output audit log entries\n   * guild.fetchAuditLogs()\n   *   .then(audit => console.log(audit.entries.first()))\n   *   .catch(console.error);\n   */\n  async fetchAuditLogs(options = {}) {\n    if (options.before && options.before instanceof GuildAuditLogs.Entry) options.before = options.before.id;\n    if (typeof options.type === 'string') options.type = GuildAuditLogs.Actions[options.type];\n\n    const data = await this.client.api.guilds(this.id)['audit-logs'].get({\n      query: {\n        before: options.before,\n        limit: options.limit,\n        user_id: this.client.users.resolveId(options.user),\n        action_type: options.type,\n      },\n    });\n    return GuildAuditLogs.build(this, data);\n  }\n\n  /**\n   * The data for editing a guild.\n   * @typedef {Object} GuildEditData\n   * @property {string} [name] The name of the guild\n   * @property {VerificationLevel|number} [verificationLevel] The verification level of the guild\n   * @property {ExplicitContentFilterLevel|number} [explicitContentFilter] The level of the explicit content filter\n   * @property {VoiceChannelResolvable} [afkChannel] The AFK channel of the guild\n   * @property {TextChannelResolvable} [systemChannel] The system channel of the guild\n   * @property {number} [afkTimeout] The AFK timeout of the guild\n   * @property {Base64Resolvable} [icon] The icon of the guild\n   * @property {GuildMemberResolvable} [owner] The owner of the guild\n   * @property {Base64Resolvable} [splash] The invite splash image of the guild\n   * @property {Base64Resolvable} [discoverySplash] The discovery splash image of the guild\n   * @property {Base64Resolvable} [banner] The banner of the guild\n   * @property {DefaultMessageNotificationLevel|number} [defaultMessageNotifications] The default message notification\n   * level of the guild\n   * @property {SystemChannelFlagsResolvable} [systemChannelFlags] The system channel flags of the guild\n   * @property {TextChannelResolvable} [rulesChannel] The rules channel of the guild\n   * @property {TextChannelResolvable} [publicUpdatesChannel] The community updates channel of the guild\n   * @property {string} [preferredLocale] The preferred locale of the guild\n   * @property {string} [description] The discovery description of the guild\n   * @property {Features[]} [features] The features of the guild\n   */\n\n  /**\n   * Data that can be resolved to a Text Channel object. This can be:\n   * * A TextChannel\n   * * A Snowflake\n   * @typedef {TextChannel|Snowflake} TextChannelResolvable\n   */\n\n  /**\n   * Data that can be resolved to a Voice Channel object. This can be:\n   * * A VoiceChannel\n   * * A Snowflake\n   * @typedef {VoiceChannel|Snowflake} VoiceChannelResolvable\n   */\n\n  /**\n   * Updates the guild with new information - e.g. a new name.\n   * @param {GuildEditData} data The data to update the guild with\n   * @param {string} [reason] Reason for editing this guild\n   * @returns {Promise<Guild>}\n   * @example\n   * // Set the guild name\n   * guild.edit({\n   *   name: 'Discord Guild',\n   * })\n   *   .then(updated => console.log(`New guild name ${updated}`))\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    const _data = {};\n    if (data.name) _data.name = data.name;\n    if (typeof data.verificationLevel !== 'undefined') {\n      _data.verification_level =\n        typeof data.verificationLevel === 'number'\n          ? data.verificationLevel\n          : VerificationLevels[data.verificationLevel];\n    }\n    if (typeof data.afkChannel !== 'undefined') {\n      _data.afk_channel_id = this.client.channels.resolveId(data.afkChannel);\n    }\n    if (typeof data.systemChannel !== 'undefined') {\n      _data.system_channel_id = this.client.channels.resolveId(data.systemChannel);\n    }\n    if (data.afkTimeout) _data.afk_timeout = Number(data.afkTimeout);\n    if (typeof data.icon !== 'undefined') _data.icon = data.icon;\n    if (data.owner) _data.owner_id = this.client.users.resolveId(data.owner);\n    if (data.splash) _data.splash = data.splash;\n    if (data.discoverySplash) _data.discovery_splash = data.discoverySplash;\n    if (data.banner) _data.banner = data.banner;\n    if (typeof data.explicitContentFilter !== 'undefined') {\n      _data.explicit_content_filter =\n        typeof data.explicitContentFilter === 'number'\n          ? data.explicitContentFilter\n          : ExplicitContentFilterLevels[data.explicitContentFilter];\n    }\n    if (typeof data.defaultMessageNotifications !== 'undefined') {\n      _data.default_message_notifications =\n        typeof data.defaultMessageNotifications === 'number'\n          ? data.defaultMessageNotifications\n          : DefaultMessageNotificationLevels[data.defaultMessageNotifications];\n    }\n    if (typeof data.systemChannelFlags !== 'undefined') {\n      _data.system_channel_flags = SystemChannelFlags.resolve(data.systemChannelFlags);\n    }\n    if (typeof data.rulesChannel !== 'undefined') {\n      _data.rules_channel_id = this.client.channels.resolveId(data.rulesChannel);\n    }\n    if (typeof data.publicUpdatesChannel !== 'undefined') {\n      _data.public_updates_channel_id = this.client.channels.resolveId(data.publicUpdatesChannel);\n    }\n    if (typeof data.features !== 'undefined') {\n      _data.features = data.features;\n    }\n    if (typeof data.description !== 'undefined') {\n      _data.description = data.description;\n    }\n    if (data.preferredLocale) _data.preferred_locale = data.preferredLocale;\n    const newData = await this.client.api.guilds(this.id).patch({ data: _data, reason });\n    return this.client.actions.GuildUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Welcome channel data\n   * @typedef {Object} WelcomeChannelData\n   * @property {string} description The description to show for this welcome channel\n   * @property {GuildTextChannelResolvable} channel The channel to link for this welcome channel\n   * @property {EmojiIdentifierResolvable} [emoji] The emoji to display for this welcome channel\n   */\n\n  /**\n   * Welcome screen edit data\n   * @typedef {Object} WelcomeScreenEditData\n   * @property {boolean} [enabled] Whether the welcome screen is enabled\n   * @property {string} [description] The description for the welcome screen\n   * @property {WelcomeChannelData[]} [welcomeChannels] The welcome channel data for the welcome screen\n   */\n\n  /**\n   * Data that can be resolved to a GuildTextChannel object. This can be:\n   * * A TextChannel\n   * * A NewsChannel\n   * * A Snowflake\n   * @typedef {TextChannel|NewsChannel|Snowflake} GuildTextChannelResolvable\n   */\n\n  /**\n   * Data that can be resolved to a GuildVoiceChannel object. This can be:\n   * * A VoiceChannel\n   * * A StageChannel\n   * * A Snowflake\n   * @typedef {VoiceChannel|StageChannel|Snowflake} GuildVoiceChannelResolvable\n   */\n\n  /**\n   * Updates the guild's welcome screen\n   * @param {WelcomeScreenEditData} data Data to edit the welcome screen with\n   * @returns {Promise<WelcomeScreen>}\n   * @example\n   * guild.editWelcomeScreen({\n   *   description: 'Hello World',\n   *   enabled: true,\n   *   welcomeChannels: [\n   *     {\n   *       description: 'foobar',\n   *       channel: '222197033908436994',\n   *     }\n   *   ],\n   * })\n   */\n  async editWelcomeScreen(data) {\n    const { enabled, description, welcomeChannels } = data;\n    const welcome_channels = welcomeChannels?.map(welcomeChannelData => {\n      const emoji = this.emojis.resolve(welcomeChannelData.emoji);\n      return {\n        emoji_id: emoji && emoji.id,\n        emoji_name: emoji?.name ?? welcomeChannelData.emoji,\n        channel_id: this.channels.resolveId(welcomeChannelData.channel),\n        description: welcomeChannelData.description,\n      };\n    });\n\n    const patchData = await this.client.api.guilds(this.id, 'welcome-screen').patch({\n      data: {\n        welcome_channels,\n        description,\n        enabled,\n      },\n    });\n    return new WelcomeScreen(this, patchData);\n  }\n\n  /**\n   * Edits the level of the explicit content filter.\n   * @param {ExplicitContentFilterLevel|number} explicitContentFilter The new level of the explicit content filter\n   * @param {string} [reason] Reason for changing the level of the guild's explicit content filter\n   * @returns {Promise<Guild>}\n   */\n  setExplicitContentFilter(explicitContentFilter, reason) {\n    return this.edit({ explicitContentFilter }, reason);\n  }\n\n  /* eslint-disable max-len */\n  /**\n   * Edits the setting of the default message notifications of the guild.\n   * @param {DefaultMessageNotificationLevel|number} defaultMessageNotifications The new default message notification level of the guild\n   * @param {string} [reason] Reason for changing the setting of the default message notifications\n   * @returns {Promise<Guild>}\n   */\n  setDefaultMessageNotifications(defaultMessageNotifications, reason) {\n    return this.edit({ defaultMessageNotifications }, reason);\n  }\n  /* eslint-enable max-len */\n\n  /**\n   * Edits the flags of the default message notifications of the guild.\n   * @param {SystemChannelFlagsResolvable} systemChannelFlags The new flags for the default message notifications\n   * @param {string} [reason] Reason for changing the flags of the default message notifications\n   * @returns {Promise<Guild>}\n   */\n  setSystemChannelFlags(systemChannelFlags, reason) {\n    return this.edit({ systemChannelFlags }, reason);\n  }\n\n  /**\n   * Edits the name of the guild.\n   * @param {string} name The new name of the guild\n   * @param {string} [reason] Reason for changing the guild's name\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild name\n   * guild.setName('Discord Guild')\n   *  .then(updated => console.log(`Updated guild name to ${updated.name}`))\n   *  .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Edits the verification level of the guild.\n   * @param {VerificationLevel|number} verificationLevel The new verification level of the guild\n   * @param {string} [reason] Reason for changing the guild's verification level\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild verification level\n   * guild.setVerificationLevel(1)\n   *  .then(updated => console.log(`Updated guild verification level to ${guild.verificationLevel}`))\n   *  .catch(console.error);\n   */\n  setVerificationLevel(verificationLevel, reason) {\n    return this.edit({ verificationLevel }, reason);\n  }\n\n  /**\n   * Edits the AFK channel of the guild.\n   * @param {VoiceChannelResolvable} afkChannel The new AFK channel\n   * @param {string} [reason] Reason for changing the guild's AFK channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild AFK channel\n   * guild.setAFKChannel(channel)\n   *  .then(updated => console.log(`Updated guild AFK channel to ${guild.afkChannel.name}`))\n   *  .catch(console.error);\n   */\n  setAFKChannel(afkChannel, reason) {\n    return this.edit({ afkChannel }, reason);\n  }\n\n  /**\n   * Edits the system channel of the guild.\n   * @param {TextChannelResolvable} systemChannel The new system channel\n   * @param {string} [reason] Reason for changing the guild's system channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild system channel\n   * guild.setSystemChannel(channel)\n   *  .then(updated => console.log(`Updated guild system channel to ${guild.systemChannel.name}`))\n   *  .catch(console.error);\n   */\n  setSystemChannel(systemChannel, reason) {\n    return this.edit({ systemChannel }, reason);\n  }\n\n  /**\n   * Edits the AFK timeout of the guild.\n   * @param {number} afkTimeout The time in seconds that a user must be idle to be considered AFK\n   * @param {string} [reason] Reason for changing the guild's AFK timeout\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild AFK channel\n   * guild.setAFKTimeout(60)\n   *  .then(updated => console.log(`Updated guild AFK timeout to ${guild.afkTimeout}`))\n   *  .catch(console.error);\n   */\n  setAFKTimeout(afkTimeout, reason) {\n    return this.edit({ afkTimeout }, reason);\n  }\n\n  /**\n   * Sets a new guild icon.\n   * @param {Base64Resolvable|BufferResolvable} icon The new icon of the guild\n   * @param {string} [reason] Reason for changing the guild's icon\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild icon\n   * guild.setIcon('./icon.png')\n   *  .then(updated => console.log('Updated the guild icon'))\n   *  .catch(console.error);\n   */\n  async setIcon(icon, reason) {\n    return this.edit({ icon: await DataResolver.resolveImage(icon) }, reason);\n  }\n\n  /**\n   * Sets a new owner of the guild.\n   * @param {GuildMemberResolvable} owner The new owner of the guild\n   * @param {string} [reason] Reason for setting the new owner\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild owner\n   * guild.setOwner(guild.members.cache.first())\n   *  .then(updated => console.log(`Updated the guild owner to ${updated.owner.displayName}`))\n   *  .catch(console.error);\n   */\n  setOwner(owner, reason) {\n    return this.edit({ owner }, reason);\n  }\n\n  /**\n   * Sets a new guild invite splash image.\n   * @param {Base64Resolvable|BufferResolvable} splash The new invite splash image of the guild\n   * @param {string} [reason] Reason for changing the guild's invite splash image\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild splash\n   * guild.setSplash('./splash.png')\n   *  .then(updated => console.log('Updated the guild splash'))\n   *  .catch(console.error);\n   */\n  async setSplash(splash, reason) {\n    return this.edit({ splash: await DataResolver.resolveImage(splash) }, reason);\n  }\n\n  /**\n   * Sets a new guild discovery splash image.\n   * @param {Base64Resolvable|BufferResolvable} discoverySplash The new discovery splash image of the guild\n   * @param {string} [reason] Reason for changing the guild's discovery splash image\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild discovery splash\n   * guild.setDiscoverySplash('./discoverysplash.png')\n   *   .then(updated => console.log('Updated the guild discovery splash'))\n   *   .catch(console.error);\n   */\n  async setDiscoverySplash(discoverySplash, reason) {\n    return this.edit({ discoverySplash: await DataResolver.resolveImage(discoverySplash) }, reason);\n  }\n\n  /**\n   * Sets a new guild banner.\n   * @param {Base64Resolvable|BufferResolvable} banner The new banner of the guild\n   * @param {string} [reason] Reason for changing the guild's banner\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.setBanner('./banner.png')\n   *  .then(updated => console.log('Updated the guild banner'))\n   *  .catch(console.error);\n   */\n  async setBanner(banner, reason) {\n    return this.edit({ banner: await DataResolver.resolveImage(banner) }, reason);\n  }\n\n  /**\n   * Edits the rules channel of the guild.\n   * @param {TextChannelResolvable} rulesChannel The new rules channel\n   * @param {string} [reason] Reason for changing the guild's rules channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild rules channel\n   * guild.setRulesChannel(channel)\n   *  .then(updated => console.log(`Updated guild rules channel to ${guild.rulesChannel.name}`))\n   *  .catch(console.error);\n   */\n  setRulesChannel(rulesChannel, reason) {\n    return this.edit({ rulesChannel }, reason);\n  }\n\n  /**\n   * Edits the community updates channel of the guild.\n   * @param {TextChannelResolvable} publicUpdatesChannel The new community updates channel\n   * @param {string} [reason] Reason for changing the guild's community updates channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild community updates channel\n   * guild.setPublicUpdatesChannel(channel)\n   *  .then(updated => console.log(`Updated guild community updates channel to ${guild.publicUpdatesChannel.name}`))\n   *  .catch(console.error);\n   */\n  setPublicUpdatesChannel(publicUpdatesChannel, reason) {\n    return this.edit({ publicUpdatesChannel }, reason);\n  }\n\n  /**\n   * Edits the preferred locale of the guild.\n   * @param {string} preferredLocale The new preferred locale of the guild\n   * @param {string} [reason] Reason for changing the guild's preferred locale\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild preferred locale\n   * guild.setPreferredLocale('en-US')\n   *  .then(updated => console.log(`Updated guild preferred locale to ${guild.preferredLocale}`))\n   *  .catch(console.error);\n   */\n  setPreferredLocale(preferredLocale, reason) {\n    return this.edit({ preferredLocale }, reason);\n  }\n\n  /**\n   * Data that can be resolved to give a Category Channel object. This can be:\n   * * A CategoryChannel object\n   * * A Snowflake\n   * @typedef {CategoryChannel|Snowflake} CategoryChannelResolvable\n   */\n\n  /**\n   * The data needed for updating a channel's position.\n   * @typedef {Object} ChannelPosition\n   * @property {GuildChannel|Snowflake} channel Channel to update\n   * @property {number} [position] New position for the channel\n   * @property {CategoryChannelResolvable} [parent] Parent channel for this channel\n   * @property {boolean} [lockPermissions] If the overwrites should be locked to the parents overwrites\n   */\n\n  /**\n   * Batch-updates the guild's channels' positions.\n   * <info>Only one channel's parent can be changed at a time</info>\n   * @param {ChannelPosition[]} channelPositions Channel positions to update\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.setChannelPositions([{ channel: channelId, position: newChannelIndex }])\n   *   .then(guild => console.log(`Updated channel positions for ${guild}`))\n   *   .catch(console.error);\n   */\n  async setChannelPositions(channelPositions) {\n    const updatedChannels = channelPositions.map(r => ({\n      id: this.client.channels.resolveId(r.channel),\n      position: r.position,\n      lock_permissions: r.lockPermissions,\n      parent_id: typeof r.parent !== 'undefined' ? this.channels.resolveId(r.parent) : undefined,\n    }));\n\n    await this.client.api.guilds(this.id).channels.patch({ data: updatedChannels });\n    return this.client.actions.GuildChannelsPositionUpdate.handle({\n      guild_id: this.id,\n      channels: updatedChannels,\n    }).guild;\n  }\n\n  /**\n   * The data needed for updating a guild role's position\n   * @typedef {Object} GuildRolePosition\n   * @property {RoleResolvable} role The role's id\n   * @property {number} position The position to update\n   */\n\n  /**\n   * Batch-updates the guild's role positions\n   * @param {GuildRolePosition[]} rolePositions Role positions to update\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.setRolePositions([{ role: roleId, position: updatedRoleIndex }])\n   *  .then(guild => console.log(`Role positions updated for ${guild}`))\n   *  .catch(console.error);\n   */\n  async setRolePositions(rolePositions) {\n    // Make sure rolePositions are prepared for API\n    rolePositions = rolePositions.map(o => ({\n      id: this.roles.resolveId(o.role),\n      position: o.position,\n    }));\n\n    // Call the API to update role positions\n    await this.client.api.guilds(this.id).roles.patch({\n      data: rolePositions,\n    });\n    return this.client.actions.GuildRolesPositionUpdate.handle({\n      guild_id: this.id,\n      roles: rolePositions,\n    }).guild;\n  }\n\n  /**\n   * Edits the guild's widget settings.\n   * @param {GuildWidgetSettingsData} settings The widget settings for the guild\n   * @param {string} [reason] Reason for changing the guild's widget settings\n   * @returns {Promise<Guild>}\n   */\n  async setWidgetSettings(settings, reason) {\n    await this.client.api.guilds(this.id).widget.patch({\n      data: {\n        enabled: settings.enabled,\n        channel_id: this.channels.resolveId(settings.channel),\n      },\n      reason,\n    });\n    return this;\n  }\n\n  /**\n   * Leaves the guild.\n   * @returns {Promise<Guild>}\n   * @example\n   * // Leave a guild\n   * guild.leave()\n   *   .then(g => console.log(`Left the guild ${g}`))\n   *   .catch(console.error);\n   */\n  async leave() {\n    if (this.ownerId === this.client.user.id) throw new Error('GUILD_OWNED');\n    await this.client.api.users('@me').guilds(this.id).delete();\n    return this.client.actions.GuildDelete.handle({ id: this.id }).guild;\n  }\n\n  /**\n   * Deletes the guild.\n   * @returns {Promise<Guild>}\n   * @example\n   * // Delete a guild\n   * guild.delete()\n   *   .then(g => console.log(`Deleted the guild ${g}`))\n   *   .catch(console.error);\n   */\n  async delete() {\n    await this.client.api.guilds(this.id).delete();\n    return this.client.actions.GuildDelete.handle({ id: this.id }).guild;\n  }\n\n  /**\n   * Whether this guild equals another guild. It compares all properties, so for most operations\n   * it is advisable to just compare `guild.id === guild2.id` as it is much faster and is often\n   * what most users need.\n   * @param {Guild} guild The guild to compare with\n   * @returns {boolean}\n   */\n  equals(guild) {\n    return (\n      guild &&\n      guild instanceof this.constructor &&\n      this.id === guild.id &&\n      this.available === guild.available &&\n      this.splash === guild.splash &&\n      this.discoverySplash === guild.discoverySplash &&\n      this.name === guild.name &&\n      this.memberCount === guild.memberCount &&\n      this.large === guild.large &&\n      this.icon === guild.icon &&\n      this.ownerId === guild.ownerId &&\n      this.verificationLevel === guild.verificationLevel &&\n      (this.features === guild.features ||\n        (this.features.length === guild.features.length &&\n          this.features.every((feat, i) => feat === guild.features[i])))\n    );\n  }\n\n  toJSON() {\n    const json = super.toJSON({\n      available: false,\n      createdTimestamp: true,\n      nameAcronym: true,\n      presences: false,\n      voiceStates: false,\n    });\n    json.iconURL = this.iconURL();\n    json.splashURL = this.splashURL();\n    json.discoverySplashURL = this.discoverySplashURL();\n    json.bannerURL = this.bannerURL();\n    return json;\n  }\n\n  /**\n   * The voice state adapter for this guild that can be used with @discordjs/voice to play audio in voice\n   * and stage channels.\n   * @type {Function}\n   * @readonly\n   */\n  get voiceAdapterCreator() {\n    return methods => {\n      this.client.voice.adapters.set(this.id, methods);\n      return {\n        sendPayload: data => {\n          if (this.shard.status !== Status.READY) return false;\n          this.shard.send(data);\n          return true;\n        },\n        destroy: () => {\n          this.client.voice.adapters.delete(this.id);\n        },\n      };\n    };\n  }\n\n  /**\n   * Creates a collection of this guild's roles, sorted by their position and ids.\n   * @returns {Collection<Snowflake, Role>}\n   * @private\n   */\n  _sortedRoles() {\n    return Util.discordSort(this.roles.cache);\n  }\n\n  /**\n   * Creates a collection of this guild's or a specific category's channels, sorted by their position and ids.\n   * @param {GuildChannel} [channel] Category to get the channels of\n   * @returns {Collection<Snowflake, GuildChannel>}\n   * @private\n   */\n  _sortedChannels(channel) {\n    const category = channel.type === ChannelTypes.GUILD_CATEGORY;\n    return Util.discordSort(\n      this.channels.cache.filter(\n        c =>\n          (['GUILD_TEXT', 'GUILD_NEWS', 'GUILD_STORE'].includes(channel.type)\n            ? ['GUILD_TEXT', 'GUILD_NEWS', 'GUILD_STORE'].includes(c.type)\n            : c.type === channel.type) &&\n          (category || c.parent === channel.parent),\n      ),\n    );\n  }\n}\n\nmodule.exports = Guild;\n\n/**\n * @external APIGuild\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Guild.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildAuditLogs.js":
/*!******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildAuditLogs.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Integration = __webpack_require__(/*! ./Integration */ \"./node_modules/discord.js/src/structures/Integration.js\");\nconst StageInstance = __webpack_require__(/*! ./StageInstance */ \"./node_modules/discord.js/src/structures/StageInstance.js\");\nconst Sticker = __webpack_require__(/*! ./Sticker */ \"./node_modules/discord.js/src/structures/Sticker.js\");\nconst Webhook = __webpack_require__(/*! ./Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\");\nconst { OverwriteTypes, PartialTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * The target type of an entry. Here are the available types:\n * * GUILD\n * * CHANNEL\n * * USER\n * * ROLE\n * * INVITE\n * * WEBHOOK\n * * EMOJI\n * * MESSAGE\n * * INTEGRATION\n * * STAGE_INSTANCE\n * * STICKER\n * * THREAD\n * @typedef {string} AuditLogTargetType\n */\n\n/**\n * Key mirror of all available audit log targets.\n * @name GuildAuditLogs.Targets\n * @type {Object<string, string>}\n */\nconst Targets = {\n  ALL: 'ALL',\n  GUILD: 'GUILD',\n  CHANNEL: 'CHANNEL',\n  USER: 'USER',\n  ROLE: 'ROLE',\n  INVITE: 'INVITE',\n  WEBHOOK: 'WEBHOOK',\n  EMOJI: 'EMOJI',\n  MESSAGE: 'MESSAGE',\n  INTEGRATION: 'INTEGRATION',\n  STAGE_INSTANCE: 'STAGE_INSTANCE',\n  STICKER: 'STICKER',\n  THREAD: 'THREAD',\n  UNKNOWN: 'UNKNOWN',\n};\n\n/**\n * The action of an entry. Here are the available actions:\n * * ALL: null\n * * GUILD_UPDATE: 1\n * * CHANNEL_CREATE: 10\n * * CHANNEL_UPDATE: 11\n * * CHANNEL_DELETE: 12\n * * CHANNEL_OVERWRITE_CREATE: 13\n * * CHANNEL_OVERWRITE_UPDATE: 14\n * * CHANNEL_OVERWRITE_DELETE: 15\n * * MEMBER_KICK: 20\n * * MEMBER_PRUNE: 21\n * * MEMBER_BAN_ADD: 22\n * * MEMBER_BAN_REMOVE: 23\n * * MEMBER_UPDATE: 24\n * * MEMBER_ROLE_UPDATE: 25\n * * MEMBER_MOVE: 26\n * * MEMBER_DISCONNECT: 27\n * * BOT_ADD: 28,\n * * ROLE_CREATE: 30\n * * ROLE_UPDATE: 31\n * * ROLE_DELETE: 32\n * * INVITE_CREATE: 40\n * * INVITE_UPDATE: 41\n * * INVITE_DELETE: 42\n * * WEBHOOK_CREATE: 50\n * * WEBHOOK_UPDATE: 51\n * * WEBHOOK_DELETE: 52\n * * EMOJI_CREATE: 60\n * * EMOJI_UPDATE: 61\n * * EMOJI_DELETE: 62\n * * MESSAGE_DELETE: 72\n * * MESSAGE_BULK_DELETE: 73\n * * MESSAGE_PIN: 74\n * * MESSAGE_UNPIN: 75\n * * INTEGRATION_CREATE: 80\n * * INTEGRATION_UPDATE: 81\n * * INTEGRATION_DELETE: 82\n * * STAGE_INSTANCE_CREATE: 83\n * * STAGE_INSTANCE_UPDATE: 84\n * * STAGE_INSTANCE_DELETE: 85\n * * STICKER_CREATE: 90\n * * STICKER_UPDATE: 91\n * * STICKER_DELETE: 92\n * * THREAD_CREATE: 110\n * * THREAD_UPDATE: 111\n * * THREAD_DELETE: 112\n * @typedef {?(number|string)} AuditLogAction\n * @see {@link https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events}\n */\n\n/**\n * All available actions keyed under their names to their numeric values.\n * @name GuildAuditLogs.Actions\n * @type {Object<string, number>}\n */\nconst Actions = {\n  ALL: null,\n  GUILD_UPDATE: 1,\n  CHANNEL_CREATE: 10,\n  CHANNEL_UPDATE: 11,\n  CHANNEL_DELETE: 12,\n  CHANNEL_OVERWRITE_CREATE: 13,\n  CHANNEL_OVERWRITE_UPDATE: 14,\n  CHANNEL_OVERWRITE_DELETE: 15,\n  MEMBER_KICK: 20,\n  MEMBER_PRUNE: 21,\n  MEMBER_BAN_ADD: 22,\n  MEMBER_BAN_REMOVE: 23,\n  MEMBER_UPDATE: 24,\n  MEMBER_ROLE_UPDATE: 25,\n  MEMBER_MOVE: 26,\n  MEMBER_DISCONNECT: 27,\n  BOT_ADD: 28,\n  ROLE_CREATE: 30,\n  ROLE_UPDATE: 31,\n  ROLE_DELETE: 32,\n  INVITE_CREATE: 40,\n  INVITE_UPDATE: 41,\n  INVITE_DELETE: 42,\n  WEBHOOK_CREATE: 50,\n  WEBHOOK_UPDATE: 51,\n  WEBHOOK_DELETE: 52,\n  EMOJI_CREATE: 60,\n  EMOJI_UPDATE: 61,\n  EMOJI_DELETE: 62,\n  MESSAGE_DELETE: 72,\n  MESSAGE_BULK_DELETE: 73,\n  MESSAGE_PIN: 74,\n  MESSAGE_UNPIN: 75,\n  INTEGRATION_CREATE: 80,\n  INTEGRATION_UPDATE: 81,\n  INTEGRATION_DELETE: 82,\n  STAGE_INSTANCE_CREATE: 83,\n  STAGE_INSTANCE_UPDATE: 84,\n  STAGE_INSTANCE_DELETE: 85,\n  STICKER_CREATE: 90,\n  STICKER_UPDATE: 91,\n  STICKER_DELETE: 92,\n  THREAD_CREATE: 110,\n  THREAD_UPDATE: 111,\n  THREAD_DELETE: 112,\n};\n\n/**\n * Audit logs entries are held in this class.\n */\nclass GuildAuditLogs {\n  constructor(guild, data) {\n    if (data.users) for (const user of data.users) guild.client.users._add(user);\n    if (data.threads) for (const thread of data.threads) guild.client.channels._add(thread, guild);\n    /**\n     * Cached webhooks\n     * @type {Collection<Snowflake, Webhook>}\n     * @private\n     */\n    this.webhooks = new Collection();\n    if (data.webhooks) {\n      for (const hook of data.webhooks) {\n        this.webhooks.set(hook.id, new Webhook(guild.client, hook));\n      }\n    }\n\n    /**\n     * Cached integrations\n     * @type {Collection<Snowflake, Integration>}\n     * @private\n     */\n    this.integrations = new Collection();\n    if (data.integrations) {\n      for (const integration of data.integrations) {\n        this.integrations.set(integration.id, new Integration(guild.client, integration, guild));\n      }\n    }\n\n    /**\n     * The entries for this guild's audit logs\n     * @type {Collection<Snowflake, GuildAuditLogsEntry>}\n     */\n    this.entries = new Collection();\n    for (const item of data.audit_log_entries) {\n      const entry = new GuildAuditLogsEntry(this, guild, item);\n      this.entries.set(entry.id, entry);\n    }\n  }\n\n  /**\n   * Handles possible promises for entry targets.\n   * @returns {Promise<GuildAuditLogs>}\n   */\n  static async build(...args) {\n    const logs = new GuildAuditLogs(...args);\n    await Promise.all(logs.entries.map(e => e.target));\n    return logs;\n  }\n\n  /**\n   * The target of an entry. It can be one of:\n   * * A guild\n   * * A channel\n   * * A user\n   * * A role\n   * * An invite\n   * * A webhook\n   * * An emoji\n   * * A message\n   * * An integration\n   * * A stage instance\n   * * A sticker\n   * * A thread\n   * * An object with an id key if target was deleted\n   * * An object where the keys represent either the new value or the old value\n   * @typedef {?(Object|Guild|Channel|User|Role|Invite|Webhook|GuildEmoji|Message|Integration|StageInstance|Sticker)}\n   * AuditLogEntryTarget\n   */\n\n  /**\n   * Finds the target type from the entry action.\n   * @param {AuditLogAction} target The action target\n   * @returns {AuditLogTargetType}\n   */\n  static targetType(target) {\n    if (target < 10) return Targets.GUILD;\n    if (target < 20) return Targets.CHANNEL;\n    if (target < 30) return Targets.USER;\n    if (target < 40) return Targets.ROLE;\n    if (target < 50) return Targets.INVITE;\n    if (target < 60) return Targets.WEBHOOK;\n    if (target < 70) return Targets.EMOJI;\n    if (target < 80) return Targets.MESSAGE;\n    if (target < 83) return Targets.INTEGRATION;\n    if (target < 86) return Targets.STAGE_INSTANCE;\n    if (target < 100) return Targets.STICKER;\n    if (target < 110) return Targets.UNKNOWN;\n    if (target < 120) return Targets.THREAD;\n    return Targets.UNKNOWN;\n  }\n\n  /**\n   * The action type of an entry, e.g. `CREATE`. Here are the available types:\n   * * CREATE\n   * * DELETE\n   * * UPDATE\n   * * ALL\n   * @typedef {string} AuditLogActionType\n   */\n\n  /**\n   * Finds the action type from the entry action.\n   * @param {AuditLogAction} action The action target\n   * @returns {AuditLogActionType}\n   */\n  static actionType(action) {\n    if (\n      [\n        Actions.CHANNEL_CREATE,\n        Actions.CHANNEL_OVERWRITE_CREATE,\n        Actions.MEMBER_BAN_REMOVE,\n        Actions.BOT_ADD,\n        Actions.ROLE_CREATE,\n        Actions.INVITE_CREATE,\n        Actions.WEBHOOK_CREATE,\n        Actions.EMOJI_CREATE,\n        Actions.MESSAGE_PIN,\n        Actions.INTEGRATION_CREATE,\n        Actions.STAGE_INSTANCE_CREATE,\n        Actions.STICKER_CREATE,\n        Actions.THREAD_CREATE,\n      ].includes(action)\n    ) {\n      return 'CREATE';\n    }\n\n    if (\n      [\n        Actions.CHANNEL_DELETE,\n        Actions.CHANNEL_OVERWRITE_DELETE,\n        Actions.MEMBER_KICK,\n        Actions.MEMBER_PRUNE,\n        Actions.MEMBER_BAN_ADD,\n        Actions.MEMBER_DISCONNECT,\n        Actions.ROLE_DELETE,\n        Actions.INVITE_DELETE,\n        Actions.WEBHOOK_DELETE,\n        Actions.EMOJI_DELETE,\n        Actions.MESSAGE_DELETE,\n        Actions.MESSAGE_BULK_DELETE,\n        Actions.MESSAGE_UNPIN,\n        Actions.INTEGRATION_DELETE,\n        Actions.STAGE_INSTANCE_DELETE,\n        Actions.STICKER_DELETE,\n        Actions.THREAD_DELETE,\n      ].includes(action)\n    ) {\n      return 'DELETE';\n    }\n\n    if (\n      [\n        Actions.GUILD_UPDATE,\n        Actions.CHANNEL_UPDATE,\n        Actions.CHANNEL_OVERWRITE_UPDATE,\n        Actions.MEMBER_UPDATE,\n        Actions.MEMBER_ROLE_UPDATE,\n        Actions.MEMBER_MOVE,\n        Actions.ROLE_UPDATE,\n        Actions.INVITE_UPDATE,\n        Actions.WEBHOOK_UPDATE,\n        Actions.EMOJI_UPDATE,\n        Actions.INTEGRATION_UPDATE,\n        Actions.STAGE_INSTANCE_UPDATE,\n        Actions.STICKER_UPDATE,\n        Actions.THREAD_UPDATE,\n      ].includes(action)\n    ) {\n      return 'UPDATE';\n    }\n\n    return 'ALL';\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\n/**\n * Audit logs entry.\n */\nclass GuildAuditLogsEntry {\n  constructor(logs, guild, data) {\n    const targetType = GuildAuditLogs.targetType(data.action_type);\n    /**\n     * The target type of this entry\n     * @type {AuditLogTargetType}\n     */\n    this.targetType = targetType;\n\n    /**\n     * The action type of this entry\n     * @type {AuditLogActionType}\n     */\n    this.actionType = GuildAuditLogs.actionType(data.action_type);\n\n    /**\n     * Specific action type of this entry in its string presentation\n     * @type {AuditLogAction}\n     */\n    this.action = Object.keys(Actions).find(k => Actions[k] === data.action_type);\n\n    /**\n     * The reason of this entry\n     * @type {?string}\n     */\n    this.reason = data.reason ?? null;\n\n    /**\n     * The user that executed this entry\n     * @type {?User}\n     */\n    this.executor = data.user_id\n      ? guild.client.options.partials.includes(PartialTypes.USER)\n        ? guild.client.users._add({ id: data.user_id })\n        : guild.client.users.cache.get(data.user_id)\n      : null;\n\n    /**\n     * An entry in the audit log representing a specific change.\n     * @typedef {Object} AuditLogChange\n     * @property {string} key The property that was changed, e.g. `nick` for nickname changes\n     * @property {*} [old] The old value of the change, e.g. for nicknames, the old nickname\n     * @property {*} [new] The new value of the change, e.g. for nicknames, the new nickname\n     */\n\n    /**\n     * Specific property changes\n     * @type {?AuditLogChange[]}\n     */\n    this.changes = data.changes?.map(c => ({ key: c.key, old: c.old_value, new: c.new_value })) ?? null;\n\n    /**\n     * The entry's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * Any extra data from the entry\n     * @type {?(Object|Role|GuildMember)}\n     */\n    this.extra = null;\n    switch (data.action_type) {\n      case Actions.MEMBER_PRUNE:\n        this.extra = {\n          removed: Number(data.options.members_removed),\n          days: Number(data.options.delete_member_days),\n        };\n        break;\n\n      case Actions.MEMBER_MOVE:\n      case Actions.MESSAGE_DELETE:\n      case Actions.MESSAGE_BULK_DELETE:\n        this.extra = {\n          channel: guild.channels.cache.get(data.options.channel_id) ?? { id: data.options.channel_id },\n          count: Number(data.options.count),\n        };\n        break;\n\n      case Actions.MESSAGE_PIN:\n      case Actions.MESSAGE_UNPIN:\n        this.extra = {\n          channel: guild.client.channels.cache.get(data.options.channel_id) ?? { id: data.options.channel_id },\n          messageId: data.options.message_id,\n        };\n        break;\n\n      case Actions.MEMBER_DISCONNECT:\n        this.extra = {\n          count: Number(data.options.count),\n        };\n        break;\n\n      case Actions.CHANNEL_OVERWRITE_CREATE:\n      case Actions.CHANNEL_OVERWRITE_UPDATE:\n      case Actions.CHANNEL_OVERWRITE_DELETE:\n        switch (Number(data.options.type)) {\n          case OverwriteTypes.role:\n            this.extra = guild.roles.cache.get(data.options.id) ?? {\n              id: data.options.id,\n              name: data.options.role_name,\n              type: OverwriteTypes[OverwriteTypes.role],\n            };\n            break;\n\n          case OverwriteTypes.member:\n            this.extra = guild.members.cache.get(data.options.id) ?? {\n              id: data.options.id,\n              type: OverwriteTypes[OverwriteTypes.member],\n            };\n            break;\n\n          default:\n            break;\n        }\n        break;\n\n      case Actions.STAGE_INSTANCE_CREATE:\n      case Actions.STAGE_INSTANCE_DELETE:\n      case Actions.STAGE_INSTANCE_UPDATE:\n        this.extra = {\n          channel: guild.client.channels.cache.get(data.options?.channel_id) ?? { id: data.options?.channel_id },\n        };\n        break;\n\n      default:\n        break;\n    }\n\n    /**\n     * The target of this entry\n     * @type {?AuditLogEntryTarget}\n     */\n    this.target = null;\n    if (targetType === Targets.UNKNOWN) {\n      this.target = this.changes.reduce((o, c) => {\n        o[c.key] = c.new ?? c.old;\n        return o;\n      }, {});\n      this.target.id = data.target_id;\n      // MEMBER_DISCONNECT and similar types do not provide a target_id.\n    } else if (targetType === Targets.USER && data.target_id) {\n      this.target = guild.client.options.partials.includes(PartialTypes.USER)\n        ? guild.client.users._add({ id: data.target_id })\n        : guild.client.users.cache.get(data.target_id);\n    } else if (targetType === Targets.GUILD) {\n      this.target = guild.client.guilds.cache.get(data.target_id);\n    } else if (targetType === Targets.WEBHOOK) {\n      this.target =\n        logs.webhooks.get(data.target_id) ??\n        new Webhook(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            {\n              id: data.target_id,\n              guild_id: guild.id,\n            },\n          ),\n        );\n    } else if (targetType === Targets.INVITE) {\n      this.target = guild.members.fetch(guild.client.user.id).then(async me => {\n        if (me.permissions.has(Permissions.FLAGS.MANAGE_GUILD)) {\n          let change = this.changes.find(c => c.key === 'code');\n          change = change.new ?? change.old;\n          const invites = await guild.invites.fetch();\n          this.target = invites.find(i => i.code === change) ?? null;\n        } else {\n          this.target = this.changes.reduce((o, c) => {\n            o[c.key] = c.new ?? c.old;\n            return o;\n          }, {});\n        }\n      });\n    } else if (targetType === Targets.MESSAGE) {\n      // Discord sends a channel id for the MESSAGE_BULK_DELETE action type.\n      this.target =\n        data.action_type === Actions.MESSAGE_BULK_DELETE\n          ? guild.channels.cache.get(data.target_id) ?? { id: data.target_id }\n          : guild.client.users.cache.get(data.target_id);\n    } else if (targetType === Targets.INTEGRATION) {\n      this.target =\n        logs.integrations.get(data.target_id) ??\n        new Integration(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            { id: data.target_id },\n          ),\n          guild,\n        );\n    } else if (targetType === Targets.CHANNEL || targetType === Targets.THREAD) {\n      this.target =\n        guild.channels.cache.get(data.target_id) ??\n        this.changes.reduce(\n          (o, c) => {\n            o[c.key] = c.new ?? c.old;\n            return o;\n          },\n          { id: data.target_id },\n        );\n    } else if (targetType === Targets.STAGE_INSTANCE) {\n      this.target =\n        guild.stageInstances.cache.get(data.target_id) ??\n        new StageInstance(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            {\n              id: data.target_id,\n              channel_id: data.options?.channel_id,\n              guild_id: guild.id,\n            },\n          ),\n        );\n    } else if (targetType === Targets.STICKER) {\n      this.target =\n        guild.stickers.cache.get(data.target_id) ??\n        new Sticker(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            { id: data.target_id },\n          ),\n        );\n    } else if (data.target_id) {\n      this.target = guild[`${targetType.toLowerCase()}s`]?.cache.get(data.target_id) ?? { id: data.target_id };\n    }\n  }\n\n  /**\n   * The timestamp this entry was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this entry was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  toJSON() {\n    return Util.flatten(this, { createdTimestamp: true });\n  }\n}\n\nGuildAuditLogs.Actions = Actions;\nGuildAuditLogs.Targets = Targets;\nGuildAuditLogs.Entry = GuildAuditLogsEntry;\n\nmodule.exports = GuildAuditLogs;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildAuditLogs.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildBan.js":
/*!************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildBan.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\n\n/**\n * Represents a ban in a guild on Discord.\n * @extends {Base}\n */\nclass GuildBan extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIBanData} data The data for the ban\n   * @param {Guild} guild The guild in which the ban is\n   */\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild in which the ban is\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The user this ban applies to\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user, true);\n\n    if ('reason' in data) {\n      /**\n       * The reason for the ban\n       * @type {?string}\n       */\n      this.reason = data.reason;\n    }\n  }\n\n  /**\n   * Whether this GuildBan is partial. If the reason is not provided the value is null\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !('reason' in this);\n  }\n\n  /**\n   * Fetches this GuildBan.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildBan>}\n   */\n  fetch(force = true) {\n    return this.guild.bans.fetch({ user: this.user, cache: true, force });\n  }\n}\n\nmodule.exports = GuildBan;\n\n/**\n * @external APIBanData\n * @see {@link https://discord.com/developers/docs/resources/guild#create-guild-ban-json-params}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildBan.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildChannel.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildChannel.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Channel = __webpack_require__(/*! ./Channel */ \"./node_modules/discord.js/src/structures/Channel.js\");\nconst PermissionOverwrites = __webpack_require__(/*! ./PermissionOverwrites */ \"./node_modules/discord.js/src/structures/PermissionOverwrites.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst PermissionOverwriteManager = __webpack_require__(/*! ../managers/PermissionOverwriteManager */ \"./node_modules/discord.js/src/managers/PermissionOverwriteManager.js\");\nconst { ChannelTypes, VoiceBasedChannelTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a guild channel from any of the following:\n * - {@link TextChannel}\n * - {@link VoiceChannel}\n * - {@link CategoryChannel}\n * - {@link NewsChannel}\n * - {@link StoreChannel}\n * - {@link StageChannel}\n * @extends {Channel}\n * @abstract\n */\nclass GuildChannel extends Channel {\n  /**\n   * @param {Guild} guild The guild the guild channel is part of\n   * @param {APIChannel} data The data for the guild channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   * @param {boolean} [immediatePatch=true] Control variable for patching\n   */\n  constructor(guild, data, client, immediatePatch = true) {\n    super(guild?.client ?? client, data, false);\n\n    /**\n     * The guild the channel is in\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The id of the guild the channel is in\n     * @type {Snowflake}\n     */\n    this.guildId = guild?.id ?? data.guild_id;\n\n    this.parentId = this.parentId ?? null;\n    /**\n     * A manager of permission overwrites that belong to this channel\n     * @type {PermissionOverwriteManager}\n     */\n    this.permissionOverwrites = new PermissionOverwriteManager(this);\n\n    if (data && immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('name' in data) {\n      /**\n       * The name of the guild channel\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('position' in data) {\n      /**\n       * The raw position of the channel from discord\n       * @type {number}\n       */\n      this.rawPosition = data.position;\n    }\n\n    if ('guild_id' in data) {\n      this.guildId = data.guild_id;\n    }\n\n    if ('parent_id' in data) {\n      /**\n       * The id of the category parent of this channel\n       * @type {?Snowflake}\n       */\n      this.parentId = data.parent_id;\n    }\n\n    if ('permission_overwrites' in data) {\n      this.permissionOverwrites.cache.clear();\n      for (const overwrite of data.permission_overwrites) {\n        this.permissionOverwrites._add(overwrite);\n      }\n    }\n  }\n\n  _clone() {\n    const clone = super._clone();\n    clone.permissionOverwrites = new PermissionOverwriteManager(clone, this.permissionOverwrites.cache.values());\n    return clone;\n  }\n\n  /**\n   * The category parent of this channel\n   * @type {?CategoryChannel}\n   * @readonly\n   */\n  get parent() {\n    return this.guild.channels.resolve(this.parentId);\n  }\n\n  /**\n   * If the permissionOverwrites match the parent channel, null if no parent\n   * @type {?boolean}\n   * @readonly\n   */\n  get permissionsLocked() {\n    if (!this.parent) return null;\n\n    // Get all overwrites\n    const overwriteIds = new Set([\n      ...this.permissionOverwrites.cache.keys(),\n      ...this.parent.permissionOverwrites.cache.keys(),\n    ]);\n\n    // Compare all overwrites\n    return [...overwriteIds].every(key => {\n      const channelVal = this.permissionOverwrites.cache.get(key);\n      const parentVal = this.parent.permissionOverwrites.cache.get(key);\n\n      // Handle empty overwrite\n      if (\n        (!channelVal &&\n          parentVal.deny.bitfield === Permissions.defaultBit &&\n          parentVal.allow.bitfield === Permissions.defaultBit) ||\n        (!parentVal &&\n          channelVal.deny.bitfield === Permissions.defaultBit &&\n          channelVal.allow.bitfield === Permissions.defaultBit)\n      ) {\n        return true;\n      }\n\n      // Compare overwrites\n      return (\n        typeof channelVal !== 'undefined' &&\n        typeof parentVal !== 'undefined' &&\n        channelVal.deny.bitfield === parentVal.deny.bitfield &&\n        channelVal.allow.bitfield === parentVal.allow.bitfield\n      );\n    });\n  }\n\n  /**\n   * The position of the channel\n   * @type {number}\n   * @readonly\n   */\n  get position() {\n    const sorted = this.guild._sortedChannels(this);\n    return [...sorted.values()].indexOf(sorted.get(this.id));\n  }\n\n  /**\n   * Gets the overall set of permissions for a member or role in this channel, taking into account channel overwrites.\n   * @param {GuildMemberResolvable|RoleResolvable} memberOrRole The member or role to obtain the overall permissions for\n   * @returns {?Readonly<Permissions>}\n   */\n  permissionsFor(memberOrRole) {\n    const member = this.guild.members.resolve(memberOrRole);\n    if (member) return this.memberPermissions(member);\n    const role = this.guild.roles.resolve(memberOrRole);\n    return role && this.rolePermissions(role);\n  }\n\n  overwritesFor(member, verified = false, roles = null) {\n    if (!verified) member = this.guild.members.resolve(member);\n    if (!member) return [];\n\n    if (!roles) roles = member.roles.cache;\n    const roleOverwrites = [];\n    let memberOverwrites;\n    let everyoneOverwrites;\n\n    for (const overwrite of this.permissionOverwrites.cache.values()) {\n      if (overwrite.id === this.guild.id) {\n        everyoneOverwrites = overwrite;\n      } else if (roles.has(overwrite.id)) {\n        roleOverwrites.push(overwrite);\n      } else if (overwrite.id === member.id) {\n        memberOverwrites = overwrite;\n      }\n    }\n\n    return {\n      everyone: everyoneOverwrites,\n      roles: roleOverwrites,\n      member: memberOverwrites,\n    };\n  }\n\n  /**\n   * Gets the overall set of permissions for a member in this channel, taking into account channel overwrites.\n   * @param {GuildMember} member The member to obtain the overall permissions for\n   * @returns {Readonly<Permissions>}\n   * @private\n   */\n  memberPermissions(member) {\n    if (member.id === this.guild.ownerId) return new Permissions(Permissions.ALL).freeze();\n\n    const roles = member.roles.cache;\n    const permissions = new Permissions(roles.map(role => role.permissions));\n\n    if (permissions.has(Permissions.FLAGS.ADMINISTRATOR)) return new Permissions(Permissions.ALL).freeze();\n\n    const overwrites = this.overwritesFor(member, true, roles);\n\n    return permissions\n      .remove(overwrites.everyone?.deny ?? Permissions.defaultBit)\n      .add(overwrites.everyone?.allow ?? Permissions.defaultBit)\n      .remove(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.deny) : Permissions.defaultBit)\n      .add(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.allow) : Permissions.defaultBit)\n      .remove(overwrites.member?.deny ?? Permissions.defaultBit)\n      .add(overwrites.member?.allow ?? Permissions.defaultBit)\n      .freeze();\n  }\n\n  /**\n   * Gets the overall set of permissions for a role in this channel, taking into account channel overwrites.\n   * @param {Role} role The role to obtain the overall permissions for\n   * @returns {Readonly<Permissions>}\n   * @private\n   */\n  rolePermissions(role) {\n    if (role.permissions.has(Permissions.FLAGS.ADMINISTRATOR)) return new Permissions(Permissions.ALL).freeze();\n\n    const everyoneOverwrites = this.permissionOverwrites.cache.get(this.guild.id);\n    const roleOverwrites = this.permissionOverwrites.cache.get(role.id);\n\n    return role.permissions\n      .remove(everyoneOverwrites?.deny ?? Permissions.defaultBit)\n      .add(everyoneOverwrites?.allow ?? Permissions.defaultBit)\n      .remove(roleOverwrites?.deny ?? Permissions.defaultBit)\n      .add(roleOverwrites?.allow ?? Permissions.defaultBit)\n      .freeze();\n  }\n\n  /**\n   * Locks in the permission overwrites from the parent channel.\n   * @returns {Promise<GuildChannel>}\n   */\n  lockPermissions() {\n    if (!this.parent) return Promise.reject(new Error('GUILD_CHANNEL_ORPHAN'));\n    const permissionOverwrites = this.parent.permissionOverwrites.cache.map(overwrite => overwrite.toJSON());\n    return this.edit({ permissionOverwrites });\n  }\n\n  /**\n   * A collection of cached members of this channel, mapped by their ids.\n   * Members that can view this channel, if the channel is text based.\n   * Members in the channel, if the channel is voice based.\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    return this.guild.members.cache.filter(m => this.permissionsFor(m).has(Permissions.FLAGS.VIEW_CHANNEL, false));\n  }\n\n  /**\n   * The data for a guild channel.\n   * @typedef {Object} ChannelData\n   * @property {string} [name] The name of the channel\n   * @property {ChannelType} [type] The type of the the channel (only conversion between text and news is supported)\n   * @property {number} [position] The position of the channel\n   * @property {string} [topic] The topic of the text channel\n   * @property {boolean} [nsfw] Whether the channel is NSFW\n   * @property {number} [bitrate] The bitrate of the voice channel\n   * @property {number} [userLimit] The user limit of the voice channel\n   * @property {?CategoryChannelResolvable} [parent] The parent of the channel\n   * @property {boolean} [lockPermissions]\n   * Lock the permissions of the channel to what the parent's permissions are\n   * @property {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} [permissionOverwrites]\n   * Permission overwrites for the channel\n   * @property {number} [rateLimitPerUser] The ratelimit per user for the channel in seconds\n   * @property {ThreadAutoArchiveDuration} [defaultAutoArchiveDuration]\n   * The default auto archive duration for all new threads in this channel\n   * @property {?string} [rtcRegion] The RTC region of the channel\n   */\n\n  /**\n   * Edits the channel.\n   * @param {ChannelData} data The new data for the channel\n   * @param {string} [reason] Reason for editing this channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Edit a channel\n   * channel.edit({ name: 'new-channel' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    if (data.parent) data.parent = this.client.channels.resolveId(data.parent);\n\n    if (typeof data.position !== 'undefined') {\n      const updatedChannels = await Util.setPosition(\n        this,\n        data.position,\n        false,\n        this.guild._sortedChannels(this),\n        this.client.api.guilds(this.guild.id).channels,\n        reason,\n      );\n      this.client.actions.GuildChannelsPositionUpdate.handle({\n        guild_id: this.guild.id,\n        channels: updatedChannels,\n      });\n    }\n\n    let permission_overwrites;\n\n    if (data.permissionOverwrites) {\n      permission_overwrites = data.permissionOverwrites.map(o => PermissionOverwrites.resolve(o, this.guild));\n    }\n\n    if (data.lockPermissions) {\n      if (data.parent) {\n        const newParent = this.guild.channels.resolve(data.parent);\n        if (newParent?.type === 'GUILD_CATEGORY') {\n          permission_overwrites = newParent.permissionOverwrites.cache.map(o =>\n            PermissionOverwrites.resolve(o, this.guild),\n          );\n        }\n      } else if (this.parent) {\n        permission_overwrites = this.parent.permissionOverwrites.cache.map(o =>\n          PermissionOverwrites.resolve(o, this.guild),\n        );\n      }\n    }\n\n    const newData = await this.client.api.channels(this.id).patch({\n      data: {\n        name: (data.name ?? this.name).trim(),\n        type: ChannelTypes[data.type],\n        topic: data.topic,\n        nsfw: data.nsfw,\n        bitrate: data.bitrate ?? this.bitrate,\n        user_limit: data.userLimit ?? this.userLimit,\n        rtc_region: data.rtcRegion ?? this.rtcRegion,\n        parent_id: data.parent,\n        lock_permissions: data.lockPermissions,\n        rate_limit_per_user: data.rateLimitPerUser,\n        default_auto_archive_duration: data.defaultAutoArchiveDuration,\n        permission_overwrites,\n      },\n      reason,\n    });\n\n    return this.client.actions.ChannelUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Sets a new name for the guild channel.\n   * @param {string} name The new name for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's name\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel name\n   * channel.setName('not_general')\n   *   .then(newChannel => console.log(`Channel's new name is ${newChannel.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Options used to set parent of a channel.\n   * @typedef {Object} SetParentOptions\n   * @property {boolean} [lockPermissions=true] Whether to lock the permissions to what the parent's permissions are\n   * @property {string} [reason] The reason for modifying the parent of the channel\n   */\n\n  /**\n   * Sets the parent of this channel.\n   * @param {?CategoryChannelResolvable} channel The category channel to set as the parent\n   * @param {SetParentOptions} [options={}] The options for setting the parent\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Add a parent to a channel\n   * message.channel.setParent('355908108431917066', { lockPermissions: false })\n   *   .then(channel => console.log(`New parent of ${message.channel.name}: ${channel.name}`))\n   *   .catch(console.error);\n   */\n  setParent(channel, { lockPermissions = true, reason } = {}) {\n    return this.edit(\n      {\n        parent: channel ?? null,\n        lockPermissions,\n      },\n      reason,\n    );\n  }\n\n  /**\n   * Options used to set position of a channel.\n   * @typedef {Object} SetChannelPositionOptions\n   * @param {boolean} [relative=false] Whether or not to change the position relative to its current value\n   * @param {string} [reason] The reason for changing the position\n   */\n\n  /**\n   * Sets a new position for the guild channel.\n   * @param {number} position The new position for the guild channel\n   * @param {SetChannelPositionOptions} [options] Options for setting position\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel position\n   * channel.setPosition(2)\n   *   .then(newChannel => console.log(`Channel's new position is ${newChannel.position}`))\n   *   .catch(console.error);\n   */\n  async setPosition(position, { relative, reason } = {}) {\n    const updatedChannels = await Util.setPosition(\n      this,\n      position,\n      relative,\n      this.guild._sortedChannels(this),\n      this.client.api.guilds(this.guild.id).channels,\n      reason,\n    );\n    this.client.actions.GuildChannelsPositionUpdate.handle({\n      guild_id: this.guild.id,\n      channels: updatedChannels,\n    });\n    return this;\n  }\n\n  /**\n   * Data that can be resolved to an Application. This can be:\n   * * An Application\n   * * An Activity with associated Application\n   * * A Snowflake\n   * @typedef {Application|Snowflake} ApplicationResolvable\n   */\n\n  /**\n   * Options used to clone a guild channel.\n   * @typedef {GuildChannelCreateOptions} GuildChannelCloneOptions\n   * @property {string} [name=this.name] Name of the new channel\n   */\n\n  /**\n   * Clones this channel.\n   * @param {GuildChannelCloneOptions} [options] The options for cloning this channel\n   * @returns {Promise<GuildChannel>}\n   */\n  clone(options = {}) {\n    return this.guild.channels.create(options.name ?? this.name, {\n      permissionOverwrites: this.permissionOverwrites.cache,\n      topic: this.topic,\n      type: this.type,\n      nsfw: this.nsfw,\n      parent: this.parent,\n      bitrate: this.bitrate,\n      userLimit: this.userLimit,\n      rateLimitPerUser: this.rateLimitPerUser,\n      position: this.position,\n      reason: null,\n      ...options,\n    });\n  }\n\n  /**\n   * Checks if this channel has the same type, topic, position, name, overwrites, and id as another channel.\n   * In most cases, a simple `channel.id === channel2.id` will do, and is much faster too.\n   * @param {GuildChannel} channel Channel to compare with\n   * @returns {boolean}\n   */\n  equals(channel) {\n    let equal =\n      channel &&\n      this.id === channel.id &&\n      this.type === channel.type &&\n      this.topic === channel.topic &&\n      this.position === channel.position &&\n      this.name === channel.name;\n\n    if (equal) {\n      if (this.permissionOverwrites && channel.permissionOverwrites) {\n        equal = this.permissionOverwrites.cache.equals(channel.permissionOverwrites.cache);\n      } else {\n        equal = !this.permissionOverwrites && !channel.permissionOverwrites;\n      }\n    }\n\n    return equal;\n  }\n\n  /**\n   * Whether the channel is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    return (\n      this.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false) &&\n      this.guild.rulesChannelId !== this.id &&\n      this.guild.publicUpdatesChannelId !== this.id\n    );\n  }\n\n  /**\n   * Whether the channel is manageable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    if (this.client.user.id === this.guild.ownerId) return true;\n    if (VoiceBasedChannelTypes.includes(this.type)) {\n      if (!this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false)) {\n        return false;\n      }\n    } else if (!this.viewable) {\n      return false;\n    }\n    return this.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false);\n  }\n\n  /**\n   * Whether the channel is viewable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get viewable() {\n    if (this.client.user.id === this.guild.ownerId) return true;\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    return permissions.has(Permissions.FLAGS.VIEW_CHANNEL, false);\n  }\n\n  /**\n   * Deletes this channel.\n   * @param {string} [reason] Reason for deleting this channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Delete the channel\n   * channel.delete('making room for new channels')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.client.api.channels(this.id).delete({ reason });\n    return this;\n  }\n}\n\nmodule.exports = GuildChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildEmoji.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildEmoji.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuildEmoji = __webpack_require__(/*! ./BaseGuildEmoji */ \"./node_modules/discord.js/src/structures/BaseGuildEmoji.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst GuildEmojiRoleManager = __webpack_require__(/*! ../managers/GuildEmojiRoleManager */ \"./node_modules/discord.js/src/managers/GuildEmojiRoleManager.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * Represents a custom emoji.\n * @extends {BaseGuildEmoji}\n */\nclass GuildEmoji extends BaseGuildEmoji {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIEmoji} data The data for the guild emoji\n   * @param {Guild} guild The guild the guild emoji is part of\n   */\n  constructor(client, data, guild) {\n    super(client, data, guild);\n\n    /**\n     * The user who created this emoji\n     * @type {?User}\n     */\n    this.author = null;\n\n    /**\n     * Array of role ids this emoji is active for\n     * @name GuildEmoji#_roles\n     * @type {Snowflake[]}\n     * @private\n     */\n    Object.defineProperty(this, '_roles', { value: [], writable: true });\n  }\n\n  /**\n   * The guild this emoji is part of\n   * @type {Guild}\n   * @name GuildEmoji#guild\n   */\n\n  _clone() {\n    const clone = super._clone();\n    clone._roles = this._roles.slice();\n    return clone;\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if (data.user) this.author = this.client.users._add(data.user);\n    if (data.roles) this._roles = data.roles;\n  }\n\n  /**\n   * Whether the emoji is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    if (!this.guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return !this.managed && this.guild.me.permissions.has(Permissions.FLAGS.MANAGE_EMOJIS_AND_STICKERS);\n  }\n\n  /**\n   * A manager for roles this emoji is active for.\n   * @type {GuildEmojiRoleManager}\n   * @readonly\n   */\n  get roles() {\n    return new GuildEmojiRoleManager(this);\n  }\n\n  /**\n   * Fetches the author for this emoji\n   * @returns {Promise<User>}\n   */\n  async fetchAuthor() {\n    if (this.managed) {\n      throw new Error('EMOJI_MANAGED');\n    } else {\n      if (!this.guild.me) throw new Error('GUILD_UNCACHED_ME');\n      if (!this.guild.me.permissions.has(Permissions.FLAGS.MANAGE_EMOJIS_AND_STICKERS)) {\n        throw new Error('MISSING_MANAGE_EMOJIS_AND_STICKERS_PERMISSION', this.guild);\n      }\n    }\n    const data = await this.client.api.guilds(this.guild.id).emojis(this.id).get();\n    this._patch(data);\n    return this.author;\n  }\n\n  /**\n   * Data for editing an emoji.\n   * @typedef {Object} GuildEmojiEditData\n   * @property {string} [name] The name of the emoji\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] Roles to restrict emoji to\n   */\n\n  /**\n   * Edits the emoji.\n   * @param {GuildEmojiEditData} data The new data for the emoji\n   * @param {string} [reason] Reason for editing this emoji\n   * @returns {Promise<GuildEmoji>}\n   * @example\n   * // Edit an emoji\n   * emoji.edit({ name: 'newemoji' })\n   *   .then(e => console.log(`Edited emoji ${e}`))\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    const roles = data.roles?.map(r => r.id ?? r);\n    const newData = await this.client.api\n      .guilds(this.guild.id)\n      .emojis(this.id)\n      .patch({\n        data: {\n          name: data.name,\n          roles,\n        },\n        reason,\n      });\n    const clone = this._clone();\n    clone._patch(newData);\n    return clone;\n  }\n\n  /**\n   * Sets the name of the emoji.\n   * @param {string} name The new name for the emoji\n   * @param {string} [reason] Reason for changing the emoji's name\n   * @returns {Promise<GuildEmoji>}\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Deletes the emoji.\n   * @param {string} [reason] Reason for deleting the emoji\n   * @returns {Promise<GuildEmoji>}\n   */\n  async delete(reason) {\n    await this.client.api.guilds(this.guild.id).emojis(this.id).delete({ reason });\n    return this;\n  }\n\n  /**\n   * Whether this emoji is the same as another one.\n   * @param {GuildEmoji|APIEmoji} other The emoji to compare it to\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof GuildEmoji) {\n      return (\n        other.id === this.id &&\n        other.name === this.name &&\n        other.managed === this.managed &&\n        other.available === this.available &&\n        other.requiresColons === this.requiresColons &&\n        other.roles.cache.size === this.roles.cache.size &&\n        other.roles.cache.every(role => this.roles.cache.has(role.id))\n      );\n    } else {\n      return (\n        other.id === this.id &&\n        other.name === this.name &&\n        other.roles.length === this.roles.cache.size &&\n        other.roles.every(role => this.roles.cache.has(role))\n      );\n    }\n  }\n}\n\nmodule.exports = GuildEmoji;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildEmoji.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildMember.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildMember.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst VoiceState = __webpack_require__(/*! ./VoiceState */ \"./node_modules/discord.js/src/structures/VoiceState.js\");\nconst TextBasedChannel = __webpack_require__(/*! ./interfaces/TextBasedChannel */ \"./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst GuildMemberRoleManager = __webpack_require__(/*! ../managers/GuildMemberRoleManager */ \"./node_modules/discord.js/src/managers/GuildMemberRoleManager.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * Represents a member of a guild on Discord.\n * @implements {TextBasedChannel}\n * @extends {Base}\n */\nclass GuildMember extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIGuildMember} data The data for the guild member\n   * @param {Guild} guild The guild the member is part of\n   */\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild that this member is part of\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The timestamp the member joined the guild at\n     * @type {?number}\n     */\n    this.joinedTimestamp = null;\n\n    /**\n     * The timestamp of when the member used their Nitro boost on the guild, if it was used\n     * @type {?number}\n     */\n    this.premiumSinceTimestamp = null;\n\n    /**\n     * Whether the member has been removed from the guild\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    /**\n     * The nickname of this member, if they have one\n     * @type {?string}\n     */\n    this.nickname = null;\n\n    /**\n     * Whether this member has yet to pass the guild's membership gate\n     * @type {boolean}\n     */\n    this.pending = false;\n\n    this._roles = [];\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('user' in data) {\n      /**\n       * The user that this guild member instance represents\n       * @type {?User}\n       */\n      this.user = this.client.users._add(data.user, true);\n    }\n\n    if ('nick' in data) this.nickname = data.nick;\n    if ('joined_at' in data) this.joinedTimestamp = new Date(data.joined_at).getTime();\n    if ('premium_since' in data) {\n      this.premiumSinceTimestamp = data.premium_since ? new Date(data.premium_since).getTime() : null;\n    }\n    if ('roles' in data) this._roles = data.roles;\n    this.pending = data.pending ?? false;\n  }\n\n  _clone() {\n    const clone = super._clone();\n    clone._roles = this._roles.slice();\n    return clone;\n  }\n\n  /**\n   * Whether this GuildMember is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.joinedTimestamp;\n  }\n\n  /**\n   * A manager for the roles belonging to this member\n   * @type {GuildMemberRoleManager}\n   * @readonly\n   */\n  get roles() {\n    return new GuildMemberRoleManager(this);\n  }\n\n  /**\n   * The voice state of this member\n   * @type {VoiceState}\n   * @readonly\n   */\n  get voice() {\n    return this.guild.voiceStates.cache.get(this.id) ?? new VoiceState(this.guild, { user_id: this.id });\n  }\n\n  /**\n   * The time this member joined the guild\n   * @type {?Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return this.joinedTimestamp ? new Date(this.joinedTimestamp) : null;\n  }\n\n  /**\n   * The time of when the member used their Nitro boost on the guild, if it was used\n   * @type {?Date}\n   * @readonly\n   */\n  get premiumSince() {\n    return this.premiumSinceTimestamp ? new Date(this.premiumSinceTimestamp) : null;\n  }\n\n  /**\n   * The presence of this guild member\n   * @type {?Presence}\n   * @readonly\n   */\n  get presence() {\n    return this.guild.presences.resolve(this.id);\n  }\n\n  /**\n   * The displayed color of this member in base 10\n   * @type {number}\n   * @readonly\n   */\n  get displayColor() {\n    return this.roles.color?.color ?? 0;\n  }\n\n  /**\n   * The displayed color of this member in hexadecimal\n   * @type {string}\n   * @readonly\n   */\n  get displayHexColor() {\n    return this.roles.color?.hexColor ?? '#000000';\n  }\n\n  /**\n   * The member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * The nickname of this member, or their username if they don't have one\n   * @type {?string}\n   * @readonly\n   */\n  get displayName() {\n    return this.nickname ?? this.user.username;\n  }\n\n  /**\n   * The overall set of permissions for this member, taking only roles and owner status into account\n   * @type {Readonly<Permissions>}\n   * @readonly\n   */\n  get permissions() {\n    if (this.user.id === this.guild.ownerId) return new Permissions(Permissions.ALL).freeze();\n    return new Permissions(this.roles.cache.map(role => role.permissions)).freeze();\n  }\n\n  /**\n   * Whether the client user is above this user in the hierarchy, according to role position and guild ownership.\n   * This is a prerequisite for many moderative actions.\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    if (this.user.id === this.guild.ownerId) return false;\n    if (this.user.id === this.client.user.id) return false;\n    if (this.client.user.id === this.guild.ownerId) return true;\n    if (!this.guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return this.guild.me.roles.highest.comparePositionTo(this.roles.highest) > 0;\n  }\n\n  /**\n   * Whether this member is kickable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get kickable() {\n    return this.manageable && this.guild.me.permissions.has(Permissions.FLAGS.KICK_MEMBERS);\n  }\n\n  /**\n   * Whether this member is bannable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get bannable() {\n    return this.manageable && this.guild.me.permissions.has(Permissions.FLAGS.BAN_MEMBERS);\n  }\n\n  /**\n   * Returns `channel.permissionsFor(guildMember)`. Returns permissions for a member in a guild channel,\n   * taking into account roles and permission overwrites.\n   * @param {GuildChannelResolvable} channel The guild channel to use as context\n   * @returns {Readonly<Permissions>}\n   */\n  permissionsIn(channel) {\n    channel = this.guild.channels.resolve(channel);\n    if (!channel) throw new Error('GUILD_CHANNEL_RESOLVE');\n    return channel.permissionsFor(this);\n  }\n\n  /**\n   * The data for editing a guild member.\n   * @typedef {Object} GuildMemberEditData\n   * @property {?string} [nick] The nickname to set for the member\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles or role ids to apply\n   * @property {boolean} [mute] Whether or not the member should be muted\n   * @property {boolean} [deaf] Whether or not the member should be deafened\n   * @property {GuildVoiceChannelResolvable|null} [channel] Channel to move the member to\n   * (if they are connected to voice), or `null` if you want to disconnect them from voice\n   */\n\n  /**\n   * Edits this member.\n   * @param {GuildMemberEditData} data The data to edit the member with\n   * @param {string} [reason] Reason for editing this user\n   * @returns {Promise<GuildMember>}\n   */\n  edit(data, reason) {\n    return this.guild.members.edit(this, data, reason);\n  }\n\n  /**\n   * Sets the nickname for this member.\n   * @param {?string} nick The nickname for the guild member, or `null` if you want to reset their nickname\n   * @param {string} [reason] Reason for setting the nickname\n   * @returns {Promise<GuildMember>}\n   */\n  setNickname(nick, reason) {\n    return this.edit({ nick }, reason);\n  }\n\n  /**\n   * Creates a DM channel between the client and this member.\n   * @returns {Promise<DMChannel>}\n   */\n  createDM() {\n    return this.user.createDM();\n  }\n\n  /**\n   * Deletes any DMs with this member.\n   * @returns {Promise<DMChannel>}\n   */\n  deleteDM() {\n    return this.user.deleteDM();\n  }\n\n  /**\n   * Kicks this member from the guild.\n   * @param {string} [reason] Reason for kicking user\n   * @returns {Promise<GuildMember>}\n   */\n  kick(reason) {\n    return this.guild.members.kick(this, reason);\n  }\n\n  /**\n   * Bans this guild member.\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // ban a guild member\n   * guildMember.ban({ days: 7, reason: 'They deserved it' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  ban(options) {\n    return this.guild.members.ban(this, options);\n  }\n\n  /**\n   * Fetches this GuildMember.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildMember>}\n   */\n  fetch(force = true) {\n    return this.guild.members.fetch({ user: this.id, cache: true, force });\n  }\n\n  /**\n   * Whether this guild member equals another guild member. It compares all properties, so for most\n   * comparison it is advisable to just compare `member.id === member2.id` as it is significantly faster\n   * and is often what most users need.\n   * @param {GuildMember} member The member to compare with\n   * @returns {boolean}\n   */\n  equals(member) {\n    return (\n      member instanceof this.constructor &&\n      this.id === member.id &&\n      this.partial === member.partial &&\n      this.guild.id === member.guild.id &&\n      this.joinedTimestamp === member.joinedTimestamp &&\n      this.nickname === member.nickname &&\n      this.pending === member.pending &&\n      (this._roles === member._roles ||\n        (this._roles.length === member._roles.length && this._roles.every((role, i) => role === member._roles[i])))\n    );\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the user's mention instead of the GuildMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${member}!`);\n   */\n  toString() {\n    return `<@${this.nickname ? '!' : ''}${this.user.id}>`;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      guild: 'guildId',\n      user: 'userId',\n      displayName: true,\n      roles: true,\n    });\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  send() {}\n}\n\nTextBasedChannel.applyToClass(GuildMember);\n\nmodule.exports = GuildMember;\n\n/**\n * @external APIGuildMember\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-member-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildMember.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildPreview.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildPreview.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst GuildPreviewEmoji = __webpack_require__(/*! ./GuildPreviewEmoji */ \"./node_modules/discord.js/src/structures/GuildPreviewEmoji.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents the data about the guild any bot can preview, connected to the specified guild.\n * @extends {Base}\n */\nclass GuildPreview extends Base {\n  constructor(client, data) {\n    super(client);\n\n    if (!data) return;\n\n    this._patch(data);\n  }\n\n  /**\n   * Builds the guild with the provided data.\n   * @param {*} data The raw data of the guild\n   * @private\n   */\n  _patch(data) {\n    /**\n     * The id of this guild\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of this guild\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The icon of this guild\n     * @type {?string}\n     */\n    this.icon = data.icon;\n\n    /**\n     * The splash icon of this guild\n     * @type {?string}\n     */\n    this.splash = data.splash;\n\n    /**\n     * The discovery splash icon of this guild\n     * @type {?string}\n     */\n    this.discoverySplash = data.discovery_splash;\n\n    /**\n     * An array of enabled guild features\n     * @type {Features[]}\n     */\n    this.features = data.features;\n\n    /**\n     * The approximate count of members in this guild\n     * @type {number}\n     */\n    this.approximateMemberCount = data.approximate_member_count;\n\n    /**\n     * The approximate count of online members in this guild\n     * @type {number}\n     */\n    this.approximatePresenceCount = data.approximate_presence_count;\n\n    /**\n     * The description for this guild\n     * @type {?string}\n     */\n    this.description = data.description ?? null;\n\n    if (!this.emojis) {\n      /**\n       * Collection of emojis belonging to this guild\n       * @type {Collection<Snowflake, GuildPreviewEmoji>}\n       */\n      this.emojis = new Collection();\n    } else {\n      this.emojis.clear();\n    }\n    for (const emoji of data.emojis) {\n      this.emojis.set(emoji.id, new GuildPreviewEmoji(this.client, emoji, this));\n    }\n  }\n  /**\n   * The timestamp this guild was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this guild was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The URL to this guild's splash.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  splashURL({ format, size } = {}) {\n    return this.splash && this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n\n  /**\n   * The URL to this guild's discovery splash.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  discoverySplashURL({ format, size } = {}) {\n    return this.discoverySplash && this.client.rest.cdn.DiscoverySplash(this.id, this.discoverySplash, format, size);\n  }\n\n  /**\n   * The URL to this guild's icon.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size, dynamic } = {}) {\n    return this.icon && this.client.rest.cdn.Icon(this.id, this.icon, format, size, dynamic);\n  }\n\n  /**\n   * Fetches this guild.\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetch() {\n    const data = await this.client.api.guilds(this.id).preview.get();\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from My Guild!\n   * console.log(`Hello from ${previewGuild}!`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.iconURL = this.iconURL();\n    json.splashURL = this.splashURL();\n    return json;\n  }\n}\n\nmodule.exports = GuildPreview;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildPreview.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildPreviewEmoji.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildPreviewEmoji.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuildEmoji = __webpack_require__(/*! ./BaseGuildEmoji */ \"./node_modules/discord.js/src/structures/BaseGuildEmoji.js\");\n\n/**\n * Represents an instance of an emoji belonging to a public guild obtained through Discord's preview endpoint.\n * @extends {BaseGuildEmoji}\n */\nclass GuildPreviewEmoji extends BaseGuildEmoji {\n  /**\n   * The public guild this emoji is part of\n   * @type {GuildPreview}\n   * @name GuildPreviewEmoji#guild\n   */\n\n  constructor(client, data, guild) {\n    super(client, data, guild);\n\n    /**\n     * The roles this emoji is active for\n     * @type {Snowflake[]}\n     */\n    this.roles = data.roles;\n  }\n}\n\nmodule.exports = GuildPreviewEmoji;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildPreviewEmoji.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/GuildTemplate.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/GuildTemplate.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst { Events } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\n\n/**\n * Represents the template for a guild.\n * @extends {Base}\n */\nclass GuildTemplate extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIGuildTemplate} data The raw data for the template\n   */\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  /**\n   * Builds or updates the template with the provided data.\n   * @param {APIGuildTemplate} data The raw data for the template\n   * @returns {GuildTemplate}\n   * @private\n   */\n  _patch(data) {\n    /**\n     * The unique code of this template\n     * @type {string}\n     */\n    this.code = data.code;\n\n    /**\n     * The name of this template\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The description of this template\n     * @type {?string}\n     */\n    this.description = data.description;\n\n    /**\n     * The amount of times this template has been used\n     * @type {number}\n     */\n    this.usageCount = data.usage_count;\n\n    /**\n     * The id of the user that created this template\n     * @type {Snowflake}\n     */\n    this.creatorId = data.creator_id;\n\n    /**\n     * The user that created this template\n     * @type {User}\n     */\n    this.creator = this.client.users._add(data.creator);\n\n    /**\n     * The time of when this template was created at\n     * @type {Date}\n     */\n    this.createdAt = new Date(data.created_at);\n\n    /**\n     * The time of when this template was last synced to the guild\n     * @type {Date}\n     */\n    this.updatedAt = new Date(data.updated_at);\n\n    /**\n     * The id of the guild that this template belongs to\n     * @type {Snowflake}\n     */\n    this.guildId = data.source_guild_id;\n\n    /**\n     * The data of the guild that this template would create\n     * @type {APIGuild}\n     */\n    this.serializedGuild = data.serialized_source_guild;\n\n    /**\n     * Whether this template has unsynced changes\n     * @type {?boolean}\n     */\n    this.unSynced = 'is_dirty' in data ? Boolean(data.is_dirty) : null;\n\n    return this;\n  }\n\n  /**\n   * Creates a guild based from this template.\n   * <warn>This is only available to bots in fewer than 10 guilds.</warn>\n   * @param {string} name The name of the guild\n   * @param {BufferResolvable|Base64Resolvable} [icon] The icon for the guild\n   * @returns {Promise<Guild>}\n   */\n  async createGuild(name, icon) {\n    const { client } = this;\n    const data = await client.api.guilds.templates(this.code).post({\n      data: {\n        name,\n        icon: await DataResolver.resolveImage(icon),\n      },\n    });\n\n    if (client.guilds.cache.has(data.id)) return client.guilds.cache.get(data.id);\n\n    return new Promise(resolve => {\n      const resolveGuild = guild => {\n        client.off(Events.GUILD_CREATE, handleGuild);\n        client.decrementMaxListeners();\n        resolve(guild);\n      };\n\n      const handleGuild = guild => {\n        if (guild.id === data.id) {\n          clearTimeout(timeout);\n          resolveGuild(guild);\n        }\n      };\n\n      client.incrementMaxListeners();\n      client.on(Events.GUILD_CREATE, handleGuild);\n\n      const timeout = setTimeout(() => resolveGuild(client.guilds._add(data)), 10000).unref();\n    });\n  }\n\n  /**\n   * Options used to edit a guild template.\n   * @typedef {Object} EditGuildTemplateOptions\n   * @property {string} [name] The name of this template\n   * @property {string} [description] The description of this template\n   */\n\n  /**\n   * Updates the metadata of this template.\n   * @param {EditGuildTemplateOptions} [options] Options for editing the template\n   * @returns {Promise<GuildTemplate>}\n   */\n  async edit({ name, description } = {}) {\n    const data = await this.client.api.guilds(this.guildId).templates(this.code).patch({ data: { name, description } });\n    return this._patch(data);\n  }\n\n  /**\n   * Deletes this template.\n   * @returns {Promise<GuildTemplate>}\n   */\n  async delete() {\n    await this.client.api.guilds(this.guildId).templates(this.code).delete();\n    return this;\n  }\n\n  /**\n   * Syncs this template to the current state of the guild.\n   * @returns {Promise<GuildTemplate>}\n   */\n  async sync() {\n    const data = await this.client.api.guilds(this.guildId).templates(this.code).put();\n    return this._patch(data);\n  }\n\n  /**\n   * The timestamp of when this template was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return this.createdAt.getTime();\n  }\n\n  /**\n   * The timestamp of when this template was last synced to the guild\n   * @type {number}\n   * @readonly\n   */\n  get updatedTimestamp() {\n    return this.updatedAt.getTime();\n  }\n\n  /**\n   * The guild that this template belongs to\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * The URL of this template\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return `${this.client.options.http.template}/${this.code}`;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the template's code instead of the template object.\n   * @returns {string}\n   * @example\n   * // Logs: Template: FKvmczH2HyUf\n   * console.log(`Template: ${guildTemplate}!`);\n   */\n  toString() {\n    return this.code;\n  }\n}\n\n/**\n * Regular expression that globally matches guild template links\n * @type {RegExp}\n */\nGuildTemplate.GUILD_TEMPLATES_PATTERN = /discord(?:app)?\\.(?:com\\/template|new)\\/([\\w-]{2,255})/gi;\n\nmodule.exports = GuildTemplate;\n\n/* eslint-disable max-len */\n/**\n * @external APIGuildTemplate\n * @see {@link https://discord.com/developers/docs/resources/guild-template#guild-template-object-guild-template-structure}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/GuildTemplate.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Integration.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Integration.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst IntegrationApplication = __webpack_require__(/*! ./IntegrationApplication */ \"./node_modules/discord.js/src/structures/IntegrationApplication.js\");\n\n/**\n * The information account for an integration\n * @typedef {Object} IntegrationAccount\n * @property {string} id The id of the account\n * @property {string} name The name of the account\n */\n\n/**\n *  Represents a guild integration.\n */\nclass Integration extends Base {\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild this integration belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The integration id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The integration name\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The integration type (twitch, youtube, etc)\n     * @type {string}\n     */\n    this.type = data.type;\n\n    /**\n     * Whether this integration is enabled\n     * @type {boolean}\n     */\n    this.enabled = data.enabled;\n\n    /**\n     * Whether this integration is syncing\n     * @type {boolean}\n     */\n    this.syncing = data.syncing;\n\n    /**\n     * The role that this integration uses for subscribers\n     * @type {Role}\n     */\n    this.role = this.guild.roles.cache.get(data.role_id);\n\n    if (data.user) {\n      /**\n       * The user for this integration\n       * @type {?User}\n       */\n      this.user = this.client.users._add(data.user);\n    } else {\n      this.user = null;\n    }\n\n    /**\n     * The account integration information\n     * @type {IntegrationAccount}\n     */\n    this.account = data.account;\n\n    /**\n     * The last time this integration was last synced\n     * @type {number}\n     */\n    this.syncedAt = data.synced_at;\n    this._patch(data);\n  }\n\n  /**\n   * All roles that are managed by this integration\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get roles() {\n    const roles = this.guild.roles.cache;\n    return roles.filter(role => role.tags?.integrationId === this.id);\n  }\n\n  _patch(data) {\n    /**\n     * The behavior of expiring subscribers\n     * @type {number}\n     */\n    this.expireBehavior = data.expire_behavior;\n\n    /**\n     * The grace period before expiring subscribers\n     * @type {number}\n     */\n    this.expireGracePeriod = data.expire_grace_period;\n\n    if ('application' in data) {\n      if (this.application) {\n        this.application._patch(data.application);\n      } else {\n        /**\n         * The application for this integration\n         * @type {?IntegrationApplication}\n         */\n        this.application = new IntegrationApplication(this.client, data.application);\n      }\n    } else if (!this.application) {\n      this.application = null;\n    }\n  }\n\n  /**\n   * Deletes this integration.\n   * @returns {Promise<Integration>}\n   * @param {string} [reason] Reason for deleting this integration\n   */\n  async delete(reason) {\n    await this.client.api.guilds(this.guild.id).integrations(this.id).delete({ reason });\n    return this;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      role: 'roleId',\n      guild: 'guildId',\n      user: 'userId',\n    });\n  }\n}\n\nmodule.exports = Integration;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Integration.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/IntegrationApplication.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/IntegrationApplication.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Application = __webpack_require__(/*! ./interfaces/Application */ \"./node_modules/discord.js/src/structures/interfaces/Application.js\");\n\n/**\n * Represents an Integration's OAuth2 Application.\n * @extends {Application}\n */\nclass IntegrationApplication extends Application {\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The bot user for this application\n     * @type {?User}\n     */\n    this.bot = data.bot ? this.client.users._add(data.bot) : this.bot ?? null;\n\n    /**\n     * The url of the application's terms of service\n     * @type {?string}\n     */\n    this.termsOfServiceURL = data.terms_of_service_url ?? this.termsOfServiceURL ?? null;\n\n    /**\n     * The url of the application's privacy policy\n     * @type {?string}\n     */\n    this.privacyPolicyURL = data.privacy_policy_url ?? this.privacyPolicyURL ?? null;\n\n    /**\n     * The Array of RPC origin urls\n     * @type {string[]}\n     */\n    this.rpcOrigins = data.rpc_origins ?? this.rpcOrigins ?? [];\n\n    /**\n     * The application's summary\n     * @type {?string}\n     */\n    this.summary = data.summary ?? this.summary ?? null;\n\n    /**\n     * Whether the application can be default hooked by the client\n     * @type {?boolean}\n     */\n    this.hook = data.hook ?? this.hook ?? null;\n\n    /**\n     * The hash of the application's cover image\n     * @type {?string}\n     */\n    this.cover = data.cover_image ?? this.cover ?? null;\n\n    /**\n     * The hex-encoded key for verification in interactions and the GameSDK's GetTicket\n     * @type {?string}\n     */\n    this.verifyKey = data.verify_key ?? this.verifyKey ?? null;\n  }\n}\n\nmodule.exports = IntegrationApplication;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/IntegrationApplication.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Interaction.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Interaction.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst { InteractionTypes, MessageComponentTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents an interaction.\n * @extends {Base}\n */\nclass Interaction extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The interaction's type\n     * @type {InteractionType}\n     */\n    this.type = InteractionTypes[data.type];\n\n    /**\n     * The interaction's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The interaction's token\n     * @type {string}\n     * @name Interaction#token\n     * @readonly\n     */\n    Object.defineProperty(this, 'token', { value: data.token });\n\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The id of the guild this interaction was sent in\n     * @type {?Snowflake}\n     */\n    this.guildId = data.guild_id ?? null;\n\n    /**\n     * The user which sent this interaction\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user ?? data.member.user);\n\n    /**\n     * If this interaction was sent in a guild, the member which sent it\n     * @type {?(GuildMember|APIGuildMember)}\n     */\n    this.member = data.member ? this.guild?.members._add(data.member) ?? data.member : null;\n\n    /**\n     * The version\n     * @type {number}\n     */\n    this.version = data.version;\n  }\n\n  /**\n   * The timestamp the interaction was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the interaction was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The channel this interaction was sent in\n   * @type {?TextBasedChannels}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.cache.get(this.channelId) ?? null;\n  }\n\n  /**\n   * The guild this interaction was sent in\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId) ?? null;\n  }\n\n  /**\n   * Indicates whether this interaction is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return Boolean(this.guildId && this.member);\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link CommandInteraction}.\n   * @returns {boolean}\n   */\n  isCommand() {\n    return InteractionTypes[this.type] === InteractionTypes.APPLICATION_COMMAND && typeof this.targetId === 'undefined';\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ContextMenuInteraction}\n   * @returns {boolean}\n   */\n  isContextMenu() {\n    return InteractionTypes[this.type] === InteractionTypes.APPLICATION_COMMAND && typeof this.targetId !== 'undefined';\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link MessageComponentInteraction}.\n   * @returns {boolean}\n   */\n  isMessageComponent() {\n    return InteractionTypes[this.type] === InteractionTypes.MESSAGE_COMPONENT;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ButtonInteraction}.\n   * @returns {boolean}\n   */\n  isButton() {\n    return (\n      InteractionTypes[this.type] === InteractionTypes.MESSAGE_COMPONENT &&\n      MessageComponentTypes[this.componentType] === MessageComponentTypes.BUTTON\n    );\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link SelectMenuInteraction}.\n   * @returns {boolean}\n   */\n  isSelectMenu() {\n    return (\n      InteractionTypes[this.type] === InteractionTypes.MESSAGE_COMPONENT &&\n      MessageComponentTypes[this.componentType] === MessageComponentTypes.SELECT_MENU\n    );\n  }\n}\n\nmodule.exports = Interaction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Interaction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/InteractionCollector.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/InteractionCollector.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Collector = __webpack_require__(/*! ./interfaces/Collector */ \"./node_modules/discord.js/src/structures/interfaces/Collector.js\");\nconst { Events } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst { InteractionTypes, MessageComponentTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * @typedef {CollectorOptions} InteractionCollectorOptions\n * @property {TextBasedChannels} [channel] The channel to listen to interactions from\n * @property {MessageComponentType} [componentType] The type of component to listen for\n * @property {Guild} [guild] The guild to listen to interactions from\n * @property {InteractionType} [interactionType] The type of interaction to listen for\n * @property {number} [max] The maximum total amount of interactions to collect\n * @property {number} [maxComponents] The maximum number of components to collect\n * @property {number} [maxUsers] The maximum number of users to interact\n * @property {Message|APIMessage} [message] The message to listen to interactions from\n */\n\n/**\n * Collects interactions.\n * Will automatically stop if the message ({@link Client#messageDelete messageDelete}),\n * channel ({@link Client#channelDelete channelDelete}), or guild ({@link Client#guildDelete guildDelete}) is deleted.\n * @extends {Collector}\n */\nclass InteractionCollector extends Collector {\n  /**\n   * @param {Client} client The client on which to collect interactions\n   * @param {InteractionCollectorOptions} [options={}] The options to apply to this collector\n   */\n  constructor(client, options = {}) {\n    super(client, options);\n\n    /**\n     * The message from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.messageId = options.message?.id ?? null;\n\n    /**\n     * The channel from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.channelId =\n      this.client.channels.resolveId(options.message?.channel) ??\n      options.message?.channel_id ??\n      this.client.channels.resolveId(options.channel);\n\n    /**\n     * The guild from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.guildId =\n      this.client.guilds.resolveId(options.message?.guild) ??\n      options.message?.guild_id ??\n      this.client.guilds.resolveId(options.channel?.guild) ??\n      this.client.guilds.resolveId(options.guild);\n\n    /**\n     * The the type of interaction to collect\n     * @type {?InteractionType}\n     */\n    this.interactionType =\n      typeof options.interactionType === 'number'\n        ? InteractionTypes[options.interactionType]\n        : options.interactionType ?? null;\n\n    /**\n     * The the type of component to collect\n     * @type {?MessageComponentType}\n     */\n    this.componentType =\n      typeof options.componentType === 'number'\n        ? MessageComponentTypes[options.componentType]\n        : options.componentType ?? null;\n\n    /**\n     * The users which have interacted to this collector\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * The total number of interactions collected\n     * @type {number}\n     */\n    this.total = 0;\n\n    this.empty = this.empty.bind(this);\n    this.client.incrementMaxListeners();\n\n    if (this.messageId) {\n      this._handleMessageDeletion = this._handleMessageDeletion.bind(this);\n      this.client.on(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n    }\n\n    if (this.channelId) {\n      this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n      this.client.on(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n    }\n\n    if (this.guildId) {\n      this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n      this.client.on(Events.GUILD_DELETE, this._handleGuildDeletion);\n    }\n\n    this.client.on(Events.INTERACTION_CREATE, this.handleCollect);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.INTERACTION_CREATE, this.handleCollect);\n      this.client.removeListener(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n      this.client.removeListener(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n      this.client.removeListener(Events.GUILD_DELETE, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n\n    this.on('collect', interaction => {\n      this.total++;\n      this.users.set(interaction.user.id, interaction.user);\n    });\n  }\n\n  /**\n   * Handles an incoming interaction for possible collection.\n   * @param {Interaction} interaction The interaction to possibly collect\n   * @returns {?Snowflake}\n   * @private\n   */\n  collect(interaction) {\n    /**\n     * Emitted whenever an interaction is collected.\n     * @event InteractionCollector#collect\n     * @param {Interaction} interaction The interaction that was collected\n     */\n    if (this.interactionType && interaction.type !== this.interactionType) return null;\n    if (this.componentType && interaction.componentType !== this.componentType) return null;\n    if (this.messageId && interaction.message?.id !== this.messageId) return null;\n    if (this.channelId && interaction.channelId !== this.channelId) return null;\n    if (this.guildId && interaction.guildId !== this.guildId) return null;\n\n    return interaction.id;\n  }\n\n  /**\n   * Handles an interaction for possible disposal.\n   * @param {Interaction} interaction The interaction that could be disposed of\n   * @returns {?Snowflake}\n   */\n  dispose(interaction) {\n    /**\n     * Emitted whenever an interaction is disposed of.\n     * @event InteractionCollector#dispose\n     * @param {Interaction} interaction The interaction that was disposed of\n     */\n    if (this.type && interaction.type !== this.type) return null;\n    if (this.componentType && interaction.componentType !== this.componentType) return null;\n    if (this.messageId && interaction.message?.id !== this.messageId) return null;\n    if (this.channelId && interaction.channelId !== this.channelId) return null;\n    if (this.guildId && interaction.guildId !== this.guildId) return null;\n\n    return interaction.id;\n  }\n\n  /**\n   * Empties this interaction collector.\n   */\n  empty() {\n    this.total = 0;\n    this.collected.clear();\n    this.users.clear();\n    this.checkEnd();\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.total >= this.options.max) return 'limit';\n    if (this.options.maxComponents && this.collected.size >= this.options.maxComponents) return 'componentLimit';\n    if (this.options.maxUsers && this.users.size >= this.options.maxUsers) return 'userLimit';\n    return null;\n  }\n\n  /**\n   * Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.\n   * @private\n   * @param {Message} message The message that was deleted\n   * @returns {void}\n   */\n  _handleMessageDeletion(message) {\n    if (message.id === this.messageId) {\n      this.stop('messageDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.channelId) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.guildId) {\n      this.stop('guildDelete');\n    }\n  }\n}\n\nmodule.exports = InteractionCollector;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/InteractionCollector.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/InteractionWebhook.js":
/*!**********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/InteractionWebhook.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Webhook = __webpack_require__(/*! ./Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\");\n\n/**\n * Represents a webhook for an Interaction\n * @implements {Webhook}\n */\nclass InteractionWebhook {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Snowflake} id The application's id\n   * @param {string} token The interaction's token\n   */\n  constructor(client, id, token) {\n    /**\n     * The client that instantiated the interaction webhook\n     * @name InteractionWebhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function, valid-jsdoc */\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The content for the reply\n   * @returns {Promise<Message|APIMessage>}\n   */\n  send() {}\n  fetchMessage() {}\n  editMessage() {}\n  deleteMessage() {}\n  get url() {}\n}\n\nWebhook.applyToClass(InteractionWebhook, ['sendSlackMessage', 'edit', 'delete', 'createdTimestamp', 'createdAt']);\n\nmodule.exports = InteractionWebhook;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/InteractionWebhook.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Invite.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Invite.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst IntegrationApplication = __webpack_require__(/*! ./IntegrationApplication */ \"./node_modules/discord.js/src/structures/IntegrationApplication.js\");\nconst InviteStageInstance = __webpack_require__(/*! ./InviteStageInstance */ \"./node_modules/discord.js/src/structures/InviteStageInstance.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { Endpoints } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * Represents an invitation to a guild channel.\n * <warn>The only guaranteed properties are `code`, `channel`, and `url`. Other properties can be missing.</warn>\n * @extends {Base}\n */\nclass Invite extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    const InviteGuild = __webpack_require__(/*! ./InviteGuild */ \"./node_modules/discord.js/src/structures/InviteGuild.js\");\n    const Guild = __webpack_require__(/*! ./Guild */ \"./node_modules/discord.js/src/structures/Guild.js\");\n    /**\n     * The guild the invite is for including welcome screen data if present\n     * @type {?(Guild|InviteGuild)}\n     */\n    this.guild = null;\n    if (data.guild) {\n      this.guild = data.guild instanceof Guild ? data.guild : new InviteGuild(this.client, data.guild);\n    }\n\n    /**\n     * The code for this invite\n     * @type {string}\n     */\n    this.code = data.code;\n\n    /**\n     * The approximate number of online members of the guild this invite is for\n     * @type {?number}\n     */\n    this.presenceCount = data.approximate_presence_count ?? null;\n\n    /**\n     * The approximate total number of members of the guild this invite is for\n     * @type {?number}\n     */\n    this.memberCount = data.approximate_member_count ?? null;\n\n    /**\n     * Whether or not this invite is temporary\n     * @type {?boolean}\n     */\n    this.temporary = data.temporary ?? null;\n\n    /**\n     * The maximum age of the invite, in seconds, 0 if never expires\n     * @type {?number}\n     */\n    this.maxAge = data.max_age ?? null;\n\n    /**\n     * How many times this invite has been used\n     * @type {?number}\n     */\n    this.uses = data.uses ?? null;\n\n    /**\n     * The maximum uses of this invite\n     * @type {?number}\n     */\n    this.maxUses = data.max_uses ?? null;\n\n    /**\n     * The user who created this invite\n     * @type {?User}\n     */\n    this.inviter = data.inviter ? this.client.users._add(data.inviter) : null;\n\n    /**\n     * The user whose stream to display for this voice channel stream invite\n     * @type {?User}\n     */\n    this.targetUser = data.target_user ? this.client.users._add(data.target_user) : null;\n\n    /**\n     * The embedded application to open for this voice channel embedded application invite\n     * @type {?IntegrationApplication}\n     */\n    this.targetApplication = data.target_application\n      ? new IntegrationApplication(this.client, data.target_application)\n      : null;\n\n    /**\n     * The type of the invite target:\n     * * 1: STREAM\n     * * 2: EMBEDDED_APPLICATION\n     * @typedef {number} TargetType\n     * @see {@link https://discord.com/developers/docs/resources/invite#invite-object-invite-target-types}\n     */\n\n    /**\n     * The target type\n     * @type {?TargetType}\n     */\n    this.targetType = data.target_type ?? null;\n\n    /**\n     * The channel the invite is for\n     * @type {Channel}\n     */\n    this.channel = this.client.channels._add(data.channel, this.guild, { cache: false });\n\n    /**\n     * The timestamp the invite was created at\n     * @type {?number}\n     */\n    this.createdTimestamp = 'created_at' in data ? new Date(data.created_at).getTime() : null;\n\n    this._expiresTimestamp = 'expires_at' in data ? new Date(data.expires_at).getTime() : null;\n\n    /**\n     * The stage instance data if there is a public {@link StageInstance} in the stage channel this invite is for\n     * @type {?InviteStageInstance}\n     */\n    this.stageInstance =\n      'stage_instance' in data\n        ? new InviteStageInstance(this.client, data.stage_instance, this.channel.id, this.guild.id)\n        : null;\n  }\n\n  /**\n   * The time the invite was created at\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.createdTimestamp ? new Date(this.createdTimestamp) : null;\n  }\n\n  /**\n   * Whether the invite is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    const guild = this.guild;\n    if (!guild || !this.client.guilds.cache.has(guild.id)) return false;\n    if (!guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return (\n      this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false) ||\n      guild.me.permissions.has(Permissions.FLAGS.MANAGE_GUILD)\n    );\n  }\n\n  /**\n   * The timestamp the invite will expire at\n   * @type {?number}\n   * @readonly\n   */\n  get expiresTimestamp() {\n    return (\n      this._expiresTimestamp ??\n      (this.createdTimestamp && this.maxAge ? this.createdTimestamp + this.maxAge * 1000 : null)\n    );\n  }\n\n  /**\n   * The time the invite will expire at\n   * @type {?Date}\n   * @readonly\n   */\n  get expiresAt() {\n    const { expiresTimestamp } = this;\n    return expiresTimestamp ? new Date(expiresTimestamp) : null;\n  }\n\n  /**\n   * The URL to the invite\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return Endpoints.invite(this.client.options.http.invite, this.code);\n  }\n\n  /**\n   * Deletes this invite.\n   * @param {string} [reason] Reason for deleting this invite\n   * @returns {Promise<Invite>}\n   */\n  async delete(reason) {\n    await this.client.api.invites[this.code].delete({ reason });\n    return this;\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Invite: https://discord.gg/A1b2C3\n   * console.log(`Invite: ${invite}`);\n   */\n  toString() {\n    return this.url;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      url: true,\n      expiresTimestamp: true,\n      presenceCount: false,\n      memberCount: false,\n      uses: false,\n      channel: 'channelId',\n      inviter: 'inviterId',\n      guild: 'guildId',\n    });\n  }\n\n  valueOf() {\n    return this.code;\n  }\n}\n\n/**\n * Regular expression that globally matches Discord invite links\n * @type {RegExp}\n */\nInvite.INVITES_PATTERN = /discord(?:(?:app)?\\.com\\/invite|\\.gg(?:\\/invite)?)\\/([\\w-]{2,255})/gi;\n\nmodule.exports = Invite;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Invite.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/InviteGuild.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/InviteGuild.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst AnonymousGuild = __webpack_require__(/*! ./AnonymousGuild */ \"./node_modules/discord.js/src/structures/AnonymousGuild.js\");\nconst WelcomeScreen = __webpack_require__(/*! ./WelcomeScreen */ \"./node_modules/discord.js/src/structures/WelcomeScreen.js\");\n\n/**\n * Represents a guild received from an invite, includes welcome screen data if available.\n * @extends {AnonymousGuild}\n */\nclass InviteGuild extends AnonymousGuild {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The welcome screen for this invite guild\n     * @type {?WelcomeScreen}\n     */\n    this.welcomeScreen =\n      typeof data.welcome_screen !== 'undefined' ? new WelcomeScreen(this, data.welcome_screen) : null;\n  }\n}\n\nmodule.exports = InviteGuild;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/InviteGuild.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/InviteStageInstance.js":
/*!***********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/InviteStageInstance.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\n\n/**\n * Represents the data about a public {@link StageInstance} in an {@link Invite}.\n * @extends {Base}\n */\nclass InviteStageInstance extends Base {\n  constructor(client, data, channelId, guildId) {\n    super(client);\n\n    /**\n     * The id of the stage channel this invite is for\n     * @type {Snowflake}\n     */\n    this.channelId = channelId;\n\n    /**\n     * The stage channel's guild id\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    /**\n     * The members speaking in the stage channel\n     * @type {Collection<Snowflake, GuildMember>}\n     */\n    this.members = new Collection();\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The topic of the stage instance\n     * @type {string}\n     */\n    this.topic = data.topic;\n\n    /**\n     * The number of users in the stage channel\n     * @type {number}\n     */\n    this.participantCount = data.participant_count;\n\n    /**\n     * The number of users speaking in the stage channel\n     * @type {number}\n     */\n    this.speakerCount = data.speaker_count;\n\n    this.members.clear();\n    for (const rawMember of data.members) {\n      const member = this.guild.members._add(rawMember);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The stage channel this invite is for\n   * @type {?StageChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The guild of the stage channel this invite is for\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n}\n\nmodule.exports = InviteStageInstance;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/InviteStageInstance.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Message.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Message.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst BaseMessageComponent = __webpack_require__(/*! ./BaseMessageComponent */ \"./node_modules/discord.js/src/structures/BaseMessageComponent.js\");\nconst ClientApplication = __webpack_require__(/*! ./ClientApplication */ \"./node_modules/discord.js/src/structures/ClientApplication.js\");\nconst InteractionCollector = __webpack_require__(/*! ./InteractionCollector */ \"./node_modules/discord.js/src/structures/InteractionCollector.js\");\nconst MessageAttachment = __webpack_require__(/*! ./MessageAttachment */ \"./node_modules/discord.js/src/structures/MessageAttachment.js\");\nconst Embed = __webpack_require__(/*! ./MessageEmbed */ \"./node_modules/discord.js/src/structures/MessageEmbed.js\");\nconst Mentions = __webpack_require__(/*! ./MessageMentions */ \"./node_modules/discord.js/src/structures/MessageMentions.js\");\nconst MessagePayload = __webpack_require__(/*! ./MessagePayload */ \"./node_modules/discord.js/src/structures/MessagePayload.js\");\nconst ReactionCollector = __webpack_require__(/*! ./ReactionCollector */ \"./node_modules/discord.js/src/structures/ReactionCollector.js\");\nconst Sticker = __webpack_require__(/*! ./Sticker */ \"./node_modules/discord.js/src/structures/Sticker.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst ReactionManager = __webpack_require__(/*! ../managers/ReactionManager */ \"./node_modules/discord.js/src/managers/ReactionManager.js\");\nconst { InteractionTypes, MessageTypes, SystemMessageTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst MessageFlags = __webpack_require__(/*! ../util/MessageFlags */ \"./node_modules/discord.js/src/util/MessageFlags.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a message on Discord.\n * @extends {Base}\n */\nclass Message extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIMessage} data The data for the message\n   */\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the channel the message was sent in\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n\n    /**\n     * The id of the guild the message was sent in, if any\n     * @type {?Snowflake}\n     */\n    this.guildId = data.guild_id ?? this.channel?.guild?.id ?? null;\n\n    /**\n     * Whether this message has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data, partial = false) {\n    /**\n     * The message's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('type' in data) {\n      /**\n       * The type of the message\n       * @type {?MessageType}\n       */\n      this.type = MessageTypes[data.type];\n\n      /**\n       * Whether or not this message was sent by Discord, not actually a user (e.g. pin notifications)\n       * @type {?boolean}\n       */\n      this.system = SystemMessageTypes.includes(this.type);\n    } else if (typeof this.type !== 'string') {\n      this.system = null;\n      this.type = null;\n    }\n\n    if ('content' in data) {\n      /**\n       * The content of the message\n       * @type {?string}\n       */\n      this.content = data.content;\n    } else if (typeof this.content !== 'string') {\n      this.content = null;\n    }\n\n    if ('author' in data) {\n      /**\n       * The author of the message\n       * @type {?User}\n       */\n      this.author = this.client.users._add(data.author, !data.webhook_id);\n    } else if (!this.author) {\n      this.author = null;\n    }\n\n    if ('pinned' in data) {\n      /**\n       * Whether or not this message is pinned\n       * @type {?boolean}\n       */\n      this.pinned = Boolean(data.pinned);\n    } else if (typeof this.pinned !== 'boolean') {\n      this.pinned = null;\n    }\n\n    if ('tts' in data) {\n      /**\n       * Whether or not the message was Text-To-Speech\n       * @type {?boolean}\n       */\n      this.tts = data.tts;\n    } else if (typeof this.tts !== 'boolean') {\n      this.tts = null;\n    }\n\n    if (!partial) {\n      /**\n       * A random number or string used for checking message delivery\n       * <warn>This is only received after the message was sent successfully, and\n       * lost if re-fetched</warn>\n       * @type {?string}\n       */\n      this.nonce = 'nonce' in data ? data.nonce : null;\n    }\n\n    if ('embeds' in data || !partial) {\n      /**\n       * A list of embeds in the message - e.g. YouTube Player\n       * @type {MessageEmbed[]}\n       */\n      this.embeds = data.embeds?.map(e => new Embed(e, true)) ?? [];\n    } else {\n      this.embeds = this.embeds.slice();\n    }\n\n    if ('components' in data || !partial) {\n      /**\n       * A list of MessageActionRows in the message\n       * @type {MessageActionRow[]}\n       */\n      this.components = data.components?.map(c => BaseMessageComponent.create(c, this.client)) ?? [];\n    } else {\n      this.components = this.components.slice();\n    }\n\n    if ('attachments' in data || !partial) {\n      /**\n       * A collection of attachments in the message - e.g. Pictures - mapped by their ids\n       * @type {Collection<Snowflake, MessageAttachment>}\n       */\n      this.attachments = new Collection();\n      if (data.attachments) {\n        for (const attachment of data.attachments) {\n          this.attachments.set(attachment.id, new MessageAttachment(attachment.url, attachment.filename, attachment));\n        }\n      }\n    } else {\n      this.attachments = new Collection(this.attachemnts);\n    }\n\n    if ('sticker_items' in data || 'stickers' in data || !partial) {\n      /**\n       * A collection of stickers in the message\n       * @type {Collection<Snowflake, Sticker>}\n       */\n      this.stickers = new Collection(\n        (data.sticker_items ?? data.stickers)?.map(s => [s.id, new Sticker(this.client, s)]),\n      );\n    } else {\n      this.stickers = new Collection(this.stickers);\n    }\n\n    if (!partial) {\n      /**\n       * The timestamp the message was sent at\n       * @type {number}\n       */\n      this.createdTimestamp = SnowflakeUtil.deconstruct(this.id).timestamp;\n    }\n\n    if ('edited_timestamp' in data || !partial) {\n      /**\n       * The timestamp the message was last edited at (if applicable)\n       * @type {?number}\n       */\n      this.editedTimestamp = data.edited_timestamp ? new Date(data.edited_timestamp).getTime() : null;\n    }\n\n    if ('reactions' in data || !partial) {\n      /**\n       * A manager of the reactions belonging to this message\n       * @type {ReactionManager}\n       */\n      this.reactions = new ReactionManager(this);\n      if (data.reactions?.length > 0) {\n        for (const reaction of data.reactions) {\n          this.reactions._add(reaction);\n        }\n      }\n    }\n\n    if (!partial) {\n      /**\n       * All valid mentions that the message contains\n       * @type {MessageMentions}\n       */\n      this.mentions = new Mentions(\n        this,\n        data.mentions,\n        data.mention_roles,\n        data.mention_everyone,\n        data.mention_channels,\n        data.referenced_message?.author,\n      );\n    } else {\n      this.mentions = new Mentions(\n        this,\n        data.mentions ?? this.mentions.users,\n        data.mention_roles ?? this.mentions.roles,\n        data.mention_everyone ?? this.mentions.everyone,\n        data.mention_channels ?? this.mentions.crosspostedChannels,\n        data.referenced_message?.author ?? this.mentions.repliedUser,\n      );\n    }\n\n    if ('webhook_id' in data || !partial) {\n      /**\n       * The id of the webhook that sent the message, if applicable\n       * @type {?Snowflake}\n       */\n      this.webhookId = data.webhook_id ?? null;\n    }\n\n    if ('application' in data || !partial) {\n      /**\n       * Supplemental application information for group activities\n       * @type {?ClientApplication}\n       */\n      this.groupActivityApplication = data.application ? new ClientApplication(this.client, data.application) : null;\n    }\n\n    if ('application_id' in data || !partial) {\n      /**\n       * The id of the application of the interaction that sent this message, if any\n       * @type {?Snowflake}\n       */\n      this.applicationId = data.application_id ?? null;\n    }\n\n    if ('activity' in data || !partial) {\n      /**\n       * Group activity\n       * @type {?MessageActivity}\n       */\n      this.activity = data.activity\n        ? {\n            partyId: data.activity.party_id,\n            type: data.activity.type,\n          }\n        : null;\n    }\n    if ('thread' in data) {\n      this.client.channels._add(data.thread, this.guild);\n    }\n    if (this.member && data.member) {\n      this.member._patch(data.member);\n    } else if (data.member && this.guild && this.author) {\n      this.guild.members._add(Object.assign(data.member, { user: this.author }));\n    }\n\n    if ('flags' in data || !partial) {\n      /**\n       * Flags that are applied to the message\n       * @type {Readonly<MessageFlags>}\n       */\n      this.flags = new MessageFlags(data.flags).freeze();\n    } else {\n      this.flags = new MessageFlags(this.flags).freeze();\n    }\n\n    /**\n     * Reference data sent in a message that contains ids identifying the referenced message\n     * @typedef {Object} MessageReference\n     * @property {Snowflake} channelId The channel's id the message was referenced\n     * @property {?Snowflake} guildId The guild's id the message was referenced\n     * @property {?Snowflake} messageId The message's id that was referenced\n     */\n\n    if ('message_reference' in data || !partial) {\n      /**\n       * Message reference data\n       * @type {?MessageReference}\n       */\n      this.reference = data.message_reference\n        ? {\n            channelId: data.message_reference.channel_id,\n            guildId: data.message_reference.guild_id,\n            messageId: data.message_reference.message_id,\n          }\n        : null;\n    }\n\n    if (data.referenced_message) {\n      this.channel?.messages._add({ guild_id: data.message_reference?.guild_id, ...data.referenced_message });\n    }\n\n    /**\n     * Partial data of the interaction that a message is a reply to\n     * @typedef {Object} MessageInteraction\n     * @property {Snowflake} id The interaction's id\n     * @property {InteractionType} type The type of the interaction\n     * @property {string} commandName The name of the interaction's application command\n     * @property {User} user The user that invoked the interaction\n     */\n\n    if (data.interaction) {\n      /**\n       * Partial data of the interaction that this message is a reply to\n       * @type {?MessageInteraction}\n       */\n      this.interaction = {\n        id: data.interaction.id,\n        type: InteractionTypes[data.interaction.type],\n        commandName: data.interaction.name,\n        user: this.client.users._add(data.interaction.user),\n      };\n    } else if (!this.interaction) {\n      this.interaction = null;\n    }\n  }\n\n  _update(data, partial = false) {\n    const clone = this._clone();\n    this._patch(data, partial);\n    return clone;\n  }\n\n  /**\n   * The channel that the message was sent in\n   * @type {TextChannel|DMChannel|NewsChannel|ThreadChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * Whether or not this message is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.content !== 'string' || !this.author;\n  }\n\n  /**\n   * Represents the author of the message as a guild member.\n   * Only available if the message comes from a guild where the author is still a member\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.author) ?? null;\n  }\n\n  /**\n   * The time the message was sent at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The time the message was last edited at (if applicable)\n   * @type {?Date}\n   * @readonly\n   */\n  get editedAt() {\n    return this.editedTimestamp ? new Date(this.editedTimestamp) : null;\n  }\n\n  /**\n   * The guild the message was sent in (if in a guild channel)\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId) ?? this.channel?.guild ?? null;\n  }\n\n  /**\n   * Whether this message has a thread associated with it\n   * @type {boolean}\n   * @readonly\n   */\n  get hasThread() {\n    return this.flags.has(MessageFlags.FLAGS.HAS_THREAD);\n  }\n\n  /**\n   * The thread started by this message\n   * <info>This property is not suitable for checking whether a message has a thread,\n   * use {@link Message#hasThread} instead.</info>\n   * @type {?ThreadChannel}\n   * @readonly\n   */\n  get thread() {\n    return this.channel?.threads?.resolve(this.id) ?? null;\n  }\n\n  /**\n   * The url to jump to this message\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return `https://discord.com/channels/${this.guildId ?? '@me'}/${this.channelId}/${this.id}`;\n  }\n\n  /**\n   * The message contents with all mentions replaced by the equivalent text.\n   * If mentions cannot be resolved to a name, the relevant mention in the message content will not be converted.\n   * @type {?string}\n   * @readonly\n   */\n  get cleanContent() {\n    // eslint-disable-next-line eqeqeq\n    return this.content != null ? Util.cleanContent(this.content, this.channel) : null;\n  }\n\n  /**\n   * Creates a reaction collector.\n   * @param {ReactionCollectorOptions} [options={}] Options to send to the collector\n   * @returns {ReactionCollector}\n   * @example\n   * // Create a reaction collector\n   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId';\n   * const collector = message.createReactionCollector({ filter, time: 15000 });\n   * collector.on('collect', r => console.log(`Collected ${r.emoji.name}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createReactionCollector(options = {}) {\n    return new ReactionCollector(this, options);\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {ReactionCollectorOptions} AwaitReactionsOptions\n   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject\n   */\n\n  /**\n   * Similar to createReactionCollector but in promise form.\n   * Resolves with a collection of reactions that pass the specified filter.\n   * @param {AwaitReactionsOptions} [options={}] Optional options to pass to the internal collector\n   * @returns {Promise<Collection<string, MessageReaction>>}\n   * @example\n   * // Create a reaction collector\n   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId'\n   * message.awaitReactions({ filter, time: 15000 })\n   *   .then(collected => console.log(`Collected ${collected.size} reactions`))\n   *   .catch(console.error);\n   */\n  awaitReactions(options = {}) {\n    return new Promise((resolve, reject) => {\n      const collector = this.createReactionCollector(options);\n      collector.once('end', (reactions, reason) => {\n        if (options.errors?.includes(reason)) reject(reactions);\n        else resolve(reactions);\n      });\n    });\n  }\n\n  /**\n   * @typedef {CollectorOptions} MessageComponentCollectorOptions\n   * @property {MessageComponentType} [componentType] The type of component to listen for\n   * @property {number} [max] The maximum total amount of interactions to collect\n   * @property {number} [maxComponents] The maximum number of components to collect\n   * @property {number} [maxUsers] The maximum number of users to interact\n   */\n\n  /**\n   * Creates a message component interaction collector.\n   * @param {MessageComponentCollectorOptions} [options={}] Options to send to the collector\n   * @returns {InteractionCollector}\n   * @example\n   * // Create a message component interaction collector\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * const collector = message.createMessageComponentCollector({ filter, time: 15000 });\n   * collector.on('collect', i => console.log(`Collected ${i.customId}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageComponentCollector(options = {}) {\n    return new InteractionCollector(this.client, {\n      ...options,\n      interactionType: InteractionTypes.MESSAGE_COMPONENT,\n      message: this,\n    });\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {Object} AwaitMessageComponentOptions\n   * @property {CollectorFilter} [filter] The filter applied to this collector\n   * @property {number} [time] Time to wait for an interaction before rejecting\n   * @property {MessageComponentType} [componentType] The type of component interaction to collect\n   */\n\n  /**\n   * Collects a single component interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitMessageComponentOptions} [options={}] Options to pass to the internal collector\n   * @returns {Promise<MessageComponentInteraction>}\n   * @example\n   * // Collect a message component interaction\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * message.awaitMessageComponent({ filter, time: 15000 })\n   *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n   *   .catch(console.error);\n   */\n  awaitMessageComponent(options = {}) {\n    const _options = { ...options, max: 1 };\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageComponentCollector(_options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new Error('INTERACTION_COLLECTOR_ERROR', reason));\n      });\n    });\n  }\n\n  /**\n   * Whether the message is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    return this.author.id === this.client.user.id;\n  }\n\n  /**\n   * Whether the message is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    return Boolean(\n      !this.deleted &&\n        (this.author.id === this.client.user.id ||\n          this.channel.permissionsFor?.(this.client.user)?.has(Permissions.FLAGS.MANAGE_MESSAGES)),\n    );\n  }\n\n  /**\n   * Whether the message is pinnable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get pinnable() {\n    return (\n      this.type === 'DEFAULT' &&\n      (!this.guild || this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_MESSAGES, false))\n    );\n  }\n\n  /**\n   * Fetches the Message this crosspost/reply/pin-add references, if available to the client\n   * @returns {Promise<Message>}\n   */\n  async fetchReference() {\n    if (!this.reference) throw new Error('MESSAGE_REFERENCE_MISSING');\n    const { channelId, messageId } = this.reference;\n    const channel = this.client.channels.resolve(channelId);\n    if (!channel) throw new Error('GUILD_CHANNEL_RESOLVE');\n    const message = await channel.messages.fetch(messageId);\n    return message;\n  }\n\n  /**\n   * Whether the message is crosspostable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get crosspostable() {\n    return (\n      this.channel.type === 'GUILD_NEWS' &&\n      !this.flags.has(MessageFlags.FLAGS.CROSSPOSTED) &&\n      this.type === 'DEFAULT' &&\n      this.channel.viewable &&\n      this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.SEND_MESSAGES) &&\n      (this.author.id === this.client.user.id ||\n        this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_MESSAGES))\n    );\n  }\n\n  /**\n   * Options that can be passed into {@link Message#edit}.\n   * @typedef {Object} MessageEditOptions\n   * @property {?string} [content] Content to be edited\n   * @property {MessageEmbed[]|APIEmbed[]} [embeds] Embeds to be added/edited\n   * @property {MessageMentionOptions} [allowedMentions] Which mentions should be parsed from the message content\n   * @property {MessageFlags} [flags] Which flags to set for the message. Only `SUPPRESS_EMBEDS` can be edited.\n   * @property {MessageAttachment[]} [attachments] An array of attachments to keep,\n   * all attachments will be kept if omitted\n   * @property {FileOptions[]|BufferResolvable[]|MessageAttachment[]} [files] Files to add to the message\n   * @property {MessageActionRow[]|MessageActionRowOptions[]} [components]\n   * Action rows containing interactive components for the message (buttons, select menus)\n   */\n\n  /**\n   * Edits the content of the message.\n   * @param {string|MessagePayload|MessageEditOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Update the content of a message\n   * message.edit('This is my new content!')\n   *   .then(msg => console.log(`Updated the content of a message to ${msg.content}`))\n   *   .catch(console.error);\n   */\n  edit(options) {\n    return this.channel.messages.edit(this, options);\n  }\n\n  /**\n   * Publishes a message in an announcement channel to all channels following it.\n   * @returns {Promise<Message>}\n   * @example\n   * // Crosspost a message\n   * if (message.channel.type === 'GUILD_NEWS') {\n   *   message.crosspost()\n   *     .then(() => console.log('Crossposted message'))\n   *     .catch(console.error);\n   * }\n   */\n  crosspost() {\n    return this.channel.messages.crosspost(this.id);\n  }\n\n  /**\n   * Pins this message to the channel's pinned messages.\n   * @returns {Promise<Message>}\n   * @example\n   * // Pin a message\n   * message.pin()\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async pin() {\n    await this.channel.messages.pin(this.id);\n    return this;\n  }\n\n  /**\n   * Unpins this message from the channel's pinned messages.\n   * @returns {Promise<Message>}\n   * @example\n   * // Unpin a message\n   * message.unpin()\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async unpin() {\n    await this.channel.messages.unpin(this.id);\n    return this;\n  }\n\n  /**\n   * Adds a reaction to the message.\n   * @param {EmojiIdentifierResolvable} emoji The emoji to react with\n   * @returns {Promise<MessageReaction>}\n   * @example\n   * // React to a message with a unicode emoji\n   * message.react('🤔')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // React to a message with a custom emoji\n   * message.react(message.guild.emojis.cache.get('123456789012345678'))\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async react(emoji) {\n    emoji = this.client.emojis.resolveIdentifier(emoji);\n    await this.channel.messages.react(this.id, emoji);\n    return this.client.actions.MessageReactionAdd.handle({\n      user: this.client.user,\n      channel: this.channel,\n      message: this,\n      emoji: Util.parseEmoji(emoji),\n    }).reaction;\n  }\n\n  /**\n   * Deletes the message.\n   * @returns {Promise<Message>}\n   * @example\n   * // Delete a message\n   * message.delete()\n   *   .then(msg => console.log(`Deleted message from ${msg.author.username}`))\n   *   .catch(console.error);\n   */\n  async delete() {\n    await this.channel.messages.delete(this.id);\n    return this;\n  }\n\n  /**\n   * Options provided when sending a message as an inline reply.\n   * @typedef {BaseMessageOptions} ReplyMessageOptions\n   * @property {boolean} [failIfNotExists=true] Whether to error if the referenced message\n   * does not exist (creates a standard message in this case when false)\n   */\n\n  /**\n   * Send an inline reply to this message.\n   * @param {string|MessagePayload|ReplyMessageOptions} options The options to provide\n   * @returns {Promise<Message|Message[]>}\n   * @example\n   * // Reply to a message\n   * message.reply('This is a reply!')\n   *   .then(() => console.log(`Replied to message \"${message.content}\"`))\n   *   .catch(console.error);\n   */\n  reply(options) {\n    let data;\n\n    if (options instanceof MessagePayload) {\n      data = options;\n    } else {\n      data = MessagePayload.create(this, options, {\n        reply: {\n          messageReference: this,\n          failIfNotExists: options?.failIfNotExists ?? this.client.options.failIfNotExists,\n        },\n      });\n    }\n    return this.channel.send(data);\n  }\n\n  /**\n   * Options for starting a thread on a message.\n   * @typedef {Object} StartThreadOptions\n   * @property {string} name The name of the new thread\n   * @property {ThreadAutoArchiveDuration} autoArchiveDuration The amount of time (in minutes) after which the thread\n   * should automatically archive in case of no recent activity\n   * @property {string} [reason] Reason for creating the thread\n   */\n\n  /**\n   * Create a new public thread from this message\n   * @see ThreadManager#create\n   * @param {StartThreadOptions} [options] Options for starting a thread on this message\n   * @returns {Promise<ThreadChannel>}\n   */\n  startThread(options = {}) {\n    if (!['GUILD_TEXT', 'GUILD_NEWS'].includes(this.channel.type)) {\n      return Promise.reject(new Error('MESSAGE_THREAD_PARENT'));\n    }\n    if (this.hasThread) return Promise.reject(new Error('MESSAGE_EXISTING_THREAD'));\n    return this.channel.threads.create({ ...options, startMessage: this });\n  }\n\n  /**\n   * Fetch this message.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<Message>}\n   */\n  fetch(force = true) {\n    return this.channel.messages.fetch(this.id, { force });\n  }\n\n  /**\n   * Fetches the webhook used to create this message.\n   * @returns {Promise<?Webhook>}\n   */\n  fetchWebhook() {\n    if (!this.webhookId) return Promise.reject(new Error('WEBHOOK_MESSAGE'));\n    return this.client.fetchWebhook(this.webhookId);\n  }\n\n  /**\n   * Suppresses or unsuppresses embeds on a message.\n   * @param {boolean} [suppress=true] If the embeds should be suppressed or not\n   * @returns {Promise<Message>}\n   */\n  suppressEmbeds(suppress = true) {\n    const flags = new MessageFlags(this.flags.bitfield);\n\n    if (suppress) {\n      flags.add(MessageFlags.FLAGS.SUPPRESS_EMBEDS);\n    } else {\n      flags.remove(MessageFlags.FLAGS.SUPPRESS_EMBEDS);\n    }\n\n    return this.edit({ flags });\n  }\n\n  /**\n   * Removes the attachments from this message.\n   * @returns {Promise<Message>}\n   */\n  removeAttachments() {\n    return this.edit({ attachments: [] });\n  }\n\n  /**\n   * Used mainly internally. Whether two messages are identical in properties. If you want to compare messages\n   * without checking all the properties, use `message.id === message2.id`, which is much more efficient. This\n   * method allows you to see if there are differences in content, embeds, attachments, nonce and tts properties.\n   * @param {Message} message The message to compare it to\n   * @param {APIMessage} rawData Raw data passed through the WebSocket about this message\n   * @returns {boolean}\n   */\n  equals(message, rawData) {\n    if (!message) return false;\n    const embedUpdate = !message.author && !message.attachments;\n    if (embedUpdate) return this.id === message.id && this.embeds.length === message.embeds.length;\n\n    let equal =\n      this.id === message.id &&\n      this.author.id === message.author.id &&\n      this.content === message.content &&\n      this.tts === message.tts &&\n      this.nonce === message.nonce &&\n      this.embeds.length === message.embeds.length &&\n      this.attachments.length === message.attachments.length;\n\n    if (equal && rawData) {\n      equal =\n        this.mentions.everyone === message.mentions.everyone &&\n        this.createdTimestamp === new Date(rawData.timestamp).getTime() &&\n        this.editedTimestamp === new Date(rawData.edited_timestamp).getTime();\n    }\n\n    return equal;\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the message's content instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Message: This is a message!\n   * console.log(`Message: ${message}`);\n   */\n  toString() {\n    return this.content;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      channel: 'channelId',\n      author: 'authorId',\n      groupActivityApplication: 'groupActivityApplicationId',\n      guild: 'guildId',\n      cleanContent: true,\n      member: false,\n      reactions: false,\n    });\n  }\n}\n\nmodule.exports = Message;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Message.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageActionRow.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageActionRow.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseMessageComponent = __webpack_require__(/*! ./BaseMessageComponent */ \"./node_modules/discord.js/src/structures/BaseMessageComponent.js\");\nconst { MessageComponentTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Represents an action row containing message components.\n * @extends {BaseMessageComponent}\n */\nclass MessageActionRow extends BaseMessageComponent {\n  /**\n   * Components that can be placed in an action row\n   * * MessageButton\n   * * MessageSelectMenu\n   * @typedef {MessageButton|MessageSelectMenu} MessageActionRowComponent\n   */\n\n  /**\n   * Options for components that can be placed in an action row\n   * * MessageButtonOptions\n   * * MessageSelectMenuOptions\n   * @typedef {MessageButtonOptions|MessageSelectMenuOptions} MessageActionRowComponentOptions\n   */\n\n  /**\n   * Data that can be resolved into components that can be placed in an action row\n   * * MessageActionRowComponent\n   * * MessageActionRowComponentOptions\n   * @typedef {MessageActionRowComponent|MessageActionRowComponentOptions} MessageActionRowComponentResolvable\n   */\n\n  /**\n   * @typedef {BaseMessageComponentOptions} MessageActionRowOptions\n   * @property {MessageActionRowComponentResolvable[]} [components]\n   * The components to place in this action row\n   */\n\n  /**\n   * @param {MessageActionRow|MessageActionRowOptions} [data={}] MessageActionRow to clone or raw data\n   * @param {Client} [client] The client constructing this MessageActionRow, if provided\n   */\n  constructor(data = {}, client = null) {\n    super({ type: 'ACTION_ROW' });\n\n    /**\n     * The components in this action row\n     * @type {MessageActionRowComponent[]}\n     */\n    this.components = data.components?.map(c => BaseMessageComponent.create(c, client)) ?? [];\n  }\n\n  /**\n   * Adds components to the action row.\n   * @param {...MessageActionRowComponentResolvable[]} components The components to add\n   * @returns {MessageActionRow}\n   */\n  addComponents(...components) {\n    this.components.push(...components.flat(Infinity).map(c => BaseMessageComponent.create(c)));\n    return this;\n  }\n\n  /**\n   * Removes, replaces, and inserts components in the action row.\n   * @param {number} index The index to start at\n   * @param {number} deleteCount The number of components to remove\n   * @param {...MessageActionRowComponentResolvable[]} [components] The replacing components\n   * @returns {MessageActionRow}\n   */\n  spliceComponents(index, deleteCount, ...components) {\n    this.components.splice(index, deleteCount, ...components.flat(Infinity).map(c => BaseMessageComponent.create(c)));\n    return this;\n  }\n\n  /**\n   * Transforms the action row to a plain object.\n   * @returns {APIMessageComponent} The raw data of this action row\n   */\n  toJSON() {\n    return {\n      components: this.components.map(c => c.toJSON()),\n      type: MessageComponentTypes[this.type],\n    };\n  }\n}\n\nmodule.exports = MessageActionRow;\n\n/**\n * @external APIMessageComponent\n * @see {@link https://discord.com/developers/docs/interactions/message-components#component-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageActionRow.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageAttachment.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageAttachment.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents an attachment in a message.\n */\nclass MessageAttachment {\n  /**\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @param {APIAttachment} [data] Extra data\n   */\n  constructor(attachment, name = null, data) {\n    this.attachment = attachment;\n    /**\n     * The name of this attachment\n     * @type {?string}\n     */\n    this.name = name;\n    if (data) this._patch(data);\n  }\n\n  /**\n   * Sets the file of this attachment.\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @returns {MessageAttachment} This attachment\n   */\n  setFile(attachment, name = null) {\n    this.attachment = attachment;\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Sets the name of this attachment.\n   * @param {string} name The name of the file\n   * @returns {MessageAttachment} This attachment\n   */\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n\n  _patch(data) {\n    /**\n     * The attachment's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The size of this attachment in bytes\n     * @type {number}\n     */\n    this.size = data.size;\n\n    /**\n     * The URL to this attachment\n     * @type {string}\n     */\n    this.url = data.url;\n\n    /**\n     * The Proxy URL to this attachment\n     * @type {string}\n     */\n    this.proxyURL = data.proxy_url;\n\n    /**\n     * The height of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.height = data.height ?? null;\n\n    /**\n     * The width of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.width = data.width ?? null;\n\n    /**\n     * This media type of this attachment\n     * @type {?string}\n     */\n    this.contentType = data.content_type ?? null;\n  }\n\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n  get spoiler() {\n    return Util.basename(this.url).startsWith('SPOILER_');\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\nmodule.exports = MessageAttachment;\n\n/**\n * @external APIAttachment\n * @see {@link https://discord.com/developers/docs/resources/channel#attachment-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageAttachment.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageButton.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageButton.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseMessageComponent = __webpack_require__(/*! ./BaseMessageComponent */ \"./node_modules/discord.js/src/structures/BaseMessageComponent.js\");\nconst { RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { MessageButtonStyles, MessageComponentTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a button message component.\n * @extends {BaseMessageComponent}\n */\nclass MessageButton extends BaseMessageComponent {\n  /**\n   * @typedef {BaseMessageComponentOptions} MessageButtonOptions\n   * @property {string} [label] The text to be displayed on this button\n   * @property {string} [customId] A unique string to be sent in the interaction when clicked\n   * @property {MessageButtonStyleResolvable} [style] The style of this button\n   * @property {EmojiIdentifierResolvable} [emoji] The emoji to be displayed to the left of the text\n   * @property {string} [url] Optional URL for link-style buttons\n   * @property {boolean} [disabled=false] Disables the button to prevent interactions\n   */\n\n  /**\n   * @param {MessageButton|MessageButtonOptions} [data={}] MessageButton to clone or raw data\n   */\n  constructor(data = {}) {\n    super({ type: 'BUTTON' });\n\n    this.setup(data);\n  }\n\n  setup(data) {\n    /**\n     * The text to be displayed on this button\n     * @type {?string}\n     */\n    this.label = data.label ?? null;\n\n    /**\n     * A unique string to be sent in the interaction when clicked\n     * @type {?string}\n     */\n    this.customId = data.custom_id ?? data.customId ?? null;\n\n    /**\n     * The style of this button\n     * @type {?MessageButtonStyle}\n     */\n    this.style = data.style ? MessageButton.resolveStyle(data.style) : null;\n\n    /**\n     * Emoji for this button\n     * @type {?RawEmoji}\n     */\n    this.emoji = data.emoji ? Util.resolvePartialEmoji(data.emoji) : null;\n\n    /**\n     * The URL this button links to, if it is a Link style button\n     * @type {?string}\n     */\n    this.url = data.url ?? null;\n\n    /**\n     * Whether this button is currently disabled\n     * @type {boolean}\n     */\n    this.disabled = data.disabled ?? false;\n  }\n\n  /**\n   * Sets the custom id for this button\n   * @param {string} customId A unique string to be sent in the interaction when clicked\n   * @returns {MessageButton}\n   */\n  setCustomId(customId) {\n    this.customId = Util.verifyString(customId, RangeError, 'BUTTON_CUSTOM_ID');\n    return this;\n  }\n\n  /**\n   * Sets the interactive status of the button\n   * @param {boolean} [disabled=true] Whether this button should be disabled\n   * @returns {MessageButton}\n   */\n  setDisabled(disabled = true) {\n    this.disabled = disabled;\n    return this;\n  }\n\n  /**\n   * Set the emoji of this button\n   * @param {EmojiIdentifierResolvable} emoji The emoji to be displayed on this button\n   * @returns {MessageButton}\n   */\n  setEmoji(emoji) {\n    this.emoji = Util.resolvePartialEmoji(emoji);\n    return this;\n  }\n\n  /**\n   * Sets the label of this button\n   * @param {string} label The text to be displayed on this button\n   * @returns {MessageButton}\n   */\n  setLabel(label) {\n    this.label = Util.verifyString(label, RangeError, 'BUTTON_LABEL');\n    return this;\n  }\n\n  /**\n   * Sets the style of this button\n   * @param {MessageButtonStyleResolvable} style The style of this button\n   * @returns {MessageButton}\n   */\n  setStyle(style) {\n    this.style = MessageButton.resolveStyle(style);\n    return this;\n  }\n\n  /**\n   * Sets the URL of this button.\n   * <note>MessageButton#style must be LINK when setting a URL</note>\n   * @param {string} url The URL of this button\n   * @returns {MessageButton}\n   */\n  setURL(url) {\n    this.url = Util.verifyString(url, RangeError, 'BUTTON_URL');\n    return this;\n  }\n\n  /**\n   * Transforms the button to a plain object.\n   * @returns {APIMessageComponent} The raw data of this button\n   */\n  toJSON() {\n    return {\n      custom_id: this.customId,\n      disabled: this.disabled,\n      emoji: this.emoji,\n      label: this.label,\n      style: MessageButtonStyles[this.style],\n      type: MessageComponentTypes[this.type],\n      url: this.url,\n    };\n  }\n\n  /**\n   * Data that can be resolved to a MessageButtonStyle. This can be\n   * * MessageButtonStyle\n   * * number\n   * @typedef {number|MessageButtonStyle} MessageButtonStyleResolvable\n   */\n\n  /**\n   * Resolves the style of a button\n   * @param {MessageButtonStyleResolvable} style The style to resolve\n   * @returns {MessageButtonStyle}\n   * @private\n   */\n  static resolveStyle(style) {\n    return typeof style === 'string' ? style : MessageButtonStyles[style];\n  }\n}\n\nmodule.exports = MessageButton;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageButton.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageCollector.js":
/*!********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageCollector.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Collector = __webpack_require__(/*! ./interfaces/Collector */ \"./node_modules/discord.js/src/structures/interfaces/Collector.js\");\nconst { Events } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * @typedef {CollectorOptions} MessageCollectorOptions\n * @property {number} max The maximum amount of messages to collect\n * @property {number} maxProcessed The maximum amount of messages to process\n */\n\n/**\n * Collects messages on a channel.\n * Will automatically stop if the channel (`'channelDelete'`) or guild (`'guildDelete'`) are deleted.\n * @extends {Collector}\n */\nclass MessageCollector extends Collector {\n  /**\n   * @param {TextBasedChannels} channel The channel\n   * @param {MessageCollectorOptions} options The options to be applied to this collector\n   * @emits MessageCollector#message\n   */\n  constructor(channel, options = {}) {\n    super(channel.client, options);\n\n    /**\n     * The channel\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * Total number of messages that were received in the channel during message collection\n     * @type {number}\n     */\n    this.received = 0;\n\n    const bulkDeleteListener = messages => {\n      for (const message of messages.values()) this.handleDispose(message);\n    };\n    this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n    this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n\n    this.client.incrementMaxListeners();\n    this.client.on(Events.MESSAGE_CREATE, this.handleCollect);\n    this.client.on(Events.MESSAGE_DELETE, this.handleDispose);\n    this.client.on(Events.MESSAGE_BULK_DELETE, bulkDeleteListener);\n    this.client.on(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n    this.client.on(Events.GUILD_DELETE, this._handleGuildDeletion);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.MESSAGE_CREATE, this.handleCollect);\n      this.client.removeListener(Events.MESSAGE_DELETE, this.handleDispose);\n      this.client.removeListener(Events.MESSAGE_BULK_DELETE, bulkDeleteListener);\n      this.client.removeListener(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n      this.client.removeListener(Events.GUILD_DELETE, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n  }\n\n  /**\n   * Handles a message for possible collection.\n   * @param {Message} message The message that could be collected\n   * @returns {?Snowflake}\n   * @private\n   */\n  collect(message) {\n    /**\n     * Emitted whenever a message is collected.\n     * @event MessageCollector#collect\n     * @param {Message} message The message that was collected\n     */\n    if (message.channelId !== this.channel.id) return null;\n    this.received++;\n    return message.id;\n  }\n\n  /**\n   * Handles a message for possible disposal.\n   * @param {Message} message The message that could be disposed of\n   * @returns {?Snowflake}\n   */\n  dispose(message) {\n    /**\n     * Emitted whenever a message is disposed of.\n     * @event MessageCollector#dispose\n     * @param {Message} message The message that was disposed of\n     */\n    return message.channelId === this.channel.id ? message.id : null;\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.collected.size >= this.options.max) return 'limit';\n    if (this.options.maxProcessed && this.received === this.options.maxProcessed) return 'processedLimit';\n    return null;\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.channel.id) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.channel.guild?.id) {\n      this.stop('guildDelete');\n    }\n  }\n}\n\nmodule.exports = MessageCollector;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageCollector.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageComponentInteraction.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageComponentInteraction.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Interaction = __webpack_require__(/*! ./Interaction */ \"./node_modules/discord.js/src/structures/Interaction.js\");\nconst InteractionWebhook = __webpack_require__(/*! ./InteractionWebhook */ \"./node_modules/discord.js/src/structures/InteractionWebhook.js\");\nconst InteractionResponses = __webpack_require__(/*! ./interfaces/InteractionResponses */ \"./node_modules/discord.js/src/structures/interfaces/InteractionResponses.js\");\nconst { MessageComponentTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Represents a message component interaction.\n * @extends {Interaction}\n * @implements {InteractionResponses}\n */\nclass MessageComponentInteraction extends Interaction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The message to which the component was attached\n     * @type {Message|APIMessage}\n     */\n    this.message = this.channel?.messages._add(data.message) ?? data.message;\n\n    /**\n     * The custom id of the component which was interacted with\n     * @type {string}\n     */\n    this.customId = data.data.custom_id;\n\n    /**\n     * The type of component which was interacted with\n     * @type {string}\n     */\n    this.componentType = MessageComponentInteraction.resolveType(data.data.component_type);\n\n    /**\n     * Whether the reply to this interaction has been deferred\n     * @type {boolean}\n     */\n    this.deferred = false;\n\n    /**\n     * Whether the reply to this interaction is ephemeral\n     * @type {?boolean}\n     */\n    this.ephemeral = null;\n\n    /**\n     * Whether this interaction has already been replied to\n     * @type {boolean}\n     */\n    this.replied = false;\n\n    /**\n     * An associated interaction webhook, can be used to further interact with this interaction\n     * @type {InteractionWebhook}\n     */\n    this.webhook = new InteractionWebhook(this.client, this.applicationId, this.token);\n  }\n\n  /**\n   * Raw message components from the API\n   * * APIMessageButton\n   * * APIMessageSelectMenu\n   * @typedef {APIMessageButton|APIMessageSelectMenu} APIMessageActionRowComponent\n   */\n\n  /**\n   * The component which was interacted with\n   * @type {?(MessageActionRowComponent|APIMessageActionRowComponent)}\n   * @readonly\n   */\n  get component() {\n    return (\n      this.message.components\n        .flatMap(row => row.components)\n        .find(component => (component.customId ?? component.custom_id) === this.customId) ?? null\n    );\n  }\n\n  /**\n   * Resolves the type of a MessageComponent\n   * @param {MessageComponentTypeResolvable} type The type to resolve\n   * @returns {MessageComponentType}\n   * @private\n   */\n  static resolveType(type) {\n    return typeof type === 'string' ? type : MessageComponentTypes[type];\n  }\n\n  // These are here only for documentation purposes - they are implemented by InteractionResponses\n  /* eslint-disable no-empty-function */\n  deferReply() {}\n  reply() {}\n  fetchReply() {}\n  editReply() {}\n  deleteReply() {}\n  followUp() {}\n  deferUpdate() {}\n  update() {}\n}\n\nInteractionResponses.applyToClass(MessageComponentInteraction);\n\nmodule.exports = MessageComponentInteraction;\n\n/**\n * @external APIMessageSelectMenu\n * @see {@link https://discord.com/developers/docs/interactions/message-components#select-menu-object}\n */\n\n/**\n * @external APIMessageButton\n * @see {@link https://discord.com/developers/docs/interactions/message-components#button-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageComponentInteraction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageEmbed.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageEmbed.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents an embed in a message (image/video preview, rich embed, etc.)\n */\nclass MessageEmbed {\n  /**\n   * @name MessageEmbed\n   * @kind constructor\n   * @memberof MessageEmbed\n   * @param {MessageEmbed|MessageEmbedOptions} [data={}] MessageEmbed to clone or raw embed data\n   */\n\n  /**\n   * A `Partial` object is a representation of any existing object.\n   * This object contains between 0 and all of the original objects parameters.\n   * This is true regardless of whether the parameters are optional in the base object.\n   * @typedef {Object} Partial\n   */\n\n  /**\n   * Represents the possible options for a MessageEmbed\n   * @typedef {Object} MessageEmbedOptions\n   * @property {string} [title] The title of this embed\n   * @property {string} [description] The description of this embed\n   * @property {string} [url] The URL of this embed\n   * @property {Date|number} [timestamp] The timestamp of this embed\n   * @property {ColorResolvable} [color] The color of this embed\n   * @property {EmbedFieldData[]} [fields] The fields of this embed\n   * @property {Partial<MessageEmbedAuthor>} [author] The author of this embed\n   * @property {Partial<MessageEmbedThumbnail>} [thumbnail] The thumbnail of this embed\n   * @property {Partial<MessageEmbedImage>} [image] The image of this embed\n   * @property {Partial<MessageEmbedVideo>} [video] The video of this embed\n   * @property {Partial<MessageEmbedFooter>} [footer] The footer of this embed\n   */\n\n  constructor(data = {}, skipValidation = false) {\n    this.setup(data, skipValidation);\n  }\n\n  setup(data, skipValidation) {\n    /**\n     * The type of this embed, either:\n     * * `rich` - a generic embed rendered from embed attributes\n     * * `image` - an image embed\n     * * `video` - a video embed\n     * * `gifv` - an animated gif image embed rendered as a video embed\n     * * `article` - an article embed\n     * * `link` - a link embed\n     * @type {string}\n     * @see {@link https://discord.com/developers/docs/resources/channel#embed-object-embed-types}\n     * @deprecated\n     */\n    this.type = data.type ?? 'rich';\n\n    /**\n     * The title of this embed\n     * @type {?string}\n     */\n    this.title = data.title ?? null;\n\n    /**\n     * The description of this embed\n     * @type {?string}\n     */\n    this.description = data.description ?? null;\n\n    /**\n     * The URL of this embed\n     * @type {?string}\n     */\n    this.url = data.url ?? null;\n\n    /**\n     * The color of this embed\n     * @type {?number}\n     */\n    this.color = 'color' in data ? Util.resolveColor(data.color) : null;\n\n    /**\n     * The timestamp of this embed\n     * @type {?number}\n     */\n    this.timestamp = 'timestamp' in data ? new Date(data.timestamp).getTime() : null;\n\n    /**\n     * Represents a field of a MessageEmbed\n     * @typedef {Object} EmbedField\n     * @property {string} name The name of this field\n     * @property {string} value The value of this field\n     * @property {boolean} inline If this field will be displayed inline\n     */\n\n    /**\n     * The fields of this embed\n     * @type {EmbedField[]}\n     */\n    this.fields = [];\n    if (data.fields) {\n      this.fields = skipValidation ? data.fields.map(Util.cloneObject) : this.constructor.normalizeFields(data.fields);\n    }\n\n    /**\n     * Represents the thumbnail of a MessageEmbed\n     * @typedef {Object} MessageEmbedThumbnail\n     * @property {string} url URL for this thumbnail\n     * @property {string} proxyURL ProxyURL for this thumbnail\n     * @property {number} height Height of this thumbnail\n     * @property {number} width Width of this thumbnail\n     */\n\n    /**\n     * The thumbnail of this embed (if there is one)\n     * @type {?MessageEmbedThumbnail}\n     */\n    this.thumbnail = data.thumbnail\n      ? {\n          url: data.thumbnail.url,\n          proxyURL: data.thumbnail.proxyURL ?? data.thumbnail.proxy_url,\n          height: data.thumbnail.height,\n          width: data.thumbnail.width,\n        }\n      : null;\n\n    /**\n     * Represents the image of a MessageEmbed\n     * @typedef {Object} MessageEmbedImage\n     * @property {string} url URL for this image\n     * @property {string} proxyURL ProxyURL for this image\n     * @property {number} height Height of this image\n     * @property {number} width Width of this image\n     */\n\n    /**\n     * The image of this embed, if there is one\n     * @type {?MessageEmbedImage}\n     */\n    this.image = data.image\n      ? {\n          url: data.image.url,\n          proxyURL: data.image.proxyURL ?? data.image.proxy_url,\n          height: data.image.height,\n          width: data.image.width,\n        }\n      : null;\n\n    /**\n     * Represents the video of a MessageEmbed\n     * @typedef {Object} MessageEmbedVideo\n     * @property {string} url URL of this video\n     * @property {string} proxyURL ProxyURL for this video\n     * @property {number} height Height of this video\n     * @property {number} width Width of this video\n     */\n\n    /**\n     * The video of this embed (if there is one)\n     * @type {?MessageEmbedVideo}\n     * @readonly\n     */\n    this.video = data.video\n      ? {\n          url: data.video.url,\n          proxyURL: data.video.proxyURL ?? data.video.proxy_url,\n          height: data.video.height,\n          width: data.video.width,\n        }\n      : null;\n\n    /**\n     * Represents the author field of a MessageEmbed\n     * @typedef {Object} MessageEmbedAuthor\n     * @property {string} name The name of this author\n     * @property {string} url URL of this author\n     * @property {string} iconURL URL of the icon for this author\n     * @property {string} proxyIconURL Proxied URL of the icon for this author\n     */\n\n    /**\n     * The author of this embed (if there is one)\n     * @type {?MessageEmbedAuthor}\n     */\n    this.author = data.author\n      ? {\n          name: data.author.name,\n          url: data.author.url,\n          iconURL: data.author.iconURL ?? data.author.icon_url,\n          proxyIconURL: data.author.proxyIconURL ?? data.author.proxy_icon_url,\n        }\n      : null;\n\n    /**\n     * Represents the provider of a MessageEmbed\n     * @typedef {Object} MessageEmbedProvider\n     * @property {string} name The name of this provider\n     * @property {string} url URL of this provider\n     */\n\n    /**\n     * The provider of this embed (if there is one)\n     * @type {?MessageEmbedProvider}\n     */\n    this.provider = data.provider\n      ? {\n          name: data.provider.name,\n          url: data.provider.name,\n        }\n      : null;\n\n    /**\n     * Represents the footer field of a MessageEmbed\n     * @typedef {Object} MessageEmbedFooter\n     * @property {string} text The text of this footer\n     * @property {string} iconURL URL of the icon for this footer\n     * @property {string} proxyIconURL Proxied URL of the icon for this footer\n     */\n\n    /**\n     * The footer of this embed\n     * @type {?MessageEmbedFooter}\n     */\n    this.footer = data.footer\n      ? {\n          text: data.footer.text,\n          iconURL: data.footer.iconURL ?? data.footer.icon_url,\n          proxyIconURL: data.footer.proxyIconURL ?? data.footer.proxy_icon_url,\n        }\n      : null;\n  }\n\n  /**\n   * The date displayed on this embed\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.timestamp ? new Date(this.timestamp) : null;\n  }\n\n  /**\n   * The hexadecimal version of the embed color, with a leading hash\n   * @type {?string}\n   * @readonly\n   */\n  get hexColor() {\n    return this.color ? `#${this.color.toString(16).padStart(6, '0')}` : null;\n  }\n\n  /**\n   * The accumulated length for the embed title, description, fields, footer text, and author name\n   * @type {number}\n   * @readonly\n   */\n  get length() {\n    return (\n      (this.title?.length ?? 0) +\n      (this.description?.length ?? 0) +\n      (this.fields.length >= 1\n        ? this.fields.reduce((prev, curr) => prev + curr.name.length + curr.value.length, 0)\n        : 0) +\n      (this.footer?.text.length ?? 0) +\n      (this.author?.name.length ?? 0)\n    );\n  }\n\n  /**\n   * Adds a field to the embed (max 25).\n   * @param {string} name The name of this field\n   * @param {string} value The value of this field\n   * @param {boolean} [inline=false] If this field will be displayed inline\n   * @returns {MessageEmbed}\n   */\n  addField(name, value, inline) {\n    return this.addFields({ name, value, inline });\n  }\n\n  /**\n   * Adds fields to the embed (max 25).\n   * @param {...EmbedFieldData|EmbedFieldData[]} fields The fields to add\n   * @returns {MessageEmbed}\n   */\n  addFields(...fields) {\n    this.fields.push(...this.constructor.normalizeFields(fields));\n    return this;\n  }\n\n  /**\n   * Removes, replaces, and inserts fields in the embed (max 25).\n   * @param {number} index The index to start at\n   * @param {number} deleteCount The number of fields to remove\n   * @param {...EmbedFieldData|EmbedFieldData[]} [fields] The replacing field objects\n   * @returns {MessageEmbed}\n   */\n  spliceFields(index, deleteCount, ...fields) {\n    this.fields.splice(index, deleteCount, ...this.constructor.normalizeFields(...fields));\n    return this;\n  }\n\n  /**\n   * Sets the embed's fields (max 25).\n   * @param {...EmbedFieldData|EmbedFieldData[]} fields The fields to set\n   * @returns {MessageEmbed}\n   */\n  setFields(...fields) {\n    this.spliceFields(0, this.fields.length, fields);\n    return this;\n  }\n\n  /**\n   * Sets the author of this embed.\n   * @param {string} name The name of the author\n   * @param {string} [iconURL] The icon URL of the author\n   * @param {string} [url] The URL of the author\n   * @returns {MessageEmbed}\n   */\n  setAuthor(name, iconURL, url) {\n    this.author = { name: Util.verifyString(name, RangeError, 'EMBED_AUTHOR_NAME'), iconURL, url };\n    return this;\n  }\n\n  /**\n   * Sets the color of this embed.\n   * @param {ColorResolvable} color The color of the embed\n   * @returns {MessageEmbed}\n   */\n  setColor(color) {\n    this.color = Util.resolveColor(color);\n    return this;\n  }\n\n  /**\n   * Sets the description of this embed.\n   * @param {string} description The description\n   * @returns {MessageEmbed}\n   */\n  setDescription(description) {\n    this.description = Util.verifyString(description, RangeError, 'EMBED_DESCRIPTION');\n    return this;\n  }\n\n  /**\n   * Sets the footer of this embed.\n   * @param {string} text The text of the footer\n   * @param {string} [iconURL] The icon URL of the footer\n   * @returns {MessageEmbed}\n   */\n  setFooter(text, iconURL) {\n    this.footer = { text: Util.verifyString(text, RangeError, 'EMBED_FOOTER_TEXT'), iconURL };\n    return this;\n  }\n\n  /**\n   * Sets the image of this embed.\n   * @param {string} url The URL of the image\n   * @returns {MessageEmbed}\n   */\n  setImage(url) {\n    this.image = { url };\n    return this;\n  }\n\n  /**\n   * Sets the thumbnail of this embed.\n   * @param {string} url The URL of the thumbnail\n   * @returns {MessageEmbed}\n   */\n  setThumbnail(url) {\n    this.thumbnail = { url };\n    return this;\n  }\n\n  /**\n   * Sets the timestamp of this embed.\n   * @param {Date|number} [timestamp=Date.now()] The timestamp or date\n   * @returns {MessageEmbed}\n   */\n  setTimestamp(timestamp = Date.now()) {\n    if (timestamp instanceof Date) timestamp = timestamp.getTime();\n    this.timestamp = timestamp;\n    return this;\n  }\n\n  /**\n   * Sets the title of this embed.\n   * @param {string} title The title\n   * @returns {MessageEmbed}\n   */\n  setTitle(title) {\n    this.title = Util.verifyString(title, RangeError, 'EMBED_TITLE');\n    return this;\n  }\n\n  /**\n   * Sets the URL of this embed.\n   * @param {string} url The URL\n   * @returns {MessageEmbed}\n   */\n  setURL(url) {\n    this.url = url;\n    return this;\n  }\n\n  /**\n   * Transforms the embed to a plain object.\n   * @returns {APIEmbed} The raw data of this embed\n   */\n  toJSON() {\n    return {\n      title: this.title,\n      type: 'rich',\n      description: this.description,\n      url: this.url,\n      timestamp: this.timestamp && new Date(this.timestamp),\n      color: this.color,\n      fields: this.fields,\n      thumbnail: this.thumbnail,\n      image: this.image,\n      author: this.author && {\n        name: this.author.name,\n        url: this.author.url,\n        icon_url: this.author.iconURL,\n      },\n      footer: this.footer && {\n        text: this.footer.text,\n        icon_url: this.footer.iconURL,\n      },\n    };\n  }\n\n  /**\n   * Normalizes field input and verifies strings.\n   * @param {string} name The name of the field\n   * @param {string} value The value of the field\n   * @param {boolean} [inline=false] Set the field to display inline\n   * @returns {EmbedField}\n   */\n  static normalizeField(name, value, inline = false) {\n    return {\n      name: Util.verifyString(name, RangeError, 'EMBED_FIELD_NAME', false),\n      value: Util.verifyString(value, RangeError, 'EMBED_FIELD_VALUE', false),\n      inline,\n    };\n  }\n\n  /**\n   * @typedef {Object} EmbedFieldData\n   * @property {string} name The name of this field\n   * @property {string} value The value of this field\n   * @property {boolean} [inline] If this field will be displayed inline\n   */\n\n  /**\n   * Normalizes field input and resolves strings.\n   * @param  {...EmbedFieldData|EmbedFieldData[]} fields Fields to normalize\n   * @returns {EmbedField[]}\n   */\n  static normalizeFields(...fields) {\n    return fields\n      .flat(2)\n      .map(field =>\n        this.normalizeField(field.name, field.value, typeof field.inline === 'boolean' ? field.inline : false),\n      );\n  }\n}\n\nmodule.exports = MessageEmbed;\n\n/**\n * @external APIEmbed\n * @see {@link https://discord.com/developers/docs/resources/channel#embed-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageEmbed.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageMentions.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageMentions.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst { ChannelTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Keeps track of mentions in a {@link Message}.\n */\nclass MessageMentions {\n  constructor(message, users, roles, everyone, crosspostedChannels, repliedUser) {\n    /**\n     * The client the message is from\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: message.client });\n\n    /**\n     * The guild the message is in\n     * @type {?Guild}\n     * @readonly\n     */\n    Object.defineProperty(this, 'guild', { value: message.guild });\n\n    /**\n     * The initial message content\n     * @type {string}\n     * @readonly\n     * @private\n     */\n    Object.defineProperty(this, '_content', { value: message.content });\n\n    /**\n     * Whether `@everyone` or `@here` were mentioned\n     * @type {boolean}\n     */\n    this.everyone = Boolean(everyone);\n\n    if (users) {\n      if (users instanceof Collection) {\n        /**\n         * Any users that were mentioned\n         * <info>Order as received from the API, not as they appear in the message content</info>\n         * @type {Collection<Snowflake, User>}\n         */\n        this.users = new Collection(users);\n      } else {\n        this.users = new Collection();\n        for (const mention of users) {\n          if (mention.member && message.guild) {\n            message.guild.members._add(Object.assign(mention.member, { user: mention }));\n          }\n          const user = message.client.users._add(mention);\n          this.users.set(user.id, user);\n        }\n      }\n    } else {\n      this.users = new Collection();\n    }\n\n    if (roles instanceof Collection) {\n      /**\n       * Any roles that were mentioned\n       * <info>Order as received from the API, not as they appear in the message content</info>\n       * @type {Collection<Snowflake, Role>}\n       */\n      this.roles = new Collection(roles);\n    } else if (roles) {\n      this.roles = new Collection();\n      const guild = message.guild;\n      if (guild) {\n        for (const mention of roles) {\n          const role = guild.roles.cache.get(mention);\n          if (role) this.roles.set(role.id, role);\n        }\n      }\n    } else {\n      this.roles = new Collection();\n    }\n\n    /**\n     * Cached members for {@link MessageMentions#members}\n     * @type {?Collection<Snowflake, GuildMember>}\n     * @private\n     */\n    this._members = null;\n\n    /**\n     * Cached channels for {@link MessageMentions#channels}\n     * @type {?Collection<Snowflake, Channel>}\n     * @private\n     */\n    this._channels = null;\n\n    /**\n     * Crossposted channel data.\n     * @typedef {Object} CrosspostedChannel\n     * @property {Snowflake} channelId The mentioned channel's id\n     * @property {Snowflake} guildId The id of the guild that has the channel\n     * @property {ChannelType} type The channel's type\n     * @property {string} name The channel's name\n     */\n\n    if (crosspostedChannels) {\n      if (crosspostedChannels instanceof Collection) {\n        /**\n         * A collection of crossposted channels\n         * <info>Order as received from the API, not as they appear in the message content</info>\n         * @type {Collection<Snowflake, CrosspostedChannel>}\n         */\n        this.crosspostedChannels = new Collection(crosspostedChannels);\n      } else {\n        this.crosspostedChannels = new Collection();\n        const channelTypes = Object.keys(ChannelTypes);\n        for (const d of crosspostedChannels) {\n          const type = channelTypes[d.type];\n          this.crosspostedChannels.set(d.id, {\n            channelId: d.id,\n            guildId: d.guild_id,\n            type: type ?? 'UNKNOWN',\n            name: d.name,\n          });\n        }\n      }\n    } else {\n      this.crosspostedChannels = new Collection();\n    }\n\n    /**\n     * The author of the message that this message is a reply to\n     * @type {?User}\n     */\n    this.repliedUser = repliedUser ? this.client.users._add(repliedUser) : null;\n  }\n\n  /**\n   * Any members that were mentioned (only in {@link Guild}s)\n   * <info>Order as received from the API, not as they appear in the message content</info>\n   * @type {?Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    if (this._members) return this._members;\n    if (!this.guild) return null;\n    this._members = new Collection();\n    this.users.forEach(user => {\n      const member = this.guild.members.resolve(user);\n      if (member) this._members.set(member.user.id, member);\n    });\n    return this._members;\n  }\n\n  /**\n   * Any channels that were mentioned\n   * <info>Order as they appear first in the message content</info>\n   * @type {Collection<Snowflake, Channel>}\n   * @readonly\n   */\n  get channels() {\n    if (this._channels) return this._channels;\n    this._channels = new Collection();\n    let matches;\n    while ((matches = this.constructor.CHANNELS_PATTERN.exec(this._content)) !== null) {\n      const chan = this.client.channels.cache.get(matches[1]);\n      if (chan) this._channels.set(chan.id, chan);\n    }\n    return this._channels;\n  }\n\n  /**\n   * Options used to check for a mention.\n   * @typedef {Object} MessageMentionsHasOptions\n   * @property {boolean} [ignoreDirect=false] Whether to ignore direct mentions to the item\n   * @property {boolean} [ignoreRoles=false] Whether to ignore role mentions to a guild member\n   * @property {boolean} [ignoreEveryone=false] Whether to ignore everyone/here mentions\n   */\n\n  /**\n   * Checks if a user, guild member, role, or channel is mentioned.\n   * Takes into account user mentions, role mentions, and `@everyone`/`@here` mentions.\n   * @param {UserResolvable|RoleResolvable|ChannelResolvable} data The User/Role/Channel to check for\n   * @param {MessageMentionsHasOptions} [options] The options for the check\n   * @returns {boolean}\n   */\n  has(data, { ignoreDirect = false, ignoreRoles = false, ignoreEveryone = false } = {}) {\n    if (!ignoreEveryone && this.everyone) return true;\n    const GuildMember = __webpack_require__(/*! ./GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\");\n    if (!ignoreRoles && data instanceof GuildMember) {\n      for (const role of this.roles.values()) if (data.roles.cache.has(role.id)) return true;\n    }\n\n    if (!ignoreDirect) {\n      const id =\n        this.guild?.roles.resolveId(data) ?? this.client.channels.resolveId(data) ?? this.client.users.resolveId(data);\n\n      return typeof id === 'string' && (this.users.has(id) || this.channels.has(id) || this.roles.has(id));\n    }\n\n    return false;\n  }\n\n  toJSON() {\n    return Util.flatten(this, {\n      members: true,\n      channels: true,\n    });\n  }\n}\n\n/**\n * Regular expression that globally matches `@everyone` and `@here`\n * @type {RegExp}\n */\nMessageMentions.EVERYONE_PATTERN = /@(everyone|here)/g;\n\n/**\n * Regular expression that globally matches user mentions like `<@81440962496172032>`\n * @type {RegExp}\n */\nMessageMentions.USERS_PATTERN = /<@!?(\\d{17,19})>/g;\n\n/**\n * Regular expression that globally matches role mentions like `<@&297577916114403338>`\n * @type {RegExp}\n */\nMessageMentions.ROLES_PATTERN = /<@&(\\d{17,19})>/g;\n\n/**\n * Regular expression that globally matches channel mentions like `<#222079895583457280>`\n * @type {RegExp}\n */\nMessageMentions.CHANNELS_PATTERN = /<#(\\d{17,19})>/g;\n\nmodule.exports = MessageMentions;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageMentions.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessagePayload.js":
/*!******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessagePayload.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseMessageComponent = __webpack_require__(/*! ./BaseMessageComponent */ \"./node_modules/discord.js/src/structures/BaseMessageComponent.js\");\nconst MessageEmbed = __webpack_require__(/*! ./MessageEmbed */ \"./node_modules/discord.js/src/structures/MessageEmbed.js\");\nconst { RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\nconst MessageFlags = __webpack_require__(/*! ../util/MessageFlags */ \"./node_modules/discord.js/src/util/MessageFlags.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a message to be sent to the API.\n */\nclass MessagePayload {\n  /**\n   * @param {MessageTarget} target - The target for this message to be sent to\n   * @param {MessageOptions|WebhookMessageOptions} options - Options passed in from send\n   */\n  constructor(target, options) {\n    /**\n     * The target for this message to be sent to\n     * @type {MessageTarget}\n     */\n    this.target = target;\n\n    /**\n     * Options passed in from send\n     * @type {MessageOptions|WebhookMessageOptions}\n     */\n    this.options = options;\n\n    /**\n     * Data sendable to the API\n     * @type {?APIMessage}\n     */\n    this.data = null;\n\n    /**\n     * @typedef {Object} MessageFile\n     * @property {Buffer|string|Stream} attachment The original attachment that generated this file\n     * @property {string} name The name of this file\n     * @property {Buffer|Stream} file The file to be sent to the API\n     */\n\n    /**\n     * Files sendable to the API\n     * @type {?MessageFile[]}\n     */\n    this.files = null;\n  }\n\n  /**\n   * Whether or not the target is a {@link Webhook} or a {@link WebhookClient}\n   * @type {boolean}\n   * @readonly\n   */\n  get isWebhook() {\n    const Webhook = __webpack_require__(/*! ./Webhook */ \"./node_modules/discord.js/src/structures/Webhook.js\");\n    const WebhookClient = __webpack_require__(/*! ../client/WebhookClient */ \"./node_modules/discord.js/src/client/WebhookClient.js\");\n    return this.target instanceof Webhook || this.target instanceof WebhookClient;\n  }\n\n  /**\n   * Whether or not the target is a {@link User}\n   * @type {boolean}\n   * @readonly\n   */\n  get isUser() {\n    const User = __webpack_require__(/*! ./User */ \"./node_modules/discord.js/src/structures/User.js\");\n    const GuildMember = __webpack_require__(/*! ./GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\");\n    return this.target instanceof User || this.target instanceof GuildMember;\n  }\n\n  /**\n   * Whether or not the target is a {@link Message}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessage() {\n    const Message = __webpack_require__(/*! ./Message */ \"./node_modules/discord.js/src/structures/Message.js\");\n    return this.target instanceof Message;\n  }\n\n  /**\n   * Wether or not the target is a {@link MessageManager}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessageManager() {\n    const MessageManager = __webpack_require__(/*! ../managers/MessageManager */ \"./node_modules/discord.js/src/managers/MessageManager.js\");\n    return this.target instanceof MessageManager;\n  }\n\n  /**\n   * Whether or not the target is an {@link Interaction} or an {@link InteractionWebhook}\n   * @type {boolean}\n   * @readonly\n   */\n  get isInteraction() {\n    const Interaction = __webpack_require__(/*! ./Interaction */ \"./node_modules/discord.js/src/structures/Interaction.js\");\n    const InteractionWebhook = __webpack_require__(/*! ./InteractionWebhook */ \"./node_modules/discord.js/src/structures/InteractionWebhook.js\");\n    return this.target instanceof Interaction || this.target instanceof InteractionWebhook;\n  }\n\n  /**\n   * Makes the content of this message.\n   * @returns {?string}\n   */\n  makeContent() {\n    let content;\n    if (this.options.content === null) {\n      content = '';\n    } else if (typeof this.options.content !== 'undefined') {\n      content = Util.verifyString(this.options.content, RangeError, 'MESSAGE_CONTENT_TYPE', false);\n    }\n\n    return content;\n  }\n\n  /**\n   * Resolves data.\n   * @returns {MessagePayload}\n   */\n  resolveData() {\n    if (this.data) return this;\n    const isInteraction = this.isInteraction;\n    const isWebhook = this.isWebhook;\n\n    const content = this.makeContent();\n    const tts = Boolean(this.options.tts);\n\n    let nonce;\n    if (typeof this.options.nonce !== 'undefined') {\n      nonce = this.options.nonce;\n      // eslint-disable-next-line max-len\n      if (typeof nonce === 'number' ? !Number.isInteger(nonce) : typeof nonce !== 'string') {\n        throw new RangeError('MESSAGE_NONCE_TYPE');\n      }\n    }\n\n    const components = this.options.components?.map(c => BaseMessageComponent.create(c).toJSON());\n\n    let username;\n    let avatarURL;\n    if (isWebhook) {\n      username = this.options.username ?? this.target.name;\n      if (this.options.avatarURL) avatarURL = this.options.avatarURL;\n    }\n\n    let flags;\n    if (this.isMessage || this.isMessageManager) {\n      // eslint-disable-next-line eqeqeq\n      flags = this.options.flags != null ? new MessageFlags(this.options.flags).bitfield : this.target.flags?.bitfield;\n    } else if (isInteraction && this.options.ephemeral) {\n      flags = MessageFlags.FLAGS.EPHEMERAL;\n    }\n\n    let allowedMentions =\n      typeof this.options.allowedMentions === 'undefined'\n        ? this.target.client.options.allowedMentions\n        : this.options.allowedMentions;\n\n    if (allowedMentions) {\n      allowedMentions = Util.cloneObject(allowedMentions);\n      allowedMentions.replied_user = allowedMentions.repliedUser;\n      delete allowedMentions.repliedUser;\n    }\n\n    let message_reference;\n    if (typeof this.options.reply === 'object') {\n      const reference = this.options.reply.messageReference;\n      const message_id = this.isMessage ? reference.id ?? reference : this.target.messages.resolveId(reference);\n      if (message_id) {\n        message_reference = {\n          message_id,\n          fail_if_not_exists: this.options.reply.failIfNotExists ?? this.target.client.options.failIfNotExists,\n        };\n      }\n    }\n\n    this.data = {\n      content,\n      tts,\n      nonce,\n      embeds: this.options.embeds?.map(embed => new MessageEmbed(embed).toJSON()),\n      components,\n      username,\n      avatar_url: avatarURL,\n      allowed_mentions:\n        typeof content === 'undefined' && typeof message_reference === 'undefined' ? undefined : allowedMentions,\n      flags,\n      message_reference,\n      attachments: this.options.attachments,\n      sticker_ids: this.options.stickers?.map(sticker => sticker.id ?? sticker),\n    };\n    return this;\n  }\n\n  /**\n   * Resolves files.\n   * @returns {Promise<MessagePayload>}\n   */\n  async resolveFiles() {\n    if (this.files) return this;\n\n    this.files = await Promise.all(this.options.files?.map(file => this.constructor.resolveFile(file)) ?? []);\n    return this;\n  }\n\n  /**\n   * Resolves a single file into an object sendable to the API.\n   * @param {BufferResolvable|Stream|FileOptions|MessageAttachment} fileLike Something that could be resolved to a file\n   * @returns {MessageFile}\n   */\n  static async resolveFile(fileLike) {\n    let attachment;\n    let name;\n\n    const findName = thing => {\n      if (typeof thing === 'string') {\n        return Util.basename(thing);\n      }\n\n      if (thing.path) {\n        return Util.basename(thing.path);\n      }\n\n      return 'file.jpg';\n    };\n\n    const ownAttachment =\n      typeof fileLike === 'string' || fileLike instanceof Buffer || typeof fileLike.pipe === 'function';\n    if (ownAttachment) {\n      attachment = fileLike;\n      name = findName(attachment);\n    } else {\n      attachment = fileLike.attachment;\n      name = fileLike.name ?? findName(attachment);\n    }\n\n    const resource = await DataResolver.resolveFile(attachment);\n    return { attachment, name, file: resource };\n  }\n\n  /**\n   * Creates a {@link MessagePayload} from user-level arguments.\n   * @param {MessageTarget} target Target to send to\n   * @param {string|MessageOptions|WebhookMessageOptions} options Options or content to use\n   * @param {MessageOptions|WebhookMessageOptions} [extra={}] - Extra options to add onto specified options\n   * @returns {MessagePayload}\n   */\n  static create(target, options, extra = {}) {\n    return new this(\n      target,\n      typeof options !== 'object' || options === null ? { content: options, ...extra } : { ...options, ...extra },\n    );\n  }\n}\n\nmodule.exports = MessagePayload;\n\n/**\n * A target for a message.\n * @typedef {TextChannel|DMChannel|User|GuildMember|Webhook|WebhookClient|Interaction|InteractionWebhook|\n * Message|MessageManager} MessageTarget\n */\n\n/**\n * @external APIMessage\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessagePayload.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageReaction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageReaction.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst GuildEmoji = __webpack_require__(/*! ./GuildEmoji */ \"./node_modules/discord.js/src/structures/GuildEmoji.js\");\nconst ReactionEmoji = __webpack_require__(/*! ./ReactionEmoji */ \"./node_modules/discord.js/src/structures/ReactionEmoji.js\");\nconst ReactionUserManager = __webpack_require__(/*! ../managers/ReactionUserManager */ \"./node_modules/discord.js/src/managers/ReactionUserManager.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a reaction to a message.\n */\nclass MessageReaction {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIReaction} data The data for the message reaction\n   * @param {Message} message The message the reaction refers to\n   */\n  constructor(client, data, message) {\n    /**\n     * The client that instantiated this message reaction\n     * @name MessageReaction#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The message that this reaction refers to\n     * @type {Message}\n     */\n    this.message = message;\n\n    /**\n     * Whether the client has given this reaction\n     * @type {boolean}\n     */\n    this.me = data.me;\n\n    /**\n     * A manager of the users that have given this reaction\n     * @type {ReactionUserManager}\n     */\n    this.users = new ReactionUserManager(this);\n\n    this._emoji = new ReactionEmoji(this, data.emoji);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    // eslint-disable-next-line eqeqeq\n    if (this.count == undefined) {\n      /**\n       * The number of people that have given the same reaction\n       * @type {?number}\n       */\n      this.count = data.count;\n    }\n  }\n\n  /**\n   * Removes all users from this reaction.\n   * @returns {Promise<MessageReaction>}\n   */\n  async remove() {\n    await this.client.api\n      .channels(this.message.channelId)\n      .messages(this.message.id)\n      .reactions(this._emoji.identifier)\n      .delete();\n    return this;\n  }\n\n  /**\n   * The emoji of this reaction. Either a {@link GuildEmoji} object for known custom emojis, or a {@link ReactionEmoji}\n   * object which has fewer properties. Whatever the prototype of the emoji, it will still have\n   * `name`, `id`, `identifier` and `toString()`\n   * @type {GuildEmoji|ReactionEmoji}\n   * @readonly\n   */\n  get emoji() {\n    if (this._emoji instanceof GuildEmoji) return this._emoji;\n    // Check to see if the emoji has become known to the client\n    if (this._emoji.id) {\n      const emojis = this.message.client.emojis.cache;\n      if (emojis.has(this._emoji.id)) {\n        const emoji = emojis.get(this._emoji.id);\n        this._emoji = emoji;\n        return emoji;\n      }\n    }\n    return this._emoji;\n  }\n\n  /**\n   * Whether or not this reaction is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return this.count === null;\n  }\n\n  /**\n   * Fetch this reaction.\n   * @returns {Promise<MessageReaction>}\n   */\n  async fetch() {\n    const message = await this.message.fetch();\n    const existing = message.reactions.cache.get(this.emoji.id ?? this.emoji.name);\n    // The reaction won't get set when it has been completely removed\n    this._patch(existing ?? { count: 0 });\n    return this;\n  }\n\n  toJSON() {\n    return Util.flatten(this, { emoji: 'emojiId', message: 'messageId' });\n  }\n\n  _add(user) {\n    if (this.partial) return;\n    this.users.cache.set(user.id, user);\n    if (!this.me || user.id !== this.message.client.user.id || this.count === 0) this.count++;\n    if (!this.me) this.me = user.id === this.message.client.user.id;\n  }\n\n  _remove(user) {\n    if (this.partial) return;\n    this.users.cache.delete(user.id);\n    if (!this.me || user.id !== this.message.client.user.id) this.count--;\n    if (user.id === this.message.client.user.id) this.me = false;\n    if (this.count <= 0 && this.users.cache.size === 0) {\n      this.message.reactions.cache.delete(this.emoji.id ?? this.emoji.name);\n    }\n  }\n}\n\nmodule.exports = MessageReaction;\n\n/**\n * @external APIReaction\n * @see {@link https://discord.com/developers/docs/resources/channel#reaction-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageReaction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/MessageSelectMenu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/MessageSelectMenu.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseMessageComponent = __webpack_require__(/*! ./BaseMessageComponent */ \"./node_modules/discord.js/src/structures/BaseMessageComponent.js\");\nconst { MessageComponentTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a select menu message component\n * @extends {BaseMessageComponent}\n */\nclass MessageSelectMenu extends BaseMessageComponent {\n  /**\n   * @typedef {BaseMessageComponentOptions} MessageSelectMenuOptions\n   * @property {string} [customId] A unique string to be sent in the interaction when clicked\n   * @property {string} [placeholder] Custom placeholder text to display when nothing is selected\n   * @property {number} [minValues] The minimum number of selections required\n   * @property {number} [maxValues] The maximum number of selections allowed\n   * @property {MessageSelectOption[]} [options] Options for the select menu\n   * @property {boolean} [disabled=false] Disables the select menu to prevent interactions\n   */\n\n  /**\n   * @typedef {Object} MessageSelectOption\n   * @property {string} label The text to be displayed on this option\n   * @property {string} value The value to be sent for this option\n   * @property {?string} description Optional description to show for this option\n   * @property {?RawEmoji} emoji Emoji to display for this option\n   * @property {boolean} default Render this option as the default selection\n   */\n\n  /**\n   * @typedef {Object} MessageSelectOptionData\n   * @property {string} label The text to be displayed on this option\n   * @property {string} value The value to be sent for this option\n   * @property {string} [description] Optional description to show for this option\n   * @property {EmojiIdentifierResolvable} [emoji] Emoji to display for this option\n   * @property {boolean} [default] Render this option as the default selection\n   */\n\n  /**\n   * @param {MessageSelectMenu|MessageSelectMenuOptions} [data={}] MessageSelectMenu to clone or raw data\n   */\n  constructor(data = {}) {\n    super({ type: 'SELECT_MENU' });\n\n    this.setup(data);\n  }\n\n  setup(data) {\n    /**\n     * A unique string to be sent in the interaction when clicked\n     * @type {?string}\n     */\n    this.customId = data.custom_id ?? data.customId ?? null;\n\n    /**\n     * Custom placeholder text to display when nothing is selected\n     * @type {?string}\n     */\n    this.placeholder = data.placeholder ?? null;\n\n    /**\n     * The minimum number of selections required\n     * @type {?number}\n     */\n    this.minValues = data.min_values ?? data.minValues ?? null;\n\n    /**\n     * The maximum number of selections allowed\n     * @type {?number}\n     */\n    this.maxValues = data.max_values ?? data.maxValues ?? null;\n\n    /**\n     * Options for the select menu\n     * @type {MessageSelectOption[]}\n     */\n    this.options = this.constructor.normalizeOptions(data.options ?? []);\n\n    /**\n     * Whether this select menu is currently disabled\n     * @type {boolean}\n     */\n    this.disabled = data.disabled ?? false;\n  }\n\n  /**\n   * Sets the custom id of this select menu\n   * @param {string} customId A unique string to be sent in the interaction when clicked\n   * @returns {MessageSelectMenu}\n   */\n  setCustomId(customId) {\n    this.customId = Util.verifyString(customId, RangeError, 'SELECT_MENU_CUSTOM_ID');\n    return this;\n  }\n\n  /**\n   * Sets the interactive status of the select menu\n   * @param {boolean} [disabled=true] Whether this select menu should be disabled\n   * @returns {MessageSelectMenu}\n   */\n  setDisabled(disabled = true) {\n    this.disabled = disabled;\n    return this;\n  }\n\n  /**\n   * Sets the maximum number of selections allowed for this select menu\n   * @param {number} maxValues Number of selections to be allowed\n   * @returns {MessageSelectMenu}\n   */\n  setMaxValues(maxValues) {\n    this.maxValues = maxValues;\n    return this;\n  }\n\n  /**\n   * Sets the minimum number of selections required for this select menu\n   * <info>This will default the maxValues to the number of options, unless manually set</info>\n   * @param {number} minValues Number of selections to be required\n   * @returns {MessageSelectMenu}\n   */\n  setMinValues(minValues) {\n    this.minValues = minValues;\n    return this;\n  }\n\n  /**\n   * Sets the placeholder of this select menu\n   * @param {string} placeholder Custom placeholder text to display when nothing is selected\n   * @returns {MessageSelectMenu}\n   */\n  setPlaceholder(placeholder) {\n    this.placeholder = Util.verifyString(placeholder, RangeError, 'SELECT_MENU_PLACEHOLDER');\n    return this;\n  }\n\n  /**\n   * Adds options to the select menu.\n   * @param {...MessageSelectOptionData|MessageSelectOptionData[]} options The options to add\n   * @returns {MessageSelectMenu}\n   */\n  addOptions(...options) {\n    this.options.push(...this.constructor.normalizeOptions(options));\n    return this;\n  }\n\n  /**\n   * Removes, replaces, and inserts options in the select menu.\n   * @param {number} index The index to start at\n   * @param {number} deleteCount The number of options to remove\n   * @param {...MessageSelectOptionData|MessageSelectOptionData[]} [options] The replacing option objects\n   * @returns {MessageSelectMenu}\n   */\n  spliceOptions(index, deleteCount, ...options) {\n    this.options.splice(index, deleteCount, ...this.constructor.normalizeOptions(...options));\n    return this;\n  }\n\n  /**\n   * Transforms this select menu to a plain object\n   * @returns {Object} The raw data of this select menu\n   */\n  toJSON() {\n    return {\n      custom_id: this.customId,\n      disabled: this.disabled,\n      placeholder: this.placeholder,\n      min_values: this.minValues,\n      max_values: this.maxValues ?? (this.minValues ? this.options.length : undefined),\n      options: this.options,\n      type: typeof this.type === 'string' ? MessageComponentTypes[this.type] : this.type,\n    };\n  }\n\n  /**\n   * Normalizes option input and resolves strings and emojis.\n   * @param {MessageSelectOptionData} option The select menu option to normalize\n   * @returns {MessageSelectOption}\n   */\n  static normalizeOption(option) {\n    let { label, value, description, emoji } = option;\n\n    label = Util.verifyString(label, RangeError, 'SELECT_OPTION_LABEL');\n    value = Util.verifyString(value, RangeError, 'SELECT_OPTION_VALUE');\n    emoji = emoji ? Util.resolvePartialEmoji(emoji) : null;\n    description = description ? Util.verifyString(description, RangeError, 'SELECT_OPTION_DESCRIPTION', true) : null;\n\n    return { label, value, description, emoji, default: option.default ?? false };\n  }\n\n  /**\n   * Normalizes option input and resolves strings and emojis.\n   * @param {...MessageSelectOptionData|MessageSelectOptionData[]} options The select menu options to normalize\n   * @returns {MessageSelectOption[]}\n   */\n  static normalizeOptions(...options) {\n    return options.flat(Infinity).map(option => this.normalizeOption(option));\n  }\n}\n\nmodule.exports = MessageSelectMenu;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/MessageSelectMenu.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/NewsChannel.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/NewsChannel.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuildTextChannel = __webpack_require__(/*! ./BaseGuildTextChannel */ \"./node_modules/discord.js/src/structures/BaseGuildTextChannel.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\n\n/**\n * Represents a guild news channel on Discord.\n * @extends {BaseGuildTextChannel}\n */\nclass NewsChannel extends BaseGuildTextChannel {\n  /**\n   * Adds the target to this channel's followers.\n   * @param {GuildChannelResolvable} channel The channel where the webhook should be created\n   * @param {string} [reason] Reason for creating the webhook\n   * @returns {Promise<NewsChannel>}\n   * @example\n   * if (channel.type === 'GUILD_NEWS') {\n   *   channel.addFollower('222197033908436994', 'Important announcements')\n   *     .then(() => console.log('Added follower'))\n   *     .catch(console.error);\n   * }\n   */\n  async addFollower(channel, reason) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('GUILD_CHANNEL_RESOLVE');\n    await this.client.api.channels(this.id).followers.post({ data: { webhook_channel_id: channelId }, reason });\n    return this;\n  }\n}\n\nmodule.exports = NewsChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/NewsChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/OAuth2Guild.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/OAuth2Guild.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuild = __webpack_require__(/*! ./BaseGuild */ \"./node_modules/discord.js/src/structures/BaseGuild.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * A partial guild received when using {@link GuildManager#fetch} to fetch multiple guilds.\n * @extends {BaseGuild}\n */\nclass OAuth2Guild extends BaseGuild {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * Whether the client user is the owner of the guild\n     * @type {boolean}\n     */\n    this.owner = data.owner;\n\n    /**\n     * The permissions that the client user has in this guild\n     * @type {Readonly<Permissions>}\n     */\n    this.permissions = new Permissions(BigInt(data.permissions)).freeze();\n  }\n}\n\nmodule.exports = OAuth2Guild;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/OAuth2Guild.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/PartialGroupDMChannel.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/PartialGroupDMChannel.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Channel = __webpack_require__(/*! ./Channel */ \"./node_modules/discord.js/src/structures/Channel.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\n\n/**\n * Represents a Partial Group DM Channel on Discord.\n * @extends {Channel}\n */\nclass PartialGroupDMChannel extends Channel {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The name of this Group DM Channel\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The hash of the channel icon\n     * @type {?string}\n     */\n    this.icon = data.icon;\n  }\n\n  /**\n   * The URL to this channel's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size } = {}) {\n    return this.icon && this.client.rest.cdn.GDMIcon(this.id, this.icon, format, size);\n  }\n\n  delete() {\n    return Promise.reject(new Error('DELETE_GROUP_DM_CHANNEL'));\n  }\n\n  fetch() {\n    return Promise.reject(new Error('FETCH_GROUP_DM_CHANNEL'));\n  }\n}\n\nmodule.exports = PartialGroupDMChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/PartialGroupDMChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/PermissionOverwrites.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/PermissionOverwrites.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst Role = __webpack_require__(/*! ./Role */ \"./node_modules/discord.js/src/structures/Role.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { OverwriteTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * Represents a permission overwrite for a role or member in a guild channel.\n * @extends {Base}\n */\nclass PermissionOverwrites extends Base {\n  constructor(client, data, channel) {\n    super(client);\n\n    /**\n     * The GuildChannel this overwrite is for\n     * @name PermissionOverwrites#channel\n     * @type {GuildChannel}\n     * @readonly\n     */\n    Object.defineProperty(this, 'channel', { value: channel });\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The overwrite's id, either a {@link User} or a {@link Role} id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The type of this overwrite\n     * @type {OverwriteType}\n     */\n    this.type = typeof data.type === 'number' ? OverwriteTypes[data.type] : data.type;\n\n    /**\n     * The permissions that are denied for the user or role.\n     * @type {Readonly<Permissions>}\n     */\n    this.deny = new Permissions(BigInt(data.deny)).freeze();\n\n    /**\n     * The permissions that are allowed for the user or role.\n     * @type {Readonly<Permissions>}\n     */\n    this.allow = new Permissions(BigInt(data.allow)).freeze();\n  }\n\n  /**\n   * Edits this Permission Overwrite.\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {string} [reason] Reason for creating/editing this overwrite\n   * @returns {Promise<PermissionOverwrites>}\n   * @example\n   * // Update permission overwrites\n   * permissionOverwrites.edit({\n   *   SEND_MESSAGES: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  async edit(options, reason) {\n    await this.channel.permissionOverwrites.upsert(this.id, options, { type: OverwriteTypes[this.type], reason }, this);\n    return this;\n  }\n\n  /**\n   * Deletes this Permission Overwrite.\n   * @param {string} [reason] Reason for deleting this overwrite\n   * @returns {Promise<PermissionOverwrites>}\n   */\n  async delete(reason) {\n    await this.channel.permissionOverwrites.delete(this.id, reason);\n    return this;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      type: OverwriteTypes[this.type],\n      allow: this.allow,\n      deny: this.deny,\n    };\n  }\n\n  /**\n   * An object mapping permission flags to `true` (enabled), `null` (unset) or `false` (disabled).\n   * ```js\n   * {\n   *  'SEND_MESSAGES': true,\n   *  'EMBED_LINKS': null,\n   *  'ATTACH_FILES': false,\n   * }\n   * ```\n   * @typedef {Object} PermissionOverwriteOptions\n   */\n\n  /**\n   * @typedef {Object} ResolvedOverwriteOptions\n   * @property {Permissions} allow The allowed permissions\n   * @property {Permissions} deny The denied permissions\n   */\n\n  /**\n   * Resolves bitfield permissions overwrites from an object.\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {ResolvedOverwriteOptions} initialPermissions The initial permissions\n   * @returns {ResolvedOverwriteOptions}\n   */\n  static resolveOverwriteOptions(options, { allow, deny } = {}) {\n    allow = new Permissions(allow);\n    deny = new Permissions(deny);\n\n    for (const [perm, value] of Object.entries(options)) {\n      if (value === true) {\n        allow.add(perm);\n        deny.remove(perm);\n      } else if (value === false) {\n        allow.remove(perm);\n        deny.add(perm);\n      } else if (value === null) {\n        allow.remove(perm);\n        deny.remove(perm);\n      }\n    }\n\n    return { allow, deny };\n  }\n\n  /**\n   * The raw data for a permission overwrite\n   * @typedef {Object} RawOverwriteData\n   * @property {Snowflake} id The id of the {@link Role} or {@link User} this overwrite belongs to\n   * @property {string} allow The permissions to allow\n   * @property {string} deny The permissions to deny\n   * @property {number} type The type of this OverwriteData\n   */\n\n  /**\n   * Data that can be resolved into {@link RawOverwriteData}. This can be:\n   * * PermissionOverwrites\n   * * OverwriteData\n   * @typedef {PermissionOverwrites|OverwriteData} OverwriteResolvable\n   */\n\n  /**\n   * Data that can be used for a permission overwrite\n   * @typedef {Object} OverwriteData\n   * @property {GuildMemberResolvable|RoleResolvable} id Member or role this overwrite is for\n   * @property {PermissionResolvable} [allow] The permissions to allow\n   * @property {PermissionResolvable} [deny] The permissions to deny\n   * @property {OverwriteType} [type] The type of this OverwriteData\n   */\n\n  /**\n   * Resolves an overwrite into {@link RawOverwriteData}.\n   * @param {OverwriteResolvable} overwrite The overwrite-like data to resolve\n   * @param {Guild} [guild] The guild to resolve from\n   * @returns {RawOverwriteData}\n   */\n  static resolve(overwrite, guild) {\n    if (overwrite instanceof this) return overwrite.toJSON();\n    if (typeof overwrite.id === 'string' && overwrite.type in OverwriteTypes) {\n      return {\n        id: overwrite.id,\n        type: OverwriteTypes[overwrite.type],\n        allow: Permissions.resolve(overwrite.allow ?? Permissions.defaultBit).toString(),\n        deny: Permissions.resolve(overwrite.deny ?? Permissions.defaultBit).toString(),\n      };\n    }\n\n    const userOrRole = guild.roles.resolve(overwrite.id) ?? guild.client.users.resolve(overwrite.id);\n    if (!userOrRole) throw new TypeError('INVALID_TYPE', 'parameter', 'User nor a Role');\n    const type = userOrRole instanceof Role ? OverwriteTypes.role : OverwriteTypes.member;\n\n    return {\n      id: userOrRole.id,\n      type,\n      allow: Permissions.resolve(overwrite.allow ?? Permissions.defaultBit).toString(),\n      deny: Permissions.resolve(overwrite.deny ?? Permissions.defaultBit).toString(),\n    };\n  }\n}\n\nmodule.exports = PermissionOverwrites;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/PermissionOverwrites.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Presence.js":
/*!************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Presence.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst Emoji = __webpack_require__(/*! ./Emoji */ \"./node_modules/discord.js/src/structures/Emoji.js\");\nconst ActivityFlags = __webpack_require__(/*! ../util/ActivityFlags */ \"./node_modules/discord.js/src/util/ActivityFlags.js\");\nconst { ActivityTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Activity sent in a message.\n * @typedef {Object} MessageActivity\n * @property {string} [partyId] Id of the party represented in activity\n * @property {number} [type] Type of activity sent\n */\n\n/**\n * The status of this presence:\n * * **`online`** - user is online\n * * **`idle`** - user is AFK\n * * **`offline`** - user is offline or invisible\n * * **`dnd`** - user is in Do Not Disturb\n * @typedef {string} PresenceStatus\n */\n\n/**\n * The status of this presence:\n * * **`online`** - user is online\n * * **`idle`** - user is AFK\n * * **`dnd`** - user is in Do Not Disturb\n * @typedef {string} ClientPresenceStatus\n */\n\n/**\n * Represents a user's presence.\n * @extends {Base}\n */\nclass Presence extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIPresence} [data={}] The data for the presence\n   */\n  constructor(client, data = {}) {\n    super(client);\n\n    /**\n     * The presence's user id\n     * @type {Snowflake}\n     */\n    this.userId = data.user.id;\n\n    /**\n     * The guild this presence is in\n     * @type {?Guild}\n     */\n    this.guild = data.guild ?? null;\n\n    this._patch(data);\n  }\n\n  /**\n   * The user of this presence\n   * @type {?User}\n   * @readonly\n   */\n  get user() {\n    return this.client.users.resolve(this.userId);\n  }\n\n  /**\n   * The member of this presence\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild.members.resolve(this.userId);\n  }\n\n  _patch(data) {\n    /**\n     * The status of this presence\n     * @type {PresenceStatus}\n     */\n    this.status = data.status ?? this.status ?? 'offline';\n\n    /**\n     * The activities of this presence\n     * @type {Activity[]}\n     */\n    this.activities = data.activities?.map(activity => new Activity(this, activity)) ?? [];\n\n    /**\n     * The devices this presence is on\n     * @type {?Object}\n     * @property {?ClientPresenceStatus} web The current presence in the web application\n     * @property {?ClientPresenceStatus} mobile The current presence in the mobile application\n     * @property {?ClientPresenceStatus} desktop The current presence in the desktop application\n     */\n    this.clientStatus = data.client_status ?? null;\n\n    return this;\n  }\n\n  _clone() {\n    const clone = Object.assign(Object.create(this), this);\n    clone.activities = this.activities.map(activity => activity._clone());\n    return clone;\n  }\n\n  /**\n   * Whether this presence is equal to another.\n   * @param {Presence} presence The presence to compare with\n   * @returns {boolean}\n   */\n  equals(presence) {\n    return (\n      this === presence ||\n      (presence &&\n        this.status === presence.status &&\n        this.activities.length === presence.activities.length &&\n        this.activities.every((activity, index) => activity.equals(presence.activities[index])) &&\n        this.clientStatus?.web === presence.clientStatus?.web &&\n        this.clientStatus?.mobile === presence.clientStatus?.mobile &&\n        this.clientStatus?.desktop === presence.clientStatus?.desktop)\n    );\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\n/**\n * The platform of this activity:\n * * **`desktop`**\n * * **`samsung`** - playing on Samsung Galaxy\n * * **`xbox`** - playing on Xbox Live\n * @typedef {string} ActivityPlatform\n */\n\n/**\n * Represents an activity that is part of a user's presence.\n */\nclass Activity {\n  constructor(presence, data) {\n    Object.defineProperty(this, 'presence', { value: presence });\n\n    /**\n     * The activity's id\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The activity's name\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The activity status's type\n     * @type {ActivityType}\n     */\n    this.type = typeof data.type === 'number' ? ActivityTypes[data.type] : data.type;\n\n    /**\n     * If the activity is being streamed, a link to the stream\n     * @type {?string}\n     */\n    this.url = data.url ?? null;\n\n    /**\n     * Details about the activity\n     * @type {?string}\n     */\n    this.details = data.details ?? null;\n\n    /**\n     * State of the activity\n     * @type {?string}\n     */\n    this.state = data.state ?? null;\n\n    /**\n     * The id of the application associated with this activity\n     * @type {?Snowflake}\n     */\n    this.applicationId = data.application_id ?? null;\n\n    /**\n     * Represents timestamps of an activity\n     * @typedef {Object} ActivityTimestamps\n     * @property {?Date} start When the activity started\n     * @property {?Date} end When the activity will end\n     */\n\n    /**\n     * Timestamps for the activity\n     * @type {?ActivityTimestamps}\n     */\n    this.timestamps = data.timestamps\n      ? {\n          start: data.timestamps.start ? new Date(Number(data.timestamps.start)) : null,\n          end: data.timestamps.end ? new Date(Number(data.timestamps.end)) : null,\n        }\n      : null;\n\n    /**\n     * The Spotify song's id\n     * @type {?string}\n     */\n    this.syncId = data.sync_id ?? null;\n\n    /**\n     * The platform the game is being played on\n     * @type {?ActivityPlatform}\n     */\n    this.platform = data.platform ?? null;\n\n    /**\n     * Represents a party of an activity\n     * @typedef {Object} ActivityParty\n     * @property {?string} id The party's id\n     * @property {number[]} size Size of the party as `[current, max]`\n     */\n\n    /**\n     * Party of the activity\n     * @type {?ActivityParty}\n     */\n    this.party = data.party ?? null;\n\n    /**\n     * Assets for rich presence\n     * @type {?RichPresenceAssets}\n     */\n    this.assets = data.assets ? new RichPresenceAssets(this, data.assets) : null;\n\n    /**\n     * Flags that describe the activity\n     * @type {Readonly<ActivityFlags>}\n     */\n    this.flags = new ActivityFlags(data.flags).freeze();\n\n    /**\n     * Emoji for a custom activity\n     * @type {?Emoji}\n     */\n    this.emoji = data.emoji ? new Emoji(presence.client, data.emoji) : null;\n\n    /**\n     * The game's or Spotify session's id\n     * @type {?string}\n     */\n    this.sessionId = data.session_id ?? null;\n\n    /**\n     * The labels of the buttons of this rich presence\n     * @type {string[]}\n     */\n    this.buttons = data.buttons ?? [];\n\n    /**\n     * Creation date of the activity\n     * @type {number}\n     */\n    this.createdTimestamp = new Date(data.created_at).getTime();\n  }\n\n  /**\n   * Whether this activity is equal to another activity.\n   * @param {Activity} activity The activity to compare with\n   * @returns {boolean}\n   */\n  equals(activity) {\n    return (\n      this === activity ||\n      (activity &&\n        this.name === activity.name &&\n        this.type === activity.type &&\n        this.url === activity.url &&\n        this.state === activity.state &&\n        this.details === activity.details)\n    );\n  }\n\n  /**\n   * The time the activity was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the activities' name instead of the Activity object.\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n\n  _clone() {\n    return Object.assign(Object.create(this), this);\n  }\n}\n\n/**\n * Assets for a rich presence\n */\nclass RichPresenceAssets {\n  constructor(activity, assets) {\n    Object.defineProperty(this, 'activity', { value: activity });\n\n    /**\n     * Hover text for the large image\n     * @type {?string}\n     */\n    this.largeText = assets.large_text ?? null;\n\n    /**\n     * Hover text for the small image\n     * @type {?string}\n     */\n    this.smallText = assets.small_text ?? null;\n\n    /**\n     * The large image asset's id\n     * @type {?Snowflake}\n     */\n    this.largeImage = assets.large_image ?? null;\n\n    /**\n     * The small image asset's id\n     * @type {?Snowflake}\n     */\n    this.smallImage = assets.small_image ?? null;\n  }\n\n  /**\n   * Gets the URL of the small image asset\n   * @param {StaticImageURLOptions} [options] Options for the image url\n   * @returns {?string}\n   */\n  smallImageURL({ format, size } = {}) {\n    return (\n      this.smallImage &&\n      this.activity.presence.client.rest.cdn.AppAsset(this.activity.applicationId, this.smallImage, {\n        format,\n        size,\n      })\n    );\n  }\n\n  /**\n   * Gets the URL of the large image asset\n   * @param {StaticImageURLOptions} [options] Options for the image url\n   * @returns {?string}\n   */\n  largeImageURL({ format, size } = {}) {\n    if (!this.largeImage) return null;\n    if (/^spotify:/.test(this.largeImage)) {\n      return `https://i.scdn.co/image/${this.largeImage.slice(8)}`;\n    } else if (/^twitch:/.test(this.largeImage)) {\n      return `https://static-cdn.jtvnw.net/previews-ttv/live_user_${this.largeImage.slice(7)}.png`;\n    }\n    return this.activity.presence.client.rest.cdn.AppAsset(this.activity.applicationId, this.largeImage, {\n      format,\n      size,\n    });\n  }\n}\n\nexports.Presence = Presence;\nexports.Activity = Activity;\nexports.RichPresenceAssets = RichPresenceAssets;\n\n/* eslint-disable max-len */\n/**\n * @external APIPresence\n * @see {@link https://discord.com/developers/docs/rich-presence/how-to#updating-presence-update-presence-payload-fields}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Presence.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ReactionCollector.js":
/*!*********************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ReactionCollector.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Collector = __webpack_require__(/*! ./interfaces/Collector */ \"./node_modules/discord.js/src/structures/interfaces/Collector.js\");\nconst { Events } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * @typedef {CollectorOptions} ReactionCollectorOptions\n * @property {number} max The maximum total amount of reactions to collect\n * @property {number} maxEmojis The maximum number of emojis to collect\n * @property {number} maxUsers The maximum number of users to react\n */\n\n/**\n * Collects reactions on messages.\n * Will automatically stop if the message (`'messageDelete'`),\n * channel (`'channelDelete'`), or guild (`'guildDelete'`) are deleted.\n * @extends {Collector}\n */\nclass ReactionCollector extends Collector {\n  /**\n   * @param {Message} message The message upon which to collect reactions\n   * @param {ReactionCollectorOptions} [options={}] The options to apply to this collector\n   */\n  constructor(message, options = {}) {\n    super(message.client, options);\n\n    /**\n     * The message upon which to collect reactions\n     * @type {Message}\n     */\n    this.message = message;\n\n    /**\n     * The users which have reacted to this message\n     * @type {Collection}\n     */\n    this.users = new Collection();\n\n    /**\n     * The total number of reactions collected\n     * @type {number}\n     */\n    this.total = 0;\n\n    this.empty = this.empty.bind(this);\n    this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n    this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n    this._handleMessageDeletion = this._handleMessageDeletion.bind(this);\n\n    this.client.incrementMaxListeners();\n    this.client.on(Events.MESSAGE_REACTION_ADD, this.handleCollect);\n    this.client.on(Events.MESSAGE_REACTION_REMOVE, this.handleDispose);\n    this.client.on(Events.MESSAGE_REACTION_REMOVE_ALL, this.empty);\n    this.client.on(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n    this.client.on(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n    this.client.on(Events.GUILD_DELETE, this._handleGuildDeletion);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.MESSAGE_REACTION_ADD, this.handleCollect);\n      this.client.removeListener(Events.MESSAGE_REACTION_REMOVE, this.handleDispose);\n      this.client.removeListener(Events.MESSAGE_REACTION_REMOVE_ALL, this.empty);\n      this.client.removeListener(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n      this.client.removeListener(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n      this.client.removeListener(Events.GUILD_DELETE, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n\n    this.on('collect', (reaction, user) => {\n      this.total++;\n      this.users.set(user.id, user);\n    });\n\n    this.on('remove', (reaction, user) => {\n      this.total--;\n      if (!this.collected.some(r => r.users.cache.has(user.id))) this.users.delete(user.id);\n    });\n  }\n\n  /**\n   * Handles an incoming reaction for possible collection.\n   * @param {MessageReaction} reaction The reaction to possibly collect\n   * @param {User} user The user that added the reaction\n   * @returns {Promise<?(Snowflake|string)>}\n   * @private\n   */\n  async collect(reaction, user) {\n    /**\n     * Emitted whenever a reaction is collected.\n     * @event ReactionCollector#collect\n     * @param {MessageReaction} reaction The reaction that was collected\n     * @param {User} user The user that added the reaction\n     */\n    if (reaction.message.id !== this.message.id) return null;\n\n    /**\n     * Emitted whenever a reaction is newly created on a message. Will emit only when a new reaction is\n     * added to the message, as opposed to {@link Collector#collect} which which will\n     * be emitted even when a reaction has already been added to the message.\n     * @event ReactionCollector#create\n     * @param {MessageReaction} reaction The reaction that was added\n     * @param {User} user The user that added the reaction\n     */\n    if (reaction.count === 1 && (await this.filter(reaction, user, this.collected))) {\n      this.emit('create', reaction, user);\n    }\n\n    return ReactionCollector.key(reaction);\n  }\n\n  /**\n   * Handles a reaction deletion for possible disposal.\n   * @param {MessageReaction} reaction The reaction to possibly dispose of\n   * @param {User} user The user that removed the reaction\n   * @returns {?(Snowflake|string)}\n   */\n  dispose(reaction, user) {\n    /**\n     * Emitted when the reaction had all the users removed and the `dispose` option is set to true.\n     * @event ReactionCollector#dispose\n     * @param {MessageReaction} reaction The reaction that was disposed of\n     * @param {User} user The user that removed the reaction\n     */\n    if (reaction.message.id !== this.message.id) return null;\n\n    /**\n     * Emitted when the reaction had one user removed and the `dispose` option is set to true.\n     * @event ReactionCollector#remove\n     * @param {MessageReaction} reaction The reaction that was removed\n     * @param {User} user The user that removed the reaction\n     */\n    if (this.collected.has(ReactionCollector.key(reaction)) && this.users.has(user.id)) {\n      this.emit('remove', reaction, user);\n    }\n    return reaction.count ? null : ReactionCollector.key(reaction);\n  }\n\n  /**\n   * Empties this reaction collector.\n   */\n  empty() {\n    this.total = 0;\n    this.collected.clear();\n    this.users.clear();\n    this.checkEnd();\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.total >= this.options.max) return 'limit';\n    if (this.options.maxEmojis && this.collected.size >= this.options.maxEmojis) return 'emojiLimit';\n    if (this.options.maxUsers && this.users.size >= this.options.maxUsers) return 'userLimit';\n    return null;\n  }\n\n  /**\n   * Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.\n   * @private\n   * @param {Message} message The message that was deleted\n   * @returns {void}\n   */\n  _handleMessageDeletion(message) {\n    if (message.id === this.message.id) {\n      this.stop('messageDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.message.channelId) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.message.guild?.id) {\n      this.stop('guildDelete');\n    }\n  }\n\n  /**\n   * Gets the collector key for a reaction.\n   * @param {MessageReaction} reaction The message reaction to get the key for\n   * @returns {Snowflake|string}\n   */\n  static key(reaction) {\n    return reaction.emoji.id ?? reaction.emoji.name;\n  }\n}\n\nmodule.exports = ReactionCollector;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ReactionCollector.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ReactionEmoji.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ReactionEmoji.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Emoji = __webpack_require__(/*! ./Emoji */ \"./node_modules/discord.js/src/structures/Emoji.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a limited emoji set used for both custom and unicode emojis. Custom emojis\n * will use this class opposed to the Emoji class when the client doesn't know enough\n * information about them.\n * @extends {Emoji}\n */\nclass ReactionEmoji extends Emoji {\n  constructor(reaction, emoji) {\n    super(reaction.message.client, emoji);\n    /**\n     * The message reaction this emoji refers to\n     * @type {MessageReaction}\n     */\n    this.reaction = reaction;\n  }\n\n  toJSON() {\n    return Util.flatten(this, { identifier: true });\n  }\n\n  valueOf() {\n    return this.id;\n  }\n}\n\nmodule.exports = ReactionEmoji;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ReactionEmoji.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Role.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Role.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst { Error, TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a role on Discord.\n * @extends {Base}\n */\nclass Role extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIRole} data The data for the role\n   * @param {Guild} guild The guild the role is part of\n   */\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild that the role belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The role's id (unique to the guild it is part of)\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the role\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The base 10 color of the role\n     * @type {number}\n     */\n    this.color = data.color;\n\n    /**\n     * If true, users that are part of this role will appear in a separate category in the users list\n     * @type {boolean}\n     */\n    this.hoist = data.hoist;\n\n    /**\n     * The raw position of the role from the API\n     * @type {number}\n     */\n    this.rawPosition = data.position;\n\n    /**\n     * The permissions of the role\n     * @type {Readonly<Permissions>}\n     */\n    this.permissions = new Permissions(BigInt(data.permissions)).freeze();\n\n    /**\n     * Whether or not the role is managed by an external service\n     * @type {boolean}\n     */\n    this.managed = data.managed;\n\n    /**\n     * Whether or not the role can be mentioned by anyone\n     * @type {boolean}\n     */\n    this.mentionable = data.mentionable;\n\n    /**\n     * Whether the role has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    /**\n     * The tags this role has\n     * @type {?Object}\n     * @property {Snowflake} [botId] The id of the bot this role belongs to\n     * @property {Snowflake} [integrationId] The id of the integration this role belongs to\n     * @property {true} [premiumSubscriberRole] Whether this is the guild's premium subscription role\n     */\n    this.tags = data.tags ? {} : null;\n    if (data.tags) {\n      if ('bot_id' in data.tags) {\n        this.tags.botId = data.tags.bot_id;\n      }\n      if ('integration_id' in data.tags) {\n        this.tags.integrationId = data.tags.integration_id;\n      }\n      if ('premium_subscriber' in data.tags) {\n        this.tags.premiumSubscriberRole = true;\n      }\n    }\n  }\n\n  /**\n   * The timestamp the role was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the role was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The hexadecimal version of the role color, with a leading hashtag\n   * @type {string}\n   * @readonly\n   */\n  get hexColor() {\n    return `#${this.color.toString(16).padStart(6, '0')}`;\n  }\n\n  /**\n   * The cached guild members that have this role\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    return this.guild.members.cache.filter(m => m.roles.cache.has(this.id));\n  }\n\n  /**\n   * Whether the role is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    if (this.managed) return false;\n    const clientMember = this.guild.members.resolve(this.client.user);\n    if (!clientMember.permissions.has(Permissions.FLAGS.MANAGE_ROLES)) return false;\n    return clientMember.roles.highest.comparePositionTo(this) > 0;\n  }\n\n  /**\n   * The position of the role in the role manager\n   * @type {number}\n   * @readonly\n   */\n  get position() {\n    const sorted = this.guild._sortedRoles();\n    return [...sorted.values()].indexOf(sorted.get(this.id));\n  }\n\n  /**\n   * Compares this role's position to another role's.\n   * @param {RoleResolvable} role Role to compare to this one\n   * @returns {number} Negative number if this role's position is lower (other role's is higher),\n   * positive number if this one is higher (other's is lower), 0 if equal\n   */\n  comparePositionTo(role) {\n    role = this.guild.roles.resolve(role);\n    if (!role) throw new TypeError('INVALID_TYPE', 'role', 'Role nor a Snowflake');\n    return this.constructor.comparePositions(this, role);\n  }\n\n  /**\n   * The data for a role.\n   * @typedef {Object} RoleData\n   * @property {string} [name] The name of the role\n   * @property {ColorResolvable} [color] The color of the role, either a hex string or a base 10 number\n   * @property {boolean} [hoist] Whether or not the role should be hoisted\n   * @property {number} [position] The position of the role\n   * @property {PermissionResolvable} [permissions] The permissions of the role\n   * @property {boolean} [mentionable] Whether or not the role should be mentionable\n   */\n\n  /**\n   * Edits the role.\n   * @param {RoleData} data The new data for the role\n   * @param {string} [reason] Reason for editing this role\n   * @returns {Promise<Role>}\n   * @example\n   * // Edit a role\n   * role.edit({ name: 'new role' })\n   *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  edit(data, reason) {\n    return this.guild.roles.edit(this, data, reason);\n  }\n\n  /**\n   * Returns `channel.permissionsFor(role)`. Returns permissions for a role in a guild channel,\n   * taking into account permission overwrites.\n   * @param {GuildChannel|Snowflake} channel The guild channel to use as context\n   * @returns {Readonly<Permissions>}\n   */\n  permissionsIn(channel) {\n    channel = this.guild.channels.resolve(channel);\n    if (!channel) throw new Error('GUILD_CHANNEL_RESOLVE');\n    return channel.rolePermissions(this);\n  }\n\n  /**\n   * Sets a new name for the role.\n   * @param {string} name The new name of the role\n   * @param {string} [reason] Reason for changing the role's name\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the name of the role\n   * role.setName('new role')\n   *   .then(updated => console.log(`Updated role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Sets a new color for the role.\n   * @param {ColorResolvable} color The color of the role\n   * @param {string} [reason] Reason for changing the role's color\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the color of a role\n   * role.setColor('#FF0000')\n   *   .then(updated => console.log(`Set color of role to ${updated.color}`))\n   *   .catch(console.error);\n   */\n  setColor(color, reason) {\n    return this.edit({ color }, reason);\n  }\n\n  /**\n   * Sets whether or not the role should be hoisted.\n   * @param {boolean} hoist Whether or not to hoist the role\n   * @param {string} [reason] Reason for setting whether or not the role should be hoisted\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the hoist of the role\n   * role.setHoist(true)\n   *   .then(updated => console.log(`Role hoisted: ${updated.hoist}`))\n   *   .catch(console.error);\n   */\n  setHoist(hoist, reason) {\n    return this.edit({ hoist }, reason);\n  }\n\n  /**\n   * Sets the permissions of the role.\n   * @param {PermissionResolvable} permissions The permissions of the role\n   * @param {string} [reason] Reason for changing the role's permissions\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the permissions of the role\n   * role.setPermissions([Permissions.FLAGS.KICK_MEMBERS, Permissions.FLAGS.BAN_MEMBERS])\n   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n   *   .catch(console.error);\n   * @example\n   * // Remove all permissions from a role\n   * role.setPermissions(0n)\n   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n   *   .catch(console.error);\n   */\n  setPermissions(permissions, reason) {\n    return this.edit({ permissions }, reason);\n  }\n\n  /**\n   * Sets whether this role is mentionable.\n   * @param {boolean} mentionable Whether this role should be mentionable\n   * @param {string} [reason] Reason for setting whether or not this role should be mentionable\n   * @returns {Promise<Role>}\n   * @example\n   * // Make the role mentionable\n   * role.setMentionable(true)\n   *   .then(updated => console.log(`Role updated ${updated.name}`))\n   *   .catch(console.error);\n   */\n  setMentionable(mentionable, reason) {\n    return this.edit({ mentionable }, reason);\n  }\n\n  /**\n   * Options used to set position of a role.\n   * @typedef {Object} SetRolePositionOptions\n   * @property {boolean} [relative=false] Whether to change the position relative to its current value or not\n   * @property {string} [reason] The reason for changing the position\n   */\n\n  /**\n   * Sets the new position of the role.\n   * @param {number} position The new position for the role\n   * @param {SetRolePositionOptions} [options] Options for setting the position\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the position of the role\n   * role.setPosition(1)\n   *   .then(updated => console.log(`Role position: ${updated.position}`))\n   *   .catch(console.error);\n   */\n  async setPosition(position, { relative, reason } = {}) {\n    const updatedRoles = await Util.setPosition(\n      this,\n      position,\n      relative,\n      this.guild._sortedRoles(),\n      this.client.api.guilds(this.guild.id).roles,\n      reason,\n    );\n    this.client.actions.GuildRolesPositionUpdate.handle({\n      guild_id: this.guild.id,\n      roles: updatedRoles,\n    });\n    return this;\n  }\n\n  /**\n   * Deletes the role.\n   * @param {string} [reason] Reason for deleting this role\n   * @returns {Promise<Role>}\n   * @example\n   * // Delete a role\n   * role.delete('The role needed to go')\n   *   .then(deleted => console.log(`Deleted role ${deleted.name}`))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.client.api.guilds[this.guild.id].roles[this.id].delete({ reason });\n    this.client.actions.GuildRoleDelete.handle({ guild_id: this.guild.id, role_id: this.id });\n    return this;\n  }\n\n  /**\n   * Whether this role equals another role. It compares all properties, so for most operations\n   * it is advisable to just compare `role.id === role2.id` as it is much faster and is often\n   * what most users need.\n   * @param {Role} role Role to compare with\n   * @returns {boolean}\n   */\n  equals(role) {\n    return (\n      role &&\n      this.id === role.id &&\n      this.name === role.name &&\n      this.color === role.color &&\n      this.hoist === role.hoist &&\n      this.position === role.position &&\n      this.permissions.bitfield === role.permissions.bitfield &&\n      this.managed === role.managed\n    );\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the role's mention instead of the Role object.\n   * @returns {string}\n   * @example\n   * // Logs: Role: <@&123456789012345678>\n   * console.log(`Role: ${role}`);\n   */\n  toString() {\n    if (this.id === this.guild.id) return '@everyone';\n    return `<@&${this.id}>`;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n\n  /**\n   * Compares the positions of two roles.\n   * @param {Role} role1 First role to compare\n   * @param {Role} role2 Second role to compare\n   * @returns {number} Negative number if the first role's position is lower (second role's is higher),\n   * positive number if the first's is higher (second's is lower), 0 if equal\n   */\n  static comparePositions(role1, role2) {\n    if (role1.position === role2.position) return role2.id - role1.id;\n    return role1.position - role2.position;\n  }\n}\n\nmodule.exports = Role;\n\n/**\n * @external APIRole\n * @see {@link https://discord.com/developers/docs/topics/permissions#role-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Role.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/SelectMenuInteraction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/SelectMenuInteraction.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst MessageComponentInteraction = __webpack_require__(/*! ./MessageComponentInteraction */ \"./node_modules/discord.js/src/structures/MessageComponentInteraction.js\");\n\n/**\n * Represents a select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass SelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The values selected, if the component which was interacted with was a select menu\n     * @type {string[]}\n     */\n    this.values = data.data.values ?? [];\n  }\n}\n\nmodule.exports = SelectMenuInteraction;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/SelectMenuInteraction.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/StageChannel.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/StageChannel.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuildVoiceChannel = __webpack_require__(/*! ./BaseGuildVoiceChannel */ \"./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js\");\n\n/**\n * Represents a guild stage channel on Discord.\n * @extends {BaseGuildVoiceChannel}\n */\nclass StageChannel extends BaseGuildVoiceChannel {\n  _patch(data) {\n    super._patch(data);\n\n    if ('topic' in data) {\n      /**\n       * The topic of the stage channel\n       * @type {?string}\n       */\n      this.topic = data.topic;\n    }\n  }\n\n  /**\n   * The stage instance of this stage channel, if it exists\n   * @type {?StageInstance}\n   * @readonly\n   */\n  get stageInstance() {\n    return this.guild.stageInstances.cache.find(stageInstance => stageInstance.channelId === this.id) ?? null;\n  }\n\n  /**\n   * Creates a stage instance associated to this stage channel.\n   * @param {StageInstanceCreateOptions} options The options to create the stage instance\n   * @returns {Promise<StageInstance>}\n   */\n  createStageInstance(options) {\n    return this.guild.stageInstances.create(this.id, options);\n  }\n\n  /**\n   * Sets a new topic for the guild channel.\n   * @param {?string} topic The new topic for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's topic\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel topic\n   * channel.setTopic('needs more rate limiting')\n   *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n   *   .catch(console.error);\n   */\n  setTopic(topic, reason) {\n    return this.edit({ topic }, reason);\n  }\n\n  /**\n   * Sets the RTC region of the channel.\n   * @name StageChannel#setRTCRegion\n   * @param {?string} region The new region of the channel. Set to `null` to remove a specific region for the channel\n   * @returns {Promise<StageChannel>}\n   * @example\n   * // Set the RTC region to europe\n   * stageChannel.setRTCRegion('europe');\n   * @example\n   * // Remove a fixed region for this channel - let Discord decide automatically\n   * stageChannel.setRTCRegion(null);\n   */\n}\n\nmodule.exports = StageChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/StageChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/StageInstance.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/StageInstance.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst { PrivacyLevels } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents a stage instance.\n * @extends {Base}\n */\nclass StageInstance extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The stage instance's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * Whether the stage instance has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The id of the guild associated with the stage channel\n     * @type {Snowflake}\n     */\n    this.guildId = data.guild_id;\n\n    /**\n     * The id of the channel associated with the stage channel\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n\n    /**\n     * The topic of the stage instance\n     * @type {string}\n     */\n    this.topic = data.topic;\n\n    /**\n     * The privacy level of the stage instance\n     * @type {PrivacyLevel}\n     */\n    this.privacyLevel = PrivacyLevels[data.privacy_level];\n\n    /**\n     * Whether or not stage discovery is disabled\n     * @type {?boolean}\n     */\n    this.discoverableDisabled = data.discoverable_disabled ?? null;\n  }\n\n  /**\n   * The stage channel associated with this stage instance\n   * @type {?StageChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The guild this stage instance belongs to\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * Edits this stage instance.\n   * @param {StageInstanceEditOptions} options The options to edit the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Edit a stage instance\n   * stageInstance.edit({ topic: 'new topic' })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error)\n   */\n  edit(options) {\n    return this.guild.stageInstances.edit(this.channelId, options);\n  }\n\n  /**\n   * Deletes this stage instance.\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Delete a stage instance\n   * stageInstance.delete()\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async delete() {\n    await this.guild.stageInstances.delete(this.channelId);\n    const clone = this._clone();\n    clone.deleted = true;\n    return clone;\n  }\n\n  /**\n   * Sets the topic of this stage instance.\n   * @param {string} topic The topic for the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Set topic of a stage instance\n   * stageInstance.setTopic('new topic')\n   *  .then(stageInstance => console.log(`Set the topic to: ${stageInstance.topic}`))\n   *  .catch(console.error);\n   */\n  setTopic(topic) {\n    return this.guild.stageInstances.edit(this.channelId, { topic });\n  }\n\n  /**\n   * The timestamp this stage instances was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this stage instance was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n}\n\nmodule.exports = StageInstance;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/StageInstance.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Sticker.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Sticker.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst { StickerFormatTypes, StickerTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents a Sticker.\n * @extends {Base}\n */\nclass Sticker extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APISticker | APIStickerItem} sticker The data for the sticker\n   */\n  constructor(client, sticker) {\n    super(client);\n\n    this._patch(sticker);\n  }\n\n  _patch(sticker) {\n    /**\n     * The sticker's id\n     * @type {Snowflake}\n     */\n    this.id = sticker.id;\n\n    /**\n     * The description of the sticker\n     * @type {?string}\n     */\n    this.description = sticker.description ?? null;\n\n    /**\n     * The type of the sticker\n     * @type {?StickerType}\n     */\n    this.type = StickerTypes[sticker.type] ?? null;\n\n    /**\n     * The format of the sticker\n     * @type {StickerFormatType}\n     */\n    this.format = StickerFormatTypes[sticker.format_type];\n\n    /**\n     * The name of the sticker\n     * @type {string}\n     */\n    this.name = sticker.name;\n\n    /**\n     * The id of the pack the sticker is from, for standard stickers\n     * @type {?Snowflake}\n     */\n    this.packId = sticker.pack_id ?? null;\n\n    /**\n     * An array of tags for the sticker\n     * @type {?string[]}\n     */\n    this.tags = sticker.tags?.split(', ') ?? null;\n\n    /**\n     * Whether or not the guild sticker is available\n     * @type {?boolean}\n     */\n    this.available = sticker.available ?? null;\n\n    /**\n     * The id of the guild that owns this sticker\n     * @type {?Snowflake}\n     */\n    this.guildId = sticker.guild_id ?? null;\n\n    /**\n     * The user that uploaded the guild sticker\n     * @type {?User}\n     */\n    this.user = sticker.user ? this.client.users.add(sticker.user) : null;\n\n    /**\n     * The standard sticker's sort order within its pack\n     * @type {?number}\n     */\n    this.sortValue = sticker.sort_value ?? null;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * Whether this sticker is partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.type;\n  }\n\n  /**\n   * The guild that owns this sticker\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * A link to the sticker\n   * <info>If the sticker's format is LOTTIE, it returns the URL of the Lottie json file.</info>\n   * @type {string}\n   */\n  get url() {\n    return this.client.rest.cdn.Sticker(this.id, this.format);\n  }\n\n  /**\n   * Fetches this sticker.\n   * @returns {Promise<Sticker>}\n   */\n  async fetch() {\n    const data = await this.client.api.stickers(this.id).get();\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * Fetches the pack this sticker is part of from Discord, if this is a Nitro sticker.\n   * @returns {Promise<?StickerPack>}\n   */\n  async fetchPack() {\n    return (this.packId && (await this.client.fetchPremiumStickerPacks()).get(this.packId)) ?? null;\n  }\n\n  /**\n   * Fetches the user who uploaded this sticker, if this is a guild sticker.\n   * @returns {Promise<?User>}\n   */\n  async fetchUser() {\n    if (this.partial) await this.fetch();\n    if (!this.guildId) throw new Error('NOT_GUILD_STICKER');\n\n    const data = await this.client.api.guilds(this.guildId).stickers(this.id).get();\n    this._patch(data);\n    return this.user;\n  }\n\n  /**\n   * Data for editing a sticker.\n   * @typedef {Object} GuildStickerEditData\n   * @property {string} [name] The name of the sticker\n   * @property {?string} [description] The description of the sticker\n   * @property {string} [tags] The Discord name of a unicode emoji representing the sticker's expression\n   */\n\n  /**\n   * Edits the sticker.\n   * @param {GuildStickerEditData} [data] The new data for the sticker\n   * @param {string} [reason] Reason for editing this sticker\n   * @returns {Promise<Sticker>}\n   * @example\n   * // Update the name of a sticker\n   * sticker.edit({ name: 'new name' })\n   *   .then(s => console.log(`Updated the name of the sticker to ${s.name}`))\n   *   .catch(console.error);\n   */\n  edit(data, reason) {\n    return this.guild.stickers.edit(this, data, reason);\n  }\n\n  /**\n   * Deletes the sticker.\n   * @returns {Promise<Sticker>}\n   * @param {string} [reason] Reason for deleting this sticker\n   * @example\n   * // Delete a message\n   * sticker.delete()\n   *   .then(s => console.log(`Deleted sticker ${s.name}`))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.guild.stickers.delete(this, reason);\n    return this;\n  }\n\n  /**\n   * Whether this sticker is the same as another one.\n   * @param {Sticker|APISticker} other The sticker to compare it to\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof Sticker) {\n      return (\n        other.id === this.id &&\n        other.description === this.description &&\n        other.type === this.type &&\n        other.format === this.format &&\n        other.name === this.name &&\n        other.packId === this.packId &&\n        other.tags.length === this.tags.length &&\n        other.tags.every(tag => this.tags.includes(tag)) &&\n        other.available === this.available &&\n        other.guildId === this.guildId &&\n        other.sortValue === this.sortValue\n      );\n    } else {\n      return (\n        other.id === this.id &&\n        other.description === this.description &&\n        other.name === this.name &&\n        other.tags === this.tags.join(', ')\n      );\n    }\n  }\n}\n\nmodule.exports = Sticker;\n\n/**\n * @external APISticker\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-object}\n */\n\n/**\n * @external APIStickerItem\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-item-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Sticker.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/StickerPack.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/StickerPack.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst Sticker = __webpack_require__(/*! ./Sticker */ \"./node_modules/discord.js/src/structures/Sticker.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents a pack of standard stickers.\n * @extends {Base}\n */\nclass StickerPack extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIStickerPack} pack The data for the sticker pack\n   */\n  constructor(client, pack) {\n    super(client);\n    /**\n     * The Sticker pack's id\n     * @type {Snowflake}\n     */\n    this.id = pack.id;\n\n    /**\n     * The stickers in the pack\n     * @type {Collection<Snowflake, Sticker>}\n     */\n    this.stickers = new Collection(pack.stickers.map(s => [s.id, new Sticker(client, s)]));\n\n    /**\n     * The name of the sticker pack\n     * @type {string}\n     */\n    this.name = pack.name;\n\n    /**\n     * The id of the pack's SKU\n     * @type {Snowflake}\n     */\n    this.skuId = pack.sku_id;\n\n    /**\n     * The id of a sticker in the pack which is shown as the pack's icon\n     * @type {?Snowflake}\n     */\n    this.coverStickerId = pack.cover_sticker_id ?? null;\n\n    /**\n     * The description of the sticker pack\n     * @type {string}\n     */\n    this.description = pack.description;\n\n    /**\n     * The id of the sticker pack's banner image\n     * @type {Snowflake}\n     */\n    this.bannerId = pack.banner_asset_id;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The sticker which is shown as the pack's icon\n   * @type {?Sticker}\n   * @readonly\n   */\n  get coverSticker() {\n    return this.coverStickerId && this.stickers.get(this.coverStickerId);\n  }\n\n  /**\n   * The URL to this sticker pack's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {string}\n   */\n  bannerURL({ format, size } = {}) {\n    return this.client.rest.cdn.StickerPackBanner(this.bannerId, format, size);\n  }\n}\n\nmodule.exports = StickerPack;\n\n/**\n * @external APIStickerPack\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-pack-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/StickerPack.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/StoreChannel.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/StoreChannel.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst GuildChannel = __webpack_require__(/*! ./GuildChannel */ \"./node_modules/discord.js/src/structures/GuildChannel.js\");\n\n/**\n * Represents a guild store channel on Discord.\n * @extends {GuildChannel}\n */\nclass StoreChannel extends GuildChannel {\n  /**\n   * @param {Guild} guild The guild the store channel is part of\n   * @param {APIChannel} data The data for the store channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   */\n  constructor(guild, data, client) {\n    super(guild, data, client);\n\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n    this.nsfw = Boolean(data.nsfw);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('nsfw' in data) {\n      this.nsfw = Boolean(data.nsfw);\n    }\n  }\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n}\n\nmodule.exports = StoreChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/StoreChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Team.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Team.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst TeamMember = __webpack_require__(/*! ./TeamMember */ \"./node_modules/discord.js/src/structures/TeamMember.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents a Client OAuth2 Application Team.\n * @extends {Base}\n */\nclass Team extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The Team's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the Team\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The Team's icon hash\n     * @type {?string}\n     */\n    this.icon = data.icon ?? null;\n\n    /**\n     * The Team's owner id\n     * @type {?Snowflake}\n     */\n    this.ownerId = data.owner_user_id ?? null;\n\n    /**\n     * The Team's members\n     * @type {Collection<Snowflake, TeamMember>}\n     */\n    this.members = new Collection();\n\n    for (const memberData of data.members) {\n      const member = new TeamMember(this, memberData);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The owner of this team\n   * @type {?TeamMember}\n   * @readonly\n   */\n  get owner() {\n    return this.members.get(this.ownerId) ?? null;\n  }\n\n  /**\n   * The timestamp the team was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the team was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the team's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.TeamIcon(this.id, this.icon, { format, size });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the Team's name instead of the\n   * Team object.\n   * @returns {string}\n   * @example\n   * // Logs: Team name: My Team\n   * console.log(`Team name: ${team}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Team;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Team.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/TeamMember.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/TeamMember.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst { MembershipStates } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {string[]}\n     */\n    this.permissions = data.permissions;\n\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {MembershipState}\n     */\n    this.membershipState = MembershipStates[data.membership_state];\n\n    /**\n     * The user for this Team Member\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user);\n  }\n\n  /**\n   * The Team Member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team member's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\n\nmodule.exports = TeamMember;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/TeamMember.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/TextChannel.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/TextChannel.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuildTextChannel = __webpack_require__(/*! ./BaseGuildTextChannel */ \"./node_modules/discord.js/src/structures/BaseGuildTextChannel.js\");\n\n/**\n * Represents a guild text channel on Discord.\n * @extends {BaseGuildTextChannel}\n */\nclass TextChannel extends BaseGuildTextChannel {\n  _patch(data) {\n    super._patch(data);\n\n    if ('rate_limit_per_user' in data) {\n      /**\n       * The ratelimit per user for this channel in seconds\n       * @type {number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user;\n    }\n  }\n\n  /**\n   * Sets the rate limit per user for this channel.\n   * @param {number} rateLimitPerUser The new ratelimit in seconds\n   * @param {string} [reason] Reason for changing the channel's ratelimits\n   * @returns {Promise<TextChannel>}\n   */\n  setRateLimitPerUser(rateLimitPerUser, reason) {\n    return this.edit({ rateLimitPerUser }, reason);\n  }\n}\n\nmodule.exports = TextChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/TextChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ThreadChannel.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ThreadChannel.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Channel = __webpack_require__(/*! ./Channel */ \"./node_modules/discord.js/src/structures/Channel.js\");\nconst TextBasedChannel = __webpack_require__(/*! ./interfaces/TextBasedChannel */ \"./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js\");\nconst MessageManager = __webpack_require__(/*! ../managers/MessageManager */ \"./node_modules/discord.js/src/managers/MessageManager.js\");\nconst ThreadMemberManager = __webpack_require__(/*! ../managers/ThreadMemberManager */ \"./node_modules/discord.js/src/managers/ThreadMemberManager.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * Represents a thread channel on Discord.\n * @extends {Channel}\n * @implements {TextBasedChannel}\n */\nclass ThreadChannel extends Channel {\n  /**\n   * @param {Guild} guild The guild the thread channel is part of\n   * @param {APIChannel} data The data for the thread channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   * @param {boolean} [fromInteraction=false] Whether the data was from an interaction (partial)\n   */\n  constructor(guild, data, client, fromInteraction = false) {\n    super(guild?.client ?? client, data, false);\n\n    /**\n     * The guild the thread is in\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The id of the guild the channel is in\n     * @type {Snowflake}\n     */\n    this.guildId = guild?.id ?? data.guild_id;\n\n    /**\n     * A manager of the messages sent to this thread\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n\n    /**\n     * A manager of the members that are part of this thread\n     * @type {ThreadMemberManager}\n     */\n    this.members = new ThreadMemberManager(this);\n    if (data) this._patch(data, fromInteraction);\n  }\n\n  _patch(data, partial = false) {\n    super._patch(data);\n\n    /**\n     * The name of the thread\n     * @type {string}\n     */\n    this.name = data.name;\n\n    if ('guild_id' in data) {\n      this.guildId = data.guild_id;\n    }\n\n    if ('parent_id' in data) {\n      /**\n       * The id of the parent channel of this thread\n       * @type {?Snowflake}\n       */\n      this.parentId = data.parent_id;\n    } else if (!this.parentId) {\n      this.parentId = null;\n    }\n\n    if ('thread_metadata' in data) {\n      /**\n       * Whether the thread is locked\n       * @type {?boolean}\n       */\n      this.locked = data.thread_metadata.locked ?? false;\n\n      /**\n       * Whether the thread is archived\n       * @type {?boolean}\n       */\n      this.archived = data.thread_metadata.archived;\n\n      /**\n       * The amount of time (in minutes) after which the thread will automatically archive in case of no recent activity\n       * @type {?number}\n       */\n      this.autoArchiveDuration = data.thread_metadata.auto_archive_duration;\n\n      /**\n       * The timestamp when the thread's archive status was last changed\n       * <info>If the thread was never archived or unarchived, this is the timestamp at which the thread was\n       * created</info>\n       * @type {?number}\n       */\n      this.archiveTimestamp = new Date(data.thread_metadata.archive_timestamp).getTime();\n    } else {\n      if (!this.locked) {\n        this.locked = null;\n      }\n      if (!this.archived) {\n        this.archived = null;\n      }\n      if (!this.autoArchiveDuration) {\n        this.autoArchiveDuration = null;\n      }\n      if (!this.archiveTimestamp) {\n        this.archiveTimestamp = null;\n      }\n    }\n\n    if ('owner_id' in data) {\n      /**\n       * The id of the member who created this thread\n       * @type {?Snowflake}\n       */\n      this.ownerId = data.owner_id;\n    } else if (!this.ownerId) {\n      this.ownerId = null;\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The last message id sent in this thread, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    } else if (!this.lastMessageId) {\n      this.lastMessageId = null;\n    }\n\n    if ('last_pin_timestamp' in data) {\n      /**\n       * The timestamp when the last pinned message was pinned, if there was one\n       * @type {?number}\n       */\n      this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;\n    } else if (!this.lastPinTimestamp) {\n      this.lastPinTimestamp = null;\n    }\n\n    if ('rate_limit_per_user' in data || !partial) {\n      /**\n       * The ratelimit per user for this thread (in seconds)\n       * @type {?number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user ?? 0;\n    } else if (!this.rateLimitPerUser) {\n      this.rateLimitPerUser = null;\n    }\n\n    if ('message_count' in data) {\n      /**\n       * The approximate count of messages in this thread\n       * <info>This stops counting at 50. If you need an approximate value higher than that, use\n       * `ThreadChannel#messages.cache.size`</info>\n       * @type {?number}\n       */\n      this.messageCount = data.message_count;\n    } else if (!this.messageCount) {\n      this.messageCount = null;\n    }\n\n    if ('member_count' in data) {\n      /**\n       * The approximate count of users in this thread\n       * <info>This stops counting at 50. If you need an approximate value higher than that, use\n       * `ThreadChannel#members.cache.size`</info>\n       * @type {?number}\n       */\n      this.memberCount = data.member_count;\n    } else if (!this.memberCount) {\n      this.memberCount = null;\n    }\n\n    if (data.member && this.client.user) this.members._add({ user_id: this.client.user.id, ...data.member });\n    if (data.messages) for (const message of data.messages) this.messages._add(message);\n  }\n\n  /**\n   * A collection of associated guild member objects of this thread's members\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get guildMembers() {\n    return this.members.cache.mapValues(member => member.guildMember);\n  }\n\n  /**\n   * The time at which this thread's archive status was last changed\n   * <info>If the thread was never archived or unarchived, this is the time at which the thread was created</info>\n   * @type {?Date}\n   * @readonly\n   */\n  get archivedAt() {\n    if (!this.archiveTimestamp) return null;\n    return new Date(this.archiveTimestamp);\n  }\n\n  /**\n   * The parent channel of this thread\n   * @type {?(NewsChannel|TextChannel)}\n   * @readonly\n   */\n  get parent() {\n    return this.guild.channels.resolve(this.parentId);\n  }\n\n  /**\n   * Makes the client user join the thread.\n   * @returns {Promise<ThreadChannel>}\n   */\n  async join() {\n    await this.members.add('@me');\n    return this;\n  }\n\n  /**\n   * Makes the client user leave the thread.\n   * @returns {Promise<ThreadChannel>}\n   */\n  async leave() {\n    await this.members.remove('@me');\n    return this;\n  }\n\n  /**\n   * Gets the overall set of permissions for a member or role in this thread's parent channel, taking overwrites into\n   * account.\n   * @param {GuildMemberResolvable|RoleResolvable} memberOrRole The member or role to obtain the overall permissions for\n   * @returns {?Readonly<Permissions>}\n   */\n  permissionsFor(memberOrRole) {\n    return this.parent?.permissionsFor(memberOrRole) ?? null;\n  }\n\n  /**\n   * Fetches the owner of this thread. If the thread member object isn't needed,\n   * use {@link ThreadChannel#ownerId} instead.\n   * @param {FetchOwnerOptions} [options] The options for fetching the member\n   * @returns {Promise<?ThreadMember>}\n   */\n  async fetchOwner({ cache = true, force = false } = {}) {\n    if (!force) {\n      const existing = this.members.cache.get(this.ownerId);\n      if (existing) return existing;\n    }\n\n    // We cannot fetch a single thread member, as of this commit's date, Discord API responds with 405\n    const members = await this.members.fetch(cache);\n    return members.get(this.ownerId) ?? null;\n  }\n\n  /**\n   * The options used to edit a thread channel\n   * @typedef {Object} ThreadEditData\n   * @property {string} [name] The new name for the thread\n   * @property {boolean} [archived] Whether the thread is archived\n   * @property {ThreadAutoArchiveDuration} [autoArchiveDuration] The amount of time (in minutes) after which the thread\n   * should automatically archive in case of no recent activity\n   * @property {number} [rateLimitPerUser] The ratelimit per user for the thread in seconds\n   * @property {boolean} [locked] Whether the thread is locked\n   */\n\n  /**\n   * Edits this thread.\n   * @param {ThreadEditData} data The new data for this thread\n   * @param {string} [reason] Reason for editing this thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Edit a thread\n   * thread.edit({ name: 'new-thread' })\n   *   .then(editedThread => console.log(editedThread))\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    let autoArchiveDuration = data.autoArchiveDuration;\n    if (data.autoArchiveDuration === 'MAX') {\n      autoArchiveDuration = 1440;\n      if (this.guild.features.includes('SEVEN_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 10080;\n      } else if (this.guild.features.includes('THREE_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 4320;\n      }\n    }\n    const newData = await this.client.api.channels(this.id).patch({\n      data: {\n        name: (data.name ?? this.name).trim(),\n        archived: data.archived,\n        auto_archive_duration: autoArchiveDuration,\n        rate_limit_per_user: data.rateLimitPerUser,\n        locked: data.locked,\n      },\n      reason,\n    });\n\n    return this.client.actions.ChannelUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Sets whether the thread is archived.\n   * @param {boolean} [archived=true] Whether the thread is archived\n   * @param {string} [reason] Reason for archiving or unarchiving\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Archive the thread\n   * thread.setArchived(true)\n   *   .then(newThread => console.log(`Thread is now ${newThread.archived ? 'archived' : 'active'}`))\n   *   .catch(console.error);\n   */\n  setArchived(archived = true, reason) {\n    return this.edit({ archived }, reason);\n  }\n\n  /**\n   * Sets the duration after which the thread will automatically archive in case of no recent activity.\n   * @param {ThreadAutoArchiveDuration} autoArchiveDuration The amount of time (in minutes) after which the thread\n   * should automatically archive in case of no recent activity\n   * @param {string} [reason] Reason for changing the auto archive duration\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Set the thread's auto archive time to 1 hour\n   * thread.setAutoArchiveDuration(60)\n   *   .then(newThread => {\n   *     console.log(`Thread will now archive after ${newThread.autoArchiveDuration} minutes of inactivity`);\n   *    });\n   *   .catch(console.error);\n   */\n  setAutoArchiveDuration(autoArchiveDuration, reason) {\n    return this.edit({ autoArchiveDuration }, reason);\n  }\n\n  /**\n   * Sets whether the thread can be **unarchived** by anyone with `SEND_MESSAGES` permission.\n   * When a thread is locked only members with `MANAGE_THREADS` can unarchive it.\n   * @param {boolean} [locked=true] Whether the thread is locked\n   * @param {string} [reason] Reason for locking or unlocking the thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Set the thread to locked\n   * thread.setLocked(true)\n   *   .then(newThread => console.log(`Thread is now ${newThread.locked ? 'locked' : 'unlocked'}`))\n   *   .catch(console.error);\n   */\n  setLocked(locked = true, reason) {\n    return this.edit({ locked }, reason);\n  }\n\n  /**\n   * Sets a new name for this thread.\n   * @param {string} name The new name for the thread\n   * @param {string} [reason] Reason for changing the thread's name\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Change the thread's name\n   * thread.setName('not_general')\n   *   .then(newThread => console.log(`Thread's new name is ${newThread.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Sets the rate limit per user for this thread.\n   * @param {number} rateLimitPerUser The new ratelimit in seconds\n   * @param {string} [reason] Reason for changing the thread's ratelimits\n   * @returns {Promise<ThreadChannel>}\n   */\n  setRateLimitPerUser(rateLimitPerUser, reason) {\n    return this.edit({ rateLimitPerUser }, reason);\n  }\n\n  /**\n   * Whether the client user is a member of the thread.\n   * @type {boolean}\n   * @readonly\n   */\n  get joined() {\n    return this.members.cache.has(this.client.user?.id);\n  }\n\n  /**\n   * Whether the thread is editable by the client user (name, archived, autoArchiveDuration)\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    return (this.ownerId === this.client.user.id && (this.type !== 'private_thread' || this.joined)) || this.manageable;\n  }\n\n  /**\n   * Whether the thread is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    return (\n      !this.archived &&\n      !this.joined &&\n      this.permissionsFor(this.client.user)?.has(\n        this.type === 'GUILD_PRIVATE_THREAD' ? Permissions.FLAGS.MANAGE_THREADS : Permissions.FLAGS.VIEW_CHANNEL,\n        false,\n      )\n    );\n  }\n\n  /**\n   * Whether the thread is manageable by the client user, for deleting or editing rateLimitPerUser or locked.\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    return this.permissionsFor(this.client.user)?.has(Permissions.FLAGS.MANAGE_THREADS, false);\n  }\n\n  /**\n   * Whether the client user can send messages in this thread\n   * @type {boolean}\n   * @readonly\n   */\n  get sendable() {\n    return (\n      !this.archived &&\n      (this.type !== 'private_thread' || this.joined || this.manageable) &&\n      this.permissionsFor(this.client.user)?.any(\n        [\n          Permissions.FLAGS.SEND_MESSAGES,\n          this.type === 'GUILD_PRIVATE_THREAD'\n            ? Permissions.FLAGS.USE_PRIVATE_THREADS\n            : Permissions.FLAGS.USE_PUBLIC_THREADS,\n        ],\n        false,\n      )\n    );\n  }\n\n  /**\n   * Whether the thread is unarchivable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get unarchivable() {\n    return this.archived && (this.locked ? this.manageable : this.sendable);\n  }\n\n  /**\n   * Deletes this thread.\n   * @param {string} [reason] Reason for deleting this thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Delete the thread\n   * thread.delete('cleaning out old threads')\n   *   .then(deletedThread => console.log(deletedThread))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.client.api.channels(this.id).delete({ reason });\n    return this;\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  bulkDelete() {}\n}\n\nTextBasedChannel.applyToClass(ThreadChannel, true);\n\nmodule.exports = ThreadChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ThreadChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/ThreadMember.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/ThreadMember.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst ThreadMemberFlags = __webpack_require__(/*! ../util/ThreadMemberFlags */ \"./node_modules/discord.js/src/util/ThreadMemberFlags.js\");\n\n/**\n * Represents a Member for a Thread.\n * @extends {Base}\n */\nclass ThreadMember extends Base {\n  /**\n   * @param {ThreadChannel} thread The thread that this member is associated with\n   * @param {APIThreadMember} data The data for the thread member\n   */\n  constructor(thread, data) {\n    super(thread.client);\n\n    /**\n     * The thread that this member is a part of\n     * @type {ThreadChannel}\n     */\n    this.thread = thread;\n\n    /**\n     * The timestamp the member last joined the thread at\n     * @type {?number}\n     */\n    this.joinedTimestamp = null;\n\n    /**\n     * The id of the thread member\n     * @type {Snowflake}\n     */\n    this.id = data.user_id;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    this.joinedTimestamp = new Date(data.join_timestamp).getTime();\n\n    /**\n     * The flags for this thread member\n     * @type {ThreadMemberFlags}\n     */\n    this.flags = new ThreadMemberFlags(data.flags).freeze();\n  }\n\n  /**\n   * The guild member associated with this thread member\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get guildMember() {\n    return this.thread.guild.members.resolve(this.id);\n  }\n\n  /**\n   * The last time this member joined the thread\n   * @type {?Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return this.joinedTimestamp ? new Date(this.joinedTimestamp) : null;\n  }\n\n  /**\n   * The user associated with this thread member\n   * @type {?User}\n   * @readonly\n   */\n  get user() {\n    return this.client.users.resolve(this.id);\n  }\n\n  /**\n   * Whether the client user can manage this thread member\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    return !this.thread.archived && this.thread.editable;\n  }\n\n  /**\n   * Removes this member from the thread.\n   * @param {string} [reason] Reason for removing the member\n   * @returns {ThreadMember}\n   */\n  async remove(reason) {\n    await this.thread.members.remove(this.id, reason);\n    return this;\n  }\n}\n\nmodule.exports = ThreadMember;\n\n/**\n * @external APIThreadMember\n * @see {@link https://discord.com/developers/docs/resources/channel#thread-member-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/ThreadMember.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Typing.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Typing.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\n\n/**\n * Represents a typing state for a user in a channel.\n * @extends {Base}\n */\nclass Typing extends Base {\n  /**\n   * @param {TextBasedChannels} channel The channel this typing came from\n   * @param {User} user The user that started typing\n   * @param {APITypingStart} data The raw data received\n   */\n  constructor(channel, user, data) {\n    super(channel.client);\n\n    /**\n     * The channel the status is from\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * The user who is typing\n     * @type {User}\n     */\n    this.user = user;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The UNIX timestamp in milliseconds the user started typing at\n     * @type {number}\n     */\n    this.startedTimestamp = data.timestamp * 1000;\n  }\n\n  /**\n   * Indicates whether the status is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return this.guild !== null;\n  }\n\n  /**\n   * The time the user started typing at\n   * @type {Date}\n   * @readonly\n   */\n  get startedAt() {\n    return new Date(this.startedTimestamp);\n  }\n\n  /**\n   * The guild the status is from\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.channel.guild ?? null;\n  }\n\n  /**\n   * The member who is typing\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.user) ?? null;\n  }\n}\n\nmodule.exports = Typing;\n\n/**\n * @external APITypingStart\n * @see {@link https://discord.com/developers/docs/topics/gateway#typing-start-typing-start-event-fields}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Typing.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/User.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/User.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst TextBasedChannel = __webpack_require__(/*! ./interfaces/TextBasedChannel */ \"./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\nconst UserFlags = __webpack_require__(/*! ../util/UserFlags */ \"./node_modules/discord.js/src/util/UserFlags.js\");\n\n/**\n * Represents a user on Discord.\n * @implements {TextBasedChannel}\n * @extends {Base}\n */\nclass User extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIUser} data The data for the user\n   */\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The user's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    this.bot = null;\n\n    this.system = null;\n\n    this.flags = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('username' in data) {\n      /**\n       * The username of the user\n       * @type {?string}\n       */\n      this.username = data.username;\n    } else if (typeof this.username !== 'string') {\n      this.username = null;\n    }\n\n    if ('bot' in data) {\n      /**\n       * Whether or not the user is a bot\n       * @type {?boolean}\n       */\n      this.bot = Boolean(data.bot);\n    } else if (!this.partial && typeof this.bot !== 'boolean') {\n      this.bot = false;\n    }\n\n    if ('discriminator' in data) {\n      /**\n       * A discriminator based on username for the user\n       * @type {?string}\n       */\n      this.discriminator = data.discriminator;\n    } else if (typeof this.discriminator !== 'string') {\n      this.discriminator = null;\n    }\n\n    if ('avatar' in data) {\n      /**\n       * The user avatar's hash\n       * @type {?string}\n       */\n      this.avatar = data.avatar;\n    } else if (typeof this.avatar !== 'string') {\n      this.avatar = null;\n    }\n\n    if ('system' in data) {\n      /**\n       * Whether the user is an Official Discord System user (part of the urgent message system)\n       * @type {?boolean}\n       */\n      this.system = Boolean(data.system);\n    } else if (!this.partial && typeof this.system !== 'boolean') {\n      this.system = false;\n    }\n\n    if ('public_flags' in data) {\n      /**\n       * The flags for this user\n       * @type {?UserFlags}\n       */\n      this.flags = new UserFlags(data.public_flags);\n    }\n  }\n\n  /**\n   * Whether this User is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.username !== 'string';\n  }\n\n  /**\n   * The timestamp the user was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the user was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the user's avatar.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  avatarURL({ format, size, dynamic } = {}) {\n    if (!this.avatar) return null;\n    return this.client.rest.cdn.Avatar(this.id, this.avatar, format, size, dynamic);\n  }\n\n  /**\n   * A link to the user's default avatar\n   * @type {string}\n   * @readonly\n   */\n  get defaultAvatarURL() {\n    return this.client.rest.cdn.DefaultAvatar(this.discriminator % 5);\n  }\n\n  /**\n   * A link to the user's avatar if they have one.\n   * Otherwise a link to their default avatar will be returned.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {string}\n   */\n  displayAvatarURL(options) {\n    return this.avatarURL(options) ?? this.defaultAvatarURL;\n  }\n\n  /**\n   * The Discord \"tag\" (e.g. `hydrabolt#0001`) for this user\n   * @type {?string}\n   * @readonly\n   */\n  get tag() {\n    return typeof this.username === 'string' ? `${this.username}#${this.discriminator}` : null;\n  }\n\n  /**\n   * The DM between the client's user and this user\n   * @type {?DMChannel}\n   * @readonly\n   */\n  get dmChannel() {\n    return this.client.channels.cache.find(c => c.type === 'DM' && c.recipient.id === this.id) ?? null;\n  }\n\n  /**\n   * Creates a DM channel between the client and the user.\n   * @param {boolean} [force=false] Whether to skip the cache check and request the API\n   * @returns {Promise<DMChannel>}\n   */\n  async createDM(force = false) {\n    if (!force) {\n      const { dmChannel } = this;\n      if (dmChannel && !dmChannel.partial) return dmChannel;\n    }\n\n    const data = await this.client.api.users(this.client.user.id).channels.post({\n      data: {\n        recipient_id: this.id,\n      },\n    });\n    return this.client.channels._add(data);\n  }\n\n  /**\n   * Deletes a DM channel (if one exists) between the client and the user. Resolves with the channel if successful.\n   * @returns {Promise<DMChannel>}\n   */\n  async deleteDM() {\n    const { dmChannel } = this;\n    if (!dmChannel) throw new Error('USER_NO_DMCHANNEL');\n    await this.client.api.channels(dmChannel.id).delete();\n    this.client.channels._remove(dmChannel.id);\n    return dmChannel;\n  }\n\n  /**\n   * Checks if the user is equal to another. It compares id, username, discriminator, avatar, and bot flags.\n   * It is recommended to compare equality by using `user.id === user2.id` unless you want to compare all properties.\n   * @param {User} user User to compare with\n   * @returns {boolean}\n   */\n  equals(user) {\n    let equal =\n      user &&\n      this.id === user.id &&\n      this.username === user.username &&\n      this.discriminator === user.discriminator &&\n      this.avatar === user.avatar;\n\n    return equal;\n  }\n\n  /**\n   * Fetches this user's flags.\n   * @param {boolean} [force=false] Whether to skip the cache check and request the API\n   * @returns {Promise<UserFlags>}\n   */\n  async fetchFlags(force = false) {\n    if (this.flags && !force) return this.flags;\n    const data = await this.client.api.users(this.id).get();\n    this._patch(data);\n    return this.flags;\n  }\n\n  /**\n   * Fetches this user.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<User>}\n   */\n  fetch(force = true) {\n    return this.client.users.fetch(this.id, { force });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the user's mention instead of the User object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${user}!`);\n   */\n  toString() {\n    return `<@${this.id}>`;\n  }\n\n  toJSON(...props) {\n    const json = super.toJSON(\n      {\n        createdTimestamp: true,\n        defaultAvatarURL: true,\n        tag: true,\n      },\n      ...props,\n    );\n    json.avatarURL = this.avatarURL();\n    json.displayAvatarURL = this.displayAvatarURL();\n    return json;\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  send() {}\n}\n\nTextBasedChannel.applyToClass(User);\n\nmodule.exports = User;\n\n/**\n * @external APIUser\n * @see {@link https://discord.com/developers/docs/resources/user#user-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/User.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/VoiceChannel.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/VoiceChannel.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BaseGuildVoiceChannel = __webpack_require__(/*! ./BaseGuildVoiceChannel */ \"./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js\");\nconst Permissions = __webpack_require__(/*! ../util/Permissions */ \"./node_modules/discord.js/src/util/Permissions.js\");\n\n/**\n * Represents a guild voice channel on Discord.\n * @extends {BaseGuildVoiceChannel}\n */\nclass VoiceChannel extends BaseGuildVoiceChannel {\n  /**\n   * Whether the channel is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    return super.deletable && this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false);\n  }\n\n  /**\n   * Whether the channel is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    return this.manageable && this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false);\n  }\n\n  /**\n   * Whether the channel is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    if (!super.joinable) return false;\n    if (this.full && !this.permissionsFor(this.client.user).has(Permissions.FLAGS.MOVE_MEMBERS, false)) return false;\n    return true;\n  }\n\n  /**\n   * Checks if the client has permission to send audio to the voice channel\n   * @type {boolean}\n   * @readonly\n   */\n  get speakable() {\n    return this.permissionsFor(this.client.user).has(Permissions.FLAGS.SPEAK, false);\n  }\n\n  /**\n   * Sets the bitrate of the channel.\n   * @param {number} bitrate The new bitrate\n   * @param {string} [reason] Reason for changing the channel's bitrate\n   * @returns {Promise<VoiceChannel>}\n   * @example\n   * // Set the bitrate of a voice channel\n   * voiceChannel.setBitrate(48000)\n   *   .then(vc => console.log(`Set bitrate to ${vc.bitrate}bps for ${vc.name}`))\n   *   .catch(console.error);\n   */\n  setBitrate(bitrate, reason) {\n    return this.edit({ bitrate }, reason);\n  }\n\n  /**\n   * Sets the user limit of the channel.\n   * @param {number} userLimit The new user limit\n   * @param {string} [reason] Reason for changing the user limit\n   * @returns {Promise<VoiceChannel>}\n   * @example\n   * // Set the user limit of a voice channel\n   * voiceChannel.setUserLimit(42)\n   *   .then(vc => console.log(`Set user limit to ${vc.userLimit} for ${vc.name}`))\n   *   .catch(console.error);\n   */\n  setUserLimit(userLimit, reason) {\n    return this.edit({ userLimit }, reason);\n  }\n\n  /**\n   * Sets the RTC region of the channel.\n   * @name VoiceChannel#setRTCRegion\n   * @param {?string} region The new region of the channel. Set to `null` to remove a specific region for the channel\n   * @returns {Promise<VoiceChannel>}\n   * @example\n   * // Set the RTC region to europe\n   * voiceChannel.setRTCRegion('europe');\n   * @example\n   * // Remove a fixed region for this channel - let Discord decide automatically\n   * voiceChannel.setRTCRegion(null);\n   */\n}\n\nmodule.exports = VoiceChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/VoiceChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/VoiceRegion.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/VoiceRegion.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Util = __webpack_require__(/*! ../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Represents a Discord voice region for guilds.\n */\nclass VoiceRegion {\n  constructor(data) {\n    /**\n     * The region's id\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * Name of the region\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * Whether the region is VIP-only\n     * @type {boolean}\n     */\n    this.vip = data.vip;\n\n    /**\n     * Whether the region is deprecated\n     * @type {boolean}\n     */\n    this.deprecated = data.deprecated;\n\n    /**\n     * Whether the region is optimal\n     * @type {boolean}\n     */\n    this.optimal = data.optimal;\n\n    /**\n     * Whether the region is custom\n     * @type {boolean}\n     */\n    this.custom = data.custom;\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\nmodule.exports = VoiceRegion;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/VoiceRegion.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/VoiceState.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/VoiceState.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst { Error, TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\n\n/**\n * Represents the voice state for a Guild Member.\n */\nclass VoiceState extends Base {\n  /**\n   * @param {Guild} guild The guild the voice state is part of\n   * @param {APIVoiceState} data The data for the voice state\n   */\n  constructor(guild, data) {\n    super(guild.client);\n    /**\n     * The guild of this voice state\n     * @type {Guild}\n     */\n    this.guild = guild;\n    /**\n     * The id of the member of this voice state\n     * @type {Snowflake}\n     */\n    this.id = data.user_id;\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * Whether this member is deafened server-wide\n     * @type {?boolean}\n     */\n    this.serverDeaf = data.deaf ?? null;\n    /**\n     * Whether this member is muted server-wide\n     * @type {?boolean}\n     */\n    this.serverMute = data.mute ?? null;\n    /**\n     * Whether this member is self-deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n    /**\n     * Whether this member is self-muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n    /**\n     * Whether this member's camera is enabled\n     * @type {?boolean}\n     */\n    this.selfVideo = data.self_video ?? null;\n    /**\n     * The session id for this member's connection\n     * @type {?string}\n     */\n    this.sessionId = data.session_id ?? null;\n    /**\n     * Whether this member is streaming using \"Screen Share\"\n     * @type {boolean}\n     */\n    this.streaming = data.self_stream ?? false;\n    /**\n     * The {@link VoiceChannel} or {@link StageChannel} id the member is in\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n    /**\n     * Whether this member is suppressed from speaking. This property is specific to stage channels only.\n     * @type {boolean}\n     */\n    this.suppress = data.suppress;\n    /**\n     * The time at which the member requested to speak. This property is specific to stage channels only.\n     * @type {?number}\n     */\n    this.requestToSpeakTimestamp = data.request_to_speak_timestamp\n      ? new Date(data.request_to_speak_timestamp).getTime()\n      : null;\n    return this;\n  }\n\n  /**\n   * The member that this voice state belongs to\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild.members.cache.get(this.id) ?? null;\n  }\n\n  /**\n   * The channel that the member is connected to\n   * @type {?(VoiceChannel|StageChannel)}\n   * @readonly\n   */\n  get channel() {\n    return this.guild.channels.cache.get(this.channelId) ?? null;\n  }\n\n  /**\n   * Whether this member is either self-deafened or server-deafened\n   * @type {?boolean}\n   * @readonly\n   */\n  get deaf() {\n    return this.serverDeaf || this.selfDeaf;\n  }\n\n  /**\n   * Whether this member is either self-muted or server-muted\n   * @type {?boolean}\n   * @readonly\n   */\n  get mute() {\n    return this.serverMute || this.selfMute;\n  }\n\n  /**\n   * Mutes/unmutes the member of this voice state.\n   * @param {boolean} mute Whether or not the member should be muted\n   * @param {string} [reason] Reason for muting or unmuting\n   * @returns {Promise<GuildMember>}\n   */\n  setMute(mute, reason) {\n    return this.member?.edit({ mute }, reason) ?? Promise.reject(new Error('VOICE_STATE_UNCACHED_MEMBER'));\n  }\n\n  /**\n   * Deafens/undeafens the member of this voice state.\n   * @param {boolean} deaf Whether or not the member should be deafened\n   * @param {string} [reason] Reason for deafening or undeafening\n   * @returns {Promise<GuildMember>}\n   */\n  setDeaf(deaf, reason) {\n    return this.member?.edit({ deaf }, reason) ?? Promise.reject(new Error('VOICE_STATE_UNCACHED_MEMBER'));\n  }\n\n  /**\n   * Disconnects the member from the channel.\n   * @param {string} [reason] Reason for disconnecting the member from the channel\n   * @returns {Promise<GuildMember>}\n   */\n  disconnect(reason) {\n    return this.setChannel(null, reason);\n  }\n\n  /**\n   * Moves the member to a different channel, or disconnects them from the one they're in.\n   * @param {VoiceChannelResolvable|null} channel Channel to move the member to, or `null` if you want to disconnect\n   * them from voice.\n   * @param {string} [reason] Reason for moving member to another channel or disconnecting\n   * @returns {Promise<GuildMember>}\n   */\n  setChannel(channel, reason) {\n    return this.member?.edit({ channel }, reason) ?? Promise.reject(new Error('VOICE_STATE_UNCACHED_MEMBER'));\n  }\n\n  /**\n   * Toggles the request to speak in the channel.\n   * Only applicable for stage channels and for the client's own voice state.\n   * @param {boolean} request Whether or not the client is requesting to become a speaker.\n   * @example\n   * // Making the client request to speak in a stage channel (raise its hand)\n   * guild.me.voice.setRequestToSpeak(true);\n   * @example\n   * // Making the client cancel a request to speak\n   * guild.me.voice.setRequestToSpeak(false);\n   * @returns {Promise<void>}\n   */\n  async setRequestToSpeak(request) {\n    if (this.channel?.type !== 'GUILD_STAGE_VOICE') throw new Error('VOICE_NOT_STAGE_CHANNEL');\n\n    if (this.client.user.id !== this.id) throw new Error('VOICE_STATE_NOT_OWN');\n\n    await this.client.api.guilds(this.guild.id, 'voice-states', '@me').patch({\n      data: {\n        channel_id: this.channelId,\n        request_to_speak_timestamp: request ? new Date().toISOString() : null,\n      },\n    });\n  }\n\n  /**\n   * Suppress/unsuppress the user. Only applicable for stage channels.\n   * @param {boolean} suppressed - Whether or not the user should be suppressed.\n   * @example\n   * // Making the client a speaker\n   * guild.me.voice.setSuppressed(false);\n   * @example\n   * // Making the client an audience member\n   * guild.me.voice.setSuppressed(true);\n   * @example\n   * // Inviting another user to speak\n   * voiceState.setSuppressed(false);\n   * @example\n   * // Moving another user to the audience, or cancelling their invite to speak\n   * voiceState.setSuppressed(true);\n   * @returns {Promise<void>}\n   */\n  async setSuppressed(suppressed) {\n    if (typeof suppressed !== 'boolean') throw new TypeError('VOICE_STATE_INVALID_TYPE', 'suppressed');\n\n    if (this.channel?.type !== 'GUILD_STAGE_VOICE') throw new Error('VOICE_NOT_STAGE_CHANNEL');\n\n    const target = this.client.user.id === this.id ? '@me' : this.id;\n\n    await this.client.api.guilds(this.guild.id, 'voice-states', target).patch({\n      data: {\n        channel_id: this.channelId,\n        suppress: suppressed,\n      },\n    });\n  }\n\n  toJSON() {\n    return super.toJSON({\n      id: true,\n      serverDeaf: true,\n      serverMute: true,\n      selfDeaf: true,\n      selfMute: true,\n      sessionId: true,\n      channelId: 'channel',\n    });\n  }\n}\n\nmodule.exports = VoiceState;\n\n/**\n * @external APIVoiceState\n * @see {@link https://discord.com/developers/docs/resources/voice#voice-state-object}\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/VoiceState.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Webhook.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Webhook.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst MessagePayload = __webpack_require__(/*! ./MessagePayload */ \"./node_modules/discord.js/src/structures/MessagePayload.js\");\nconst { Error } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { WebhookTypes } = __webpack_require__(/*! ../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst DataResolver = __webpack_require__(/*! ../util/DataResolver */ \"./node_modules/discord.js/src/util/DataResolver.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\n\n/**\n * Represents a webhook.\n */\nclass Webhook {\n  constructor(client, data) {\n    /**\n     * The client that instantiated the webhook\n     * @name Webhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The name of the webhook\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The token for the webhook, unavailable for follower webhooks and webhooks owned by another application.\n     * @name Webhook#token\n     * @type {?string}\n     */\n    Object.defineProperty(this, 'token', { value: data.token ?? null, writable: true, configurable: true });\n\n    /**\n     * The avatar for the webhook\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The webhook's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The type of the webhook\n     * @type {WebhookType}\n     */\n    this.type = WebhookTypes[data.type];\n\n    /**\n     * The guild the webhook belongs to\n     * @type {Snowflake}\n     */\n    this.guildId = data.guild_id;\n\n    /**\n     * The channel the webhook belongs to\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n\n    /**\n     * The owner of the webhook\n     * @type {?(User|APIUser)}\n     */\n    this.owner = data.user ? this.client.users?._add(data.user) ?? data.user : null;\n\n    /**\n     * The source guild of the webhook\n     * @type {?(Guild|APIGuild)}\n     */\n    this.sourceGuild = data.source_guild\n      ? this.client.guilds?._add(data.source_guild, false) ?? data.source_guild\n      : null;\n\n    /**\n     * The source channel of the webhook\n     * @type {?(Channel|APIChannel)}\n     */\n    this.sourceChannel = this.client.channels?.resolve(data.source_channel?.id) ?? data.source_channel ?? null;\n  }\n\n  /**\n   * Options that can be passed into send.\n   * @typedef {BaseMessageOptions} WebhookMessageOptions\n   * @property {string} [username=this.name] Username override for the message\n   * @property {string} [avatarURL] Avatar URL override for the message\n   * @property {Snowflake} [threadId] The id of the thread in the channel to send to.\n   * <info>For interaction webhooks, this property is ignored</info>\n   */\n\n  /**\n   * Options that can be passed into editMessage.\n   * @typedef {Object} WebhookEditMessageOptions\n   * @property {MessageEmbed[]|APIEmbed[]} [embeds] See {@link WebhookMessageOptions#embeds}\n   * @property {string} [content] See {@link BaseMessageOptions#content}\n   * @property {FileOptions[]|BufferResolvable[]|MessageAttachment[]} [files] See {@link BaseMessageOptions#files}\n   * @property {MessageMentionOptions} [allowedMentions] See {@link BaseMessageOptions#allowedMentions}\n   * @property {MessageActionRow[]|MessageActionRowOptions[]} [components]\n   * Action rows containing interactive components for the message (buttons, select menus)\n   */\n\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|WebhookMessageOptions} options The options to provide\n   * @returns {Promise<Message|APIMessage>}\n   * @example\n   * // Send a basic message\n   * webhook.send('hello!')\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a basic message in a thread\n   * webhook.send({ content: 'hello!', threadId: '836856309672348295' })\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a remote file\n   * webhook.send({\n   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send a local file\n   * webhook.send({\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send an embed with a local image inside\n   * webhook.send({\n   *   content: 'This is an embed',\n   *   embeds: [{\n   *     thumbnail: {\n   *          url: 'attachment://file.jpg'\n   *       }\n   *    }],\n   *    files: [{\n   *       attachment: 'entire/path/to/file.jpg',\n   *       name: 'file.jpg'\n   *    }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async send(options) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) {\n      messagePayload = options.resolveData();\n    } else {\n      messagePayload = MessagePayload.create(this, options).resolveData();\n    }\n\n    const { data, files } = await messagePayload.resolveFiles();\n    const d = await this.client.api.webhooks(this.id, this.token).post({\n      data,\n      files,\n      query: { thread_id: messagePayload.options.threadId, wait: true },\n      auth: false,\n    });\n    return this.client.channels?.cache.get(d.channel_id)?.messages._add(d, false) ?? d;\n  }\n\n  /**\n   * Sends a raw slack message with this webhook.\n   * @param {Object} body The raw body to send\n   * @returns {Promise<boolean>}\n   * @example\n   * // Send a slack message\n   * webhook.sendSlackMessage({\n   *   'username': 'Wumpus',\n   *   'attachments': [{\n   *     'pretext': 'this looks pretty cool',\n   *     'color': '#F0F',\n   *     'footer_icon': 'http://snek.s3.amazonaws.com/topSnek.png',\n   *     'footer': 'Powered by sneks',\n   *     'ts': Date.now() / 1000\n   *   }]\n   * }).catch(console.error);\n   * @see {@link https://api.slack.com/messaging/webhooks}\n   */\n  async sendSlackMessage(body) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    const data = await this.client.api.webhooks(this.id, this.token).slack.post({\n      query: { wait: true },\n      auth: false,\n      data: body,\n    });\n    return data.toString() === 'ok';\n  }\n\n  /**\n   * Options used to edit a {@link Webhook}.\n   * @typedef {Object} WebhookEditData\n   * @property {string} [name=this.name] The new name for the webhook\n   * @property {BufferResolvable} [avatar] The new avatar for the webhook\n   * @property {GuildTextChannelResolvable} [channel] The new channel for the webhook\n   */\n\n  /**\n   * Edits this webhook.\n   * @param {WebhookEditData} options Options for editing the webhook\n   * @param {string} [reason] Reason for editing the webhook\n   * @returns {Promise<Webhook>}\n   */\n  async edit({ name = this.name, avatar, channel }, reason) {\n    if (avatar && !(typeof avatar === 'string' && avatar.startsWith('data:'))) {\n      avatar = await DataResolver.resolveImage(avatar);\n    }\n    if (channel) channel = channel?.id ?? channel;\n    const data = await this.client.api.webhooks(this.id, channel ? undefined : this.token).patch({\n      data: { name, avatar, channel_id: channel },\n      reason,\n    });\n\n    this.name = data.name;\n    this.avatar = data.avatar;\n    this.channelId = data.channel_id;\n    return this;\n  }\n\n  /**\n   * Gets a message that was sent by this webhook.\n   * @param {Snowflake|'@original'} message The id of the message to fetch\n   * @param {boolean} [cache=true] Whether to cache the message\n   * @returns {Promise<Message|APIMessage>} Returns the raw message data if the webhook was instantiated as a\n   * {@link WebhookClient} or if the channel is uncached, otherwise a {@link Message} will be returned\n   */\n  async fetchMessage(message, cache = true) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    const data = await this.client.api.webhooks(this.id, this.token).messages(message).get();\n    return this.client.channels?.cache.get(data.channel_id)?.messages._add(data, cache) ?? data;\n  }\n\n  /**\n   * Edits a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to edit\n   * @param {string|MessagePayload|WebhookEditMessageOptions} options The options to provide\n   * @returns {Promise<Message|APIMessage>} Returns the raw message data if the webhook was instantiated as a\n   * {@link WebhookClient} or if the channel is uncached, otherwise a {@link Message} will be returned\n   */\n  async editMessage(message, options) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { data, files } = await messagePayload.resolveData().resolveFiles();\n\n    const d = await this.client.api\n      .webhooks(this.id, this.token)\n      .messages(typeof message === 'string' ? message : message.id)\n      .patch({ data, files });\n\n    const messageManager = this.client.channels?.cache.get(d.channel_id)?.messages;\n    if (!messageManager) return d;\n\n    const existing = messageManager.cache.get(d.id);\n    if (!existing) return messageManager._add(d);\n\n    const clone = existing._clone();\n    clone._patch(d);\n    return clone;\n  }\n\n  /**\n   * Deletes the webhook.\n   * @param {string} [reason] Reason for deleting this webhook\n   * @returns {Promise<void>}\n   */\n  async delete(reason) {\n    await this.client.api.webhooks(this.id, this.token).delete({ reason });\n  }\n\n  /**\n   * Delete a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to delete\n   * @returns {Promise<void>}\n   */\n  async deleteMessage(message) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    await this.client.api\n      .webhooks(this.id, this.token)\n      .messages(typeof message === 'string' ? message : message.id)\n      .delete();\n  }\n\n  /**\n   * The timestamp the webhook was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the webhook was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The url of this webhook\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return this.client.options.http.api + this.client.api.webhooks(this.id, this.token);\n  }\n\n  /**\n   * A link to the webhook's avatar.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  avatarURL({ format, size } = {}) {\n    if (!this.avatar) return null;\n    return this.client.rest.cdn.Avatar(this.id, this.avatar, format, size);\n  }\n\n  static applyToClass(structure, ignore = []) {\n    for (const prop of [\n      'send',\n      'sendSlackMessage',\n      'fetchMessage',\n      'edit',\n      'editMessage',\n      'delete',\n      'deleteMessage',\n      'createdTimestamp',\n      'createdAt',\n      'url',\n    ]) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(structure.prototype, prop, Object.getOwnPropertyDescriptor(Webhook.prototype, prop));\n    }\n  }\n}\n\nmodule.exports = Webhook;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Webhook.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/WelcomeChannel.js":
/*!******************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/WelcomeChannel.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst Emoji = __webpack_require__(/*! ./Emoji */ \"./node_modules/discord.js/src/structures/Emoji.js\");\n\n/**\n * Represents a channel link in a guild's welcome screen.\n * @extends {Base}\n */\nclass WelcomeChannel extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n\n    /**\n     * The guild for this welcome channel\n     * @type {Guild|InviteGuild}\n     */\n    this.guild = guild;\n\n    /**\n     * The description of this welcome channel\n     * @type {string}\n     */\n    this.description = data.description;\n\n    /**\n     * The raw emoji data\n     * @type {Object}\n     * @private\n     */\n    this._emoji = {\n      name: data.emoji_name,\n      id: data.emoji_id,\n    };\n\n    /**\n     * The id of this welcome channel\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n  }\n\n  /**\n   * The channel of this welcome channel\n   * @type {?(TextChannel|NewsChannel)}\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The emoji of this welcome channel\n   * @type {GuildEmoji|Emoji}\n   */\n  get emoji() {\n    return this.client.emojis.resolve(this._emoji.id) ?? new Emoji(this.client, this._emoji);\n  }\n}\n\nmodule.exports = WelcomeChannel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/WelcomeChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/WelcomeScreen.js":
/*!*****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/WelcomeScreen.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst WelcomeChannel = __webpack_require__(/*! ./WelcomeChannel */ \"./node_modules/discord.js/src/structures/WelcomeChannel.js\");\n\n/**\n * Represents a welcome screen.\n * @extends {Base}\n */\nclass WelcomeScreen extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n\n    /**\n     * The guild for this welcome screen\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The description of this welcome screen\n     * @type {?string}\n     */\n    this.description = data.description ?? null;\n\n    /**\n     * Collection of welcome channels belonging to this welcome screen\n     * @type {Collection<Snowflake, WelcomeChannel>}\n     */\n    this.welcomeChannels = new Collection();\n\n    for (const channel of data.welcome_channels) {\n      const welcomeChannel = new WelcomeChannel(this.guild, channel);\n      this.welcomeChannels.set(welcomeChannel.channelId, welcomeChannel);\n    }\n  }\n\n  /**\n   * Whether the welcome screen is enabled on the guild or not\n   * @type {boolean}\n   */\n  get enabled() {\n    return this.guild.features.includes('WELCOME_SCREEN_ENABLED');\n  }\n}\n\nmodule.exports = WelcomeScreen;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/WelcomeScreen.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/Widget.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord.js/src/structures/Widget.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\nconst WidgetMember = __webpack_require__(/*! ./WidgetMember */ \"./node_modules/discord.js/src/structures/WidgetMember.js\");\n\n/**\n * Represents a Widget.\n */\nclass Widget extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} data The raw data\n   */\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  /**\n   * Represents a channel in a Widget\n   * @typedef {Object} WidgetChannel\n   * @property {Snowflake} id Id of the channel\n   * @property {string} name Name of the channel\n   * @property {number} position Position of the channel\n   */\n\n  /**\n   * Builds the widget with the provided data.\n   * @param {*} data The raw data of the widget\n   * @private\n   */\n  _patch(data) {\n    /**\n     * The id of the guild.\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the guild.\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The invite of the guild.\n     * @type {?string}\n     */\n    this.instantInvite = data.instant_invite;\n\n    /**\n     * The list of channels in the guild.\n     * @type {Collection<Snowflake, WidgetChannel>}\n     */\n    this.channels = new Collection();\n    for (const channel of data.channels) {\n      this.channels.set(channel.id, channel);\n    }\n\n    /**\n     * The list of members in the guild.\n     * These strings are just arbitrary numbers, they aren't Snowflakes.\n     * @type {Collection<string, WidgetMember>}\n     */\n    this.members = new Collection();\n    for (const member of data.members) {\n      this.members.set(member.id, new WidgetMember(this.client, member));\n    }\n\n    /**\n     * The number of the members online.\n     * @type {number}\n     */\n    this.presenceCount = data.presence_count;\n  }\n\n  /**\n   * Update the Widget.\n   * @returns {Promise<Widget>}\n   */\n  async fetch() {\n    const data = await this.client.api.guilds(this.id, 'widget.json').get();\n    this._patch(data);\n    return this;\n  }\n}\n\nmodule.exports = Widget;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/Widget.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/WidgetMember.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/WidgetMember.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Base = __webpack_require__(/*! ./Base */ \"./node_modules/discord.js/src/structures/Base.js\");\n\n/**\n * Represents a WidgetMember.\n */\nclass WidgetMember extends Base {\n  /**\n   * Activity sent in a {@link WidgetMember}.\n   * @typedef {Object} WidgetActivity\n   * @property {string} name The name of the activity\n   */\n\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} data The raw data\n   */\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the user. It's an arbitrary number.\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The username of the member.\n     * @type {string}\n     */\n    this.username = data.username;\n\n    /**\n     * The discriminator of the member.\n     * @type {string}\n     */\n    this.discriminator = data.discriminator;\n\n    /**\n     * The avatar of the member.\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The status of the member.\n     * @type {PresenceStatus}\n     */\n    this.status = data.status;\n\n    /**\n     * IIf the member is server deafened\n     * @type {?boolean}\n     */\n    this.deaf = data.deaf ?? null;\n\n    /**\n     * If the member is server muted\n     * @type {?boolean}\n     */\n    this.mute = data.mute ?? null;\n\n    /**\n     * If the member is self deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n\n    /**\n     * If the member is self muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n\n    /**\n     * If the member is suppressed\n     * @type {?boolean}\n     */\n    this.suppress = data.suppress ?? null;\n\n    /**\n     * The id of the voice channel the member is in, if any\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The avatar URL of the member.\n     * @type {string}\n     */\n    this.avatarURL = data.avatar_url;\n\n    /**\n     * The activity of the member.\n     * @type {?WidgetActivity}\n     */\n    this.activity = data.activity ?? null;\n  }\n}\n\nmodule.exports = WidgetMember;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/WidgetMember.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/interfaces/Application.js":
/*!**************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/interfaces/Application.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { ClientApplicationAssetTypes, Endpoints } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\nconst Base = __webpack_require__(/*! ../Base */ \"./node_modules/discord.js/src/structures/Base.js\");\n\nconst AssetTypes = Object.keys(ClientApplicationAssetTypes);\n\n/**\n * Represents an OAuth2 Application.\n * @abstract\n */\nclass Application extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the application\n     * @type {?string}\n     */\n    this.name = data.name ?? this.name ?? null;\n\n    /**\n     * The application's description\n     * @type {?string}\n     */\n    this.description = data.description ?? this.description ?? null;\n\n    /**\n     * The application's icon hash\n     * @type {?string}\n     */\n    this.icon = data.icon ?? this.icon ?? null;\n  }\n\n  /**\n   * The timestamp the application was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the application was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the application's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.AppIcon(this.id, this.icon, { format, size });\n  }\n\n  /**\n   * A link to this application's cover image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  coverURL({ format, size } = {}) {\n    if (!this.cover) return null;\n    return Endpoints.CDN(this.client.options.http.cdn).AppIcon(this.id, this.cover, { format, size });\n  }\n\n  /**\n   * Asset data.\n   * @typedef {Object} ApplicationAsset\n   * @property {Snowflake} id The asset's id\n   * @property {string} name The asset's name\n   * @property {string} type The asset's type\n   */\n\n  /**\n   * Gets the application's rich presence assets.\n   * @returns {Promise<Array<ApplicationAsset>>}\n   */\n  async fetchAssets() {\n    const assets = await this.client.api.oauth2.applications(this.id).assets.get();\n    return assets.map(a => ({\n      id: a.id,\n      name: a.name,\n      type: AssetTypes[a.type - 1],\n    }));\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the application's name instead of the\n   * Oauth2Application object.\n   * @returns {?string}\n   * @example\n   * // Logs: Application name: My App\n   * console.log(`Application name: ${application}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Application;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/interfaces/Application.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/interfaces/Collector.js":
/*!************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/interfaces/Collector.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst { TypeError } = __webpack_require__(/*! ../../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Util = __webpack_require__(/*! ../../util/Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n/**\n * Filter to be applied to the collector.\n * @typedef {Function} CollectorFilter\n * @param {...*} args Any arguments received by the listener\n * @param {Collection} collection The items collected by this collector\n * @returns {boolean|Promise<boolean>}\n */\n\n/**\n * Options to be applied to the collector.\n * @typedef {Object} CollectorOptions\n * @property {CollectorFilter} [filter] The filter applied to this collector\n * @property {number} [time] How long to run the collector for in milliseconds\n * @property {number} [idle] How long to stop the collector after inactivity in milliseconds\n * @property {boolean} [dispose=false] Whether to dispose data when it's deleted\n */\n\n/**\n * Abstract class for defining a new Collector.\n * @abstract\n */\nclass Collector extends EventEmitter {\n  constructor(client, options = {}) {\n    super();\n\n    /**\n     * The client that instantiated this Collector\n     * @name Collector#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The filter applied to this collector\n     * @type {CollectorFilter}\n     * @returns {boolean|Promise<boolean>}\n     */\n    this.filter = options.filter ?? (() => true);\n\n    /**\n     * The options of this collector\n     * @type {CollectorOptions}\n     */\n    this.options = options;\n\n    /**\n     * The items collected by this collector\n     * @type {Collection}\n     */\n    this.collected = new Collection();\n\n    /**\n     * Whether this collector has finished collecting\n     * @type {boolean}\n     */\n    this.ended = false;\n\n    /**\n     * Timeout for cleanup\n     * @type {?Timeout}\n     * @private\n     */\n    this._timeout = null;\n\n    /**\n     * Timeout for cleanup due to inactivity\n     * @type {?Timeout}\n     * @private\n     */\n    this._idletimeout = null;\n\n    if (typeof this.filter !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'options.filter', 'function');\n    }\n\n    this.handleCollect = this.handleCollect.bind(this);\n    this.handleDispose = this.handleDispose.bind(this);\n\n    if (options.time) this._timeout = setTimeout(() => this.stop('time'), options.time).unref();\n    if (options.idle) this._idletimeout = setTimeout(() => this.stop('idle'), options.idle).unref();\n  }\n\n  /**\n   * Call this to handle an event as a collectable element. Accepts any event data as parameters.\n   * @param {...*} args The arguments emitted by the listener\n   * @returns {Promise<void>}\n   * @emits Collector#collect\n   */\n  async handleCollect(...args) {\n    const collect = await this.collect(...args);\n\n    if (collect && (await this.filter(...args, this.collected))) {\n      this.collected.set(collect, args[0]);\n\n      /**\n       * Emitted whenever an element is collected.\n       * @event Collector#collect\n       * @param {...*} args The arguments emitted by the listener\n       */\n      this.emit('collect', ...args);\n\n      if (this._idletimeout) {\n        clearTimeout(this._idletimeout);\n        this._idletimeout = setTimeout(() => this.stop('idle'), this.options.idle).unref();\n      }\n    }\n    this.checkEnd();\n  }\n\n  /**\n   * Call this to remove an element from the collection. Accepts any event data as parameters.\n   * @param {...*} args The arguments emitted by the listener\n   * @returns {Promise<void>}\n   * @emits Collector#dispose\n   */\n  async handleDispose(...args) {\n    if (!this.options.dispose) return;\n\n    const dispose = this.dispose(...args);\n    if (!dispose || !(await this.filter(...args)) || !this.collected.has(dispose)) return;\n    this.collected.delete(dispose);\n\n    /**\n     * Emitted whenever an element is disposed of.\n     * @event Collector#dispose\n     * @param {...*} args The arguments emitted by the listener\n     */\n    this.emit('dispose', ...args);\n    this.checkEnd();\n  }\n\n  /**\n   * Returns a promise that resolves with the next collected element;\n   * rejects with collected elements if the collector finishes without receiving a next element\n   * @type {Promise}\n   * @readonly\n   */\n  get next() {\n    return new Promise((resolve, reject) => {\n      if (this.ended) {\n        reject(this.collected);\n        return;\n      }\n\n      const cleanup = () => {\n        this.removeListener('collect', onCollect);\n        this.removeListener('end', onEnd);\n      };\n\n      const onCollect = item => {\n        cleanup();\n        resolve(item);\n      };\n\n      const onEnd = () => {\n        cleanup();\n        reject(this.collected); // eslint-disable-line prefer-promise-reject-errors\n      };\n\n      this.on('collect', onCollect);\n      this.on('end', onEnd);\n    });\n  }\n\n  /**\n   * Stops this collector and emits the `end` event.\n   * @param {string} [reason='user'] The reason this collector is ending\n   * @emits Collector#end\n   */\n  stop(reason = 'user') {\n    if (this.ended) return;\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n    if (this._idletimeout) {\n      clearTimeout(this._idletimeout);\n      this._idletimeout = null;\n    }\n    this.ended = true;\n\n    /**\n     * Emitted when the collector is finished collecting.\n     * @event Collector#end\n     * @param {Collection} collected The elements collected by the collector\n     * @param {string} reason The reason the collector ended\n     */\n    this.emit('end', this.collected, reason);\n  }\n\n  /**\n   * Options used to reset timeout and idle timer of a {@link Collector}.\n   * @typedef {Object} CollectorResetTimerOptions\n   * @property {number} [time] How long to run the collector for (in milliseconds)\n   * @property {number} [idle] How long to wait to stop the collector after inactivity (in milliseconds)\n   */\n\n  /**\n   * Resets the collector's timeout and idle timer.\n   * @param {CollectorResetTimerOptions} [options] Options for reseting\n   */\n  resetTimer({ time, idle } = {}) {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = setTimeout(() => this.stop('time'), time ?? this.options.time).unref();\n    }\n    if (this._idletimeout) {\n      clearTimeout(this._idletimeout);\n      this._idletimeout = setTimeout(() => this.stop('idle'), idle ?? this.options.idle).unref();\n    }\n  }\n\n  /**\n   * Checks whether the collector should end, and if so, ends it.\n   * @returns {boolean} Whether the collector ended or not\n   */\n  checkEnd() {\n    const reason = this.endReason;\n    if (reason) this.stop(reason);\n    return Boolean(reason);\n  }\n\n  /**\n   * Allows collectors to be consumed with for-await-of loops\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of}\n   */\n  async *[Symbol.asyncIterator]() {\n    const queue = [];\n    const onCollect = item => queue.push(item);\n    this.on('collect', onCollect);\n\n    try {\n      while (queue.length || !this.ended) {\n        if (queue.length) {\n          yield queue.shift();\n        } else {\n          // eslint-disable-next-line no-await-in-loop\n          await new Promise(resolve => {\n            const tick = () => {\n              this.removeListener('collect', tick);\n              this.removeListener('end', tick);\n              return resolve();\n            };\n            this.on('collect', tick);\n            this.on('end', tick);\n          });\n        }\n      }\n    } finally {\n      this.removeListener('collect', onCollect);\n    }\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n\n  /* eslint-disable no-empty-function */\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   * @abstract\n   */\n  get endReason() {}\n\n  /**\n   * Handles incoming events from the `handleCollect` function. Returns null if the event should not\n   * be collected, or returns an object describing the data that should be stored.\n   * @see Collector#handleCollect\n   * @param {...*} args Any args the event listener emits\n   * @returns {?(*|Promise<?*>)} Data to insert into collection, if any\n   * @abstract\n   */\n  collect() {}\n\n  /**\n   * Handles incoming events from the `handleDispose`. Returns null if the event should not\n   * be disposed, or returns the key that should be removed.\n   * @see Collector#handleDispose\n   * @param {...*} args Any args the event listener emits\n   * @returns {?*} Key to remove from the collection, if any\n   * @abstract\n   */\n  dispose() {}\n  /* eslint-enable no-empty-function */\n}\n\nmodule.exports = Collector;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/interfaces/Collector.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/interfaces/InteractionResponses.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/interfaces/InteractionResponses.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Error } = __webpack_require__(/*! ../../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst { InteractionResponseTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst MessageFlags = __webpack_require__(/*! ../../util/MessageFlags */ \"./node_modules/discord.js/src/util/MessageFlags.js\");\nconst MessagePayload = __webpack_require__(/*! ../MessagePayload */ \"./node_modules/discord.js/src/structures/MessagePayload.js\");\n\n/**\n * Interface for classes that support shared interaction response types.\n * @interface\n */\nclass InteractionResponses {\n  /**\n   * Options for deferring the reply to an {@link Interaction}.\n   * @typedef {Object} InteractionDeferReplyOptions\n   * @property {boolean} [ephemeral] Whether the reply should be ephemeral\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for deferring and updating the reply to a {@link ButtonInteraction}.\n   * @typedef {Object} InteractionDeferUpdateOptions\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for a reply to an {@link Interaction}.\n   * @typedef {BaseMessageOptions} InteractionReplyOptions\n   * @property {boolean} [ephemeral] Whether the reply should be ephemeral\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for updating the message received from a {@link ButtonInteraction}.\n   * @typedef {MessageEditOptions} InteractionUpdateOptions\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Defers the reply to this interaction.\n   * @param {InteractionDeferReplyOptions} [options] Options for deferring the reply to this interaction\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Defer the reply to this interaction\n   * interaction.deferReply()\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Defer to send an ephemeral reply later\n   * interaction.deferReply({ ephemeral: true })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deferReply(options = {}) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && options.ephemeral) throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    this.ephemeral = options.ephemeral ?? false;\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE,\n        data: {\n          flags: options.ephemeral ? MessageFlags.FLAGS.EPHEMERAL : undefined,\n        },\n      },\n    });\n    this.deferred = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  /**\n   * Creates a reply to this interaction.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The options for the reply\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Reply to the interaction with an embed\n   * const embed = new MessageEmbed().setDescription('Pong!');\n   *\n   * interaction.reply({ embeds: [embed] })\n   *   .then(() => console.log('Reply sent.'))\n   *   .catch(console.error);\n   * @example\n   * // Create an ephemeral reply\n   * interaction.reply({ content: 'Pong!', ephemeral: true })\n   *   .then(() => console.log('Reply sent.'))\n   *   .catch(console.error);\n   */\n  async reply(options) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && options.ephemeral) throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    this.ephemeral = options.ephemeral ?? false;\n\n    let messagePayload;\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { data, files } = await messagePayload.resolveData().resolveFiles();\n\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.CHANNEL_MESSAGE_WITH_SOURCE,\n        data,\n      },\n      files,\n    });\n    this.replied = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  /**\n   * Fetches the initial reply to this interaction.\n   * @see Webhook#fetchMessage\n   * @returns {Promise<Message|APIMessage>}\n   * @example\n   * // Fetch the reply to this interaction\n   * interaction.fetchReply()\n   *   .then(reply => console.log(`Replied with ${reply.content}`))\n   *   .catch(console.error);\n   */\n  fetchReply() {\n    if (this.ephemeral) throw new Error('INTERACTION_EPHEMERAL_REPLIED');\n    return this.webhook.fetchMessage('@original');\n  }\n\n  /**\n   * Edits the initial reply to this interaction.\n   * @see Webhook#editMessage\n   * @param {string|MessagePayload|WebhookEditMessageOptions} options The new options for the message\n   * @returns {Promise<Message|APIMessage>}\n   * @example\n   * // Edit the reply to this interaction\n   * interaction.editReply('New content')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async editReply(options) {\n    if (!this.deferred && !this.replied) throw new Error('INTERACTION_NOT_REPLIED');\n    const message = await this.webhook.editMessage('@original', options);\n    this.replied = true;\n    return message;\n  }\n\n  /**\n   * Deletes the initial reply to this interaction.\n   * @see Webhook#deleteMessage\n   * @returns {Promise<void>}\n   * @example\n   * // Delete the reply to this interaction\n   * interaction.deleteReply()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deleteReply() {\n    if (this.ephemeral) throw new Error('INTERACTION_EPHEMERAL_REPLIED');\n    await this.webhook.deleteMessage('@original');\n  }\n\n  /**\n   * Send a follow-up message to this interaction.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The options for the reply\n   * @returns {Promise<Message|APIMessage>}\n   */\n  followUp(options) {\n    return this.webhook.send(options);\n  }\n\n  /**\n   * Defers an update to the message to which the component was attached.\n   * @param {InteractionDeferUpdateOptions} [options] Options for deferring the update to this interaction\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Defer updating and reset the component's loading state\n   * interaction.deferUpdate()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deferUpdate(options = {}) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && new MessageFlags(this.message.flags).has(MessageFlags.FLAGS.EPHEMERAL)) {\n      throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    }\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.DEFERRED_MESSAGE_UPDATE,\n      },\n    });\n    this.deferred = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  /**\n   * Updates the original message of the component on which the interaction was received on.\n   * @param {string|MessagePayload|InteractionUpdateOptions} options The options for the updated message\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Remove the components from the message\n   * interaction.update({\n   *   content: \"A component interaction was received\",\n   *   components: []\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async update(options) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && new MessageFlags(this.message.flags).has(MessageFlags.FLAGS.EPHEMERAL)) {\n      throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    }\n\n    let messagePayload;\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { data, files } = await messagePayload.resolveData().resolveFiles();\n\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.UPDATE_MESSAGE,\n        data,\n      },\n      files,\n    });\n    this.replied = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  static applyToClass(structure, ignore = []) {\n    const props = [\n      'deferReply',\n      'reply',\n      'fetchReply',\n      'editReply',\n      'deleteReply',\n      'followUp',\n      'deferUpdate',\n      'update',\n    ];\n\n    for (const prop of props) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(\n        structure.prototype,\n        prop,\n        Object.getOwnPropertyDescriptor(InteractionResponses.prototype, prop),\n      );\n    }\n  }\n}\n\nmodule.exports = InteractionResponses;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/interfaces/InteractionResponses.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* eslint-disable import/order */\nconst MessageCollector = __webpack_require__(/*! ../MessageCollector */ \"./node_modules/discord.js/src/structures/MessageCollector.js\");\nconst MessagePayload = __webpack_require__(/*! ../MessagePayload */ \"./node_modules/discord.js/src/structures/MessagePayload.js\");\nconst SnowflakeUtil = __webpack_require__(/*! ../../util/SnowflakeUtil */ \"./node_modules/discord.js/src/util/SnowflakeUtil.js\");\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst { InteractionTypes } = __webpack_require__(/*! ../../util/Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst { TypeError, Error } = __webpack_require__(/*! ../../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst InteractionCollector = __webpack_require__(/*! ../InteractionCollector */ \"./node_modules/discord.js/src/structures/InteractionCollector.js\");\n\n/**\n * Interface for classes that have text-channel-like features.\n * @interface\n */\nclass TextBasedChannel {\n  constructor() {\n    /**\n     * A manager of the messages sent to this channel\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n\n    /**\n     * The channel's last message id, if one was sent\n     * @type {?Snowflake}\n     */\n    this.lastMessageId = null;\n\n    /**\n     * The timestamp when the last pinned message was pinned, if there was one\n     * @type {?number}\n     */\n    this.lastPinTimestamp = null;\n  }\n\n  /**\n   * The Message object of the last message in the channel, if one was sent\n   * @type {?Message}\n   * @readonly\n   */\n  get lastMessage() {\n    return this.messages.resolve(this.lastMessageId);\n  }\n\n  /**\n   * The date when the last pinned message was pinned, if there was one\n   * @type {?Date}\n   * @readonly\n   */\n  get lastPinAt() {\n    return this.lastPinTimestamp ? new Date(this.lastPinTimestamp) : null;\n  }\n\n  /**\n   * Base options provided when sending.\n   * @typedef {Object} BaseMessageOptions\n   * @property {boolean} [tts=false] Whether or not the message should be spoken aloud\n   * @property {string} [nonce=''] The nonce for the message\n   * @property {string} [content=''] The content for the message\n   * @property {MessageEmbed[]|APIEmbed[]} [embeds] The embeds for the message\n   * (see [here](https://discord.com/developers/docs/resources/channel#embed-object) for more details)\n   * @property {MessageMentionOptions} [allowedMentions] Which mentions should be parsed from the message content\n   * (see [here](https://discord.com/developers/docs/resources/channel#allowed-mentions-object) for more details)\n   * @property {FileOptions[]|BufferResolvable[]|MessageAttachment[]} [files] Files to send with the message\n   * @property {MessageActionRow[]|MessageActionRowOptions[]} [components]\n   * Action rows containing interactive components for the message (buttons, select menus)\n   * @property {StickerResolvable[]} [stickers=[]] Stickers to send in the message\n   */\n\n  /**\n   * Options provided when sending or editing a message.\n   * @typedef {BaseMessageOptions} MessageOptions\n   * @property {ReplyOptions} [reply] The options for replying to a message\n   */\n\n  /**\n   * Options provided to control parsing of mentions by Discord\n   * @typedef {Object} MessageMentionOptions\n   * @property {MessageMentionTypes[]} [parse] Types of mentions to be parsed\n   * @property {Snowflake[]} [users] Snowflakes of Users to be parsed as mentions\n   * @property {Snowflake[]} [roles] Snowflakes of Roles to be parsed as mentions\n   * @property {boolean} [repliedUser=true] Whether the author of the Message being replied to should be pinged\n   */\n\n  /**\n   * Types of mentions to enable in MessageMentionOptions.\n   * - `roles`\n   * - `users`\n   * - `everyone`\n   * @typedef {string} MessageMentionTypes\n   */\n\n  /**\n   * @typedef {Object} FileOptions\n   * @property {BufferResolvable} attachment File to attach\n   * @property {string} [name='file.jpg'] Filename of the attachment\n   */\n\n  /**\n   * Options for sending a message with a reply.\n   * @typedef {Object} ReplyOptions\n   * @param {MessageResolvable} messageReference The message to reply to (must be in the same channel and not system)\n   * @param {boolean} [failIfNotExists=true] Whether to error if the referenced message\n   * does not exist (creates a standard message in this case when false)\n   */\n\n  /**\n   * Sends a message to this channel.\n   * @param {string|MessagePayload|MessageOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Send a basic message\n   * channel.send('hello!')\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a remote file\n   * channel.send({\n   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send a local file\n   * channel.send({\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send an embed with a local image inside\n   * channel.send({\n   *   content: 'This is an embed',\n   *   embeds: [\n   *     {\n   *       thumbnail: {\n   *         url: 'attachment://file.jpg'\n   *       }\n   *     }\n   *   ],\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async send(options) {\n    const User = __webpack_require__(/*! ../User */ \"./node_modules/discord.js/src/structures/User.js\");\n    const GuildMember = __webpack_require__(/*! ../GuildMember */ \"./node_modules/discord.js/src/structures/GuildMember.js\");\n\n    if (this instanceof User || this instanceof GuildMember) {\n      const dm = await this.createDM();\n      return dm.send(options);\n    }\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) {\n      messagePayload = options.resolveData();\n    } else {\n      messagePayload = MessagePayload.create(this, options).resolveData();\n    }\n\n    const { data, files } = await messagePayload.resolveFiles();\n    const d = await this.client.api.channels[this.id].messages.post({ data, files });\n\n    const existing = this.messages.cache.get(d.id);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this.messages._add(d);\n  }\n\n  /**\n   * Sends a typing indicator in the channel.\n   * @returns {Promise<void>} Resolves upon the typing status being sent\n   * @example\n   * // Start typing in a channel\n   * channel.sendTyping();\n   */\n  async sendTyping() {\n    await this.client.api.channels(this.id).typing.post();\n  }\n\n  /**\n   * Creates a Message Collector.\n   * @param {MessageCollectorOptions} [options={}] The options to pass to the collector\n   * @returns {MessageCollector}\n   * @example\n   * // Create a message collector\n   * const filter = m => m.content.includes('discord');\n   * const collector = channel.createMessageCollector({ filter, time: 15000 });\n   * collector.on('collect', m => console.log(`Collected ${m.content}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageCollector(options = {}) {\n    return new MessageCollector(this, options);\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {MessageCollectorOptions} AwaitMessagesOptions\n   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject\n   */\n\n  /**\n   * Similar to createMessageCollector but in promise form.\n   * Resolves with a collection of messages that pass the specified filter.\n   * @param {AwaitMessagesOptions} [options={}] Optional options to pass to the internal collector\n   * @returns {Promise<Collection<Snowflake, Message>>}\n   * @example\n   * // Await !vote messages\n   * const filter = m => m.content.startsWith('!vote');\n   * // Errors: ['time'] treats ending because of the time limit as an error\n   * channel.awaitMessages({ filter, max: 4, time: 60000, errors: ['time'] })\n   *   .then(collected => console.log(collected.size))\n   *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));\n   */\n  awaitMessages(options = {}) {\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageCollector(options);\n      collector.once('end', (collection, reason) => {\n        if (options.errors?.includes(reason)) {\n          reject(collection);\n        } else {\n          resolve(collection);\n        }\n      });\n    });\n  }\n\n  /**\n   * Creates a button interaction collector.\n   * @param {MessageComponentCollectorOptions} [options={}] Options to send to the collector\n   * @returns {InteractionCollector}\n   * @example\n   * // Create a button interaction collector\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * const collector = channel.createMessageComponentCollector({ filter, time: 15000 });\n   * collector.on('collect', i => console.log(`Collected ${i.customId}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageComponentCollector(options = {}) {\n    return new InteractionCollector(this.client, {\n      ...options,\n      interactionType: InteractionTypes.MESSAGE_COMPONENT,\n      channel: this,\n    });\n  }\n\n  /**\n   * Collects a single component interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitMessageComponentOptions} [options={}] Options to pass to the internal collector\n   * @returns {Promise<MessageComponentInteraction>}\n   * @example\n   * // Collect a message component interaction\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * channel.awaitMessageComponent({ filter, time: 15000 })\n   *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n   *   .catch(console.error);\n   */\n  awaitMessageComponent(options = {}) {\n    const _options = { ...options, max: 1 };\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageComponentCollector(_options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new Error('INTERACTION_COLLECTOR_ERROR', reason));\n      });\n    });\n  }\n\n  /**\n   * Bulk deletes given messages that are newer than two weeks.\n   * @param {Collection<Snowflake, Message>|MessageResolvable[]|number} messages\n   * Messages or number of messages to delete\n   * @param {boolean} [filterOld=false] Filter messages to remove those which are older than two weeks automatically\n   * @returns {Promise<Collection<Snowflake, Message>>} Returns the deleted messages\n   * @example\n   * // Bulk delete messages\n   * channel.bulkDelete(5)\n   *   .then(messages => console.log(`Bulk deleted ${messages.size} messages`))\n   *   .catch(console.error);\n   */\n  async bulkDelete(messages, filterOld = false) {\n    if (Array.isArray(messages) || messages instanceof Collection) {\n      let messageIds = messages instanceof Collection ? [...messages.keys()] : messages.map(m => m.id ?? m);\n      if (filterOld) {\n        messageIds = messageIds.filter(id => Date.now() - SnowflakeUtil.deconstruct(id).timestamp < 1209600000);\n      }\n      if (messageIds.length === 0) return new Collection();\n      if (messageIds.length === 1) {\n        await this.client.api.channels(this.id).messages(messageIds[0]).delete();\n        const message = this.client.actions.MessageDelete.getMessage(\n          {\n            message_id: messageIds[0],\n          },\n          this,\n        );\n        return message ? new Collection([[message.id, message]]) : new Collection();\n      }\n      await this.client.api.channels[this.id].messages['bulk-delete'].post({ data: { messages: messageIds } });\n      return messageIds.reduce(\n        (col, id) =>\n          col.set(\n            id,\n            this.client.actions.MessageDeleteBulk.getMessage(\n              {\n                message_id: id,\n              },\n              this,\n            ),\n          ),\n        new Collection(),\n      );\n    }\n    if (!isNaN(messages)) {\n      const msgs = await this.messages.fetch({ limit: messages });\n      return this.bulkDelete(msgs, filterOld);\n    }\n    throw new TypeError('MESSAGE_BULK_DELETE_TYPE');\n  }\n\n  static applyToClass(structure, full = false, ignore = []) {\n    const props = ['send'];\n    if (full) {\n      props.push(\n        'lastMessage',\n        'lastPinAt',\n        'bulkDelete',\n        'sendTyping',\n        'createMessageCollector',\n        'awaitMessages',\n        'createMessageComponentCollector',\n        'awaitMessageComponent',\n      );\n    }\n    for (const prop of props) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(\n        structure.prototype,\n        prop,\n        Object.getOwnPropertyDescriptor(TextBasedChannel.prototype, prop),\n      );\n    }\n  }\n}\n\nmodule.exports = TextBasedChannel;\n\n// Fixes Circular\nconst MessageManager = __webpack_require__(/*! ../../managers/MessageManager */ \"./node_modules/discord.js/src/managers/MessageManager.js\");\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/ActivityFlags.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord.js/src/util/ActivityFlags.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to interact with an {@link Activity#flags} bitfield.\n * @extends {BitField}\n */\nclass ActivityFlags extends BitField {}\n\n/**\n * @name ActivityFlags\n * @kind constructor\n * @memberof ActivityFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Numeric activity flags. All available properties:\n * * `INSTANCE`\n * * `JOIN`\n * * `SPECTATE`\n * * `JOIN_REQUEST`\n * * `SYNC`\n * * `PLAY`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/topics/gateway#activity-object-activity-flags}\n */\nActivityFlags.FLAGS = {\n  INSTANCE: 1 << 0,\n  JOIN: 1 << 1,\n  SPECTATE: 1 << 2,\n  JOIN_REQUEST: 1 << 3,\n  SYNC: 1 << 4,\n  PLAY: 1 << 5,\n};\n\nmodule.exports = ActivityFlags;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/ActivityFlags.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/ApplicationFlags.js":
/*!**************************************************************!*\
  !*** ./node_modules/discord.js/src/util/ApplicationFlags.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to interact with a {@link ClientApplication#flags} bitfield.\n * @extends {BitField}\n */\nclass ApplicationFlags extends BitField {}\n\n/**\n * @name ApplicationFlags\n * @kind constructor\n * @memberof ApplicationFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ApplicationFlags#bitfield\n */\n\n/**\n * Numeric application flags. All available properties:\n * * `GATEWAY_PRESENCE`\n * * `GATEWAY_PRESENCE_LIMITED`\n * * `GATEWAY_GUILD_MEMBERS`\n * * `GATEWAY_GUILD_MEMBERS_LIMITED`\n * * `VERIFICATION_PENDING_GUILD_LIMIT`\n * * `EMBEDDED`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/application#application-object-application-flags}\n */\nApplicationFlags.FLAGS = {\n  GATEWAY_PRESENCE: 1 << 12,\n  GATEWAY_PRESENCE_LIMITED: 1 << 13,\n  GATEWAY_GUILD_MEMBERS: 1 << 14,\n  GATEWAY_GUILD_MEMBERS_LIMITED: 1 << 15,\n  VERIFICATION_PENDING_GUILD_LIMIT: 1 << 16,\n  EMBEDDED: 1 << 17,\n};\n\nmodule.exports = ApplicationFlags;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/ApplicationFlags.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/BitField.js":
/*!******************************************************!*\
  !*** ./node_modules/discord.js/src/util/BitField.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\n\n/**\n * Data structure that makes it easy to interact with a bitfield.\n */\nclass BitField {\n  /**\n   * @param {BitFieldResolvable} [bits=this.constructor.defaultBit] Bit(s) to read from\n   */\n  constructor(bits = this.constructor.defaultBit) {\n    /**\n     * Bitfield of the packed bits\n     * @type {number|bigint}\n     */\n    this.bitfield = this.constructor.resolve(bits);\n  }\n\n  /**\n   * Checks whether the bitfield has a bit, or any of multiple bits.\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  any(bit) {\n    return (this.bitfield & this.constructor.resolve(bit)) !== this.constructor.defaultBit;\n  }\n\n  /**\n   * Checks if this bitfield equals another\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  equals(bit) {\n    return this.bitfield === this.constructor.resolve(bit);\n  }\n\n  /**\n   * Checks whether the bitfield has a bit, or multiple bits.\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  has(bit) {\n    bit = this.constructor.resolve(bit);\n    return (this.bitfield & bit) === bit;\n  }\n\n  /**\n   * Gets all given bits that are missing from the bitfield.\n   * @param {BitFieldResolvable} bits Bit(s) to check for\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {string[]}\n   */\n  missing(bits, ...hasParams) {\n    return new this.constructor(bits).remove(this).toArray(...hasParams);\n  }\n\n  /**\n   * Freezes these bits, making them immutable.\n   * @returns {Readonly<BitField>}\n   */\n  freeze() {\n    return Object.freeze(this);\n  }\n\n  /**\n   * Adds bits to these ones.\n   * @param {...BitFieldResolvable} [bits] Bits to add\n   * @returns {BitField} These bits or new BitField if the instance is frozen.\n   */\n  add(...bits) {\n    let total = this.constructor.defaultBit;\n    for (const bit of bits) {\n      total |= this.constructor.resolve(bit);\n    }\n    if (Object.isFrozen(this)) return new this.constructor(this.bitfield | total);\n    this.bitfield |= total;\n    return this;\n  }\n\n  /**\n   * Removes bits from these.\n   * @param {...BitFieldResolvable} [bits] Bits to remove\n   * @returns {BitField} These bits or new BitField if the instance is frozen.\n   */\n  remove(...bits) {\n    let total = this.constructor.defaultBit;\n    for (const bit of bits) {\n      total |= this.constructor.resolve(bit);\n    }\n    if (Object.isFrozen(this)) return new this.constructor(this.bitfield & ~total);\n    this.bitfield &= ~total;\n    return this;\n  }\n\n  /**\n   * Gets an object mapping field names to a {@link boolean} indicating whether the\n   * bit is available.\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {Object}\n   */\n  serialize(...hasParams) {\n    const serialized = {};\n    for (const [flag, bit] of Object.entries(this.constructor.FLAGS)) serialized[flag] = this.has(bit, ...hasParams);\n    return serialized;\n  }\n\n  /**\n   * Gets an {@link Array} of bitfield names based on the bits available.\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {string[]}\n   */\n  toArray(...hasParams) {\n    return Object.keys(this.constructor.FLAGS).filter(bit => this.has(bit, ...hasParams));\n  }\n\n  toJSON() {\n    return typeof this.bitfield === 'number' ? this.bitfield : this.bitfield.toString();\n  }\n\n  valueOf() {\n    return this.bitfield;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.toArray();\n  }\n\n  /**\n   * Data that can be resolved to give a bitfield. This can be:\n   * * A bit number (this can be a number literal or a value taken from {@link BitField.FLAGS})\n   * * A string bit number\n   * * An instance of BitField\n   * * An Array of BitFieldResolvable\n   * @typedef {number|string|bigint|BitField|BitFieldResolvable[]} BitFieldResolvable\n   */\n\n  /**\n   * Resolves bitfields to their numeric form.\n   * @param {BitFieldResolvable} [bit] - bit(s) to resolve\n   * @returns {number|bigint}\n   */\n  static resolve(bit) {\n    const { defaultBit } = this;\n    if (typeof defaultBit === typeof bit && bit >= defaultBit) return bit;\n    if (bit instanceof BitField) return bit.bitfield;\n    if (Array.isArray(bit)) return bit.map(p => this.resolve(p)).reduce((prev, p) => prev | p, defaultBit);\n    if (typeof bit === 'string') {\n      if (typeof this.FLAGS[bit] !== 'undefined') return this.FLAGS[bit];\n      if (!isNaN(bit)) return typeof defaultBit === 'bigint' ? BigInt(bit) : Number(bit);\n    }\n    throw new RangeError('BITFIELD_INVALID', bit);\n  }\n}\n\n/**\n * Numeric bitfield flags.\n * <info>Defined in extension classes</info>\n * @type {Object}\n * @abstract\n */\nBitField.FLAGS = {};\n\n/**\n * @type {number|bigint}\n * @private\n */\nBitField.defaultBit = 0;\n\nmodule.exports = BitField;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/BitField.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/Constants.js":
/*!*******************************************************!*\
  !*** ./node_modules/discord.js/src/util/Constants.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Package = (exports.Package = __webpack_require__(/*! ../../package.json */ \"./node_modules/discord.js/package.json\"));\nconst { Error, RangeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\n\nexports.UserAgent = `DiscordBot (${Package.homepage.split('#')[0]}, ${Package.version}) Node.js/${process.version}`;\n\nexports.WSCodes = {\n  1000: 'WS_CLOSE_REQUESTED',\n  4004: 'TOKEN_INVALID',\n  4010: 'SHARDING_INVALID',\n  4011: 'SHARDING_REQUIRED',\n  4013: 'INVALID_INTENTS',\n  4014: 'DISALLOWED_INTENTS',\n};\n\nconst AllowedImageFormats = ['webp', 'png', 'jpg', 'jpeg', 'gif'];\n\nconst AllowedImageSizes = Array.from({ length: 9 }, (e, i) => 2 ** (i + 4));\n\nfunction makeImageUrl(root, { format = 'webp', size } = {}) {\n  if (format && !AllowedImageFormats.includes(format)) throw new Error('IMAGE_FORMAT', format);\n  if (size && !AllowedImageSizes.includes(size)) throw new RangeError('IMAGE_SIZE', size);\n  return `${root}.${format}${size ? `?size=${size}` : ''}`;\n}\n\n/**\n * Options for Image URLs.\n * @typedef {StaticImageURLOptions} ImageURLOptions\n * @property {boolean} [dynamic] If true, the format will dynamically change to `gif` for\n * animated avatars; the default is false\n */\n\n/**\n * Options for static Image URLs.\n * @typedef {Object} StaticImageURLOptions\n * @property {string} [format='webp'] One of `webp`, `png`, `jpg`, `jpeg`.\n * @property {number} [size] One of `16`, `32`, `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`\n */\n\n// https://discord.com/developers/docs/reference#image-formatting-cdn-endpoints\nexports.Endpoints = {\n  CDN(root) {\n    return {\n      Emoji: (emojiId, format = 'webp') => `${root}/emojis/${emojiId}.${format}`,\n      Asset: name => `${root}/assets/${name}`,\n      DefaultAvatar: discriminator => `${root}/embed/avatars/${discriminator}.png`,\n      Avatar: (userId, hash, format = 'webp', size, dynamic = false) => {\n        if (dynamic) format = hash.startsWith('a_') ? 'gif' : format;\n        return makeImageUrl(`${root}/avatars/${userId}/${hash}`, { format, size });\n      },\n      Banner: (guildId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/banners/${guildId}/${hash}`, { format, size }),\n      Icon: (guildId, hash, format = 'webp', size, dynamic = false) => {\n        if (dynamic) format = hash.startsWith('a_') ? 'gif' : format;\n        return makeImageUrl(`${root}/icons/${guildId}/${hash}`, { format, size });\n      },\n      AppIcon: (appId, hash, { format = 'webp', size } = {}) =>\n        makeImageUrl(`${root}/app-icons/${appId}/${hash}`, { size, format }),\n      AppAsset: (appId, hash, { format = 'webp', size } = {}) =>\n        makeImageUrl(`${root}/app-assets/${appId}/${hash}`, { size, format }),\n      StickerPackBanner: (bannerId, format = 'webp', size) =>\n        makeImageUrl(`${root}/app-assets/710982414301790216/store/${bannerId}`, { size, format }),\n      GDMIcon: (channelId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/channel-icons/${channelId}/${hash}`, { size, format }),\n      Splash: (guildId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/splashes/${guildId}/${hash}`, { size, format }),\n      DiscoverySplash: (guildId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/discovery-splashes/${guildId}/${hash}`, { size, format }),\n      TeamIcon: (teamId, hash, { format = 'webp', size } = {}) =>\n        makeImageUrl(`${root}/team-icons/${teamId}/${hash}`, { size, format }),\n      Sticker: (stickerId, stickerFormat) =>\n        `${root}/stickers/${stickerId}.${stickerFormat === 'LOTTIE' ? 'json' : 'png'}`,\n    };\n  },\n  invite: (root, code) => `${root}/${code}`,\n  botGateway: '/gateway/bot',\n};\n\n/**\n * The current status of the client. Here are the available statuses:\n * * READY: 0\n * * CONNECTING: 1\n * * RECONNECTING: 2\n * * IDLE: 3\n * * NEARLY: 4\n * * DISCONNECTED: 5\n * * WAITING_FOR_GUILDS: 6\n * * IDENTIFYING: 7\n * * RESUMING: 8\n * @typedef {number} Status\n */\nexports.Status = {\n  READY: 0,\n  CONNECTING: 1,\n  RECONNECTING: 2,\n  IDLE: 3,\n  NEARLY: 4,\n  DISCONNECTED: 5,\n  WAITING_FOR_GUILDS: 6,\n  IDENTIFYING: 7,\n  RESUMING: 8,\n};\n\nexports.Opcodes = {\n  DISPATCH: 0,\n  HEARTBEAT: 1,\n  IDENTIFY: 2,\n  STATUS_UPDATE: 3,\n  VOICE_STATE_UPDATE: 4,\n  VOICE_GUILD_PING: 5,\n  RESUME: 6,\n  RECONNECT: 7,\n  REQUEST_GUILD_MEMBERS: 8,\n  INVALID_SESSION: 9,\n  HELLO: 10,\n  HEARTBEAT_ACK: 11,\n};\n\nexports.Events = {\n  RATE_LIMIT: 'rateLimit',\n  INVALID_REQUEST_WARNING: 'invalidRequestWarning',\n  CLIENT_READY: 'ready',\n  APPLICATION_COMMAND_CREATE: 'applicationCommandCreate',\n  APPLICATION_COMMAND_DELETE: 'applicationCommandDelete',\n  APPLICATION_COMMAND_UPDATE: 'applicationCommandUpdate',\n  GUILD_CREATE: 'guildCreate',\n  GUILD_DELETE: 'guildDelete',\n  GUILD_UPDATE: 'guildUpdate',\n  GUILD_UNAVAILABLE: 'guildUnavailable',\n  GUILD_MEMBER_ADD: 'guildMemberAdd',\n  GUILD_MEMBER_REMOVE: 'guildMemberRemove',\n  GUILD_MEMBER_UPDATE: 'guildMemberUpdate',\n  GUILD_MEMBER_AVAILABLE: 'guildMemberAvailable',\n  GUILD_MEMBERS_CHUNK: 'guildMembersChunk',\n  GUILD_INTEGRATIONS_UPDATE: 'guildIntegrationsUpdate',\n  GUILD_ROLE_CREATE: 'roleCreate',\n  GUILD_ROLE_DELETE: 'roleDelete',\n  INVITE_CREATE: 'inviteCreate',\n  INVITE_DELETE: 'inviteDelete',\n  GUILD_ROLE_UPDATE: 'roleUpdate',\n  GUILD_EMOJI_CREATE: 'emojiCreate',\n  GUILD_EMOJI_DELETE: 'emojiDelete',\n  GUILD_EMOJI_UPDATE: 'emojiUpdate',\n  GUILD_BAN_ADD: 'guildBanAdd',\n  GUILD_BAN_REMOVE: 'guildBanRemove',\n  CHANNEL_CREATE: 'channelCreate',\n  CHANNEL_DELETE: 'channelDelete',\n  CHANNEL_UPDATE: 'channelUpdate',\n  CHANNEL_PINS_UPDATE: 'channelPinsUpdate',\n  MESSAGE_CREATE: 'messageCreate',\n  MESSAGE_DELETE: 'messageDelete',\n  MESSAGE_UPDATE: 'messageUpdate',\n  MESSAGE_BULK_DELETE: 'messageDeleteBulk',\n  MESSAGE_REACTION_ADD: 'messageReactionAdd',\n  MESSAGE_REACTION_REMOVE: 'messageReactionRemove',\n  MESSAGE_REACTION_REMOVE_ALL: 'messageReactionRemoveAll',\n  MESSAGE_REACTION_REMOVE_EMOJI: 'messageReactionRemoveEmoji',\n  THREAD_CREATE: 'threadCreate',\n  THREAD_DELETE: 'threadDelete',\n  THREAD_UPDATE: 'threadUpdate',\n  THREAD_LIST_SYNC: 'threadListSync',\n  THREAD_MEMBER_UPDATE: 'threadMemberUpdate',\n  THREAD_MEMBERS_UPDATE: 'threadMembersUpdate',\n  USER_UPDATE: 'userUpdate',\n  PRESENCE_UPDATE: 'presenceUpdate',\n  VOICE_SERVER_UPDATE: 'voiceServerUpdate',\n  VOICE_STATE_UPDATE: 'voiceStateUpdate',\n  TYPING_START: 'typingStart',\n  WEBHOOKS_UPDATE: 'webhookUpdate',\n  INTERACTION_CREATE: 'interactionCreate',\n  ERROR: 'error',\n  WARN: 'warn',\n  DEBUG: 'debug',\n  SHARD_DISCONNECT: 'shardDisconnect',\n  SHARD_ERROR: 'shardError',\n  SHARD_RECONNECTING: 'shardReconnecting',\n  SHARD_READY: 'shardReady',\n  SHARD_RESUME: 'shardResume',\n  INVALIDATED: 'invalidated',\n  RAW: 'raw',\n  STAGE_INSTANCE_CREATE: 'stageInstanceCreate',\n  STAGE_INSTANCE_UPDATE: 'stageInstanceUpdate',\n  STAGE_INSTANCE_DELETE: 'stageInstanceDelete',\n  GUILD_STICKER_CREATE: 'stickerCreate',\n  GUILD_STICKER_DELETE: 'stickerDelete',\n  GUILD_STICKER_UPDATE: 'stickerUpdate',\n};\n\nexports.ShardEvents = {\n  CLOSE: 'close',\n  DESTROYED: 'destroyed',\n  INVALID_SESSION: 'invalidSession',\n  READY: 'ready',\n  RESUMED: 'resumed',\n  ALL_READY: 'allReady',\n};\n\n/**\n * The type of Structure allowed to be a partial:\n * * USER\n * * CHANNEL (only affects DMChannels)\n * * GUILD_MEMBER\n * * MESSAGE\n * * REACTION\n * <warn>Partials require you to put checks in place when handling data. See the \"Partial Structures\" topic on the\n * [guide](https://discordjs.guide/popular-topics/partials.html) for more information.</warn>\n * @typedef {string} PartialType\n */\nexports.PartialTypes = keyMirror(['USER', 'CHANNEL', 'GUILD_MEMBER', 'MESSAGE', 'REACTION']);\n\n/**\n * The type of a websocket message event, e.g. `MESSAGE_CREATE`. Here are the available events:\n * * READY\n * * RESUMED\n * * APPLICATION_COMMAND_CREATE\n * * APPLICATION_COMMAND_DELETE\n * * APPLICATION_COMMAND_UPDATE\n * * GUILD_CREATE\n * * GUILD_DELETE\n * * GUILD_UPDATE\n * * INVITE_CREATE\n * * INVITE_DELETE\n * * GUILD_MEMBER_ADD\n * * GUILD_MEMBER_REMOVE\n * * GUILD_MEMBER_UPDATE\n * * GUILD_MEMBERS_CHUNK\n * * GUILD_INTEGRATIONS_UPDATE\n * * GUILD_ROLE_CREATE\n * * GUILD_ROLE_DELETE\n * * GUILD_ROLE_UPDATE\n * * GUILD_BAN_ADD\n * * GUILD_BAN_REMOVE\n * * GUILD_EMOJIS_UPDATE\n * * CHANNEL_CREATE\n * * CHANNEL_DELETE\n * * CHANNEL_UPDATE\n * * CHANNEL_PINS_UPDATE\n * * MESSAGE_CREATE\n * * MESSAGE_DELETE\n * * MESSAGE_UPDATE\n * * MESSAGE_DELETE_BULK\n * * MESSAGE_REACTION_ADD\n * * MESSAGE_REACTION_REMOVE\n * * MESSAGE_REACTION_REMOVE_ALL\n * * MESSAGE_REACTION_REMOVE_EMOJI\n * * THREAD_CREATE\n * * THREAD_UPDATE\n * * THREAD_DELETE\n * * THREAD_LIST_SYNC\n * * THREAD_MEMBER_UPDATE\n * * THREAD_MEMBERS_UPDATE\n * * USER_UPDATE\n * * PRESENCE_UPDATE\n * * TYPING_START\n * * VOICE_STATE_UPDATE\n * * VOICE_SERVER_UPDATE\n * * WEBHOOKS_UPDATE\n * * INTERACTION_CREATE\n * * STAGE_INSTANCE_CREATE\n * * STAGE_INSTANCE_UPDATE\n * * STAGE_INSTANCE_DELETE\n * * GUILD_STICKERS_UPDATE\n * @typedef {string} WSEventType\n * @see {@link https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-events}\n */\nexports.WSEvents = keyMirror([\n  'READY',\n  'RESUMED',\n  'APPLICATION_COMMAND_CREATE',\n  'APPLICATION_COMMAND_DELETE',\n  'APPLICATION_COMMAND_UPDATE',\n  'GUILD_CREATE',\n  'GUILD_DELETE',\n  'GUILD_UPDATE',\n  'INVITE_CREATE',\n  'INVITE_DELETE',\n  'GUILD_MEMBER_ADD',\n  'GUILD_MEMBER_REMOVE',\n  'GUILD_MEMBER_UPDATE',\n  'GUILD_MEMBERS_CHUNK',\n  'GUILD_INTEGRATIONS_UPDATE',\n  'GUILD_ROLE_CREATE',\n  'GUILD_ROLE_DELETE',\n  'GUILD_ROLE_UPDATE',\n  'GUILD_BAN_ADD',\n  'GUILD_BAN_REMOVE',\n  'GUILD_EMOJIS_UPDATE',\n  'CHANNEL_CREATE',\n  'CHANNEL_DELETE',\n  'CHANNEL_UPDATE',\n  'CHANNEL_PINS_UPDATE',\n  'MESSAGE_CREATE',\n  'MESSAGE_DELETE',\n  'MESSAGE_UPDATE',\n  'MESSAGE_DELETE_BULK',\n  'MESSAGE_REACTION_ADD',\n  'MESSAGE_REACTION_REMOVE',\n  'MESSAGE_REACTION_REMOVE_ALL',\n  'MESSAGE_REACTION_REMOVE_EMOJI',\n  'THREAD_CREATE',\n  'THREAD_UPDATE',\n  'THREAD_DELETE',\n  'THREAD_LIST_SYNC',\n  'THREAD_MEMBER_UPDATE',\n  'THREAD_MEMBERS_UPDATE',\n  'USER_UPDATE',\n  'PRESENCE_UPDATE',\n  'TYPING_START',\n  'VOICE_STATE_UPDATE',\n  'VOICE_SERVER_UPDATE',\n  'WEBHOOKS_UPDATE',\n  'INTERACTION_CREATE',\n  'STAGE_INSTANCE_CREATE',\n  'STAGE_INSTANCE_UPDATE',\n  'STAGE_INSTANCE_DELETE',\n  'GUILD_STICKERS_UPDATE',\n]);\n\n/**\n * A valid scope to request when generating an invite link.\n * <warn>Scopes that require whitelist are not considered valid for this generator</warn>\n * * `applications.builds.read`: allows reading build data for a users applications\n * * `applications.commands`: allows this bot to create commands in the server\n * * `applications.entitlements`: allows reading entitlements for a users applications\n * * `applications.store.update`: allows reading and updating of store data for a users applications\n * * `bot`: makes the bot join the selected guild\n * * `connections`: makes the endpoint for getting a users connections available\n * * `email`: allows the `/users/@me` endpoint return with an email\n * * `identify`: allows the `/users/@me` endpoint without an email\n * * `guilds`: makes the `/users/@me/guilds` endpoint available for a user\n * * `guilds.join`: allows the bot to join the user to any guild it is in using Guild#addMember\n * * `gdm.join`: allows joining the user to a group dm\n * * `webhook.incoming`: generates a webhook to a channel\n * @typedef {string} InviteScope\n * @see {@link https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes}\n */\nexports.InviteScopes = [\n  'applications.builds.read',\n  'applications.commands',\n  'applications.entitlements',\n  'applications.store.update',\n  'bot',\n  'connections',\n  'email',\n  'identify',\n  'guilds',\n  'guilds.join',\n  'gdm.join',\n  'webhook.incoming',\n];\n\n/**\n * The type of a message, e.g. `DEFAULT`. Here are the available types:\n * * DEFAULT\n * * RECIPIENT_ADD\n * * RECIPIENT_REMOVE\n * * CALL\n * * CHANNEL_NAME_CHANGE\n * * CHANNEL_ICON_CHANGE\n * * CHANNEL_PINNED_MESSAGE\n * * GUILD_MEMBER_JOIN\n * * USER_PREMIUM_GUILD_SUBSCRIPTION\n * * USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1\n * * USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2\n * * USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3\n * * CHANNEL_FOLLOW_ADD\n * * GUILD_DISCOVERY_DISQUALIFIED\n * * GUILD_DISCOVERY_REQUALIFIED\n * * GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING\n * * GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING\n * * THREAD_CREATED\n * * REPLY\n * * APPLICATION_COMMAND\n * * THREAD_STARTER_MESSAGE\n * * GUILD_INVITE_REMINDER\n * @typedef {string} MessageType\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object-message-types}\n */\nexports.MessageTypes = [\n  'DEFAULT',\n  'RECIPIENT_ADD',\n  'RECIPIENT_REMOVE',\n  'CALL',\n  'CHANNEL_NAME_CHANGE',\n  'CHANNEL_ICON_CHANGE',\n  'CHANNEL_PINNED_MESSAGE',\n  'GUILD_MEMBER_JOIN',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3',\n  'CHANNEL_FOLLOW_ADD',\n  null,\n  'GUILD_DISCOVERY_DISQUALIFIED',\n  'GUILD_DISCOVERY_REQUALIFIED',\n  'GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING',\n  'GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING',\n  'THREAD_CREATED',\n  'REPLY',\n  'APPLICATION_COMMAND',\n  'THREAD_STARTER_MESSAGE',\n  'GUILD_INVITE_REMINDER',\n];\n\n/**\n * The types of messages that are `System`. The available types are `MessageTypes` excluding:\n * * DEFAULT\n * * REPLY\n * * APPLICATION_COMMAND\n * @typedef {string} SystemMessageType\n */\nexports.SystemMessageTypes = exports.MessageTypes.filter(\n  type => type && !['DEFAULT', 'REPLY', 'APPLICATION_COMMAND'].includes(type),\n);\n\n/**\n * <info>Bots cannot set a `CUSTOM` activity type, it is only for custom statuses received from users</info>\n * The type of an activity of a user's presence. Here are the available types:\n * * PLAYING\n * * STREAMING\n * * LISTENING\n * * WATCHING\n * * CUSTOM\n * * COMPETING\n * @typedef {string} ActivityType\n * @see {@link https://discord.com/developers/docs/game-sdk/activities#data-models-activitytype-enum}\n */\nexports.ActivityTypes = createEnum(['PLAYING', 'STREAMING', 'LISTENING', 'WATCHING', 'CUSTOM', 'COMPETING']);\n\n/**\n * All available channel types:\n * * `GUILD_TEXT` - a guild text channel\n * * `DM` - a DM channel\n * * `GUILD_VOICE` - a guild voice channel\n * * `GROUP_DM` - a group DM channel\n * * `GUILD_CATEGORY` - a guild category channel\n * * `GUILD_NEWS` - a guild news channel\n * * `GUILD_STORE` - a guild store channel\n * * `GUILD_NEWS_THREAD` - a guild news channel's public thread channel\n * * `GUILD_PUBLIC_THREAD` - a guild text channel's public thread channel\n * * `GUILD_PRIVATE_THREAD` - a guild text channel's private thread channel\n * * `GUILD_STAGE_VOICE` - a guild stage voice channel\n * * `UNKNOWN` - a generic channel of unknown type, could be Channel or GuildChannel\n * @typedef {string} ChannelType\n * @see {@link https://discord.com/developers/docs/resources/channel#channel-object-channel-types}\n */\nexports.ChannelTypes = createEnum([\n  'GUILD_TEXT',\n  'DM',\n  'GUILD_VOICE',\n  'GROUP_DM',\n  'GUILD_CATEGORY',\n  'GUILD_NEWS',\n  'GUILD_STORE',\n  ...Array(3).fill(null),\n  // 10\n  'GUILD_NEWS_THREAD',\n  'GUILD_PUBLIC_THREAD',\n  'GUILD_PRIVATE_THREAD',\n  'GUILD_STAGE_VOICE',\n]);\n\n/**\n * The channels that are text-based.\n * * DMChannel\n * * TextChannel\n * * NewsChannel\n * * ThreadChannel\n * @typedef {DMChannel|TextChannel|NewsChannel|ThreadChannel} TextBasedChannels\n */\n\n/**\n * The types of channels that are text-based. The available types are:\n * * DM\n * * GUILD_TEXT\n * * GUILD_NEWS\n * * GUILD_NEWS_THREAD\n * * GUILD_PUBLIC_THREAD\n * * GUILD_PRIVATE_THREAD\n * @typedef {string} TextBasedChannelTypes\n */\nexports.TextBasedChannelTypes = [\n  'DM',\n  'GUILD_TEXT',\n  'GUILD_NEWS',\n  'GUILD_NEWS_THREAD',\n  'GUILD_PUBLIC_THREAD',\n  'GUILD_PRIVATE_THREAD',\n];\n\n/**\n * The types of channels that are threads. The available types are:\n * * GUILD_NEWS_THREAD\n * * GUILD_PUBLIC_THREAD\n * * GUILD_PRIVATE_THREAD\n * @typedef {string} ThreadChannelTypes\n */\nexports.ThreadChannelTypes = ['GUILD_NEWS_THREAD', 'GUILD_PUBLIC_THREAD', 'GUILD_PRIVATE_THREAD'];\n\n/**\n * The types of channels that are voice-based. The available types are:\n * * GUILD_VOICE\n * * GUILD_STAGE_VOICE\n * @typedef {string} VoiceBasedChannelTypes\n */\nexports.VoiceBasedChannelTypes = ['GUILD_VOICE', 'GUILD_STAGE_VOICE'];\n\nexports.ClientApplicationAssetTypes = {\n  SMALL: 1,\n  BIG: 2,\n};\n\nexports.Colors = {\n  DEFAULT: 0x000000,\n  WHITE: 0xffffff,\n  AQUA: 0x1abc9c,\n  GREEN: 0x57f287,\n  BLUE: 0x3498db,\n  YELLOW: 0xfee75c,\n  PURPLE: 0x9b59b6,\n  LUMINOUS_VIVID_PINK: 0xe91e63,\n  FUCHSIA: 0xeb459e,\n  GOLD: 0xf1c40f,\n  ORANGE: 0xe67e22,\n  RED: 0xed4245,\n  GREY: 0x95a5a6,\n  NAVY: 0x34495e,\n  DARK_AQUA: 0x11806a,\n  DARK_GREEN: 0x1f8b4c,\n  DARK_BLUE: 0x206694,\n  DARK_PURPLE: 0x71368a,\n  DARK_VIVID_PINK: 0xad1457,\n  DARK_GOLD: 0xc27c0e,\n  DARK_ORANGE: 0xa84300,\n  DARK_RED: 0x992d22,\n  DARK_GREY: 0x979c9f,\n  DARKER_GREY: 0x7f8c8d,\n  LIGHT_GREY: 0xbcc0c0,\n  DARK_NAVY: 0x2c3e50,\n  BLURPLE: 0x5865f2,\n  GREYPLE: 0x99aab5,\n  DARK_BUT_NOT_BLACK: 0x2c2f33,\n  NOT_QUITE_BLACK: 0x23272a,\n};\n\n/**\n * The value set for the explicit content filter levels for a guild:\n * * DISABLED\n * * MEMBERS_WITHOUT_ROLES\n * * ALL_MEMBERS\n * @typedef {string} ExplicitContentFilterLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level}\n */\nexports.ExplicitContentFilterLevels = createEnum(['DISABLED', 'MEMBERS_WITHOUT_ROLES', 'ALL_MEMBERS']);\n\n/**\n * The value set for the verification levels for a guild:\n * * NONE\n * * LOW\n * * MEDIUM\n * * HIGH\n * * VERY_HIGH\n * @typedef {string} VerificationLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-verification-level}\n */\nexports.VerificationLevels = createEnum(['NONE', 'LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH']);\n\n/**\n * An error encountered while performing an API request. Here are the potential errors:\n * * UNKNOWN_ACCOUNT\n * * UNKNOWN_APPLICATION\n * * UNKNOWN_CHANNEL\n * * UNKNOWN_GUILD\n * * UNKNOWN_INTEGRATION\n * * UNKNOWN_INVITE\n * * UNKNOWN_MEMBER\n * * UNKNOWN_MESSAGE\n * * UNKNOWN_OVERWRITE\n * * UNKNOWN_PROVIDER\n * * UNKNOWN_ROLE\n * * UNKNOWN_TOKEN\n * * UNKNOWN_USER\n * * UNKNOWN_EMOJI\n * * UNKNOWN_WEBHOOK\n * * UNKNOWN_WEBHOOK_SERVICE\n * * UNKNOWN_SESSION\n * * UNKNOWN_BAN\n * * UNKNOWN_SKU\n * * UNKNOWN_STORE_LISTING\n * * UNKNOWN_ENTITLEMENT\n * * UNKNOWN_BUILD\n * * UNKNOWN_LOBBY\n * * UNKNOWN_BRANCH\n * * UNKNOWN_STORE_DIRECTORY_LAYOUT\n * * UNKNOWN_REDISTRIBUTABLE\n * * UNKNOWN_GIFT_CODE\n * * UNKNOWN_STREAM\n * * UNKNOWN_PREMIUM_SERVER_SUBSCRIBE_COOLDOWN\n * * UNKNOWN_GUILD_TEMPLATE\n * * UNKNOWN_DISCOVERABLE_SERVER_CATEGORY\n * * UNKNOWN_STICKER\n * * UNKNOWN_INTERACTION\n * * UNKNOWN_APPLICATION_COMMAND\n * * UNKNOWN_APPLICATION_COMMAND_PERMISSIONS\n * * UNKNOWN_STAGE_INSTANCE\n * * UNKNOWN_GUILD_MEMBER_VERIFICATION_FORM\n * * UNKNOWN_GUILD_WELCOME_SCREEN\n * * UNKNOWN_GUILD_SCHEDULED_EVENT\n * * UNKNOWN_GUILD_SCHEDULED_EVENT_USER\n * * BOT_PROHIBITED_ENDPOINT\n * * BOT_ONLY_ENDPOINT\n * * CANNOT_SEND_EXPLICIT_CONTENT\n * * NOT_AUTHORIZED\n * * SLOWMODE_RATE_LIMIT\n * * ACCOUNT_OWNER_ONLY\n * * ANNOUNCEMENT_EDIT_LIMIT_EXCEEDED\n * * CHANNEL_HIT_WRITE_RATELIMIT\n * * CONTENT_NOT_ALLOWED\n * * MAXIMUM_GUILDS\n * * MAXIMUM_FRIENDS\n * * MAXIMUM_PINS\n * * MAXIMUM_RECIPIENTS\n * * MAXIMUM_ROLES\n * * MAXIMUM_WEBHOOKS\n * * MAXIMUM_EMOJIS\n * * MAXIMUM_REACTIONS\n * * MAXIMUM_CHANNELS\n * * MAXIMUM_ATTACHMENTS\n * * MAXIMUM_INVITES\n * * MAXIMUM_ANIMATED_EMOJIS\n * * MAXIMUM_SERVER_MEMBERS\n * * MAXIMUM_NUMBER_OF_SERVER_CATEGORIES\n * * GUILD_ALREADY_HAS_TEMPLATE\n * * MAXIMUM_THREAD_PARTICIPANTS\n * * MAXIMUM_NON_GUILD_MEMBERS_BANS\n * * MAXIMUM_BAN_FETCHES\n * * MAXIMUM_NUMBER_OF_STICKERS_REACHED\n * * UNAUTHORIZED\n * * ACCOUNT_VERIFICATION_REQUIRED\n * * DIRECT_MESSAGES_TOO_FAST\n * * REQUEST_ENTITY_TOO_LARGE\n * * FEATURE_TEMPORARILY_DISABLED\n * * USER_BANNED\n * * TARGET_USER_NOT_CONNECTED_TO_VOICE\n * * ALREADY_CROSSPOSTED\n * * MISSING_ACCESS\n * * INVALID_ACCOUNT_TYPE\n * * CANNOT_EXECUTE_ON_DM\n * * EMBED_DISABLED\n * * CANNOT_EDIT_MESSAGE_BY_OTHER\n * * CANNOT_SEND_EMPTY_MESSAGE\n * * CANNOT_MESSAGE_USER\n * * CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL\n * * CHANNEL_VERIFICATION_LEVEL_TOO_HIGH\n * * OAUTH2_APPLICATION_BOT_ABSENT\n * * MAXIMUM_OAUTH2_APPLICATIONS\n * * INVALID_OAUTH_STATE\n * * MISSING_PERMISSIONS\n * * INVALID_AUTHENTICATION_TOKEN\n * * NOTE_TOO_LONG\n * * INVALID_BULK_DELETE_QUANTITY\n * * CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL\n * * INVALID_OR_TAKEN_INVITE_CODE\n * * CANNOT_EXECUTE_ON_SYSTEM_MESSAGE\n * * CANNOT_EXECUTE_ON_CHANNEL_TYPE\n * * INVALID_OAUTH_TOKEN\n * * MISSING_OAUTH_SCOPE\n * * INVALID_WEBHOOK_TOKEN\n * * INVALID_ROLE\n * * INVALID_RECIPIENTS\n * * BULK_DELETE_MESSAGE_TOO_OLD\n * * INVALID_FORM_BODY\n * * INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT\n * * INVALID_API_VERSION\n * * CANNOT_SELF_REDEEM_GIFT\n * * PAYMENT_SOURCE_REQUIRED\n * * CANNOT_DELETE_COMMUNITY_REQUIRED_CHANNEL\n * * INVALID_STICKER_SENT\n * * INVALID_OPERATION_ON_ARCHIVED_THREAD\n * * INVALID_THREAD_NOTIFICATION_SETTINGS\n * * PARAMETER_EARLIER_THAN_CREATION\n * * GUILD_NOT_AVAILABLE_IN_LOCATION\n * * GUILD_MONETIZATION_REQUIRED\n * * TWO_FACTOR_REQUIRED\n * * NO_USERS_WITH_DISCORDTAG_EXIST\n * * REACTION_BLOCKED\n * * RESOURCE_OVERLOADED\n * * STAGE_ALREADY_OPEN\n * * MESSAGE_ALREADY_HAS_THREAD\n * * THREAD_LOCKED\n * * MAXIMUM_ACTIVE_THREADS\n * * MAXIMUM_ACTIVE_ANNOUCEMENT_THREAD\n * @typedef {string} APIError\n * @see {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#json-json-error-codes}\n */\nexports.APIErrors = {\n  UNKNOWN_ACCOUNT: 10001,\n  UNKNOWN_APPLICATION: 10002,\n  UNKNOWN_CHANNEL: 10003,\n  UNKNOWN_GUILD: 10004,\n  UNKNOWN_INTEGRATION: 10005,\n  UNKNOWN_INVITE: 10006,\n  UNKNOWN_MEMBER: 10007,\n  UNKNOWN_MESSAGE: 10008,\n  UNKNOWN_OVERWRITE: 10009,\n  UNKNOWN_PROVIDER: 10010,\n  UNKNOWN_ROLE: 10011,\n  UNKNOWN_TOKEN: 10012,\n  UNKNOWN_USER: 10013,\n  UNKNOWN_EMOJI: 10014,\n  UNKNOWN_WEBHOOK: 10015,\n  UNKNOWN_WEBHOOK_SERVICE: 10016,\n  UNKNOWN_SESSION: 10020,\n  UNKNOWN_BAN: 10026,\n  UNKNOWN_SKU: 10027,\n  UNKNOWN_STORE_LISTING: 10028,\n  UNKNOWN_ENTITLEMENT: 10029,\n  UNKNOWN_BUILD: 10030,\n  UNKNOWN_LOBBY: 10031,\n  UNKNOWN_BRANCH: 10032,\n  UNKNOWN_STORE_DIRECTORY_LAYOUT: 10033,\n  UNKNOWN_REDISTRIBUTABLE: 10036,\n  UNKNOWN_GIFT_CODE: 10038,\n  UNKNOWN_STREAM: 10049,\n  UNKNOWN_PREMIUM_SERVER_SUBSCRIBE_COOLDOWN: 10050,\n  UNKNOWN_GUILD_TEMPLATE: 10057,\n  UNKNOWN_DISCOVERABLE_SERVER_CATEGORY: 10059,\n  UNKNOWN_STICKER: 10060,\n  UNKNOWN_INTERACTION: 10062,\n  UNKNOWN_APPLICATION_COMMAND: 10063,\n  UNKNOWN_APPLICATION_COMMAND_PERMISSIONS: 10066,\n  UNKNOWN_STAGE_INSTANCE: 10067,\n  UNKNOWN_GUILD_MEMBER_VERIFICATION_FORM: 10068,\n  UNKNOWN_GUILD_WELCOME_SCREEN: 10069,\n  UNKNOWN_GUILD_SCHEDULED_EVENT: 10070,\n  UNKNOWN_GUILD_SCHEDULED_EVENT_USER: 10071,\n  BOT_PROHIBITED_ENDPOINT: 20001,\n  BOT_ONLY_ENDPOINT: 20002,\n  CANNOT_SEND_EXPLICIT_CONTENT: 20009,\n  NOT_AUTHORIZED: 20012,\n  SLOWMODE_RATE_LIMIT: 20016,\n  ACCOUNT_OWNER_ONLY: 20018,\n  ANNOUNCEMENT_EDIT_LIMIT_EXCEEDED: 20022,\n  CHANNEL_HIT_WRITE_RATELIMIT: 20028,\n  CONTENT_NOT_ALLOWED: 20031,\n  GUILD_PREMIUM_LEVEL_TOO_LOW: 20035,\n  MAXIMUM_GUILDS: 30001,\n  MAXIMUM_FRIENDS: 30002,\n  MAXIMUM_PINS: 30003,\n  MAXIMUM_RECIPIENTS: 30004,\n  MAXIMUM_ROLES: 30005,\n  MAXIMUM_WEBHOOKS: 30007,\n  MAXIMUM_EMOJIS: 30008,\n  MAXIMUM_REACTIONS: 30010,\n  MAXIMUM_CHANNELS: 30013,\n  MAXIMUM_ATTACHMENTS: 30015,\n  MAXIMUM_INVITES: 30016,\n  MAXIMUM_ANIMATED_EMOJIS: 30018,\n  MAXIMUM_SERVER_MEMBERS: 30019,\n  MAXIMUM_NUMBER_OF_SERVER_CATEGORIES: 30030,\n  GUILD_ALREADY_HAS_TEMPLATE: 30031,\n  MAXIMUM_THREAD_PARTICIPANTS: 30033,\n  MAXIMUM_NON_GUILD_MEMBERS_BANS: 30035,\n  MAXIMUM_BAN_FETCHES: 30037,\n  MAXIMUM_NUMBER_OF_STICKERS_REACHED: 30039,\n  UNAUTHORIZED: 40001,\n  ACCOUNT_VERIFICATION_REQUIRED: 40002,\n  DIRECT_MESSAGES_TOO_FAST: 40003,\n  REQUEST_ENTITY_TOO_LARGE: 40005,\n  FEATURE_TEMPORARILY_DISABLED: 40006,\n  USER_BANNED: 40007,\n  TARGET_USER_NOT_CONNECTED_TO_VOICE: 40032,\n  ALREADY_CROSSPOSTED: 40033,\n  MISSING_ACCESS: 50001,\n  INVALID_ACCOUNT_TYPE: 50002,\n  CANNOT_EXECUTE_ON_DM: 50003,\n  EMBED_DISABLED: 50004,\n  CANNOT_EDIT_MESSAGE_BY_OTHER: 50005,\n  CANNOT_SEND_EMPTY_MESSAGE: 50006,\n  CANNOT_MESSAGE_USER: 50007,\n  CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL: 50008,\n  CHANNEL_VERIFICATION_LEVEL_TOO_HIGH: 50009,\n  OAUTH2_APPLICATION_BOT_ABSENT: 50010,\n  MAXIMUM_OAUTH2_APPLICATIONS: 50011,\n  INVALID_OAUTH_STATE: 50012,\n  MISSING_PERMISSIONS: 50013,\n  INVALID_AUTHENTICATION_TOKEN: 50014,\n  NOTE_TOO_LONG: 50015,\n  INVALID_BULK_DELETE_QUANTITY: 50016,\n  CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL: 50019,\n  INVALID_OR_TAKEN_INVITE_CODE: 50020,\n  CANNOT_EXECUTE_ON_SYSTEM_MESSAGE: 50021,\n  CANNOT_EXECUTE_ON_CHANNEL_TYPE: 50024,\n  INVALID_OAUTH_TOKEN: 50025,\n  MISSING_OAUTH_SCOPE: 50026,\n  INVALID_WEBHOOK_TOKEN: 50027,\n  INVALID_ROLE: 50028,\n  INVALID_RECIPIENTS: 50033,\n  BULK_DELETE_MESSAGE_TOO_OLD: 50034,\n  INVALID_FORM_BODY: 50035,\n  INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT: 50036,\n  INVALID_API_VERSION: 50041,\n  FILE_UPLOADED_EXCEEDS_MAXIMUM_SIZE: 50045,\n  INVALID_FILE_UPLOADED: 50046,\n  CANNOT_SELF_REDEEM_GIFT: 50054,\n  PAYMENT_SOURCE_REQUIRED: 50070,\n  CANNOT_DELETE_COMMUNITY_REQUIRED_CHANNEL: 50074,\n  INVALID_STICKER_SENT: 50081,\n  INVALID_OPERATION_ON_ARCHIVED_THREAD: 50083,\n  INVALID_THREAD_NOTIFICATION_SETTINGS: 50084,\n  PARAMETER_EARLIER_THAN_CREATION: 50085,\n  GUILD_NOT_AVAILABLE_IN_LOCATION: 50095,\n  GUILD_MONETIZATION_REQUIRED: 50097,\n  TWO_FACTOR_REQUIRED: 60003,\n  NO_USERS_WITH_DISCORDTAG_EXIST: 80004,\n  REACTION_BLOCKED: 90001,\n  RESOURCE_OVERLOADED: 130000,\n  STAGE_ALREADY_OPEN: 150006,\n  MESSAGE_ALREADY_HAS_THREAD: 160004,\n  THREAD_LOCKED: 160005,\n  MAXIMUM_ACTIVE_THREADS: 160006,\n  MAXIMUM_ACTIVE_ANNOUNCEMENT_THREADS: 160007,\n  INVALID_JSON_FOR_UPLOADED_LOTTIE_FILE: 170001,\n  UPLOADED_LOTTIES_CANNOT_CONTAIN_RASTERIZED_IMAGES: 170002,\n  STICKER_MAXIMUM_FRAMERATE_EXCEEDED: 170003,\n  STICKER_FRAME_COUNT_EXCEEDS_MAXIMUM_OF_1000_FRAMES: 170004,\n  LOTTIE_ANIMATION_MAXIMUM_DIMENSIONS_EXCEEDED: 170005,\n  STICKER_FRAME_RATE_IS_TOO_SMALL_OR_TOO_LARGE: 170006,\n  STICKER_ANIMATION_DURATION_EXCEEDS_MAXIMUM_OF_5_SECONDS: 170007,\n};\n\n/**\n * The value set for a guild's default message notifications, e.g. `ALL_MESSAGES`. Here are the available types:\n * * ALL_MESSAGES\n * * ONLY_MENTIONS\n * @typedef {string} DefaultMessageNotificationLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level}\n */\nexports.DefaultMessageNotificationLevels = createEnum(['ALL_MESSAGES', 'ONLY_MENTIONS']);\n\n/**\n * The value set for a team member's membership state:\n * * INVITED\n * * ACCEPTED\n * @typedef {string} MembershipState\n * @see {@link https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum}\n */\nexports.MembershipStates = createEnum([null, 'INVITED', 'ACCEPTED']);\n\n/**\n * The value set for a webhook's type:\n * * Incoming\n * * Channel Follower\n * * Application\n * @typedef {string} WebhookType\n * @see {@link https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types}\n */\nexports.WebhookTypes = createEnum([null, 'Incoming', 'Channel Follower', 'Application']);\n\n/**\n * The value set for a sticker's type:\n * * STANDARD\n * * GUILD\n * @typedef {string} StickerType\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types}\n */\nexports.StickerTypes = createEnum([null, 'STANDARD', 'GUILD']);\n\n/**\n * The value set for a sticker's format type:\n * * PNG\n * * APNG\n * * LOTTIE\n * @typedef {string} StickerFormatType\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types}\n */\nexports.StickerFormatTypes = createEnum([null, 'PNG', 'APNG', 'LOTTIE']);\n\n/**\n * An overwrite type:\n * * role\n * * member\n * @typedef {string} OverwriteType\n * @see {@link https://discord.com/developers/docs/resources/channel#overwrite-object-overwrite-structure}\n */\nexports.OverwriteTypes = createEnum(['role', 'member']);\n\n/* eslint-disable max-len */\n/**\n * The type of an {@link ApplicationCommand} object:\n * * CHAT_INPUT\n * * USER\n * * MESSAGE\n * @typedef {string} ApplicationCommandType\n */\nexports.ApplicationCommandTypes = createEnum([null, 'CHAT_INPUT', 'USER', 'MESSAGE']);\n\n/**\n * The type of an {@link ApplicationCommandOption} object:\n * * SUB_COMMAND\n * * SUB_COMMAND_GROUP\n * * STRING\n * * INTEGER\n * * BOOLEAN\n * * USER\n * * CHANNEL\n * * ROLE\n * * MENTIONABLE\n * * NUMBER\n * @typedef {string} ApplicationCommandOptionType\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-type}\n */\nexports.ApplicationCommandOptionTypes = createEnum([\n  null,\n  'SUB_COMMAND',\n  'SUB_COMMAND_GROUP',\n  'STRING',\n  'INTEGER',\n  'BOOLEAN',\n  'USER',\n  'CHANNEL',\n  'ROLE',\n  'MENTIONABLE',\n  'NUMBER',\n]);\n\n/**\n * The type of an {@link ApplicationCommandPermissions} object:\n * * ROLE\n * * USER\n * @typedef {string} ApplicationCommandPermissionType\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permission-type}\n */\nexports.ApplicationCommandPermissionTypes = createEnum([null, 'ROLE', 'USER']);\n\n/**\n * The type of an {@link Interaction} object:\n * * PING\n * * APPLICATION_COMMAND\n * * MESSAGE_COMPONENT\n * @typedef {string} InteractionType\n * @see {@link https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-interaction-request-type}\n */\nexports.InteractionTypes = createEnum([null, 'PING', 'APPLICATION_COMMAND', 'MESSAGE_COMPONENT']);\n\n/**\n * The type of an interaction response:\n * * PONG\n * * CHANNEL_MESSAGE_WITH_SOURCE\n * * DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE\n * * DEFERRED_MESSAGE_UPDATE\n * * UPDATE_MESSAGE\n * @typedef {string} InteractionResponseType\n * @see {@link https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-response-object-interaction-callback-type}\n */\nexports.InteractionResponseTypes = createEnum([\n  null,\n  'PONG',\n  null,\n  null,\n  'CHANNEL_MESSAGE_WITH_SOURCE',\n  'DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE',\n  'DEFERRED_MESSAGE_UPDATE',\n  'UPDATE_MESSAGE',\n]);\n/* eslint-enable max-len */\n\n/**\n * The type of a message component\n * * ACTION_ROW\n * * BUTTON\n * * SELECT_MENU\n * @typedef {string} MessageComponentType\n * @see {@link https://discord.com/developers/docs/interactions/message-components#component-object-component-types}\n */\nexports.MessageComponentTypes = createEnum([null, 'ACTION_ROW', 'BUTTON', 'SELECT_MENU']);\n\n/**\n * The style of a message button\n * * PRIMARY\n * * SECONDARY\n * * SUCCESS\n * * DANGER\n * * LINK\n * @typedef {string} MessageButtonStyle\n * @see {@link https://discord.com/developers/docs/interactions/message-components#button-object-button-styles}\n */\nexports.MessageButtonStyles = createEnum([null, 'PRIMARY', 'SECONDARY', 'SUCCESS', 'DANGER', 'LINK']);\n\n/**\n * The required MFA level for a guild\n * * NONE\n * * ELEVATED\n * @typedef {string} MFALevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-mfa-level}\n */\nexports.MFALevels = createEnum(['NONE', 'ELEVATED']);\n\n/**\n * NSFW level of a Guild:\n * * DEFAULT\n * * EXPLICIT\n * * SAFE\n * * AGE_RESTRICTED\n * @typedef {string} NSFWLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level}\n */\nexports.NSFWLevels = createEnum(['DEFAULT', 'EXPLICIT', 'SAFE', 'AGE_RESTRICTED']);\n\n/**\n * Privacy level of a {@link StageInstance} object:\n * * PUBLIC\n * * GUILD_ONLY\n * @typedef {string} PrivacyLevel\n * @see {@link https://discord.com/developers/docs/resources/stage-instance#stage-instance-object-privacy-level}\n */\nexports.PrivacyLevels = createEnum([null, 'PUBLIC', 'GUILD_ONLY']);\n\n/**\n * The premium tier (Server Boost level) of a guild:\n * * NONE\n * * TIER_1\n * * TIER_2\n * * TIER_3\n * @typedef {string} PremiumTier\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-premium-tier}\n */\nexports.PremiumTiers = createEnum(['NONE', 'TIER_1', 'TIER_2', 'TIER_3']);\n\nexports._cleanupSymbol = Symbol('djsCleanup');\n\nfunction keyMirror(arr) {\n  let tmp = Object.create(null);\n  for (const value of arr) tmp[value] = value;\n  return tmp;\n}\n\nfunction createEnum(keys) {\n  const obj = {};\n  for (const [index, key] of keys.entries()) {\n    if (key === null) continue;\n    obj[key] = index;\n    obj[index] = key;\n  }\n  return obj;\n}\n\n/**\n * @typedef {Object} Constants Constants that can be used in an enum or object-like way.\n * @property {ActivityType} ActivityTypes The type of an activity of a users presence.\n * @property {APIError} APIErrors An error encountered while performing an API request.\n * @property {ApplicationCommandOptionType} ApplicationCommandOptionTypes\n * The type of an {@link ApplicationCommandOption} object.\n * @property {ApplicationCommandPermissionType} ApplicationCommandPermissionTypes\n * The type of an {@link ApplicationCommandPermissions} object.\n * @property {ChannelType} ChannelTypes All available channel types.\n * @property {DefaultMessageNotificationLevel} DefaultMessageNotificationLevels\n * The value set for a guild's default message notifications.\n * @property {ExplicitContentFilterLevel} ExplicitContentFilterLevels\n * The value set for the explicit content filter levels for a guild.\n * @property {InteractionResponseType} InteractionResponseTypes The type of an interaction response.\n * @property {InteractionType} InteractionTypes The type of an {@link Interaction} object.\n * @property {MembershipState} MembershipStates The value set for a team member's membership state.\n * @property {MessageButtonStyle} MessageButtonStyles The style of a message button.\n * @property {MessageComponentType} MessageComponentTypes The type of a message component.\n * @property {MFALevel} MFALevels The required MFA level for a guild.\n * @property {NSFWLevel} NSFWLevels NSFW level of a guild.\n * @property {OverwriteType} OverwriteTypes An overwrite type.\n * @property {PartialType} PartialTypes The type of Structure allowed to be a partial.\n * @property {PremiumTier} PremiumTiers The premium tier (Server Boost level) of a guild.\n * @property {PrivacyLevel} PrivacyLevels Privacy level of a {@link StageInstance} object.\n * @property {Status} Status The available statuses of the client.\n * @property {StickerFormatType} StickerFormatTypes The value set for a sticker's format type.\n * @property {StickerType} StickerTypes The value set for a sticker's type.\n * @property {VerificationLevel} VerificationLevels The value set for the verification levels for a guild.\n * @property {WebhookType} WebhookTypes The value set for a webhook's type.\n * @property {WSEventType} WSEvents The type of a websocket message event.\n */\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/Constants.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/DataResolver.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord.js/src/util/DataResolver.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst stream = __webpack_require__(/*! stream */ \"stream\");\nconst fetch = __webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/lib/index.mjs\");\nconst { Error: DiscordError, TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst Invite = __webpack_require__(/*! ../structures/Invite */ \"./node_modules/discord.js/src/structures/Invite.js\");\n\n/**\n * The DataResolver identifies different objects and tries to resolve a specific piece of information from them.\n * @private\n */\nclass DataResolver extends null {\n  /**\n   * Data that can be resolved to give an invite code. This can be:\n   * * An invite code\n   * * An invite URL\n   * @typedef {string} InviteResolvable\n   */\n\n  /**\n   * Data that can be resolved to give a template code. This can be:\n   * * A template code\n   * * A template URL\n   * @typedef {string} GuildTemplateResolvable\n   */\n\n  /**\n   * Resolves the string to a code based on the passed regex.\n   * @param {string} data The string to resolve\n   * @param {RegExp} regex The RegExp used to extract the code\n   * @returns {string}\n   */\n  static resolveCode(data, regex) {\n    return data.matchAll(regex).next().value?.[1] ?? data;\n  }\n\n  /**\n   * Resolves InviteResolvable to an invite code.\n   * @param {InviteResolvable} data The invite resolvable to resolve\n   * @returns {string}\n   */\n  static resolveInviteCode(data) {\n    return this.resolveCode(data, Invite.INVITES_PATTERN);\n  }\n\n  /**\n   * Resolves GuildTemplateResolvable to a template code.\n   * @param {GuildTemplateResolvable} data The template resolvable to resolve\n   * @returns {string}\n   */\n  static resolveGuildTemplateCode(data) {\n    const GuildTemplate = __webpack_require__(/*! ../structures/GuildTemplate */ \"./node_modules/discord.js/src/structures/GuildTemplate.js\");\n    return this.resolveCode(data, GuildTemplate.GUILD_TEMPLATES_PATTERN);\n  }\n\n  /**\n   * Resolves a Base64Resolvable, a string, or a BufferResolvable to a Base 64 image.\n   * @param {BufferResolvable|Base64Resolvable} image The image to be resolved\n   * @returns {Promise<?string>}\n   */\n  static async resolveImage(image) {\n    if (!image) return null;\n    if (typeof image === 'string' && image.startsWith('data:')) {\n      return image;\n    }\n    const file = await this.resolveFileAsBuffer(image);\n    return DataResolver.resolveBase64(file);\n  }\n\n  /**\n   * Data that resolves to give a Base64 string, typically for image uploading. This can be:\n   * * A Buffer\n   * * A base64 string\n   * @typedef {Buffer|string} Base64Resolvable\n   */\n\n  /**\n   * Resolves a Base64Resolvable to a Base 64 image.\n   * @param {Base64Resolvable} data The base 64 resolvable you want to resolve\n   * @returns {?string}\n   */\n  static resolveBase64(data) {\n    if (Buffer.isBuffer(data)) return `data:image/jpg;base64,${data.toString('base64')}`;\n    return data;\n  }\n\n  /**\n   * Data that can be resolved to give a Buffer. This can be:\n   * * A Buffer\n   * * The path to a local file\n   * * A URL\n   * @typedef {string|Buffer} BufferResolvable\n   */\n\n  /**\n   * @external Stream\n   * @see {@link https://nodejs.org/api/stream.html}\n   */\n\n  /**\n   * Resolves a BufferResolvable to a Buffer or a Stream.\n   * @param {BufferResolvable|Stream} resource The buffer or stream resolvable to resolve\n   * @returns {Promise<Buffer|Stream>}\n   */\n  static async resolveFile(resource) {\n    if (Buffer.isBuffer(resource) || resource instanceof stream.Readable) return resource;\n    if (typeof resource === 'string') {\n      if (/^https?:\\/\\//.test(resource)) {\n        const res = await fetch(resource);\n        return res.body;\n      }\n\n      return new Promise((resolve, reject) => {\n        const file = path.resolve(resource);\n        fs.stat(file, (err, stats) => {\n          if (err) return reject(err);\n          if (!stats.isFile()) return reject(new DiscordError('FILE_NOT_FOUND', file));\n          return resolve(fs.createReadStream(file));\n        });\n      });\n    }\n\n    throw new TypeError('REQ_RESOURCE_TYPE');\n  }\n\n  /**\n   * Resolves a BufferResolvable to a Buffer.\n   * @param {BufferResolvable|Stream} resource The buffer or stream resolvable to resolve\n   * @returns {Promise<Buffer>}\n   */\n  static async resolveFileAsBuffer(resource) {\n    const file = await this.resolveFile(resource);\n    if (Buffer.isBuffer(file)) return file;\n\n    const buffers = [];\n    for await (const data of file) buffers.push(data);\n    return Buffer.concat(buffers);\n  }\n}\n\nmodule.exports = DataResolver;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/DataResolver.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/Formatters.js":
/*!********************************************************!*\
  !*** ./node_modules/discord.js/src/util/Formatters.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst {\n  blockQuote,\n  bold,\n  channelMention,\n  codeBlock,\n  formatEmoji,\n  hideLinkEmbed,\n  hyperlink,\n  inlineCode,\n  italic,\n  memberNicknameMention,\n  quote,\n  roleMention,\n  spoiler,\n  strikethrough,\n  time,\n  TimestampStyles,\n  underscore,\n  userMention,\n} = __webpack_require__(/*! @discordjs/builders */ \"./node_modules/@discordjs/builders/dist/index.js\");\n\n/**\n * Contains various Discord-specific functions for formatting messages.\n */\nclass Formatters extends null {}\n\n/**\n * Formats the content into a block quote. This needs to be at the start of the line for Discord to format it.\n * @method blockQuote\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.blockQuote = blockQuote;\n\n/**\n * Formats the content into bold text.\n * @method bold\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.bold = bold;\n\n/**\n * Formats a channel ID into a channel mention.\n * @method channelMention\n * @memberof Formatters\n * @param {string} channelId The channel ID to format.\n * @returns {string}\n */\nFormatters.channelMention = channelMention;\n\n/**\n * Wraps the content inside a codeblock with an optional language.\n * @method codeBlock\n * @memberof Formatters\n * @param {string} contentOrLanguage The language to use, content if a second parameter isn't provided.\n * @param {string} [content] The content to wrap.\n * @returns {string}\n */\nFormatters.codeBlock = codeBlock;\n\n/**\n * Formats an emoji ID into a fully qualified emoji identifier\n * @method formatEmoji\n * @memberof Formatters\n * @param {string} emojiId The emoji ID to format.\n * @param {boolean} [animated] Whether the emoji is animated or not. Defaults to `false`\n * @returns {string}\n */\nFormatters.formatEmoji = formatEmoji;\n\n/**\n * Wraps the URL into `<>`, which stops it from embedding.\n * @method hideLinkEmbed\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.hideLinkEmbed = hideLinkEmbed;\n\n/**\n * Formats the content and the URL into a masked URL with an optional title.\n * @method hyperlink\n * @memberof Formatters\n * @param {string} content The content to display.\n * @param {string} url The URL the content links to.\n * @param {string} [title] The title shown when hovering on the masked link.\n * @returns {string}\n */\nFormatters.hyperlink = hyperlink;\n\n/**\n * Wraps the content inside \\`backticks\\`, which formats it as inline code.\n * @method inlineCode\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.inlineCode = inlineCode;\n\n/**\n * Formats the content into italic text.\n * @method italic\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.italic = italic;\n\n/**\n * Formats a user ID into a member-nickname mention.\n * @method memberNicknameMention\n * @memberof Formatters\n * @param {string} memberId The user ID to format.\n * @returns {string}\n */\nFormatters.memberNicknameMention = memberNicknameMention;\n\n/**\n * Formats the content into a quote. This needs to be at the start of the line for Discord to format it.\n * @method quote\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.quote = quote;\n\n/**\n * Formats a role ID into a role mention.\n * @method roleMention\n * @memberof Formatters\n * @param {string} roleId The role ID to format.\n * @returns {string}\n */\nFormatters.roleMention = roleMention;\n\n/**\n * Formats the content into spoiler text.\n * @method spoiler\n * @memberof Formatters\n * @param {string} content The content to spoiler.\n * @returns {string}\n */\nFormatters.spoiler = spoiler;\n\n/**\n * Formats the content into strike-through text.\n * @method strikethrough\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.strikethrough = strikethrough;\n\n/**\n * Formats a date into a short date-time string.\n * @method time\n * @memberof Formatters\n * @param {number|Date} [date] The date to format.\n * @param {TimestampStyles} [style] The style to use.\n * @returns {string}\n */\nFormatters.time = time;\n\n/**\n * A message formatting timestamp style, as defined in\n * [here](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles).\n * * `t` Short time format, consisting of hours and minutes, e.g. 16:20.\n * * `T` Long time format, consisting of hours, minutes, and seconds, e.g. 16:20:30.\n * * `d` Short date format, consisting of day, month, and year, e.g. 20/04/2021.\n * * `D` Long date format, consisting of day, month, and year, e.g. 20 April 2021.\n * * `f` Short date-time format, consisting of short date and short time formats, e.g. 20 April 2021 16:20.\n * * `F` Long date-time format, consisting of long date and short time formats, e.g. Tuesday, 20 April 2021 16:20.\n * * `R` Relative time format, consisting of a relative duration format, e.g. 2 months ago.\n * @typedef {string} TimestampStylesString\n */\n\n/**\n * The message formatting timestamp\n * [styles](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles) supported by Discord.\n * @memberof Formatters\n * @type {Object<string, TimestampStylesString>}\n */\nFormatters.TimestampStyles = TimestampStyles;\n\n/**\n * Formats the content into underscored text.\n * @method underscore\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.underscore = underscore;\n\n/**\n * Formats a user ID into a user mention.\n * @method userMention\n * @memberof Formatters\n * @param {string} userId The user ID to format.\n * @returns {string}\n */\nFormatters.userMention = userMention;\n\nmodule.exports = Formatters;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/Formatters.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/Intents.js":
/*!*****************************************************!*\
  !*** ./node_modules/discord.js/src/util/Intents.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to calculate intents.\n * @extends {BitField}\n */\nclass Intents extends BitField {}\n\n/**\n * @name Intents\n * @kind constructor\n * @memberof Intents\n * @param {IntentsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Data that can be resolved to give a permission number. This can be:\n * * A string (see {@link Intents.FLAGS})\n * * An intents flag\n * * An instance of Intents\n * * An array of IntentsResolvable\n * @typedef {string|number|Intents|IntentsResolvable[]} IntentsResolvable\n */\n\n/**\n * Numeric websocket intents. All available properties:\n * * `GUILDS`\n * * `GUILD_MEMBERS`\n * * `GUILD_BANS`\n * * `GUILD_EMOJIS_AND_STICKERS`\n * * `GUILD_INTEGRATIONS`\n * * `GUILD_WEBHOOKS`\n * * `GUILD_INVITES`\n * * `GUILD_VOICE_STATES`\n * * `GUILD_PRESENCES`\n * * `GUILD_MESSAGES`\n * * `GUILD_MESSAGE_REACTIONS`\n * * `GUILD_MESSAGE_TYPING`\n * * `DIRECT_MESSAGES`\n * * `DIRECT_MESSAGE_REACTIONS`\n * * `DIRECT_MESSAGE_TYPING`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/topics/gateway#list-of-intents}\n */\nIntents.FLAGS = {\n  GUILDS: 1 << 0,\n  GUILD_MEMBERS: 1 << 1,\n  GUILD_BANS: 1 << 2,\n  GUILD_EMOJIS_AND_STICKERS: 1 << 3,\n  GUILD_INTEGRATIONS: 1 << 4,\n  GUILD_WEBHOOKS: 1 << 5,\n  GUILD_INVITES: 1 << 6,\n  GUILD_VOICE_STATES: 1 << 7,\n  GUILD_PRESENCES: 1 << 8,\n  GUILD_MESSAGES: 1 << 9,\n  GUILD_MESSAGE_REACTIONS: 1 << 10,\n  GUILD_MESSAGE_TYPING: 1 << 11,\n  DIRECT_MESSAGES: 1 << 12,\n  DIRECT_MESSAGE_REACTIONS: 1 << 13,\n  DIRECT_MESSAGE_TYPING: 1 << 14,\n};\n\nmodule.exports = Intents;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/Intents.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/LimitedCollection.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/util/LimitedCollection.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst { _cleanupSymbol } = __webpack_require__(/*! ./Constants.js */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst { TypeError } = __webpack_require__(/*! ../errors/DJSError.js */ \"./node_modules/discord.js/src/errors/DJSError.js\");\n\n/**\n * @typedef {Function} SweepFilter\n * @param {LimitedCollection} collection The collection being swept\n * @returns {Function|null} Return `null` to skip sweeping, otherwise a function passed to `sweep()`,\n * See {@link [Collection#sweep](https://discord.js.org/#/docs/collection/main/class/Collection?scrollTo=sweep)}\n * for the definition of this function.\n */\n\n/**\n * Options for defining the behavior of a LimitedCollection\n * @typedef {Object} LimitedCollectionOptions\n * @property {?number} [maxSize=Infinity] The maximum size of the Collection\n * @property {?Function} [keepOverLimit=null] A function, which is passed the value and key of an entry, ran to decide\n * to keep an entry past the maximum size\n * @property {?SweepFilter} [sweepFilter=null] A function ran every `sweepInterval` to determine how to sweep\n * @property {?number} [sweepInterval=0] How frequently, in seconds, to sweep the collection.\n */\n\n/**\n * A Collection which holds a max amount of entries and sweeps periodically.\n * @extends {Collection}\n * @param {LimitedCollectionOptions} [options={}] Options for constructing the Collection.\n * @param {Iterable} [iterable=null] Optional entries passed to the Map constructor.\n */\nclass LimitedCollection extends Collection {\n  constructor(options = {}, iterable) {\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    }\n    const { maxSize = Infinity, keepOverLimit = null, sweepInterval = 0, sweepFilter = null } = options;\n\n    if (typeof maxSize !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'maxSize', 'number');\n    }\n    if (keepOverLimit !== null && typeof keepOverLimit !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'keepOverLimit', 'function');\n    }\n    if (typeof sweepInterval !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'sweepInterval', 'number');\n    }\n    if (sweepFilter !== null && typeof sweepFilter !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'sweepFilter', 'function');\n    }\n\n    super(iterable);\n\n    /**\n     * The max size of the Collection.\n     * @type {number}\n     */\n    this.maxSize = maxSize;\n\n    /**\n     * A function called to check if an entry should be kept when the Collection is at max size.\n     * @type {?Function}\n     */\n    this.keepOverLimit = keepOverLimit;\n\n    /**\n     * A function called every sweep interval that returns a function passed to `sweep`.\n     * @type {?SweepFilter}\n     */\n    this.sweepFilter = sweepFilter;\n\n    /**\n     * The id of the interval being used to sweep.\n     * @type {?Timeout}\n     */\n    this.interval =\n      sweepInterval > 0 && sweepInterval !== Infinity && sweepFilter\n        ? setInterval(() => {\n            const sweepFn = this.sweepFilter(this);\n            if (sweepFn === null) return;\n            if (typeof sweepFn !== 'function') throw new TypeError('SWEEP_FILTER_RETURN');\n            this.sweep(sweepFn);\n          }, sweepInterval * 1000).unref()\n        : null;\n  }\n\n  set(key, value) {\n    if (this.maxSize === 0) return this;\n    if (this.size >= this.maxSize && !this.has(key)) {\n      for (const [k, v] of this.entries()) {\n        const keep = this.keepOverLimit?.(v, k, this) ?? false;\n        if (!keep) {\n          this.delete(k);\n          break;\n        }\n      }\n    }\n    return super.set(key, value);\n  }\n\n  /**\n   * Options for generating a filter function based on lifetime\n   * @typedef {Object} LifetimeFilterOptions\n   * @property {number} [lifetime=14400] How long, in seconds, an entry should stay in the collection\n   * before it is considered sweepable.\n   * @property {Function} [getComparisonTimestamp=e => e?.createdTimestamp] A function that takes an entry, key,\n   * and the collection and returns a timestamp to compare against in order to determine the lifetime of the entry.\n   * @property {Function} [excludeFromSweep=() => false] A function that takes an entry, key, and the collection\n   * and returns a boolean, `true` when the entry should not be checked for sweepability.\n   */\n\n  /**\n   * Create a sweepFilter function that uses a lifetime to determine sweepability.\n   * @param {LifetimeFilterOptions} [options={}] The options used to generate the filter function\n   * @returns {SweepFilter}\n   */\n  static filterByLifetime({\n    lifetime = 14400,\n    getComparisonTimestamp = e => e?.createdTimestamp,\n    excludeFromSweep = () => false,\n  } = {}) {\n    if (typeof lifetime !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'lifetime', 'number');\n    }\n    if (typeof getComparisonTimestamp !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'getComparisonTimestamp', 'function');\n    }\n    if (typeof excludeFromSweep !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'excludeFromSweep', 'function');\n    }\n    return () => {\n      if (lifetime <= 0) return null;\n      const lifetimeMs = lifetime * 1000;\n      const now = Date.now();\n      return (entry, key, coll) => {\n        if (excludeFromSweep(entry, key, coll)) {\n          return false;\n        }\n        const comparisonTimestamp = getComparisonTimestamp(entry, key, coll);\n        if (!comparisonTimestamp || typeof comparisonTimestamp !== 'number') return false;\n        return now - comparisonTimestamp > lifetimeMs;\n      };\n    };\n  }\n\n  [_cleanupSymbol]() {\n    return this.interval ? () => clearInterval(this.interval) : null;\n  }\n\n  static get [Symbol.species]() {\n    return Collection;\n  }\n}\n\nmodule.exports = LimitedCollection;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/LimitedCollection.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/MessageFlags.js":
/*!**********************************************************!*\
  !*** ./node_modules/discord.js/src/util/MessageFlags.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to interact with a {@link Message#flags} bitfield.\n * @extends {BitField}\n */\nclass MessageFlags extends BitField {}\n\n/**\n * @name MessageFlags\n * @kind constructor\n * @memberof MessageFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name MessageFlags#bitfield\n */\n\n/**\n * Numeric message flags. All available properties:\n * * `CROSSPOSTED`\n * * `IS_CROSSPOST`\n * * `SUPPRESS_EMBEDS`\n * * `SOURCE_MESSAGE_DELETED`\n * * `URGENT`\n * * `HAS_THREAD`\n * * `EPHEMERAL`\n * * `LOADING`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object-message-flags}\n */\nMessageFlags.FLAGS = {\n  CROSSPOSTED: 1 << 0,\n  IS_CROSSPOST: 1 << 1,\n  SUPPRESS_EMBEDS: 1 << 2,\n  SOURCE_MESSAGE_DELETED: 1 << 3,\n  URGENT: 1 << 4,\n  HAS_THREAD: 1 << 5,\n  EPHEMERAL: 1 << 6,\n  LOADING: 1 << 7,\n};\n\nmodule.exports = MessageFlags;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/MessageFlags.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/Options.js":
/*!*****************************************************!*\
  !*** ./node_modules/discord.js/src/util/Options.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Rate limit data\n * @typedef {Object} RateLimitData\n * @property {number} timeout Time until this rate limit ends, in ms\n * @property {number} limit The maximum amount of requests of this endpoint\n * @property {string} method The http method of this request\n * @property {string} path The path of the request relative to the HTTP endpoint\n * @property {string} route The route of the request relative to the HTTP endpoint\n * @property {boolean} global Whether this is a global rate limit\n */\n\n/**\n * Whether this rate limit should throw an Error\n * @typedef {Function} RateLimitQueueFilter\n * @param {RateLimitData} rateLimitData The data of this rate limit\n * @returns {boolean|Promise<boolean>}\n */\n\n/**\n * @typedef {Function} CacheFactory\n * @param {Function} manager The manager class the cache is being requested from.\n * @param {Function} holds The class that the cache will hold.\n * @returns {Collection} A Collection used to store the cache of the manager.\n */\n\n/**\n * Options for a client.\n * @typedef {Object} ClientOptions\n * @property {number|number[]|string} [shards] The shard's id to run, or an array of shard ids. If not specified,\n * the client will spawn {@link ClientOptions#shardCount} shards. If set to `auto`, it will fetch the\n * recommended amount of shards from Discord and spawn that amount\n * @property {number} [shardCount=1] The total amount of shards used by all processes of this bot\n * (e.g. recommended shard count, shard count of the ShardingManager)\n * @property {CacheFactory} [makeCache] Function to create a cache.\n * You can use your own function, or the {@link Options} class to customize the Collection used for the cache.\n * <warn>Overriding the cache used in `GuildManager`, `ChannelManager`, `GuildChannelManager`, `RoleManager`,\n * and `PermissionOverwriteManager` is unsupported and **will** break functionality</warn>\n * @property {number} [messageCacheLifetime=0] DEPRECATED: Use `makeCache` with a `LimitedCollection` instead.\n * How long a message should stay in the cache until it is considered sweepable (in seconds, 0 for forever)\n * @property {number} [messageSweepInterval=0] DEPRECATED: Use `makeCache` with a `LimitedCollection` instead.\n * How frequently to remove messages from the cache that are older than the message cache lifetime\n * (in seconds, 0 for never)\n * @property {MessageMentionOptions} [allowedMentions] Default value for {@link MessageOptions#allowedMentions}\n * @property {number} [invalidRequestWarningInterval=0] The number of invalid REST requests (those that return\n * 401, 403, or 429) in a 10 minute window between emitted warnings (0 for no warnings). That is, if set to 500,\n * warnings will be emitted at invalid request number 500, 1000, 1500, and so on.\n * @property {PartialType[]} [partials] Structures allowed to be partial. This means events can be emitted even when\n * they're missing all the data for a particular structure. See the \"Partial Structures\" topic on the\n * [guide](https://discordjs.guide/popular-topics/partials.html) for some\n * important usage information, as partials require you to put checks in place when handling data.\n * @property {number} [restWsBridgeTimeout=5000] Maximum time permitted between REST responses and their\n * corresponding websocket events\n * @property {number} [restTimeOffset=500] Extra time in milliseconds to wait before continuing to make REST\n * requests (higher values will reduce rate-limiting errors on bad connections)\n * @property {number} [restRequestTimeout=15000] Time to wait before cancelling a REST request, in milliseconds\n * @property {number} [restSweepInterval=60] How frequently to delete inactive request buckets, in seconds\n * (or 0 for never)\n * @property {number} [restGlobalRateLimit=0] How many requests to allow sending per second (0 for unlimited, 50 for\n * the standard global limit used by Discord)\n * @property {string[]|RateLimitQueueFilter} [rejectOnRateLimit] Decides how rate limits and pre-emptive throttles\n * should be handled. If this option is an array containing the prefix of the request route (e.g. /channels to match any\n * route starting with /channels, such as /channels/222197033908436994/messages) or a function returning true, a\n * {@link RateLimitError} will be thrown. Otherwise the request will be queued for later\n * @property {number} [retryLimit=1] How many times to retry on 5XX errors (Infinity for indefinite amount of retries)\n * @property {boolean} [failIfNotExists=true] Default value for {@link ReplyMessageOptions#failIfNotExists}\n * @property {string[]} [userAgentSuffix] An array of additional bot info to be appended to the end of the required\n * [User Agent](https://discord.com/developers/docs/reference#user-agent) header\n * @property {PresenceData} [presence={}] Presence data to use upon login\n * @property {IntentsResolvable} intents Intents to enable for this connection\n * @property {WebsocketOptions} [ws] Options for the WebSocket\n * @property {HTTPOptions} [http] HTTP options\n */\n\n/**\n * WebSocket options (these are left as snake_case to match the API)\n * @typedef {Object} WebsocketOptions\n * @property {number} [large_threshold=50] Number of members in a guild after which offline users will no longer be\n * sent in the initial guild member list, must be between 50 and 250\n */\n\n/**\n * HTTP options\n * @typedef {Object} HTTPOptions\n * @property {number} [version=9] API version to use\n * @property {string} [api='https://discord.com/api'] Base url of the API\n * @property {string} [cdn='https://cdn.discordapp.com'] Base url of the CDN\n * @property {string} [invite='https://discord.gg'] Base url of invites\n * @property {string} [template='https://discord.new'] Base url of templates\n * @property {Object} [headers] Additional headers to send for all API requests\n */\n\n/**\n * Contains various utilities for client options.\n */\nclass Options extends null {\n  /**\n   * The default client options.\n   * @returns {ClientOptions}\n   */\n  static createDefault() {\n    return {\n      shardCount: 1,\n      makeCache: this.cacheWithLimits(this.defaultMakeCacheSettings),\n      messageCacheLifetime: 0,\n      messageSweepInterval: 0,\n      invalidRequestWarningInterval: 0,\n      partials: [],\n      restWsBridgeTimeout: 5000,\n      restRequestTimeout: 15000,\n      restGlobalRateLimit: 0,\n      retryLimit: 1,\n      restTimeOffset: 500,\n      restSweepInterval: 60,\n      failIfNotExists: true,\n      userAgentSuffix: [],\n      presence: {},\n      ws: {\n        large_threshold: 50,\n        compress: false,\n        properties: {\n          $os: process.platform,\n          $browser: 'discord.js',\n          $device: 'discord.js',\n        },\n        version: 9,\n      },\n      http: {\n        version: 9,\n        api: 'https://discord.com/api',\n        cdn: 'https://cdn.discordapp.com',\n        invite: 'https://discord.gg',\n        template: 'https://discord.new',\n      },\n    };\n  }\n\n  /**\n   * Create a cache factory using predefined settings to sweep or limit.\n   * @param {Object<string, LimitedCollectionOptions|number>} [settings={}] Settings passed to the relevant constructor.\n   * If no setting is provided for a manager, it uses Collection.\n   * If a number is provided for a manager, it uses that number as the max size for a LimitedCollection.\n   * If LimitedCollectionOptions are provided for a manager, it uses those settings to form a LimitedCollection.\n   * @returns {CacheFactory}\n   * @example\n   * // Store up to 200 messages per channel and discard archived threads if they were archived more than 4 hours ago.\n   * // Note archived threads will remain in the guild and client caches with these settings\n   * Options.cacheWithLimits({\n   *    MessageManager: 200,\n   *    ThreadManager: {\n   *      sweepInterval: 3600,\n   *      sweepFilter: LimitedCollection.filterByLifetime({\n   *        getComparisonTimestamp: e => e.archiveTimestamp,\n   *        excludeFromSweep: e => !e.archived,\n   *      }),\n   *    },\n   *  });\n   * @example\n   * // Sweep messages every 5 minutes, removing messages that have not been edited or created in the last 30 minutes\n   * Options.cacheWithLimits({\n   *   // Keep default thread sweeping behavior\n   *   ...Options.defaultMakeCacheSettings,\n   *   // Override MessageManager\n   *   MessageManager: {\n   *     sweepInterval: 300,\n   *     sweepFilter: LimitedCollection.filterByLifetime({\n   *       lifetime: 1800,\n   *       getComparisonTimestamp: e => e.editedTimestamp ?? e.createdTimestamp,\n   *     })\n   *   }\n   * });\n   */\n  static cacheWithLimits(settings = {}) {\n    const { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\n    const LimitedCollection = __webpack_require__(/*! ./LimitedCollection */ \"./node_modules/discord.js/src/util/LimitedCollection.js\");\n\n    return manager => {\n      const setting = settings[manager.name];\n      /* eslint-disable-next-line eqeqeq */\n      if (setting == null) {\n        return new Collection();\n      }\n      if (typeof setting === 'number') {\n        if (setting === Infinity) {\n          return new Collection();\n        }\n        return new LimitedCollection({ maxSize: setting });\n      }\n      /* eslint-disable eqeqeq */\n      const noSweeping =\n        setting.sweepFilter == null ||\n        setting.sweepInterval == null ||\n        setting.sweepInterval <= 0 ||\n        setting.sweepInterval === Infinity;\n      const noLimit = setting.maxSize == null || setting.maxSize === Infinity;\n      /* eslint-enable eqeqeq */\n      if (noSweeping && noLimit) {\n        return new Collection();\n      }\n      return new LimitedCollection(setting);\n    };\n  }\n\n  /**\n   * Create a cache factory that always caches everything.\n   * @returns {CacheFactory}\n   */\n  static cacheEverything() {\n    const { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\n    return () => new Collection();\n  }\n\n  /**\n   * The default settings passed to {@link Options.cacheWithLimits}.\n   * The caches that this changes are:\n   * * `MessageManager` - Limit to 200 messages\n   * * `ChannelManager` - Sweep archived threads\n   * * `GuildChannelManager` - Sweep archived threads\n   * * `ThreadManager` - Sweep archived threads\n   * <info>If you want to keep default behavior and add on top of it you can use this object and add on to it, e.g.\n   * `makeCache: Options.cacheWithLimits({ ...Options.defaultMakeCacheSettings, ReactionManager: 0 })`</info>\n   * @type {Object<string, LimitedCollectionOptions|number>}\n   */\n  static get defaultMakeCacheSettings() {\n    return {\n      MessageManager: 200,\n      ChannelManager: {\n        sweepInterval: 3600,\n        sweepFilter: __webpack_require__(/*! ./Util */ \"./node_modules/discord.js/src/util/Util.js\").archivedThreadSweepFilter(),\n      },\n      GuildChannelManager: {\n        sweepInterval: 3600,\n        sweepFilter: __webpack_require__(/*! ./Util */ \"./node_modules/discord.js/src/util/Util.js\").archivedThreadSweepFilter(),\n      },\n      ThreadManager: {\n        sweepInterval: 3600,\n        sweepFilter: __webpack_require__(/*! ./Util */ \"./node_modules/discord.js/src/util/Util.js\").archivedThreadSweepFilter(),\n      },\n    };\n  }\n}\n\nmodule.exports = Options;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/Options.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/Permissions.js":
/*!*********************************************************!*\
  !*** ./node_modules/discord.js/src/util/Permissions.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to interact with a permission bitfield. All {@link GuildMember}s have a set of\n * permissions in their guild, and each channel in the guild may also have {@link PermissionOverwrites} for the member\n * that override their default permissions.\n * @extends {BitField}\n */\nclass Permissions extends BitField {\n  /**\n   * Bitfield of the packed bits\n   * @type {bigint}\n   * @name Permissions#bitfield\n   */\n\n  /**\n   * Data that can be resolved to give a permission number. This can be:\n   * * A string (see {@link Permissions.FLAGS})\n   * * A permission number\n   * * An instance of Permissions\n   * * An Array of PermissionResolvable\n   * @typedef {string|bigint|Permissions|PermissionResolvable[]} PermissionResolvable\n   */\n\n  /**\n   * Gets all given bits that are missing from the bitfield.\n   * @param {BitFieldResolvable} bits Bit(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {string[]}\n   */\n  missing(bits, checkAdmin = true) {\n    return checkAdmin && this.has(this.constructor.FLAGS.ADMINISTRATOR) ? [] : super.missing(bits, checkAdmin);\n  }\n\n  /**\n   * Checks whether the bitfield has a permission, or any of multiple permissions.\n   * @param {PermissionResolvable} permission Permission(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {boolean}\n   */\n  any(permission, checkAdmin = true) {\n    return (checkAdmin && super.has(this.constructor.FLAGS.ADMINISTRATOR)) || super.any(permission);\n  }\n\n  /**\n   * Checks whether the bitfield has a permission, or multiple permissions.\n   * @param {PermissionResolvable} permission Permission(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {boolean}\n   */\n  has(permission, checkAdmin = true) {\n    return (checkAdmin && super.has(this.constructor.FLAGS.ADMINISTRATOR)) || super.has(permission);\n  }\n}\n\n/**\n * Numeric permission flags. All available properties:\n * * `CREATE_INSTANT_INVITE` (create invitations to the guild)\n * * `KICK_MEMBERS`\n * * `BAN_MEMBERS`\n * * `ADMINISTRATOR` (implicitly has *all* permissions, and bypasses all channel overwrites)\n * * `MANAGE_CHANNELS` (edit and reorder channels)\n * * `MANAGE_GUILD` (edit the guild information, region, etc.)\n * * `ADD_REACTIONS` (add new reactions to messages)\n * * `VIEW_AUDIT_LOG`\n * * `PRIORITY_SPEAKER`\n * * `STREAM`\n * * `VIEW_CHANNEL`\n * * `SEND_MESSAGES`\n * * `SEND_TTS_MESSAGES`\n * * `MANAGE_MESSAGES` (delete messages and reactions)\n * * `EMBED_LINKS` (links posted will have a preview embedded)\n * * `ATTACH_FILES`\n * * `READ_MESSAGE_HISTORY` (view messages that were posted prior to opening Discord)\n * * `MENTION_EVERYONE`\n * * `USE_EXTERNAL_EMOJIS` (use emojis from different guilds)\n * * `VIEW_GUILD_INSIGHTS`\n * * `CONNECT` (connect to a voice channel)\n * * `SPEAK` (speak in a voice channel)\n * * `MUTE_MEMBERS` (mute members across all voice channels)\n * * `DEAFEN_MEMBERS` (deafen members across all voice channels)\n * * `MOVE_MEMBERS` (move members between voice channels)\n * * `USE_VAD` (use voice activity detection)\n * * `CHANGE_NICKNAME`\n * * `MANAGE_NICKNAMES` (change other members' nicknames)\n * * `MANAGE_ROLES`\n * * `MANAGE_WEBHOOKS`\n * * `MANAGE_EMOJIS_AND_STICKERS`\n * * `USE_APPLICATION_COMMANDS`\n * * `REQUEST_TO_SPEAK`\n * * `MANAGE_THREADS`\n * * `USE_PUBLIC_THREADS`\n * * `USE_PRIVATE_THREADS`\n * * `USE_EXTERNAL_STICKERS` (use stickers from different guilds)\n * @type {Object<string, bigint>}\n * @see {@link https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags}\n */\nPermissions.FLAGS = {\n  CREATE_INSTANT_INVITE: 1n << 0n,\n  KICK_MEMBERS: 1n << 1n,\n  BAN_MEMBERS: 1n << 2n,\n  ADMINISTRATOR: 1n << 3n,\n  MANAGE_CHANNELS: 1n << 4n,\n  MANAGE_GUILD: 1n << 5n,\n  ADD_REACTIONS: 1n << 6n,\n  VIEW_AUDIT_LOG: 1n << 7n,\n  PRIORITY_SPEAKER: 1n << 8n,\n  STREAM: 1n << 9n,\n  VIEW_CHANNEL: 1n << 10n,\n  SEND_MESSAGES: 1n << 11n,\n  SEND_TTS_MESSAGES: 1n << 12n,\n  MANAGE_MESSAGES: 1n << 13n,\n  EMBED_LINKS: 1n << 14n,\n  ATTACH_FILES: 1n << 15n,\n  READ_MESSAGE_HISTORY: 1n << 16n,\n  MENTION_EVERYONE: 1n << 17n,\n  USE_EXTERNAL_EMOJIS: 1n << 18n,\n  VIEW_GUILD_INSIGHTS: 1n << 19n,\n  CONNECT: 1n << 20n,\n  SPEAK: 1n << 21n,\n  MUTE_MEMBERS: 1n << 22n,\n  DEAFEN_MEMBERS: 1n << 23n,\n  MOVE_MEMBERS: 1n << 24n,\n  USE_VAD: 1n << 25n,\n  CHANGE_NICKNAME: 1n << 26n,\n  MANAGE_NICKNAMES: 1n << 27n,\n  MANAGE_ROLES: 1n << 28n,\n  MANAGE_WEBHOOKS: 1n << 29n,\n  MANAGE_EMOJIS_AND_STICKERS: 1n << 30n,\n  USE_APPLICATION_COMMANDS: 1n << 31n,\n  REQUEST_TO_SPEAK: 1n << 32n,\n  MANAGE_THREADS: 1n << 34n,\n  USE_PUBLIC_THREADS: 1n << 35n,\n  USE_PRIVATE_THREADS: 1n << 36n,\n  USE_EXTERNAL_STICKERS: 1n << 37n,\n};\n\n/**\n * Bitfield representing every permission combined\n * @type {bigint}\n */\nPermissions.ALL = Object.values(Permissions.FLAGS).reduce((all, p) => all | p, 0n);\n\n/**\n * Bitfield representing the default permissions for users\n * @type {bigint}\n */\nPermissions.DEFAULT = BigInt(104324673);\n\n/**\n * Bitfield representing the permissions required for moderators of stage channels\n * @type {bigint}\n */\nPermissions.STAGE_MODERATOR =\n  Permissions.FLAGS.MANAGE_CHANNELS | Permissions.FLAGS.MUTE_MEMBERS | Permissions.FLAGS.MOVE_MEMBERS;\n\nPermissions.defaultBit = BigInt(0);\n\nmodule.exports = Permissions;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/Permissions.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/SnowflakeUtil.js":
/*!***********************************************************!*\
  !*** ./node_modules/discord.js/src/util/SnowflakeUtil.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Util = __webpack_require__(/*! ./Util */ \"./node_modules/discord.js/src/util/Util.js\");\n\n// Discord epoch (2015-01-01T00:00:00.000Z)\nconst EPOCH = 1420070400000;\nlet INCREMENT = 0;\n\n/**\n * A container for useful snowflake-related methods.\n */\nclass SnowflakeUtil extends null {\n  /**\n   * A {@link https://developer.twitter.com/en/docs/twitter-ids Twitter snowflake},\n   * except the epoch is 2015-01-01T00:00:00.000Z.\n   *\n   * If we have a snowflake '266241948824764416' we can represent it as binary:\n   * ```\n   * 64                                          22     17     12          0\n   *  000000111011000111100001101001000101000000  00001  00000  000000000000\n   *       number of ms since Discord epoch       worker  pid    increment\n   * ```\n   * @typedef {string} Snowflake\n   */\n\n  /**\n   * Generates a Discord snowflake.\n   * <info>This hardcodes the worker's id as 1 and the process's id as 0.</info>\n   * @param {number|Date} [timestamp=Date.now()] Timestamp or date of the snowflake to generate\n   * @returns {Snowflake} The generated snowflake\n   */\n  static generate(timestamp = Date.now()) {\n    if (timestamp instanceof Date) timestamp = timestamp.getTime();\n    if (typeof timestamp !== 'number' || isNaN(timestamp)) {\n      throw new TypeError(\n        `\"timestamp\" argument must be a number (received ${isNaN(timestamp) ? 'NaN' : typeof timestamp})`,\n      );\n    }\n    if (INCREMENT >= 4095) INCREMENT = 0;\n    const BINARY = `${(timestamp - EPOCH).toString(2).padStart(42, '0')}0000100000${(INCREMENT++)\n      .toString(2)\n      .padStart(12, '0')}`;\n    return Util.binaryToId(BINARY);\n  }\n\n  /**\n   * A deconstructed snowflake.\n   * @typedef {Object} DeconstructedSnowflake\n   * @property {number} timestamp Timestamp the snowflake was created\n   * @property {Date} date Date the snowflake was created\n   * @property {number} workerId The worker's id in the snowflake\n   * @property {number} processId The process's id in the snowflake\n   * @property {number} increment Increment in the snowflake\n   * @property {string} binary Binary representation of the snowflake\n   */\n\n  /**\n   * Deconstructs a Discord snowflake.\n   * @param {Snowflake} snowflake Snowflake to deconstruct\n   * @returns {DeconstructedSnowflake}\n   */\n  static deconstruct(snowflake) {\n    const BINARY = Util.idToBinary(snowflake).toString(2).padStart(64, '0');\n    return {\n      timestamp: parseInt(BINARY.substring(0, 42), 2) + EPOCH,\n      get date() {\n        return new Date(this.timestamp);\n      },\n      workerId: parseInt(BINARY.substring(42, 47), 2),\n      processId: parseInt(BINARY.substring(47, 52), 2),\n      increment: parseInt(BINARY.substring(52, 64), 2),\n      binary: BINARY,\n    };\n  }\n\n  /**\n   * Discord's epoch value (2015-01-01T00:00:00.000Z).\n   * @type {number}\n   * @readonly\n   */\n  static get EPOCH() {\n    return EPOCH;\n  }\n}\n\nmodule.exports = SnowflakeUtil;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/SnowflakeUtil.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/SystemChannelFlags.js":
/*!****************************************************************!*\
  !*** ./node_modules/discord.js/src/util/SystemChannelFlags.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to interact with a {@link Guild#systemChannelFlags} bitfield.\n * <info>Note that all event message types are enabled by default,\n * and by setting their corresponding flags you are disabling them</info>\n * @extends {BitField}\n */\nclass SystemChannelFlags extends BitField {}\n\n/**\n * @name SystemChannelFlags\n * @kind constructor\n * @memberof SystemChannelFlags\n * @param {SystemChannelFlagsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name SystemChannelFlags#bitfield\n */\n\n/**\n * Data that can be resolved to give a sytem channel flag bitfield. This can be:\n * * A string (see {@link SystemChannelFlags.FLAGS})\n * * A sytem channel flag\n * * An instance of SystemChannelFlags\n * * An Array of SystemChannelFlagsResolvable\n * @typedef {string|number|SystemChannelFlags|SystemChannelFlagsResolvable[]} SystemChannelFlagsResolvable\n */\n\n/**\n * Numeric system channel flags. All available properties:\n * * `SUPPRESS_JOIN_NOTIFICATIONS` (Suppress member join notifications)\n * * `SUPPRESS_PREMIUM_SUBSCRIPTIONS` (Suppress server boost notifications)\n * * `SUPPRESS_GUILD_REMINDER_NOTIFICATIONS` (Suppress server setup tips)\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags}\n */\nSystemChannelFlags.FLAGS = {\n  SUPPRESS_JOIN_NOTIFICATIONS: 1 << 0,\n  SUPPRESS_PREMIUM_SUBSCRIPTIONS: 1 << 1,\n  SUPPRESS_GUILD_REMINDER_NOTIFICATIONS: 1 << 2,\n};\n\nmodule.exports = SystemChannelFlags;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/SystemChannelFlags.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/ThreadMemberFlags.js":
/*!***************************************************************!*\
  !*** ./node_modules/discord.js/src/util/ThreadMemberFlags.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to interact with a {@link ThreadMember#flags} bitfield.\n * @extends {BitField}\n */\nclass ThreadMemberFlags extends BitField {}\n\n/**\n * @name ThreadMemberFlags\n * @kind constructor\n * @memberof ThreadMemberFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ThreadMemberFlags#bitfield\n */\n\n/**\n * Numeric thread member flags. There are currently no bitflags relevant to bots for this.\n * @type {Object<string, number>}\n */\nThreadMemberFlags.FLAGS = {};\n\nmodule.exports = ThreadMemberFlags;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/ThreadMemberFlags.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/UserFlags.js":
/*!*******************************************************!*\
  !*** ./node_modules/discord.js/src/util/UserFlags.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst BitField = __webpack_require__(/*! ./BitField */ \"./node_modules/discord.js/src/util/BitField.js\");\n\n/**\n * Data structure that makes it easy to interact with a {@link User#flags} bitfield.\n * @extends {BitField}\n */\nclass UserFlags extends BitField {}\n\n/**\n * @name UserFlags\n * @kind constructor\n * @memberof UserFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name UserFlags#bitfield\n */\n\n/**\n * Numeric user flags. All available properties:\n * * `DISCORD_EMPLOYEE`\n * * `PARTNERED_SERVER_OWNER`\n * * `HYPESQUAD_EVENTS`\n * * `BUGHUNTER_LEVEL_1`\n * * `HOUSE_BRAVERY`\n * * `HOUSE_BRILLIANCE`\n * * `HOUSE_BALANCE`\n * * `EARLY_SUPPORTER`\n * * `TEAM_USER`\n * * `BUGHUNTER_LEVEL_2`\n * * `VERIFIED_BOT`\n * * `EARLY_VERIFIED_BOT_DEVELOPER`\n * * `DISCORD_CERTIFIED_MODERATOR`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/user#user-object-user-flags}\n */\nUserFlags.FLAGS = {\n  DISCORD_EMPLOYEE: 1 << 0,\n  PARTNERED_SERVER_OWNER: 1 << 1,\n  HYPESQUAD_EVENTS: 1 << 2,\n  BUGHUNTER_LEVEL_1: 1 << 3,\n  HOUSE_BRAVERY: 1 << 6,\n  HOUSE_BRILLIANCE: 1 << 7,\n  HOUSE_BALANCE: 1 << 8,\n  EARLY_SUPPORTER: 1 << 9,\n  TEAM_USER: 1 << 10,\n  BUGHUNTER_LEVEL_2: 1 << 14,\n  VERIFIED_BOT: 1 << 16,\n  EARLY_VERIFIED_BOT_DEVELOPER: 1 << 17,\n  DISCORD_CERTIFIED_MODERATOR: 1 << 18,\n};\n\nmodule.exports = UserFlags;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/UserFlags.js?");

/***/ }),

/***/ "./node_modules/discord.js/src/util/Util.js":
/*!**************************************************!*\
  !*** ./node_modules/discord.js/src/util/Util.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { parse } = __webpack_require__(/*! path */ \"path\");\nconst { Collection } = __webpack_require__(/*! @discordjs/collection */ \"./node_modules/@discordjs/collection/dist/index.js\");\nconst fetch = __webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/lib/index.mjs\");\nconst { Colors, Endpoints } = __webpack_require__(/*! ./Constants */ \"./node_modules/discord.js/src/util/Constants.js\");\nconst Options = __webpack_require__(/*! ./Options */ \"./node_modules/discord.js/src/util/Options.js\");\nconst { Error: DiscordError, RangeError, TypeError } = __webpack_require__(/*! ../errors */ \"./node_modules/discord.js/src/errors/index.js\");\nconst has = (o, k) => Object.prototype.hasOwnProperty.call(o, k);\nconst isObject = d => typeof d === 'object' && d !== null;\n\n/**\n * Contains various general-purpose utility methods.\n */\nclass Util extends null {\n  /**\n   * Flatten an object. Any properties that are collections will get converted to an array of keys.\n   * @param {Object} obj The object to flatten.\n   * @param {...Object<string, boolean|string>} [props] Specific properties to include/exclude.\n   * @returns {Object}\n   */\n  static flatten(obj, ...props) {\n    if (!isObject(obj)) return obj;\n\n    const objProps = Object.keys(obj)\n      .filter(k => !k.startsWith('_'))\n      .map(k => ({ [k]: true }));\n\n    props = objProps.length ? Object.assign(...objProps, ...props) : Object.assign({}, ...props);\n\n    const out = {};\n\n    for (let [prop, newProp] of Object.entries(props)) {\n      if (!newProp) continue;\n      newProp = newProp === true ? prop : newProp;\n\n      const element = obj[prop];\n      const elemIsObj = isObject(element);\n      const valueOf = elemIsObj && typeof element.valueOf === 'function' ? element.valueOf() : null;\n\n      // If it's a Collection, make the array of keys\n      if (element instanceof Collection) out[newProp] = Array.from(element.keys());\n      // If the valueOf is a Collection, use its array of keys\n      else if (valueOf instanceof Collection) out[newProp] = Array.from(valueOf.keys());\n      // If it's an array, flatten each element\n      else if (Array.isArray(element)) out[newProp] = element.map(e => Util.flatten(e));\n      // If it's an object with a primitive `valueOf`, use that value\n      else if (typeof valueOf !== 'object') out[newProp] = valueOf;\n      // If it's a primitive\n      else if (!elemIsObj) out[newProp] = element;\n    }\n\n    return out;\n  }\n\n  /**\n   * Options for splitting a message.\n   * @typedef {Object} SplitOptions\n   * @property {number} [maxLength=2000] Maximum character length per message piece\n   * @property {string|string[]|RegExp|RegExp[]} [char='\\n'] Character(s) or Regex(s) to split the message with,\n   * an array can be used to split multiple times\n   * @property {string} [prepend=''] Text to prepend to every piece except the first\n   * @property {string} [append=''] Text to append to every piece except the last\n   */\n\n  /**\n   * Splits a string into multiple chunks at a designated character that do not exceed a specific length.\n   * @param {string} text Content to split\n   * @param {SplitOptions} [options] Options controlling the behavior of the split\n   * @returns {string[]}\n   */\n  static splitMessage(text, { maxLength = 2000, char = '\\n', prepend = '', append = '' } = {}) {\n    text = Util.verifyString(text, RangeError, 'MESSAGE_CONTENT_TYPE', false);\n    if (text.length <= maxLength) return [text];\n    let splitText = [text];\n    if (Array.isArray(char)) {\n      while (char.length > 0 && splitText.some(elem => elem.length > maxLength)) {\n        const currentChar = char.shift();\n        if (currentChar instanceof RegExp) {\n          splitText = splitText.flatMap(chunk => chunk.match(currentChar));\n        } else {\n          splitText = splitText.flatMap(chunk => chunk.split(currentChar));\n        }\n      }\n    } else {\n      splitText = text.split(char);\n    }\n    if (splitText.some(elem => elem.length > maxLength)) throw new RangeError('SPLIT_MAX_LEN');\n    const messages = [];\n    let msg = '';\n    for (const chunk of splitText) {\n      if (msg && (msg + char + chunk + append).length > maxLength) {\n        messages.push(msg + append);\n        msg = prepend;\n      }\n      msg += (msg && msg !== prepend ? char : '') + chunk;\n    }\n    return messages.concat(msg).filter(m => m);\n  }\n\n  /**\n   * Options used to escape markdown.\n   * @typedef {Object} EscapeMarkdownOptions\n   * @property {boolean} [codeBlock=true] Whether to escape code blocks or not\n   * @property {boolean} [inlineCode=true] Whether to escape inline code or not\n   * @property {boolean} [bold=true] Whether to escape bolds or not\n   * @property {boolean} [italic=true] Whether to escape italics or not\n   * @property {boolean} [underline=true] Whether to escape underlines or not\n   * @property {boolean} [strikethrough=true] Whether to escape strikethroughs or not\n   * @property {boolean} [spoiler=true] Whether to escape spoilers or not\n   * @property {boolean} [codeBlockContent=true] Whether to escape text inside code blocks or not\n   * @property {boolean} [inlineCodeContent=true] Whether to escape text inside inline code or not\n   */\n\n  /**\n   * Escapes any Discord-flavour markdown in a string.\n   * @param {string} text Content to escape\n   * @param {EscapeMarkdownOptions} [options={}] Options for escaping the markdown\n   * @returns {string}\n   */\n  static escapeMarkdown(\n    text,\n    {\n      codeBlock = true,\n      inlineCode = true,\n      bold = true,\n      italic = true,\n      underline = true,\n      strikethrough = true,\n      spoiler = true,\n      codeBlockContent = true,\n      inlineCodeContent = true,\n    } = {},\n  ) {\n    if (!codeBlockContent) {\n      return text\n        .split('```')\n        .map((subString, index, array) => {\n          if (index % 2 && index !== array.length - 1) return subString;\n          return Util.escapeMarkdown(subString, {\n            inlineCode,\n            bold,\n            italic,\n            underline,\n            strikethrough,\n            spoiler,\n            inlineCodeContent,\n          });\n        })\n        .join(codeBlock ? '\\\\`\\\\`\\\\`' : '```');\n    }\n    if (!inlineCodeContent) {\n      return text\n        .split(/(?<=^|[^`])`(?=[^`]|$)/g)\n        .map((subString, index, array) => {\n          if (index % 2 && index !== array.length - 1) return subString;\n          return Util.escapeMarkdown(subString, {\n            codeBlock,\n            bold,\n            italic,\n            underline,\n            strikethrough,\n            spoiler,\n          });\n        })\n        .join(inlineCode ? '\\\\`' : '`');\n    }\n    if (inlineCode) text = Util.escapeInlineCode(text);\n    if (codeBlock) text = Util.escapeCodeBlock(text);\n    if (italic) text = Util.escapeItalic(text);\n    if (bold) text = Util.escapeBold(text);\n    if (underline) text = Util.escapeUnderline(text);\n    if (strikethrough) text = Util.escapeStrikethrough(text);\n    if (spoiler) text = Util.escapeSpoiler(text);\n    return text;\n  }\n\n  /**\n   * Escapes code block markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeCodeBlock(text) {\n    return text.replace(/```/g, '\\\\`\\\\`\\\\`');\n  }\n\n  /**\n   * Escapes inline code markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeInlineCode(text) {\n    return text.replace(/(?<=^|[^`])`(?=[^`]|$)/g, '\\\\`');\n  }\n\n  /**\n   * Escapes italic markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeItalic(text) {\n    let i = 0;\n    text = text.replace(/(?<=^|[^*])\\*([^*]|\\*\\*|$)/g, (_, match) => {\n      if (match === '**') return ++i % 2 ? `\\\\*${match}` : `${match}\\\\*`;\n      return `\\\\*${match}`;\n    });\n    i = 0;\n    return text.replace(/(?<=^|[^_])_([^_]|__|$)/g, (_, match) => {\n      if (match === '__') return ++i % 2 ? `\\\\_${match}` : `${match}\\\\_`;\n      return `\\\\_${match}`;\n    });\n  }\n\n  /**\n   * Escapes bold markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeBold(text) {\n    let i = 0;\n    return text.replace(/\\*\\*(\\*)?/g, (_, match) => {\n      if (match) return ++i % 2 ? `${match}\\\\*\\\\*` : `\\\\*\\\\*${match}`;\n      return '\\\\*\\\\*';\n    });\n  }\n\n  /**\n   * Escapes underline markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeUnderline(text) {\n    let i = 0;\n    return text.replace(/__(_)?/g, (_, match) => {\n      if (match) return ++i % 2 ? `${match}\\\\_\\\\_` : `\\\\_\\\\_${match}`;\n      return '\\\\_\\\\_';\n    });\n  }\n\n  /**\n   * Escapes strikethrough markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeStrikethrough(text) {\n    return text.replace(/~~/g, '\\\\~\\\\~');\n  }\n\n  /**\n   * Escapes spoiler markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeSpoiler(text) {\n    return text.replace(/\\|\\|/g, '\\\\|\\\\|');\n  }\n\n  /**\n   * @typedef {Object} FetchRecommendedShardsOptions\n   * @property {number} [guildsPerShard=1000] Number of guilds assigned per shard\n   * @property {number} [multipleOf=1] The multiple the shard count should round up to. (16 for large bot sharding)\n   */\n\n  /**\n   * Gets the recommended shard count from Discord.\n   * @param {string} token Discord auth token\n   * @param {FetchRecommendedShardsOptions} [options] Options for fetching the recommended shard count\n   * @returns {Promise<number>} The recommended number of shards\n   */\n  static async fetchRecommendedShards(token, { guildsPerShard = 1000, multipleOf = 1 } = {}) {\n    if (!token) throw new DiscordError('TOKEN_MISSING');\n    const defaults = Options.createDefault();\n    const response = await fetch(`${defaults.http.api}/v${defaults.http.version}${Endpoints.botGateway}`, {\n      method: 'GET',\n      headers: { Authorization: `Bot ${token.replace(/^Bot\\s*/i, '')}` },\n    });\n    if (!response.ok) {\n      if (response.status === 401) throw new DiscordError('TOKEN_INVALID');\n      throw response;\n    }\n    const { shards } = await response.json();\n    return Math.ceil((shards * (1000 / guildsPerShard)) / multipleOf) * multipleOf;\n  }\n\n  /**\n   * Parses emoji info out of a string. The string must be one of:\n   * * A UTF-8 emoji (no id)\n   * * A URL-encoded UTF-8 emoji (no id)\n   * * A Discord custom emoji (`<:name:id>` or `<a:name:id>`)\n   * @param {string} text Emoji string to parse\n   * @returns {APIEmoji} Object with `animated`, `name`, and `id` properties\n   * @private\n   */\n  static parseEmoji(text) {\n    if (text.includes('%')) text = decodeURIComponent(text);\n    if (!text.includes(':')) return { animated: false, name: text, id: null };\n    const match = text.match(/<?(?:(a):)?(\\w{2,32}):(\\d{17,19})?>?/);\n    return match && { animated: Boolean(match[1]), name: match[2], id: match[3] ?? null };\n  }\n\n  /**\n   * Resolves a partial emoji object from an {@link EmojiIdentifierResolvable}, without checking a Client.\n   * @param {EmojiIdentifierResolvable} emoji Emoji identifier to resolve\n   * @returns {?RawEmoji}\n   * @private\n   */\n  static resolvePartialEmoji(emoji) {\n    if (!emoji) return null;\n    if (typeof emoji === 'string') return /^\\d{17,19}$/.test(emoji) ? { id: emoji } : Util.parseEmoji(emoji);\n    const { id, name, animated } = emoji;\n    if (!id && !name) return null;\n    return { id, name, animated };\n  }\n\n  /**\n   * Shallow-copies an object with its class/prototype intact.\n   * @param {Object} obj Object to clone\n   * @returns {Object}\n   * @private\n   */\n  static cloneObject(obj) {\n    return Object.assign(Object.create(obj), obj);\n  }\n\n  /**\n   * Sets default properties on an object that aren't already specified.\n   * @param {Object} def Default properties\n   * @param {Object} given Object to assign defaults to\n   * @returns {Object}\n   * @private\n   */\n  static mergeDefault(def, given) {\n    if (!given) return def;\n    for (const key in def) {\n      if (!has(given, key) || given[key] === undefined) {\n        given[key] = def[key];\n      } else if (given[key] === Object(given[key])) {\n        given[key] = Util.mergeDefault(def[key], given[key]);\n      }\n    }\n\n    return given;\n  }\n\n  /**\n   * Options used to make an error object.\n   * @typedef {Object} MakeErrorOptions\n   * @property {string} name Error type\n   * @property {string} message Message for the error\n   * @property {string} stack Stack for the error\n   */\n\n  /**\n   * Makes an Error from a plain info object.\n   * @param {MakeErrorOptions} obj Error info\n   * @returns {Error}\n   * @private\n   */\n  static makeError(obj) {\n    const err = new Error(obj.message);\n    err.name = obj.name;\n    err.stack = obj.stack;\n    return err;\n  }\n\n  /**\n   * Makes a plain error info object from an Error.\n   * @param {Error} err Error to get info from\n   * @returns {MakeErrorOptions}\n   * @private\n   */\n  static makePlainError(err) {\n    return {\n      name: err.name,\n      message: err.message,\n      stack: err.stack,\n    };\n  }\n\n  /**\n   * Moves an element in an array *in place*.\n   * @param {Array<*>} array Array to modify\n   * @param {*} element Element to move\n   * @param {number} newIndex Index or offset to move the element to\n   * @param {boolean} [offset=false] Move the element by an offset amount rather than to a set index\n   * @returns {number}\n   * @private\n   */\n  static moveElementInArray(array, element, newIndex, offset = false) {\n    const index = array.indexOf(element);\n    newIndex = (offset ? index : 0) + newIndex;\n    if (newIndex > -1 && newIndex < array.length) {\n      const removedElement = array.splice(index, 1)[0];\n      array.splice(newIndex, 0, removedElement);\n    }\n    return array.indexOf(element);\n  }\n\n  /**\n   * Verifies the provided data is a string, otherwise throws provided error.\n   * @param {string} data The string resolvable to resolve\n   * @param {Function} [error] The Error constructor to instantiate. Defaults to Error\n   * @param {string} [errorMessage] The error message to throw with. Defaults to \"Expected string, got <data> instead.\"\n   * @param {boolean} [allowEmpty=true] Whether an empty string should be allowed\n   * @returns {string}\n   */\n  static verifyString(\n    data,\n    error = Error,\n    errorMessage = `Expected a string, got ${data} instead.`,\n    allowEmpty = true,\n  ) {\n    if (typeof data !== 'string') throw new error(errorMessage);\n    if (!allowEmpty && data.length === 0) throw new error(errorMessage);\n    return data;\n  }\n\n  /**\n   * Can be a number, hex string, an RGB array like:\n   * ```js\n   * [255, 0, 255] // purple\n   * ```\n   * or one of the following strings:\n   * - `DEFAULT`\n   * - `WHITE`\n   * - `AQUA`\n   * - `GREEN`\n   * - `BLUE`\n   * - `YELLOW`\n   * - `PURPLE`\n   * - `LUMINOUS_VIVID_PINK`\n   * - `FUCHSIA`\n   * - `GOLD`\n   * - `ORANGE`\n   * - `RED`\n   * - `GREY`\n   * - `NAVY`\n   * - `DARK_AQUA`\n   * - `DARK_GREEN`\n   * - `DARK_BLUE`\n   * - `DARK_PURPLE`\n   * - `DARK_VIVID_PINK`\n   * - `DARK_GOLD`\n   * - `DARK_ORANGE`\n   * - `DARK_RED`\n   * - `DARK_GREY`\n   * - `DARKER_GREY`\n   * - `LIGHT_GREY`\n   * - `DARK_NAVY`\n   * - `BLURPLE`\n   * - `GREYPLE`\n   * - `DARK_BUT_NOT_BLACK`\n   * - `NOT_QUITE_BLACK`\n   * - `RANDOM`\n   * @typedef {string|number|number[]} ColorResolvable\n   */\n\n  /**\n   * Resolves a ColorResolvable into a color number.\n   * @param {ColorResolvable} color Color to resolve\n   * @returns {number} A color\n   */\n  static resolveColor(color) {\n    if (typeof color === 'string') {\n      if (color === 'RANDOM') return Math.floor(Math.random() * (0xffffff + 1));\n      if (color === 'DEFAULT') return 0;\n      color = Colors[color] ?? parseInt(color.replace('#', ''), 16);\n    } else if (Array.isArray(color)) {\n      color = (color[0] << 16) + (color[1] << 8) + color[2];\n    }\n\n    if (color < 0 || color > 0xffffff) throw new RangeError('COLOR_RANGE');\n    else if (Number.isNaN(color)) throw new TypeError('COLOR_CONVERT');\n\n    return color;\n  }\n\n  /**\n   * Sorts by Discord's position and id.\n   * @param  {Collection} collection Collection of objects to sort\n   * @returns {Collection}\n   */\n  static discordSort(collection) {\n    return collection.sorted(\n      (a, b) =>\n        a.rawPosition - b.rawPosition ||\n        parseInt(b.id.slice(0, -10)) - parseInt(a.id.slice(0, -10)) ||\n        parseInt(b.id.slice(10)) - parseInt(a.id.slice(10)),\n    );\n  }\n\n  /**\n   * Sets the position of a Channel or Role.\n   * @param {Channel|Role} item Object to set the position of\n   * @param {number} position New position for the object\n   * @param {boolean} relative Whether `position` is relative to its current position\n   * @param {Collection<string, Channel|Role>} sorted A collection of the objects sorted properly\n   * @param {APIRouter} route Route to call PATCH on\n   * @param {string} [reason] Reason for the change\n   * @returns {Promise<Channel[]|Role[]>} Updated item list, with `id` and `position` properties\n   * @private\n   */\n  static async setPosition(item, position, relative, sorted, route, reason) {\n    let updatedItems = [...sorted.values()];\n    Util.moveElementInArray(updatedItems, item, position, relative);\n    updatedItems = updatedItems.map((r, i) => ({ id: r.id, position: i }));\n    await route.patch({ data: updatedItems, reason });\n    return updatedItems;\n  }\n\n  /**\n   * Alternative to Node's `path.basename`, removing query string after the extension if it exists.\n   * @param {string} path Path to get the basename of\n   * @param {string} [ext] File extension to remove\n   * @returns {string} Basename of the path\n   * @private\n   */\n  static basename(path, ext) {\n    const res = parse(path);\n    return ext && res.ext.startsWith(ext) ? res.name : res.base.split('?')[0];\n  }\n\n  /**\n   * Transforms a snowflake from a decimal string to a bit string.\n   * @param  {Snowflake} num Snowflake to be transformed\n   * @returns {string}\n   * @private\n   */\n  static idToBinary(num) {\n    let bin = '';\n    let high = parseInt(num.slice(0, -10)) || 0;\n    let low = parseInt(num.slice(-10));\n    while (low > 0 || high > 0) {\n      bin = String(low & 1) + bin;\n      low = Math.floor(low / 2);\n      if (high > 0) {\n        low += 5000000000 * (high % 2);\n        high = Math.floor(high / 2);\n      }\n    }\n    return bin;\n  }\n\n  /**\n   * Transforms a snowflake from a bit string to a decimal string.\n   * @param  {string} num Bit string to be transformed\n   * @returns {Snowflake}\n   * @private\n   */\n  static binaryToId(num) {\n    let dec = '';\n\n    while (num.length > 50) {\n      const high = parseInt(num.slice(0, -32), 2);\n      const low = parseInt((high % 10).toString(2) + num.slice(-32), 2);\n\n      dec = (low % 10).toString() + dec;\n      num =\n        Math.floor(high / 10).toString(2) +\n        Math.floor(low / 10)\n          .toString(2)\n          .padStart(32, '0');\n    }\n\n    num = parseInt(num, 2);\n    while (num > 0) {\n      dec = (num % 10).toString() + dec;\n      num = Math.floor(num / 10);\n    }\n\n    return dec;\n  }\n\n  /**\n   * Breaks user, role and everyone/here mentions by adding a zero width space after every @ character\n   * @param {string} str The string to sanitize\n   * @returns {string}\n   */\n  static removeMentions(str) {\n    return str.replace(/@/g, '@\\u200b');\n  }\n\n  /**\n   * The content to have all mentions replaced by the equivalent text.\n   * @param {string} str The string to be converted\n   * @param {Channel} channel The channel the string was sent in\n   * @returns {string}\n   */\n  static cleanContent(str, channel) {\n    str = str\n      .replace(/<@!?[0-9]+>/g, input => {\n        const id = input.replace(/<|!|>|@/g, '');\n        if (channel.type === 'DM') {\n          const user = channel.client.users.cache.get(id);\n          return user ? Util.removeMentions(`@${user.username}`) : input;\n        }\n\n        const member = channel.guild.members.cache.get(id);\n        if (member) {\n          return Util.removeMentions(`@${member.displayName}`);\n        } else {\n          const user = channel.client.users.cache.get(id);\n          return user ? Util.removeMentions(`@${user.username}`) : input;\n        }\n      })\n      .replace(/<#[0-9]+>/g, input => {\n        const mentionedChannel = channel.client.channels.cache.get(input.replace(/<|#|>/g, ''));\n        return mentionedChannel ? `#${mentionedChannel.name}` : input;\n      })\n      .replace(/<@&[0-9]+>/g, input => {\n        if (channel.type === 'DM') return input;\n        const role = channel.guild.roles.cache.get(input.replace(/<|@|>|&/g, ''));\n        return role ? `@${role.name}` : input;\n      });\n    return str;\n  }\n\n  /**\n   * The content to put in a codeblock with all codeblock fences replaced by the equivalent backticks.\n   * @param {string} text The string to be converted\n   * @returns {string}\n   */\n  static cleanCodeBlockContent(text) {\n    return text.replace(/```/g, '`\\u200b``');\n  }\n\n  /**\n   * Creates a Promise that resolves after a specified duration.\n   * @param {number} ms How long to wait before resolving (in milliseconds)\n   * @returns {Promise<void>}\n   * @private\n   */\n  static delayFor(ms) {\n    return new Promise(resolve => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  /**\n   * Creates a sweep filter that sweeps archived threads\n   * @param {number} [lifetime=14400] How long a thread has to be archived to be valid for sweeping\n   * @returns {SweepFilter}\n   */\n  static archivedThreadSweepFilter(lifetime = 14400) {\n    const filter = __webpack_require__(/*! ./LimitedCollection */ \"./node_modules/discord.js/src/util/LimitedCollection.js\").filterByLifetime({\n      lifetime,\n      getComparisonTimestamp: e => e.archiveTimestamp,\n      excludeFromSweep: e => !e.archived,\n    });\n    filter.isDefault = true;\n    return filter;\n  }\n}\n\nmodule.exports = Util;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/src/util/Util.js?");

/***/ }),

/***/ "./node_modules/dotenv/lib/main.js":
/*!*****************************************!*\
  !*** ./node_modules/dotenv/lib/main.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst os = __webpack_require__(/*! os */ \"os\")\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/dotenv/lib/main.js?");

/***/ }),

/***/ "./node_modules/fast-safe-stringify/index.js":
/*!***************************************************!*\
  !*** ./node_modules/fast-safe-stringify/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/fast-safe-stringify/index.js?");

/***/ }),

/***/ "./node_modules/ffmpeg-static/index.js":
/*!*********************************************!*\
  !*** ./node_modules/ffmpeg-static/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (process.env.FFMPEG_BIN) {\n  module.exports = process.env.FFMPEG_BIN\n} else {\n  var os = __webpack_require__(/*! os */ \"os\")\n  var path = __webpack_require__(/*! path */ \"path\")\n\n  var binaries = Object.assign(Object.create(null), {\n    darwin: ['x64', 'arm64'],\n    freebsd: ['x64'],\n    linux: ['x64', 'ia32', 'arm64', 'arm'],\n    win32: ['x64', 'ia32']\n  })\n\n  var platform = process.env.npm_config_platform || os.platform()\n  var arch = process.env.npm_config_arch || os.arch()\n\n  var ffmpegPath = path.join(\n    __dirname,\n    platform === 'win32' ? 'ffmpeg.exe' : 'ffmpeg'\n  )\n\n  if (!binaries[platform] || binaries[platform].indexOf(arch) === -1) {\n    ffmpegPath = null\n  }\n\n  module.exports = ffmpegPath\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ffmpeg-static/index.js?");

/***/ }),

/***/ "./node_modules/formidable/lib/file.js":
/*!*********************************************!*\
  !*** ./node_modules/formidable/lib/file.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var require;if (global.GENTLY) require = GENTLY.hijack(__webpack_require__(\"./node_modules/formidable/lib sync recursive\"));\n\nvar util = __webpack_require__(/*! util */ \"util\"),\n    fs = __webpack_require__(/*! fs */ \"fs\"),\n    EventEmitter = __webpack_require__(/*! events */ \"events\").EventEmitter,\n    crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\nfunction File(properties) {\n  EventEmitter.call(this);\n\n  this.size = 0;\n  this.path = null;\n  this.name = null;\n  this.type = null;\n  this.hash = null;\n  this.lastModifiedDate = null;\n\n  this._writeStream = null;\n  \n  for (var key in properties) {\n    this[key] = properties[key];\n  }\n\n  if(typeof this.hash === 'string') {\n    this.hash = crypto.createHash(properties.hash);\n  } else {\n    this.hash = null;\n  }\n}\nmodule.exports = File;\nutil.inherits(File, EventEmitter);\n\nFile.prototype.open = function() {\n  this._writeStream = new fs.WriteStream(this.path);\n};\n\nFile.prototype.toJSON = function() {\n  var json = {\n    size: this.size,\n    path: this.path,\n    name: this.name,\n    type: this.type,\n    mtime: this.lastModifiedDate,\n    length: this.length,\n    filename: this.filename,\n    mime: this.mime\n  };\n  if (this.hash && this.hash != \"\") {\n    json.hash = this.hash;\n  }\n  return json;\n};\n\nFile.prototype.write = function(buffer, cb) {\n  var self = this;\n  if (self.hash) {\n    self.hash.update(buffer);\n  }\n\n  if (this._writeStream.closed) {\n    return cb();\n  }\n\n  this._writeStream.write(buffer, function() {\n    self.lastModifiedDate = new Date();\n    self.size += buffer.length;\n    self.emit('progress', self.size);\n    cb();\n  });\n};\n\nFile.prototype.end = function(cb) {\n  var self = this;\n  if (self.hash) {\n    self.hash = self.hash.digest('hex');\n  }\n  this._writeStream.end(function() {\n    self.emit('end');\n    cb();\n  });\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/file.js?");

/***/ }),

/***/ "./node_modules/formidable/lib/incoming_form.js":
/*!******************************************************!*\
  !*** ./node_modules/formidable/lib/incoming_form.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var require;if (global.GENTLY) require = GENTLY.hijack(__webpack_require__(\"./node_modules/formidable/lib sync recursive\"));\n\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar util = __webpack_require__(/*! util */ \"util\"),\n    path = __webpack_require__(/*! path */ \"path\"),\n    File = __webpack_require__(/*! ./file */ \"./node_modules/formidable/lib/file.js\"),\n    MultipartParser = __webpack_require__(/*! ./multipart_parser */ \"./node_modules/formidable/lib/multipart_parser.js\").MultipartParser,\n    QuerystringParser = __webpack_require__(/*! ./querystring_parser */ \"./node_modules/formidable/lib/querystring_parser.js\").QuerystringParser,\n    OctetParser       = __webpack_require__(/*! ./octet_parser */ \"./node_modules/formidable/lib/octet_parser.js\").OctetParser,\n    JSONParser = __webpack_require__(/*! ./json_parser */ \"./node_modules/formidable/lib/json_parser.js\").JSONParser,\n    StringDecoder = __webpack_require__(/*! string_decoder */ \"string_decoder\").StringDecoder,\n    EventEmitter = __webpack_require__(/*! events */ \"events\").EventEmitter,\n    Stream = __webpack_require__(/*! stream */ \"stream\").Stream,\n    os = __webpack_require__(/*! os */ \"os\");\n\nfunction IncomingForm(opts) {\n  if (!(this instanceof IncomingForm)) return new IncomingForm(opts);\n  EventEmitter.call(this);\n\n  opts=opts||{};\n\n  this.error = null;\n  this.ended = false;\n\n  this.maxFields = opts.maxFields || 1000;\n  this.maxFieldsSize = opts.maxFieldsSize || 20 * 1024 * 1024;\n  this.maxFileSize = opts.maxFileSize || 200 * 1024 * 1024;\n  this.keepExtensions = opts.keepExtensions || false;\n  this.uploadDir = opts.uploadDir || (os.tmpdir && os.tmpdir()) || os.tmpDir();\n  this.encoding = opts.encoding || 'utf-8';\n  this.headers = null;\n  this.type = null;\n  this.hash = opts.hash || false;\n  this.multiples = opts.multiples || false;\n\n  this.bytesReceived = null;\n  this.bytesExpected = null;\n\n  this._parser = null;\n  this._flushing = 0;\n  this._fieldsSize = 0;\n  this._fileSize = 0;\n  this.openedFiles = [];\n\n  return this;\n}\nutil.inherits(IncomingForm, EventEmitter);\nexports.IncomingForm = IncomingForm;\n\nIncomingForm.prototype.parse = function(req, cb) {\n  this.pause = function() {\n    try {\n      req.pause();\n    } catch (err) {\n      // the stream was destroyed\n      if (!this.ended) {\n        // before it was completed, crash & burn\n        this._error(err);\n      }\n      return false;\n    }\n    return true;\n  };\n\n  this.resume = function() {\n    try {\n      req.resume();\n    } catch (err) {\n      // the stream was destroyed\n      if (!this.ended) {\n        // before it was completed, crash & burn\n        this._error(err);\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // Setup callback first, so we don't miss anything from data events emitted\n  // immediately.\n  if (cb) {\n    var fields = {}, files = {};\n    this\n      .on('field', function(name, value) {\n        fields[name] = value;\n      })\n      .on('file', function(name, file) {\n        if (this.multiples) {\n          if (files[name]) {\n            if (!Array.isArray(files[name])) {\n              files[name] = [files[name]];\n            }\n            files[name].push(file);\n          } else {\n            files[name] = file;\n          }\n        } else {\n          files[name] = file;\n        }\n      })\n      .on('error', function(err) {\n        cb(err, fields, files);\n      })\n      .on('end', function() {\n        cb(null, fields, files);\n      });\n  }\n\n  // Parse headers and setup the parser, ready to start listening for data.\n  this.writeHeaders(req.headers);\n\n  // Start listening for data.\n  var self = this;\n  req\n    .on('error', function(err) {\n      self._error(err);\n    })\n    .on('aborted', function() {\n      self.emit('aborted');\n      self._error(new Error('Request aborted'));\n    })\n    .on('data', function(buffer) {\n      self.write(buffer);\n    })\n    .on('end', function() {\n      if (self.error) {\n        return;\n      }\n\n      var err = self._parser.end();\n      if (err) {\n        self._error(err);\n      }\n    });\n\n  return this;\n};\n\nIncomingForm.prototype.writeHeaders = function(headers) {\n  this.headers = headers;\n  this._parseContentLength();\n  this._parseContentType();\n};\n\nIncomingForm.prototype.write = function(buffer) {\n  if (this.error) {\n    return;\n  }\n  if (!this._parser) {\n    this._error(new Error('uninitialized parser'));\n    return;\n  }\n\n  this.bytesReceived += buffer.length;\n  this.emit('progress', this.bytesReceived, this.bytesExpected);\n\n  var bytesParsed = this._parser.write(buffer);\n  if (bytesParsed !== buffer.length) {\n    this._error(new Error('parser error, '+bytesParsed+' of '+buffer.length+' bytes parsed'));\n  }\n\n  return bytesParsed;\n};\n\nIncomingForm.prototype.pause = function() {\n  // this does nothing, unless overwritten in IncomingForm.parse\n  return false;\n};\n\nIncomingForm.prototype.resume = function() {\n  // this does nothing, unless overwritten in IncomingForm.parse\n  return false;\n};\n\nIncomingForm.prototype.onPart = function(part) {\n  // this method can be overwritten by the user\n  this.handlePart(part);\n};\n\nIncomingForm.prototype.handlePart = function(part) {\n  var self = this;\n\n  // This MUST check exactly for undefined. You can not change it to !part.filename.\n  if (part.filename === undefined) {\n    var value = ''\n      , decoder = new StringDecoder(this.encoding);\n\n    part.on('data', function(buffer) {\n      self._fieldsSize += buffer.length;\n      if (self._fieldsSize > self.maxFieldsSize) {\n        self._error(new Error('maxFieldsSize exceeded, received '+self._fieldsSize+' bytes of field data'));\n        return;\n      }\n      value += decoder.write(buffer);\n    });\n\n    part.on('end', function() {\n      self.emit('field', part.name, value);\n    });\n    return;\n  }\n\n  this._flushing++;\n\n  var file = new File({\n    path: this._uploadPath(part.filename),\n    name: part.filename,\n    type: part.mime,\n    hash: self.hash\n  });\n\n  this.emit('fileBegin', part.name, file);\n\n  file.open();\n  this.openedFiles.push(file);\n\n  part.on('data', function(buffer) {\n    self._fileSize += buffer.length;\n    if (self._fileSize > self.maxFileSize) {\n      self._error(new Error('maxFileSize exceeded, received '+self._fileSize+' bytes of file data'));\n      return;\n    }\n    if (buffer.length == 0) {\n      return;\n    }\n    self.pause();\n    file.write(buffer, function() {\n      self.resume();\n    });\n  });\n\n  part.on('end', function() {\n    file.end(function() {\n      self._flushing--;\n      self.emit('file', part.name, file);\n      self._maybeEnd();\n    });\n  });\n};\n\nfunction dummyParser(self) {\n  return {\n    end: function () {\n      self.ended = true;\n      self._maybeEnd();\n      return null;\n    }\n  };\n}\n\nIncomingForm.prototype._parseContentType = function() {\n  if (this.bytesExpected === 0) {\n    this._parser = dummyParser(this);\n    return;\n  }\n\n  if (!this.headers['content-type']) {\n    this._error(new Error('bad content-type header, no content-type'));\n    return;\n  }\n\n  if (this.headers['content-type'].match(/octet-stream/i)) {\n    this._initOctetStream();\n    return;\n  }\n\n  if (this.headers['content-type'].match(/urlencoded/i)) {\n    this._initUrlencoded();\n    return;\n  }\n\n  if (this.headers['content-type'].match(/multipart/i)) {\n    var m = this.headers['content-type'].match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n    if (m) {\n      this._initMultipart(m[1] || m[2]);\n    } else {\n      this._error(new Error('bad content-type header, no multipart boundary'));\n    }\n    return;\n  }\n\n  if (this.headers['content-type'].match(/json/i)) {\n    this._initJSONencoded();\n    return;\n  }\n\n  this._error(new Error('bad content-type header, unknown content-type: '+this.headers['content-type']));\n};\n\nIncomingForm.prototype._error = function(err) {\n  if (this.error || this.ended) {\n    return;\n  }\n\n  this.error = err;\n  this.emit('error', err);\n\n  if (Array.isArray(this.openedFiles)) {\n    this.openedFiles.forEach(function(file) {\n      file._writeStream.destroy();\n      setTimeout(fs.unlink, 0, file.path, function(error) { });\n    });\n  }\n};\n\nIncomingForm.prototype._parseContentLength = function() {\n  this.bytesReceived = 0;\n  if (this.headers['content-length']) {\n    this.bytesExpected = parseInt(this.headers['content-length'], 10);\n  } else if (this.headers['transfer-encoding'] === undefined) {\n    this.bytesExpected = 0;\n  }\n\n  if (this.bytesExpected !== null) {\n    this.emit('progress', this.bytesReceived, this.bytesExpected);\n  }\n};\n\nIncomingForm.prototype._newParser = function() {\n  return new MultipartParser();\n};\n\nIncomingForm.prototype._initMultipart = function(boundary) {\n  this.type = 'multipart';\n\n  var parser = new MultipartParser(),\n      self = this,\n      headerField,\n      headerValue,\n      part;\n\n  parser.initWithBoundary(boundary);\n\n  parser.onPartBegin = function() {\n    part = new Stream();\n    part.readable = true;\n    part.headers = {};\n    part.name = null;\n    part.filename = null;\n    part.mime = null;\n\n    part.transferEncoding = 'binary';\n    part.transferBuffer = '';\n\n    headerField = '';\n    headerValue = '';\n  };\n\n  parser.onHeaderField = function(b, start, end) {\n    headerField += b.toString(self.encoding, start, end);\n  };\n\n  parser.onHeaderValue = function(b, start, end) {\n    headerValue += b.toString(self.encoding, start, end);\n  };\n\n  parser.onHeaderEnd = function() {\n    headerField = headerField.toLowerCase();\n    part.headers[headerField] = headerValue;\n\n    // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n    var m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))/i);\n    if (headerField == 'content-disposition') {\n      if (m) {\n        part.name = m[2] || m[3] || '';\n      }\n\n      part.filename = self._fileName(headerValue);\n    } else if (headerField == 'content-type') {\n      part.mime = headerValue;\n    } else if (headerField == 'content-transfer-encoding') {\n      part.transferEncoding = headerValue.toLowerCase();\n    }\n\n    headerField = '';\n    headerValue = '';\n  };\n\n  parser.onHeadersEnd = function() {\n    switch(part.transferEncoding){\n      case 'binary':\n      case '7bit':\n      case '8bit':\n      parser.onPartData = function(b, start, end) {\n        part.emit('data', b.slice(start, end));\n      };\n\n      parser.onPartEnd = function() {\n        part.emit('end');\n      };\n      break;\n\n      case 'base64':\n      parser.onPartData = function(b, start, end) {\n        part.transferBuffer += b.slice(start, end).toString('ascii');\n\n        /*\n        four bytes (chars) in base64 converts to three bytes in binary\n        encoding. So we should always work with a number of bytes that\n        can be divided by 4, it will result in a number of buytes that\n        can be divided vy 3.\n        */\n        var offset = parseInt(part.transferBuffer.length / 4, 10) * 4;\n        part.emit('data', new Buffer(part.transferBuffer.substring(0, offset), 'base64'));\n        part.transferBuffer = part.transferBuffer.substring(offset);\n      };\n\n      parser.onPartEnd = function() {\n        part.emit('data', new Buffer(part.transferBuffer, 'base64'));\n        part.emit('end');\n      };\n      break;\n\n      default:\n      return self._error(new Error('unknown transfer-encoding'));\n    }\n\n    self.onPart(part);\n  };\n\n\n  parser.onEnd = function() {\n    self.ended = true;\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._fileName = function(headerValue) {\n  // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n  var m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))($|;\\s)/i);\n  if (!m) return;\n\n  var match = m[2] || m[3] || '';\n  var filename = match.substr(match.lastIndexOf('\\\\') + 1);\n  filename = filename.replace(/%22/g, '\"');\n  filename = filename.replace(/&#([\\d]{4});/g, function(m, code) {\n    return String.fromCharCode(code);\n  });\n  return filename;\n};\n\nIncomingForm.prototype._initUrlencoded = function() {\n  this.type = 'urlencoded';\n\n  var parser = new QuerystringParser(this.maxFields)\n    , self = this;\n\n  parser.onField = function(key, val) {\n    self.emit('field', key, val);\n  };\n\n  parser.onEnd = function() {\n    self.ended = true;\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._initOctetStream = function() {\n  this.type = 'octet-stream';\n  var filename = this.headers['x-file-name'];\n  var mime = this.headers['content-type'];\n\n  var file = new File({\n    path: this._uploadPath(filename),\n    name: filename,\n    type: mime\n  });\n\n  this.emit('fileBegin', filename, file);\n  file.open();\n  this.openedFiles.push(file);\n  this._flushing++;\n\n  var self = this;\n\n  self._parser = new OctetParser();\n\n  //Keep track of writes that haven't finished so we don't emit the file before it's done being written\n  var outstandingWrites = 0;\n\n  self._parser.on('data', function(buffer){\n    self.pause();\n    outstandingWrites++;\n\n    file.write(buffer, function() {\n      outstandingWrites--;\n      self.resume();\n\n      if(self.ended){\n        self._parser.emit('doneWritingFile');\n      }\n    });\n  });\n\n  self._parser.on('end', function(){\n    self._flushing--;\n    self.ended = true;\n\n    var done = function(){\n      file.end(function() {\n        self.emit('file', 'file', file);\n        self._maybeEnd();\n      });\n    };\n\n    if(outstandingWrites === 0){\n      done();\n    } else {\n      self._parser.once('doneWritingFile', done);\n    }\n  });\n};\n\nIncomingForm.prototype._initJSONencoded = function() {\n  this.type = 'json';\n\n  var parser = new JSONParser(this)\n    , self = this;\n\n  parser.onField = function(key, val) {\n    self.emit('field', key, val);\n  };\n\n  parser.onEnd = function() {\n    self.ended = true;\n    self._maybeEnd();\n  };\n\n  this._parser = parser;\n};\n\nIncomingForm.prototype._uploadPath = function(filename) {\n  var buf = crypto.randomBytes(16);\n  var name = 'upload_' + buf.toString('hex');\n\n  if (this.keepExtensions) {\n    var ext = path.extname(filename);\n    ext     = ext.replace(/(\\.[a-z0-9]+).*/i, '$1');\n\n    name += ext;\n  }\n\n  return path.join(this.uploadDir, name);\n};\n\nIncomingForm.prototype._maybeEnd = function() {\n  if (!this.ended || this._flushing || this.error) {\n    return;\n  }\n\n  this.emit('end');\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/incoming_form.js?");

/***/ }),

/***/ "./node_modules/formidable/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/formidable/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var IncomingForm = __webpack_require__(/*! ./incoming_form */ \"./node_modules/formidable/lib/incoming_form.js\").IncomingForm;\nIncomingForm.IncomingForm = IncomingForm;\nmodule.exports = IncomingForm;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/index.js?");

/***/ }),

/***/ "./node_modules/formidable/lib/json_parser.js":
/*!****************************************************!*\
  !*** ./node_modules/formidable/lib/json_parser.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var require;if (global.GENTLY) require = GENTLY.hijack(__webpack_require__(\"./node_modules/formidable/lib sync recursive\"));\n\nvar Buffer = __webpack_require__(/*! buffer */ \"buffer\").Buffer;\n\nfunction JSONParser(parent) {\n  this.parent = parent;\n  this.chunks = [];\n  this.bytesWritten = 0;\n}\nexports.JSONParser = JSONParser;\n\nJSONParser.prototype.write = function(buffer) {\n  this.bytesWritten += buffer.length;\n  this.chunks.push(buffer);\n  return buffer.length;\n};\n\nJSONParser.prototype.end = function() {\n  try {\n    var fields = JSON.parse(Buffer.concat(this.chunks));\n    for (var field in fields) {\n      this.onField(field, fields[field]);\n    }\n  } catch (e) {\n    this.parent.emit('error', e);\n  }\n  this.data = null;\n\n  this.onEnd();\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/json_parser.js?");

/***/ }),

/***/ "./node_modules/formidable/lib/multipart_parser.js":
/*!*********************************************************!*\
  !*** ./node_modules/formidable/lib/multipart_parser.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! buffer */ \"buffer\").Buffer,\n    s = 0,\n    S =\n    { PARSER_UNINITIALIZED: s++,\n      START: s++,\n      START_BOUNDARY: s++,\n      HEADER_FIELD_START: s++,\n      HEADER_FIELD: s++,\n      HEADER_VALUE_START: s++,\n      HEADER_VALUE: s++,\n      HEADER_VALUE_ALMOST_DONE: s++,\n      HEADERS_ALMOST_DONE: s++,\n      PART_DATA_START: s++,\n      PART_DATA: s++,\n      PART_END: s++,\n      END: s++\n    },\n\n    f = 1,\n    F =\n    { PART_BOUNDARY: f,\n      LAST_BOUNDARY: f *= 2\n    },\n\n    LF = 10,\n    CR = 13,\n    SPACE = 32,\n    HYPHEN = 45,\n    COLON = 58,\n    A = 97,\n    Z = 122,\n\n    lower = function(c) {\n      return c | 0x20;\n    };\n\nfor (s in S) {\n  exports[s] = S[s];\n}\n\nfunction MultipartParser() {\n  this.boundary = null;\n  this.boundaryChars = null;\n  this.lookbehind = null;\n  this.state = S.PARSER_UNINITIALIZED;\n\n  this.index = null;\n  this.flags = 0;\n}\nexports.MultipartParser = MultipartParser;\n\nMultipartParser.stateToString = function(stateNumber) {\n  for (var state in S) {\n    var number = S[state];\n    if (number === stateNumber) return state;\n  }\n};\n\nMultipartParser.prototype.initWithBoundary = function(str) {\n  this.boundary = new Buffer(str.length+4);\n  this.boundary.write('\\r\\n--', 0);\n  this.boundary.write(str, 4);\n  this.lookbehind = new Buffer(this.boundary.length+8);\n  this.state = S.START;\n\n  this.boundaryChars = {};\n  for (var i = 0; i < this.boundary.length; i++) {\n    this.boundaryChars[this.boundary[i]] = true;\n  }\n};\n\nMultipartParser.prototype.write = function(buffer) {\n  var self = this,\n      i = 0,\n      len = buffer.length,\n      prevIndex = this.index,\n      index = this.index,\n      state = this.state,\n      flags = this.flags,\n      lookbehind = this.lookbehind,\n      boundary = this.boundary,\n      boundaryChars = this.boundaryChars,\n      boundaryLength = this.boundary.length,\n      boundaryEnd = boundaryLength - 1,\n      bufferLength = buffer.length,\n      c,\n      cl,\n\n      mark = function(name) {\n        self[name+'Mark'] = i;\n      },\n      clear = function(name) {\n        delete self[name+'Mark'];\n      },\n      callback = function(name, buffer, start, end) {\n        if (start !== undefined && start === end) {\n          return;\n        }\n\n        var callbackSymbol = 'on'+name.substr(0, 1).toUpperCase()+name.substr(1);\n        if (callbackSymbol in self) {\n          self[callbackSymbol](buffer, start, end);\n        }\n      },\n      dataCallback = function(name, clear) {\n        var markSymbol = name+'Mark';\n        if (!(markSymbol in self)) {\n          return;\n        }\n\n        if (!clear) {\n          callback(name, buffer, self[markSymbol], buffer.length);\n          self[markSymbol] = 0;\n        } else {\n          callback(name, buffer, self[markSymbol], i);\n          delete self[markSymbol];\n        }\n      };\n\n  for (i = 0; i < len; i++) {\n    c = buffer[i];\n    switch (state) {\n      case S.PARSER_UNINITIALIZED:\n        return i;\n      case S.START:\n        index = 0;\n        state = S.START_BOUNDARY;\n      case S.START_BOUNDARY:\n        if (index == boundary.length - 2) {\n          if (c == HYPHEN) {\n            flags |= F.LAST_BOUNDARY;\n          } else if (c != CR) {\n            return i;\n          }\n          index++;\n          break;\n        } else if (index - 1 == boundary.length - 2) {\n          if (flags & F.LAST_BOUNDARY && c == HYPHEN){\n            callback('end');\n            state = S.END;\n            flags = 0;\n          } else if (!(flags & F.LAST_BOUNDARY) && c == LF) {\n            index = 0;\n            callback('partBegin');\n            state = S.HEADER_FIELD_START;\n          } else {\n            return i;\n          }\n          break;\n        }\n\n        if (c != boundary[index+2]) {\n          index = -2;\n        }\n        if (c == boundary[index+2]) {\n          index++;\n        }\n        break;\n      case S.HEADER_FIELD_START:\n        state = S.HEADER_FIELD;\n        mark('headerField');\n        index = 0;\n      case S.HEADER_FIELD:\n        if (c == CR) {\n          clear('headerField');\n          state = S.HEADERS_ALMOST_DONE;\n          break;\n        }\n\n        index++;\n        if (c == HYPHEN) {\n          break;\n        }\n\n        if (c == COLON) {\n          if (index == 1) {\n            // empty header field\n            return i;\n          }\n          dataCallback('headerField', true);\n          state = S.HEADER_VALUE_START;\n          break;\n        }\n\n        cl = lower(c);\n        if (cl < A || cl > Z) {\n          return i;\n        }\n        break;\n      case S.HEADER_VALUE_START:\n        if (c == SPACE) {\n          break;\n        }\n\n        mark('headerValue');\n        state = S.HEADER_VALUE;\n      case S.HEADER_VALUE:\n        if (c == CR) {\n          dataCallback('headerValue', true);\n          callback('headerEnd');\n          state = S.HEADER_VALUE_ALMOST_DONE;\n        }\n        break;\n      case S.HEADER_VALUE_ALMOST_DONE:\n        if (c != LF) {\n          return i;\n        }\n        state = S.HEADER_FIELD_START;\n        break;\n      case S.HEADERS_ALMOST_DONE:\n        if (c != LF) {\n          return i;\n        }\n\n        callback('headersEnd');\n        state = S.PART_DATA_START;\n        break;\n      case S.PART_DATA_START:\n        state = S.PART_DATA;\n        mark('partData');\n      case S.PART_DATA:\n        prevIndex = index;\n\n        if (index === 0) {\n          // boyer-moore derrived algorithm to safely skip non-boundary data\n          i += boundaryEnd;\n          while (i < bufferLength && !(buffer[i] in boundaryChars)) {\n            i += boundaryLength;\n          }\n          i -= boundaryEnd;\n          c = buffer[i];\n        }\n\n        if (index < boundary.length) {\n          if (boundary[index] == c) {\n            if (index === 0) {\n              dataCallback('partData', true);\n            }\n            index++;\n          } else {\n            index = 0;\n          }\n        } else if (index == boundary.length) {\n          index++;\n          if (c == CR) {\n            // CR = part boundary\n            flags |= F.PART_BOUNDARY;\n          } else if (c == HYPHEN) {\n            // HYPHEN = end boundary\n            flags |= F.LAST_BOUNDARY;\n          } else {\n            index = 0;\n          }\n        } else if (index - 1 == boundary.length)  {\n          if (flags & F.PART_BOUNDARY) {\n            index = 0;\n            if (c == LF) {\n              // unset the PART_BOUNDARY flag\n              flags &= ~F.PART_BOUNDARY;\n              callback('partEnd');\n              callback('partBegin');\n              state = S.HEADER_FIELD_START;\n              break;\n            }\n          } else if (flags & F.LAST_BOUNDARY) {\n            if (c == HYPHEN) {\n              callback('partEnd');\n              callback('end');\n              state = S.END;\n              flags = 0;\n            } else {\n              index = 0;\n            }\n          } else {\n            index = 0;\n          }\n        }\n\n        if (index > 0) {\n          // when matching a possible boundary, keep a lookbehind reference\n          // in case it turns out to be a false lead\n          lookbehind[index-1] = c;\n        } else if (prevIndex > 0) {\n          // if our boundary turned out to be rubbish, the captured lookbehind\n          // belongs to partData\n          callback('partData', lookbehind, 0, prevIndex);\n          prevIndex = 0;\n          mark('partData');\n\n          // reconsider the current character even so it interrupted the sequence\n          // it could be the beginning of a new sequence\n          i--;\n        }\n\n        break;\n      case S.END:\n        break;\n      default:\n        return i;\n    }\n  }\n\n  dataCallback('headerField');\n  dataCallback('headerValue');\n  dataCallback('partData');\n\n  this.index = index;\n  this.state = state;\n  this.flags = flags;\n\n  return len;\n};\n\nMultipartParser.prototype.end = function() {\n  var callback = function(self, name) {\n    var callbackSymbol = 'on'+name.substr(0, 1).toUpperCase()+name.substr(1);\n    if (callbackSymbol in self) {\n      self[callbackSymbol]();\n    }\n  };\n  if ((this.state == S.HEADER_FIELD_START && this.index === 0) ||\n      (this.state == S.PART_DATA && this.index == this.boundary.length)) {\n    callback(this, 'partEnd');\n    callback(this, 'end');\n  } else if (this.state != S.END) {\n    return new Error('MultipartParser.end(): stream ended unexpectedly: ' + this.explain());\n  }\n};\n\nMultipartParser.prototype.explain = function() {\n  return 'state = ' + MultipartParser.stateToString(this.state);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/multipart_parser.js?");

/***/ }),

/***/ "./node_modules/formidable/lib/octet_parser.js":
/*!*****************************************************!*\
  !*** ./node_modules/formidable/lib/octet_parser.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var EventEmitter = __webpack_require__(/*! events */ \"events\").EventEmitter\n\t, util = __webpack_require__(/*! util */ \"util\");\n\nfunction OctetParser(options){\n\tif(!(this instanceof OctetParser)) return new OctetParser(options);\n\tEventEmitter.call(this);\n}\n\nutil.inherits(OctetParser, EventEmitter);\n\nexports.OctetParser = OctetParser;\n\nOctetParser.prototype.write = function(buffer) {\n    this.emit('data', buffer);\n\treturn buffer.length;\n};\n\nOctetParser.prototype.end = function() {\n\tthis.emit('end');\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/octet_parser.js?");

/***/ }),

/***/ "./node_modules/formidable/lib/querystring_parser.js":
/*!***********************************************************!*\
  !*** ./node_modules/formidable/lib/querystring_parser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var require;if (global.GENTLY) require = GENTLY.hijack(__webpack_require__(\"./node_modules/formidable/lib sync recursive\"));\n\n// This is a buffering parser, not quite as nice as the multipart one.\n// If I find time I'll rewrite this to be fully streaming as well\nvar querystring = __webpack_require__(/*! querystring */ \"querystring\");\n\nfunction QuerystringParser(maxKeys) {\n  this.maxKeys = maxKeys;\n  this.buffer = '';\n}\nexports.QuerystringParser = QuerystringParser;\n\nQuerystringParser.prototype.write = function(buffer) {\n  this.buffer += buffer.toString('ascii');\n  return buffer.length;\n};\n\nQuerystringParser.prototype.end = function() {\n  var fields = querystring.parse(this.buffer, '&', '=', { maxKeys: this.maxKeys });\n  for (var field in fields) {\n    this.onField(field, fields[field]);\n  }\n  this.buffer = '';\n\n  this.onEnd();\n};\n\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/querystring_parser.js?");

/***/ }),

/***/ "./node_modules/formidable/lib sync recursive":
/*!*******************************************!*\
  !*** ./node_modules/formidable/lib/ sync ***!
  \*******************************************/
/***/ ((module) => {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/formidable/lib sync recursive\";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/formidable/lib/_sync?");

/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/function-bind/implementation.js?");

/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/function-bind/implementation.js\");\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/function-bind/index.js?");

/***/ }),

/***/ "./node_modules/get-intrinsic/index.js":
/*!*********************************************!*\
  !*** ./node_modules/get-intrinsic/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/has-symbols/index.js\")();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar hasOwn = __webpack_require__(/*! has */ \"./node_modules/has/src/index.js\");\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/get-intrinsic/index.js?");

/***/ }),

/***/ "./node_modules/has-flag/index.js":
/*!****************************************!*\
  !*** ./node_modules/has-flag/index.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/has-flag/index.js?");

/***/ }),

/***/ "./node_modules/has-symbols/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = __webpack_require__(/*! ./shams */ \"./node_modules/has-symbols/shams.js\");\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/has-symbols/index.js?");

/***/ }),

/***/ "./node_modules/has-symbols/shams.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/has-symbols/shams.js?");

/***/ }),

/***/ "./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/has/src/index.js?");

/***/ }),

/***/ "./node_modules/is-obj/index.js":
/*!**************************************!*\
  !*** ./node_modules/is-obj/index.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = value => {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/is-obj/index.js?");

/***/ }),

/***/ "./node_modules/lodash.isequal/index.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash.isequal/index.js ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/lodash.isequal/index.js?");

/***/ }),

/***/ "./node_modules/lru-cache/index.js":
/*!*****************************************!*\
  !*** ./node_modules/lru-cache/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = __webpack_require__(/*! yallist */ \"./node_modules/yallist/yallist.js\")\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/lru-cache/index.js?");

/***/ }),

/***/ "./node_modules/m3u8stream/dist/dash-mpd-parser.js":
/*!*********************************************************!*\
  !*** ./node_modules/m3u8stream/dist/dash-mpd-parser.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst sax_1 = __importDefault(__webpack_require__(/*! sax */ \"./node_modules/sax/lib/sax.js\"));\nconst parse_time_1 = __webpack_require__(/*! ./parse-time */ \"./node_modules/m3u8stream/dist/parse-time.js\");\n/**\n * A wrapper around sax that emits segments.\n */\nclass DashMPDParser extends stream_1.Writable {\n    constructor(targetID) {\n        super();\n        this._parser = sax_1.default.createStream(false, { lowercase: true });\n        this._parser.on('error', this.destroy.bind(this));\n        let lastTag;\n        let currtime = 0;\n        let seq = 0;\n        let segmentTemplate;\n        let timescale, offset, duration, baseURL;\n        let timeline = [];\n        let getSegments = false;\n        let gotSegments = false;\n        let isStatic;\n        let treeLevel;\n        let periodStart;\n        const tmpl = (str) => {\n            const context = {\n                RepresentationID: targetID,\n                Number: seq,\n                Time: currtime,\n            };\n            return str.replace(/\\$(\\w+)\\$/g, (m, p1) => `${context[p1]}`);\n        };\n        this._parser.on('opentag', node => {\n            switch (node.name) {\n                case 'mpd':\n                    currtime =\n                        node.attributes.availabilitystarttime ?\n                            new Date(node.attributes.availabilitystarttime).getTime() : 0;\n                    isStatic = node.attributes.type !== 'dynamic';\n                    break;\n                case 'period':\n                    // Reset everything on <Period> tag.\n                    seq = 0;\n                    timescale = 1000;\n                    duration = 0;\n                    offset = 0;\n                    baseURL = [];\n                    treeLevel = 0;\n                    periodStart = parse_time_1.durationStr(node.attributes.start) || 0;\n                    break;\n                case 'segmentlist':\n                    seq = parseInt(node.attributes.startnumber) || seq;\n                    timescale = parseInt(node.attributes.timescale) || timescale;\n                    duration = parseInt(node.attributes.duration) || duration;\n                    offset = parseInt(node.attributes.presentationtimeoffset) || offset;\n                    break;\n                case 'segmenttemplate':\n                    segmentTemplate = node.attributes;\n                    seq = parseInt(node.attributes.startnumber) || seq;\n                    timescale = parseInt(node.attributes.timescale) || timescale;\n                    break;\n                case 'segmenttimeline':\n                case 'baseurl':\n                    lastTag = node.name;\n                    break;\n                case 's':\n                    timeline.push({\n                        duration: parseInt(node.attributes.d),\n                        repeat: parseInt(node.attributes.r),\n                        time: parseInt(node.attributes.t),\n                    });\n                    break;\n                case 'adaptationset':\n                case 'representation':\n                    treeLevel++;\n                    if (!targetID) {\n                        targetID = node.attributes.id;\n                    }\n                    getSegments = node.attributes.id === `${targetID}`;\n                    if (getSegments) {\n                        if (periodStart) {\n                            currtime += periodStart;\n                        }\n                        if (offset) {\n                            currtime -= offset / timescale * 1000;\n                        }\n                        this.emit('starttime', currtime);\n                    }\n                    break;\n                case 'initialization':\n                    if (getSegments) {\n                        this.emit('item', {\n                            url: baseURL.filter(s => !!s).join('') + node.attributes.sourceurl,\n                            seq: seq,\n                            init: true,\n                            duration: 0,\n                        });\n                    }\n                    break;\n                case 'segmenturl':\n                    if (getSegments) {\n                        gotSegments = true;\n                        let tl = timeline.shift();\n                        let segmentDuration = ((tl === null || tl === void 0 ? void 0 : tl.duration) || duration) / timescale * 1000;\n                        this.emit('item', {\n                            url: baseURL.filter(s => !!s).join('') + node.attributes.media,\n                            seq: seq++,\n                            duration: segmentDuration,\n                        });\n                        currtime += segmentDuration;\n                    }\n                    break;\n            }\n        });\n        const onEnd = () => {\n            if (isStatic) {\n                this.emit('endlist');\n            }\n            if (!getSegments) {\n                this.destroy(Error(`Representation '${targetID}' not found`));\n            }\n            else {\n                this.emit('end');\n            }\n        };\n        this._parser.on('closetag', tagName => {\n            switch (tagName) {\n                case 'adaptationset':\n                case 'representation':\n                    treeLevel--;\n                    if (segmentTemplate && timeline.length) {\n                        gotSegments = true;\n                        if (segmentTemplate.initialization) {\n                            this.emit('item', {\n                                url: baseURL.filter(s => !!s).join('') +\n                                    tmpl(segmentTemplate.initialization),\n                                seq: seq,\n                                init: true,\n                                duration: 0,\n                            });\n                        }\n                        for (let { duration: itemDuration, repeat, time } of timeline) {\n                            itemDuration = itemDuration / timescale * 1000;\n                            repeat = repeat || 1;\n                            currtime = time || currtime;\n                            for (let i = 0; i < repeat; i++) {\n                                this.emit('item', {\n                                    url: baseURL.filter(s => !!s).join('') +\n                                        tmpl(segmentTemplate.media),\n                                    seq: seq++,\n                                    duration: itemDuration,\n                                });\n                                currtime += itemDuration;\n                            }\n                        }\n                    }\n                    if (gotSegments) {\n                        this.emit('endearly');\n                        onEnd();\n                        this._parser.removeAllListeners();\n                        this.removeAllListeners('finish');\n                    }\n                    break;\n            }\n        });\n        this._parser.on('text', text => {\n            if (lastTag === 'baseurl') {\n                baseURL[treeLevel] = text;\n                lastTag = null;\n            }\n        });\n        this.on('finish', onEnd);\n    }\n    _write(chunk, encoding, callback) {\n        this._parser.write(chunk, encoding);\n        callback();\n    }\n}\nexports[\"default\"] = DashMPDParser;\n//# sourceMappingURL=dash-mpd-parser.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/m3u8stream/dist/dash-mpd-parser.js?");

/***/ }),

/***/ "./node_modules/m3u8stream/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/m3u8stream/dist/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst miniget_1 = __importDefault(__webpack_require__(/*! miniget */ \"./node_modules/miniget/dist/index.js\"));\nconst m3u8_parser_1 = __importDefault(__webpack_require__(/*! ./m3u8-parser */ \"./node_modules/m3u8stream/dist/m3u8-parser.js\"));\nconst dash_mpd_parser_1 = __importDefault(__webpack_require__(/*! ./dash-mpd-parser */ \"./node_modules/m3u8stream/dist/dash-mpd-parser.js\"));\nconst queue_1 = __webpack_require__(/*! ./queue */ \"./node_modules/m3u8stream/dist/queue.js\");\nconst parse_time_1 = __webpack_require__(/*! ./parse-time */ \"./node_modules/m3u8stream/dist/parse-time.js\");\nconst supportedParsers = {\n    m3u8: m3u8_parser_1.default,\n    'dash-mpd': dash_mpd_parser_1.default,\n};\nlet m3u8stream = ((playlistURL, options = {}) => {\n    const stream = new stream_1.PassThrough();\n    const chunkReadahead = options.chunkReadahead || 3;\n    // 20 seconds.\n    const liveBuffer = options.liveBuffer || 20000;\n    const requestOptions = options.requestOptions;\n    const Parser = supportedParsers[options.parser || (/\\.mpd$/.test(playlistURL) ? 'dash-mpd' : 'm3u8')];\n    if (!Parser) {\n        throw TypeError(`parser '${options.parser}' not supported`);\n    }\n    let begin = 0;\n    if (typeof options.begin !== 'undefined') {\n        begin = typeof options.begin === 'string' ?\n            parse_time_1.humanStr(options.begin) :\n            Math.max(options.begin - liveBuffer, 0);\n    }\n    const forwardEvents = (req) => {\n        for (let event of ['abort', 'request', 'response', 'redirect', 'retry', 'reconnect']) {\n            req.on(event, stream.emit.bind(stream, event));\n        }\n    };\n    let currSegment;\n    const streamQueue = new queue_1.Queue((req, callback) => {\n        currSegment = req;\n        // Count the size manually, since the `content-length` header is not\n        // always there.\n        let size = 0;\n        req.on('data', (chunk) => size += chunk.length);\n        req.pipe(stream, { end: false });\n        req.on('end', () => callback(null, size));\n    }, { concurrency: 1 });\n    let segmentNumber = 0;\n    let downloaded = 0;\n    const requestQueue = new queue_1.Queue((segment, callback) => {\n        let reqOptions = Object.assign({}, requestOptions);\n        if (segment.range) {\n            reqOptions.headers = Object.assign({}, reqOptions.headers, {\n                Range: `bytes=${segment.range.start}-${segment.range.end}`,\n            });\n        }\n        let req = miniget_1.default(new URL(segment.url, playlistURL).toString(), reqOptions);\n        req.on('error', callback);\n        forwardEvents(req);\n        streamQueue.push(req, (_, size) => {\n            downloaded += +size;\n            stream.emit('progress', {\n                num: ++segmentNumber,\n                size: size,\n                duration: segment.duration,\n                url: segment.url,\n            }, requestQueue.total, downloaded);\n            callback(null);\n        });\n    }, { concurrency: chunkReadahead });\n    const onError = (err) => {\n        if (ended) {\n            return;\n        }\n        stream.emit('error', err);\n        // Stop on any error.\n        stream.end();\n    };\n    // When to look for items again.\n    let refreshThreshold;\n    let minRefreshTime;\n    let refreshTimeout;\n    let fetchingPlaylist = true;\n    let ended = false;\n    let isStatic = false;\n    let lastRefresh;\n    const onQueuedEnd = (err) => {\n        currSegment = null;\n        if (err) {\n            onError(err);\n        }\n        else if (!fetchingPlaylist && !ended && !isStatic &&\n            requestQueue.tasks.length + requestQueue.active <= refreshThreshold) {\n            let ms = Math.max(0, minRefreshTime - (Date.now() - lastRefresh));\n            fetchingPlaylist = true;\n            refreshTimeout = setTimeout(refreshPlaylist, ms);\n        }\n        else if ((ended || isStatic) &&\n            !requestQueue.tasks.length && !requestQueue.active) {\n            stream.end();\n        }\n    };\n    let currPlaylist;\n    let lastSeq;\n    let starttime = 0;\n    const refreshPlaylist = () => {\n        lastRefresh = Date.now();\n        currPlaylist = miniget_1.default(playlistURL, requestOptions);\n        currPlaylist.on('error', onError);\n        forwardEvents(currPlaylist);\n        const parser = currPlaylist.pipe(new Parser(options.id));\n        parser.on('starttime', (a) => {\n            if (starttime) {\n                return;\n            }\n            starttime = a;\n            if (typeof options.begin === 'string' && begin >= 0) {\n                begin += starttime;\n            }\n        });\n        parser.on('endlist', () => { isStatic = true; });\n        parser.on('endearly', currPlaylist.unpipe.bind(currPlaylist, parser));\n        let addedItems = [];\n        const addItem = (item) => {\n            if (!item.init) {\n                if (item.seq <= lastSeq) {\n                    return;\n                }\n                lastSeq = item.seq;\n            }\n            begin = item.time;\n            requestQueue.push(item, onQueuedEnd);\n            addedItems.push(item);\n        };\n        let tailedItems = [], tailedItemsDuration = 0;\n        parser.on('item', (item) => {\n            let timedItem = Object.assign({ time: starttime }, item);\n            if (begin <= timedItem.time) {\n                addItem(timedItem);\n            }\n            else {\n                tailedItems.push(timedItem);\n                tailedItemsDuration += timedItem.duration;\n                // Only keep the last `liveBuffer` of items.\n                while (tailedItems.length > 1 &&\n                    tailedItemsDuration - tailedItems[0].duration > liveBuffer) {\n                    const lastItem = tailedItems.shift();\n                    tailedItemsDuration -= lastItem.duration;\n                }\n            }\n            starttime += timedItem.duration;\n        });\n        parser.on('end', () => {\n            currPlaylist = null;\n            // If we are too ahead of the stream, make sure to get the\n            // latest available items with a small buffer.\n            if (!addedItems.length && tailedItems.length) {\n                tailedItems.forEach(item => { addItem(item); });\n            }\n            // Refresh the playlist when remaining segments get low.\n            refreshThreshold = Math.max(1, Math.ceil(addedItems.length * 0.01));\n            // Throttle refreshing the playlist by looking at the duration\n            // of live items added on this refresh.\n            minRefreshTime =\n                addedItems.reduce((total, item) => item.duration + total, 0);\n            fetchingPlaylist = false;\n            onQueuedEnd(null);\n        });\n    };\n    refreshPlaylist();\n    stream.end = () => {\n        ended = true;\n        streamQueue.die();\n        requestQueue.die();\n        clearTimeout(refreshTimeout);\n        currPlaylist === null || currPlaylist === void 0 ? void 0 : currPlaylist.destroy();\n        currSegment === null || currSegment === void 0 ? void 0 : currSegment.destroy();\n        stream_1.PassThrough.prototype.end.call(stream, null);\n    };\n    return stream;\n});\nm3u8stream.parseTimestamp = parse_time_1.humanStr;\nmodule.exports = m3u8stream;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/m3u8stream/dist/index.js?");

/***/ }),

/***/ "./node_modules/m3u8stream/dist/m3u8-parser.js":
/*!*****************************************************!*\
  !*** ./node_modules/m3u8stream/dist/m3u8-parser.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\n/**\n * A very simple m3u8 playlist file parser that detects tags and segments.\n */\nclass m3u8Parser extends stream_1.Writable {\n    constructor() {\n        super();\n        this._lastLine = '';\n        this._seq = 0;\n        this._nextItemDuration = null;\n        this._nextItemRange = null;\n        this._lastItemRangeEnd = 0;\n        this.on('finish', () => {\n            this._parseLine(this._lastLine);\n            this.emit('end');\n        });\n    }\n    _parseAttrList(value) {\n        let attrs = {};\n        let regex = /([A-Z0-9-]+)=(?:\"([^\"]*?)\"|([^,]*?))/g;\n        let match;\n        while ((match = regex.exec(value)) !== null) {\n            attrs[match[1]] = match[2] || match[3];\n        }\n        return attrs;\n    }\n    _parseRange(value) {\n        if (!value)\n            return null;\n        let svalue = value.split('@');\n        let start = svalue[1] ? parseInt(svalue[1]) : this._lastItemRangeEnd + 1;\n        let end = start + parseInt(svalue[0]) - 1;\n        let range = { start, end };\n        this._lastItemRangeEnd = range.end;\n        return range;\n    }\n    _parseLine(line) {\n        let match = line.match(/^#(EXT[A-Z0-9-]+)(?::(.*))?/);\n        if (match) {\n            // This is a tag.\n            const tag = match[1];\n            const value = match[2] || '';\n            switch (tag) {\n                case 'EXT-X-PROGRAM-DATE-TIME':\n                    this.emit('starttime', new Date(value).getTime());\n                    break;\n                case 'EXT-X-MEDIA-SEQUENCE':\n                    this._seq = parseInt(value);\n                    break;\n                case 'EXT-X-MAP': {\n                    let attrs = this._parseAttrList(value);\n                    if (!attrs.URI) {\n                        this.destroy(new Error('`EXT-X-MAP` found without required attribute `URI`'));\n                        return;\n                    }\n                    this.emit('item', {\n                        url: attrs.URI,\n                        seq: this._seq,\n                        init: true,\n                        duration: 0,\n                        range: this._parseRange(attrs.BYTERANGE),\n                    });\n                    break;\n                }\n                case 'EXT-X-BYTERANGE': {\n                    this._nextItemRange = this._parseRange(value);\n                    break;\n                }\n                case 'EXTINF':\n                    this._nextItemDuration =\n                        Math.round(parseFloat(value.split(',')[0]) * 1000);\n                    break;\n                case 'EXT-X-ENDLIST':\n                    this.emit('endlist');\n                    break;\n            }\n        }\n        else if (!/^#/.test(line) && line.trim()) {\n            // This is a segment\n            this.emit('item', {\n                url: line.trim(),\n                seq: this._seq++,\n                duration: this._nextItemDuration,\n                range: this._nextItemRange,\n            });\n            this._nextItemRange = null;\n        }\n    }\n    _write(chunk, encoding, callback) {\n        let lines = chunk.toString('utf8').split('\\n');\n        if (this._lastLine) {\n            lines[0] = this._lastLine + lines[0];\n        }\n        lines.forEach((line, i) => {\n            if (this.destroyed)\n                return;\n            if (i < lines.length - 1) {\n                this._parseLine(line);\n            }\n            else {\n                // Save the last line in case it has been broken up.\n                this._lastLine = line;\n            }\n        });\n        callback();\n    }\n}\nexports[\"default\"] = m3u8Parser;\n//# sourceMappingURL=m3u8-parser.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/m3u8stream/dist/m3u8-parser.js?");

/***/ }),

/***/ "./node_modules/m3u8stream/dist/parse-time.js":
/*!****************************************************!*\
  !*** ./node_modules/m3u8stream/dist/parse-time.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.durationStr = exports.humanStr = void 0;\nconst numberFormat = /^\\d+$/;\nconst timeFormat = /^(?:(?:(\\d+):)?(\\d{1,2}):)?(\\d{1,2})(?:\\.(\\d{3}))?$/;\nconst timeUnits = {\n    ms: 1,\n    s: 1000,\n    m: 60000,\n    h: 3600000,\n};\n/**\n * Converts human friendly time to milliseconds. Supports the format\n * 00:00:00.000 for hours, minutes, seconds, and milliseconds respectively.\n * And 0ms, 0s, 0m, 0h, and together 1m1s.\n *\n * @param {number|string} time\n * @returns {number}\n */\nexports.humanStr = (time) => {\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (numberFormat.test(time)) {\n        return +time;\n    }\n    const firstFormat = timeFormat.exec(time);\n    if (firstFormat) {\n        return (+(firstFormat[1] || 0) * timeUnits.h) +\n            (+(firstFormat[2] || 0) * timeUnits.m) +\n            (+firstFormat[3] * timeUnits.s) +\n            +(firstFormat[4] || 0);\n    }\n    else {\n        let total = 0;\n        const r = /(-?\\d+)(ms|s|m|h)/g;\n        let rs;\n        while ((rs = r.exec(time)) !== null) {\n            total += +rs[1] * timeUnits[rs[2]];\n        }\n        return total;\n    }\n};\n/**\n * Parses a duration string in the form of \"123.456S\", returns milliseconds.\n *\n * @param {string} time\n * @returns {number}\n */\nexports.durationStr = (time) => {\n    let total = 0;\n    const r = /(\\d+(?:\\.\\d+)?)(S|M|H)/g;\n    let rs;\n    while ((rs = r.exec(time)) !== null) {\n        total += +rs[1] * timeUnits[rs[2].toLowerCase()];\n    }\n    return total;\n};\n//# sourceMappingURL=parse-time.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/m3u8stream/dist/parse-time.js?");

/***/ }),

/***/ "./node_modules/m3u8stream/dist/queue.js":
/*!***********************************************!*\
  !*** ./node_modules/m3u8stream/dist/queue.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Queue = void 0;\nclass Queue {\n    /**\n     * A really simple queue with concurrency.\n     *\n     * @param {Function} worker\n     * @param {Object} options\n     * @param {!number} options.concurrency\n     */\n    constructor(worker, options = {}) {\n        this._worker = worker;\n        this._concurrency = options.concurrency || 1;\n        this.tasks = [];\n        this.total = 0;\n        this.active = 0;\n    }\n    /**\n     * Push a task to the queue.\n     *\n     *  @param {T} item\n     *  @param {!Function} callback\n     */\n    push(item, callback) {\n        this.tasks.push({ item, callback });\n        this.total++;\n        this._next();\n    }\n    /**\n     * Process next job in queue.\n     */\n    _next() {\n        if (this.active >= this._concurrency || !this.tasks.length) {\n            return;\n        }\n        const { item, callback } = this.tasks.shift();\n        let callbackCalled = false;\n        this.active++;\n        this._worker(item, (err, result) => {\n            if (callbackCalled) {\n                return;\n            }\n            this.active--;\n            callbackCalled = true;\n            callback === null || callback === void 0 ? void 0 : callback(err, result);\n            this._next();\n        });\n    }\n    /**\n     * Stops processing queued jobs.\n     */\n    die() {\n        this.tasks = [];\n    }\n}\nexports.Queue = Queue;\n//# sourceMappingURL=queue.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/m3u8stream/dist/queue.js?");

/***/ }),

/***/ "./node_modules/methods/index.js":
/*!***************************************!*\
  !*** ./node_modules/methods/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = __webpack_require__(/*! http */ \"http\");\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/methods/index.js?");

/***/ }),

/***/ "./node_modules/mime-db/index.js":
/*!***************************************!*\
  !*** ./node_modules/mime-db/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = __webpack_require__(/*! ./db.json */ \"./node_modules/mime-db/db.json\")\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/mime-db/index.js?");

/***/ }),

/***/ "./node_modules/mime-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/mime-types/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = __webpack_require__(/*! mime-db */ \"./node_modules/mime-db/index.js\")\nvar extname = __webpack_require__(/*! path */ \"path\").extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/mime-types/index.js?");

/***/ }),

/***/ "./node_modules/mime/Mime.js":
/*!***********************************!*\
  !*** ./node_modules/mime/Mime.js ***!
  \***********************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function(t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/mime/Mime.js?");

/***/ }),

/***/ "./node_modules/mime/index.js":
/*!************************************!*\
  !*** ./node_modules/mime/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nlet Mime = __webpack_require__(/*! ./Mime */ \"./node_modules/mime/Mime.js\");\nmodule.exports = new Mime(__webpack_require__(/*! ./types/standard */ \"./node_modules/mime/types/standard.js\"), __webpack_require__(/*! ./types/other */ \"./node_modules/mime/types/other.js\"));\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/mime/index.js?");

/***/ }),

/***/ "./node_modules/mime/types/other.js":
/*!******************************************!*\
  !*** ./node_modules/mime/types/other.js ***!
  \******************************************/
/***/ ((module) => {

eval("module.exports = {\"application/prs.cww\":[\"cww\"],\"application/vnd.1000minds.decision-model+xml\":[\"1km\"],\"application/vnd.3gpp.pic-bw-large\":[\"plb\"],\"application/vnd.3gpp.pic-bw-small\":[\"psb\"],\"application/vnd.3gpp.pic-bw-var\":[\"pvb\"],\"application/vnd.3gpp2.tcap\":[\"tcap\"],\"application/vnd.3m.post-it-notes\":[\"pwn\"],\"application/vnd.accpac.simply.aso\":[\"aso\"],\"application/vnd.accpac.simply.imp\":[\"imp\"],\"application/vnd.acucobol\":[\"acu\"],\"application/vnd.acucorp\":[\"atc\",\"acutc\"],\"application/vnd.adobe.air-application-installer-package+zip\":[\"air\"],\"application/vnd.adobe.formscentral.fcdt\":[\"fcdt\"],\"application/vnd.adobe.fxp\":[\"fxp\",\"fxpl\"],\"application/vnd.adobe.xdp+xml\":[\"xdp\"],\"application/vnd.adobe.xfdf\":[\"xfdf\"],\"application/vnd.ahead.space\":[\"ahead\"],\"application/vnd.airzip.filesecure.azf\":[\"azf\"],\"application/vnd.airzip.filesecure.azs\":[\"azs\"],\"application/vnd.amazon.ebook\":[\"azw\"],\"application/vnd.americandynamics.acc\":[\"acc\"],\"application/vnd.amiga.ami\":[\"ami\"],\"application/vnd.android.package-archive\":[\"apk\"],\"application/vnd.anser-web-certificate-issue-initiation\":[\"cii\"],\"application/vnd.anser-web-funds-transfer-initiation\":[\"fti\"],\"application/vnd.antix.game-component\":[\"atx\"],\"application/vnd.apple.installer+xml\":[\"mpkg\"],\"application/vnd.apple.keynote\":[\"key\"],\"application/vnd.apple.mpegurl\":[\"m3u8\"],\"application/vnd.apple.numbers\":[\"numbers\"],\"application/vnd.apple.pages\":[\"pages\"],\"application/vnd.apple.pkpass\":[\"pkpass\"],\"application/vnd.aristanetworks.swi\":[\"swi\"],\"application/vnd.astraea-software.iota\":[\"iota\"],\"application/vnd.audiograph\":[\"aep\"],\"application/vnd.balsamiq.bmml+xml\":[\"bmml\"],\"application/vnd.blueice.multipass\":[\"mpm\"],\"application/vnd.bmi\":[\"bmi\"],\"application/vnd.businessobjects\":[\"rep\"],\"application/vnd.chemdraw+xml\":[\"cdxml\"],\"application/vnd.chipnuts.karaoke-mmd\":[\"mmd\"],\"application/vnd.cinderella\":[\"cdy\"],\"application/vnd.citationstyles.style+xml\":[\"csl\"],\"application/vnd.claymore\":[\"cla\"],\"application/vnd.cloanto.rp9\":[\"rp9\"],\"application/vnd.clonk.c4group\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"],\"application/vnd.cluetrust.cartomobile-config\":[\"c11amc\"],\"application/vnd.cluetrust.cartomobile-config-pkg\":[\"c11amz\"],\"application/vnd.commonspace\":[\"csp\"],\"application/vnd.contact.cmsg\":[\"cdbcmsg\"],\"application/vnd.cosmocaller\":[\"cmc\"],\"application/vnd.crick.clicker\":[\"clkx\"],\"application/vnd.crick.clicker.keyboard\":[\"clkk\"],\"application/vnd.crick.clicker.palette\":[\"clkp\"],\"application/vnd.crick.clicker.template\":[\"clkt\"],\"application/vnd.crick.clicker.wordbank\":[\"clkw\"],\"application/vnd.criticaltools.wbs+xml\":[\"wbs\"],\"application/vnd.ctc-posml\":[\"pml\"],\"application/vnd.cups-ppd\":[\"ppd\"],\"application/vnd.curl.car\":[\"car\"],\"application/vnd.curl.pcurl\":[\"pcurl\"],\"application/vnd.dart\":[\"dart\"],\"application/vnd.data-vision.rdz\":[\"rdz\"],\"application/vnd.dbf\":[\"dbf\"],\"application/vnd.dece.data\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"],\"application/vnd.dece.ttml+xml\":[\"uvt\",\"uvvt\"],\"application/vnd.dece.unspecified\":[\"uvx\",\"uvvx\"],\"application/vnd.dece.zip\":[\"uvz\",\"uvvz\"],\"application/vnd.denovo.fcselayout-link\":[\"fe_launch\"],\"application/vnd.dna\":[\"dna\"],\"application/vnd.dolby.mlp\":[\"mlp\"],\"application/vnd.dpgraph\":[\"dpg\"],\"application/vnd.dreamfactory\":[\"dfac\"],\"application/vnd.ds-keypoint\":[\"kpxx\"],\"application/vnd.dvb.ait\":[\"ait\"],\"application/vnd.dvb.service\":[\"svc\"],\"application/vnd.dynageo\":[\"geo\"],\"application/vnd.ecowin.chart\":[\"mag\"],\"application/vnd.enliven\":[\"nml\"],\"application/vnd.epson.esf\":[\"esf\"],\"application/vnd.epson.msf\":[\"msf\"],\"application/vnd.epson.quickanime\":[\"qam\"],\"application/vnd.epson.salt\":[\"slt\"],\"application/vnd.epson.ssf\":[\"ssf\"],\"application/vnd.eszigno3+xml\":[\"es3\",\"et3\"],\"application/vnd.ezpix-album\":[\"ez2\"],\"application/vnd.ezpix-package\":[\"ez3\"],\"application/vnd.fdf\":[\"fdf\"],\"application/vnd.fdsn.mseed\":[\"mseed\"],\"application/vnd.fdsn.seed\":[\"seed\",\"dataless\"],\"application/vnd.flographit\":[\"gph\"],\"application/vnd.fluxtime.clip\":[\"ftc\"],\"application/vnd.framemaker\":[\"fm\",\"frame\",\"maker\",\"book\"],\"application/vnd.frogans.fnc\":[\"fnc\"],\"application/vnd.frogans.ltf\":[\"ltf\"],\"application/vnd.fsc.weblaunch\":[\"fsc\"],\"application/vnd.fujitsu.oasys\":[\"oas\"],\"application/vnd.fujitsu.oasys2\":[\"oa2\"],\"application/vnd.fujitsu.oasys3\":[\"oa3\"],\"application/vnd.fujitsu.oasysgp\":[\"fg5\"],\"application/vnd.fujitsu.oasysprs\":[\"bh2\"],\"application/vnd.fujixerox.ddd\":[\"ddd\"],\"application/vnd.fujixerox.docuworks\":[\"xdw\"],\"application/vnd.fujixerox.docuworks.binder\":[\"xbd\"],\"application/vnd.fuzzysheet\":[\"fzs\"],\"application/vnd.genomatix.tuxedo\":[\"txd\"],\"application/vnd.geogebra.file\":[\"ggb\"],\"application/vnd.geogebra.tool\":[\"ggt\"],\"application/vnd.geometry-explorer\":[\"gex\",\"gre\"],\"application/vnd.geonext\":[\"gxt\"],\"application/vnd.geoplan\":[\"g2w\"],\"application/vnd.geospace\":[\"g3w\"],\"application/vnd.gmx\":[\"gmx\"],\"application/vnd.google-apps.document\":[\"gdoc\"],\"application/vnd.google-apps.presentation\":[\"gslides\"],\"application/vnd.google-apps.spreadsheet\":[\"gsheet\"],\"application/vnd.google-earth.kml+xml\":[\"kml\"],\"application/vnd.google-earth.kmz\":[\"kmz\"],\"application/vnd.grafeq\":[\"gqf\",\"gqs\"],\"application/vnd.groove-account\":[\"gac\"],\"application/vnd.groove-help\":[\"ghf\"],\"application/vnd.groove-identity-message\":[\"gim\"],\"application/vnd.groove-injector\":[\"grv\"],\"application/vnd.groove-tool-message\":[\"gtm\"],\"application/vnd.groove-tool-template\":[\"tpl\"],\"application/vnd.groove-vcard\":[\"vcg\"],\"application/vnd.hal+xml\":[\"hal\"],\"application/vnd.handheld-entertainment+xml\":[\"zmm\"],\"application/vnd.hbci\":[\"hbci\"],\"application/vnd.hhe.lesson-player\":[\"les\"],\"application/vnd.hp-hpgl\":[\"hpgl\"],\"application/vnd.hp-hpid\":[\"hpid\"],\"application/vnd.hp-hps\":[\"hps\"],\"application/vnd.hp-jlyt\":[\"jlt\"],\"application/vnd.hp-pcl\":[\"pcl\"],\"application/vnd.hp-pclxl\":[\"pclxl\"],\"application/vnd.hydrostatix.sof-data\":[\"sfd-hdstx\"],\"application/vnd.ibm.minipay\":[\"mpy\"],\"application/vnd.ibm.modcap\":[\"afp\",\"listafp\",\"list3820\"],\"application/vnd.ibm.rights-management\":[\"irm\"],\"application/vnd.ibm.secure-container\":[\"sc\"],\"application/vnd.iccprofile\":[\"icc\",\"icm\"],\"application/vnd.igloader\":[\"igl\"],\"application/vnd.immervision-ivp\":[\"ivp\"],\"application/vnd.immervision-ivu\":[\"ivu\"],\"application/vnd.insors.igm\":[\"igm\"],\"application/vnd.intercon.formnet\":[\"xpw\",\"xpx\"],\"application/vnd.intergeo\":[\"i2g\"],\"application/vnd.intu.qbo\":[\"qbo\"],\"application/vnd.intu.qfx\":[\"qfx\"],\"application/vnd.ipunplugged.rcprofile\":[\"rcprofile\"],\"application/vnd.irepository.package+xml\":[\"irp\"],\"application/vnd.is-xpr\":[\"xpr\"],\"application/vnd.isac.fcs\":[\"fcs\"],\"application/vnd.jam\":[\"jam\"],\"application/vnd.jcp.javame.midlet-rms\":[\"rms\"],\"application/vnd.jisp\":[\"jisp\"],\"application/vnd.joost.joda-archive\":[\"joda\"],\"application/vnd.kahootz\":[\"ktz\",\"ktr\"],\"application/vnd.kde.karbon\":[\"karbon\"],\"application/vnd.kde.kchart\":[\"chrt\"],\"application/vnd.kde.kformula\":[\"kfo\"],\"application/vnd.kde.kivio\":[\"flw\"],\"application/vnd.kde.kontour\":[\"kon\"],\"application/vnd.kde.kpresenter\":[\"kpr\",\"kpt\"],\"application/vnd.kde.kspread\":[\"ksp\"],\"application/vnd.kde.kword\":[\"kwd\",\"kwt\"],\"application/vnd.kenameaapp\":[\"htke\"],\"application/vnd.kidspiration\":[\"kia\"],\"application/vnd.kinar\":[\"kne\",\"knp\"],\"application/vnd.koan\":[\"skp\",\"skd\",\"skt\",\"skm\"],\"application/vnd.kodak-descriptor\":[\"sse\"],\"application/vnd.las.las+xml\":[\"lasxml\"],\"application/vnd.llamagraphics.life-balance.desktop\":[\"lbd\"],\"application/vnd.llamagraphics.life-balance.exchange+xml\":[\"lbe\"],\"application/vnd.lotus-1-2-3\":[\"123\"],\"application/vnd.lotus-approach\":[\"apr\"],\"application/vnd.lotus-freelance\":[\"pre\"],\"application/vnd.lotus-notes\":[\"nsf\"],\"application/vnd.lotus-organizer\":[\"org\"],\"application/vnd.lotus-screencam\":[\"scm\"],\"application/vnd.lotus-wordpro\":[\"lwp\"],\"application/vnd.macports.portpkg\":[\"portpkg\"],\"application/vnd.mcd\":[\"mcd\"],\"application/vnd.medcalcdata\":[\"mc1\"],\"application/vnd.mediastation.cdkey\":[\"cdkey\"],\"application/vnd.mfer\":[\"mwf\"],\"application/vnd.mfmp\":[\"mfm\"],\"application/vnd.micrografx.flo\":[\"flo\"],\"application/vnd.micrografx.igx\":[\"igx\"],\"application/vnd.mif\":[\"mif\"],\"application/vnd.mobius.daf\":[\"daf\"],\"application/vnd.mobius.dis\":[\"dis\"],\"application/vnd.mobius.mbk\":[\"mbk\"],\"application/vnd.mobius.mqy\":[\"mqy\"],\"application/vnd.mobius.msl\":[\"msl\"],\"application/vnd.mobius.plc\":[\"plc\"],\"application/vnd.mobius.txf\":[\"txf\"],\"application/vnd.mophun.application\":[\"mpn\"],\"application/vnd.mophun.certificate\":[\"mpc\"],\"application/vnd.mozilla.xul+xml\":[\"xul\"],\"application/vnd.ms-artgalry\":[\"cil\"],\"application/vnd.ms-cab-compressed\":[\"cab\"],\"application/vnd.ms-excel\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"],\"application/vnd.ms-excel.addin.macroenabled.12\":[\"xlam\"],\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":[\"xlsb\"],\"application/vnd.ms-excel.sheet.macroenabled.12\":[\"xlsm\"],\"application/vnd.ms-excel.template.macroenabled.12\":[\"xltm\"],\"application/vnd.ms-fontobject\":[\"eot\"],\"application/vnd.ms-htmlhelp\":[\"chm\"],\"application/vnd.ms-ims\":[\"ims\"],\"application/vnd.ms-lrm\":[\"lrm\"],\"application/vnd.ms-officetheme\":[\"thmx\"],\"application/vnd.ms-outlook\":[\"msg\"],\"application/vnd.ms-pki.seccat\":[\"cat\"],\"application/vnd.ms-pki.stl\":[\"*stl\"],\"application/vnd.ms-powerpoint\":[\"ppt\",\"pps\",\"pot\"],\"application/vnd.ms-powerpoint.addin.macroenabled.12\":[\"ppam\"],\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":[\"pptm\"],\"application/vnd.ms-powerpoint.slide.macroenabled.12\":[\"sldm\"],\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":[\"ppsm\"],\"application/vnd.ms-powerpoint.template.macroenabled.12\":[\"potm\"],\"application/vnd.ms-project\":[\"mpp\",\"mpt\"],\"application/vnd.ms-word.document.macroenabled.12\":[\"docm\"],\"application/vnd.ms-word.template.macroenabled.12\":[\"dotm\"],\"application/vnd.ms-works\":[\"wps\",\"wks\",\"wcm\",\"wdb\"],\"application/vnd.ms-wpl\":[\"wpl\"],\"application/vnd.ms-xpsdocument\":[\"xps\"],\"application/vnd.mseq\":[\"mseq\"],\"application/vnd.musician\":[\"mus\"],\"application/vnd.muvee.style\":[\"msty\"],\"application/vnd.mynfc\":[\"taglet\"],\"application/vnd.neurolanguage.nlu\":[\"nlu\"],\"application/vnd.nitf\":[\"ntf\",\"nitf\"],\"application/vnd.noblenet-directory\":[\"nnd\"],\"application/vnd.noblenet-sealer\":[\"nns\"],\"application/vnd.noblenet-web\":[\"nnw\"],\"application/vnd.nokia.n-gage.ac+xml\":[\"*ac\"],\"application/vnd.nokia.n-gage.data\":[\"ngdat\"],\"application/vnd.nokia.n-gage.symbian.install\":[\"n-gage\"],\"application/vnd.nokia.radio-preset\":[\"rpst\"],\"application/vnd.nokia.radio-presets\":[\"rpss\"],\"application/vnd.novadigm.edm\":[\"edm\"],\"application/vnd.novadigm.edx\":[\"edx\"],\"application/vnd.novadigm.ext\":[\"ext\"],\"application/vnd.oasis.opendocument.chart\":[\"odc\"],\"application/vnd.oasis.opendocument.chart-template\":[\"otc\"],\"application/vnd.oasis.opendocument.database\":[\"odb\"],\"application/vnd.oasis.opendocument.formula\":[\"odf\"],\"application/vnd.oasis.opendocument.formula-template\":[\"odft\"],\"application/vnd.oasis.opendocument.graphics\":[\"odg\"],\"application/vnd.oasis.opendocument.graphics-template\":[\"otg\"],\"application/vnd.oasis.opendocument.image\":[\"odi\"],\"application/vnd.oasis.opendocument.image-template\":[\"oti\"],\"application/vnd.oasis.opendocument.presentation\":[\"odp\"],\"application/vnd.oasis.opendocument.presentation-template\":[\"otp\"],\"application/vnd.oasis.opendocument.spreadsheet\":[\"ods\"],\"application/vnd.oasis.opendocument.spreadsheet-template\":[\"ots\"],\"application/vnd.oasis.opendocument.text\":[\"odt\"],\"application/vnd.oasis.opendocument.text-master\":[\"odm\"],\"application/vnd.oasis.opendocument.text-template\":[\"ott\"],\"application/vnd.oasis.opendocument.text-web\":[\"oth\"],\"application/vnd.olpc-sugar\":[\"xo\"],\"application/vnd.oma.dd2+xml\":[\"dd2\"],\"application/vnd.openblox.game+xml\":[\"obgx\"],\"application/vnd.openofficeorg.extension\":[\"oxt\"],\"application/vnd.openstreetmap.data+xml\":[\"osm\"],\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":[\"pptx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slide\":[\"sldx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":[\"ppsx\"],\"application/vnd.openxmlformats-officedocument.presentationml.template\":[\"potx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":[\"xlsx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":[\"xltx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":[\"docx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":[\"dotx\"],\"application/vnd.osgeo.mapguide.package\":[\"mgp\"],\"application/vnd.osgi.dp\":[\"dp\"],\"application/vnd.osgi.subsystem\":[\"esa\"],\"application/vnd.palm\":[\"pdb\",\"pqa\",\"oprc\"],\"application/vnd.pawaafile\":[\"paw\"],\"application/vnd.pg.format\":[\"str\"],\"application/vnd.pg.osasli\":[\"ei6\"],\"application/vnd.picsel\":[\"efif\"],\"application/vnd.pmi.widget\":[\"wg\"],\"application/vnd.pocketlearn\":[\"plf\"],\"application/vnd.powerbuilder6\":[\"pbd\"],\"application/vnd.previewsystems.box\":[\"box\"],\"application/vnd.proteus.magazine\":[\"mgz\"],\"application/vnd.publishare-delta-tree\":[\"qps\"],\"application/vnd.pvi.ptid1\":[\"ptid\"],\"application/vnd.quark.quarkxpress\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"],\"application/vnd.rar\":[\"rar\"],\"application/vnd.realvnc.bed\":[\"bed\"],\"application/vnd.recordare.musicxml\":[\"mxl\"],\"application/vnd.recordare.musicxml+xml\":[\"musicxml\"],\"application/vnd.rig.cryptonote\":[\"cryptonote\"],\"application/vnd.rim.cod\":[\"cod\"],\"application/vnd.rn-realmedia\":[\"rm\"],\"application/vnd.rn-realmedia-vbr\":[\"rmvb\"],\"application/vnd.route66.link66+xml\":[\"link66\"],\"application/vnd.sailingtracker.track\":[\"st\"],\"application/vnd.seemail\":[\"see\"],\"application/vnd.sema\":[\"sema\"],\"application/vnd.semd\":[\"semd\"],\"application/vnd.semf\":[\"semf\"],\"application/vnd.shana.informed.formdata\":[\"ifm\"],\"application/vnd.shana.informed.formtemplate\":[\"itp\"],\"application/vnd.shana.informed.interchange\":[\"iif\"],\"application/vnd.shana.informed.package\":[\"ipk\"],\"application/vnd.simtech-mindmapper\":[\"twd\",\"twds\"],\"application/vnd.smaf\":[\"mmf\"],\"application/vnd.smart.teacher\":[\"teacher\"],\"application/vnd.software602.filler.form+xml\":[\"fo\"],\"application/vnd.solent.sdkm+xml\":[\"sdkm\",\"sdkd\"],\"application/vnd.spotfire.dxp\":[\"dxp\"],\"application/vnd.spotfire.sfs\":[\"sfs\"],\"application/vnd.stardivision.calc\":[\"sdc\"],\"application/vnd.stardivision.draw\":[\"sda\"],\"application/vnd.stardivision.impress\":[\"sdd\"],\"application/vnd.stardivision.math\":[\"smf\"],\"application/vnd.stardivision.writer\":[\"sdw\",\"vor\"],\"application/vnd.stardivision.writer-global\":[\"sgl\"],\"application/vnd.stepmania.package\":[\"smzip\"],\"application/vnd.stepmania.stepchart\":[\"sm\"],\"application/vnd.sun.wadl+xml\":[\"wadl\"],\"application/vnd.sun.xml.calc\":[\"sxc\"],\"application/vnd.sun.xml.calc.template\":[\"stc\"],\"application/vnd.sun.xml.draw\":[\"sxd\"],\"application/vnd.sun.xml.draw.template\":[\"std\"],\"application/vnd.sun.xml.impress\":[\"sxi\"],\"application/vnd.sun.xml.impress.template\":[\"sti\"],\"application/vnd.sun.xml.math\":[\"sxm\"],\"application/vnd.sun.xml.writer\":[\"sxw\"],\"application/vnd.sun.xml.writer.global\":[\"sxg\"],\"application/vnd.sun.xml.writer.template\":[\"stw\"],\"application/vnd.sus-calendar\":[\"sus\",\"susp\"],\"application/vnd.svd\":[\"svd\"],\"application/vnd.symbian.install\":[\"sis\",\"sisx\"],\"application/vnd.syncml+xml\":[\"xsm\"],\"application/vnd.syncml.dm+wbxml\":[\"bdm\"],\"application/vnd.syncml.dm+xml\":[\"xdm\"],\"application/vnd.syncml.dmddf+xml\":[\"ddf\"],\"application/vnd.tao.intent-module-archive\":[\"tao\"],\"application/vnd.tcpdump.pcap\":[\"pcap\",\"cap\",\"dmp\"],\"application/vnd.tmobile-livetv\":[\"tmo\"],\"application/vnd.trid.tpt\":[\"tpt\"],\"application/vnd.triscape.mxs\":[\"mxs\"],\"application/vnd.trueapp\":[\"tra\"],\"application/vnd.ufdl\":[\"ufd\",\"ufdl\"],\"application/vnd.uiq.theme\":[\"utz\"],\"application/vnd.umajin\":[\"umj\"],\"application/vnd.unity\":[\"unityweb\"],\"application/vnd.uoml+xml\":[\"uoml\"],\"application/vnd.vcx\":[\"vcx\"],\"application/vnd.visio\":[\"vsd\",\"vst\",\"vss\",\"vsw\"],\"application/vnd.visionary\":[\"vis\"],\"application/vnd.vsf\":[\"vsf\"],\"application/vnd.wap.wbxml\":[\"wbxml\"],\"application/vnd.wap.wmlc\":[\"wmlc\"],\"application/vnd.wap.wmlscriptc\":[\"wmlsc\"],\"application/vnd.webturbo\":[\"wtb\"],\"application/vnd.wolfram.player\":[\"nbp\"],\"application/vnd.wordperfect\":[\"wpd\"],\"application/vnd.wqd\":[\"wqd\"],\"application/vnd.wt.stf\":[\"stf\"],\"application/vnd.xara\":[\"xar\"],\"application/vnd.xfdl\":[\"xfdl\"],\"application/vnd.yamaha.hv-dic\":[\"hvd\"],\"application/vnd.yamaha.hv-script\":[\"hvs\"],\"application/vnd.yamaha.hv-voice\":[\"hvp\"],\"application/vnd.yamaha.openscoreformat\":[\"osf\"],\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":[\"osfpvg\"],\"application/vnd.yamaha.smaf-audio\":[\"saf\"],\"application/vnd.yamaha.smaf-phrase\":[\"spf\"],\"application/vnd.yellowriver-custom-menu\":[\"cmp\"],\"application/vnd.zul\":[\"zir\",\"zirz\"],\"application/vnd.zzazz.deck+xml\":[\"zaz\"],\"application/x-7z-compressed\":[\"7z\"],\"application/x-abiword\":[\"abw\"],\"application/x-ace-compressed\":[\"ace\"],\"application/x-apple-diskimage\":[\"*dmg\"],\"application/x-arj\":[\"arj\"],\"application/x-authorware-bin\":[\"aab\",\"x32\",\"u32\",\"vox\"],\"application/x-authorware-map\":[\"aam\"],\"application/x-authorware-seg\":[\"aas\"],\"application/x-bcpio\":[\"bcpio\"],\"application/x-bdoc\":[\"*bdoc\"],\"application/x-bittorrent\":[\"torrent\"],\"application/x-blorb\":[\"blb\",\"blorb\"],\"application/x-bzip\":[\"bz\"],\"application/x-bzip2\":[\"bz2\",\"boz\"],\"application/x-cbr\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"],\"application/x-cdlink\":[\"vcd\"],\"application/x-cfs-compressed\":[\"cfs\"],\"application/x-chat\":[\"chat\"],\"application/x-chess-pgn\":[\"pgn\"],\"application/x-chrome-extension\":[\"crx\"],\"application/x-cocoa\":[\"cco\"],\"application/x-conference\":[\"nsc\"],\"application/x-cpio\":[\"cpio\"],\"application/x-csh\":[\"csh\"],\"application/x-debian-package\":[\"*deb\",\"udeb\"],\"application/x-dgc-compressed\":[\"dgc\"],\"application/x-director\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"],\"application/x-doom\":[\"wad\"],\"application/x-dtbncx+xml\":[\"ncx\"],\"application/x-dtbook+xml\":[\"dtb\"],\"application/x-dtbresource+xml\":[\"res\"],\"application/x-dvi\":[\"dvi\"],\"application/x-envoy\":[\"evy\"],\"application/x-eva\":[\"eva\"],\"application/x-font-bdf\":[\"bdf\"],\"application/x-font-ghostscript\":[\"gsf\"],\"application/x-font-linux-psf\":[\"psf\"],\"application/x-font-pcf\":[\"pcf\"],\"application/x-font-snf\":[\"snf\"],\"application/x-font-type1\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"],\"application/x-freearc\":[\"arc\"],\"application/x-futuresplash\":[\"spl\"],\"application/x-gca-compressed\":[\"gca\"],\"application/x-glulx\":[\"ulx\"],\"application/x-gnumeric\":[\"gnumeric\"],\"application/x-gramps-xml\":[\"gramps\"],\"application/x-gtar\":[\"gtar\"],\"application/x-hdf\":[\"hdf\"],\"application/x-httpd-php\":[\"php\"],\"application/x-install-instructions\":[\"install\"],\"application/x-iso9660-image\":[\"*iso\"],\"application/x-java-archive-diff\":[\"jardiff\"],\"application/x-java-jnlp-file\":[\"jnlp\"],\"application/x-keepass2\":[\"kdbx\"],\"application/x-latex\":[\"latex\"],\"application/x-lua-bytecode\":[\"luac\"],\"application/x-lzh-compressed\":[\"lzh\",\"lha\"],\"application/x-makeself\":[\"run\"],\"application/x-mie\":[\"mie\"],\"application/x-mobipocket-ebook\":[\"prc\",\"mobi\"],\"application/x-ms-application\":[\"application\"],\"application/x-ms-shortcut\":[\"lnk\"],\"application/x-ms-wmd\":[\"wmd\"],\"application/x-ms-wmz\":[\"wmz\"],\"application/x-ms-xbap\":[\"xbap\"],\"application/x-msaccess\":[\"mdb\"],\"application/x-msbinder\":[\"obd\"],\"application/x-mscardfile\":[\"crd\"],\"application/x-msclip\":[\"clp\"],\"application/x-msdos-program\":[\"*exe\"],\"application/x-msdownload\":[\"*exe\",\"*dll\",\"com\",\"bat\",\"*msi\"],\"application/x-msmediaview\":[\"mvb\",\"m13\",\"m14\"],\"application/x-msmetafile\":[\"*wmf\",\"*wmz\",\"*emf\",\"emz\"],\"application/x-msmoney\":[\"mny\"],\"application/x-mspublisher\":[\"pub\"],\"application/x-msschedule\":[\"scd\"],\"application/x-msterminal\":[\"trm\"],\"application/x-mswrite\":[\"wri\"],\"application/x-netcdf\":[\"nc\",\"cdf\"],\"application/x-ns-proxy-autoconfig\":[\"pac\"],\"application/x-nzb\":[\"nzb\"],\"application/x-perl\":[\"pl\",\"pm\"],\"application/x-pilot\":[\"*prc\",\"*pdb\"],\"application/x-pkcs12\":[\"p12\",\"pfx\"],\"application/x-pkcs7-certificates\":[\"p7b\",\"spc\"],\"application/x-pkcs7-certreqresp\":[\"p7r\"],\"application/x-rar-compressed\":[\"*rar\"],\"application/x-redhat-package-manager\":[\"rpm\"],\"application/x-research-info-systems\":[\"ris\"],\"application/x-sea\":[\"sea\"],\"application/x-sh\":[\"sh\"],\"application/x-shar\":[\"shar\"],\"application/x-shockwave-flash\":[\"swf\"],\"application/x-silverlight-app\":[\"xap\"],\"application/x-sql\":[\"sql\"],\"application/x-stuffit\":[\"sit\"],\"application/x-stuffitx\":[\"sitx\"],\"application/x-subrip\":[\"srt\"],\"application/x-sv4cpio\":[\"sv4cpio\"],\"application/x-sv4crc\":[\"sv4crc\"],\"application/x-t3vm-image\":[\"t3\"],\"application/x-tads\":[\"gam\"],\"application/x-tar\":[\"tar\"],\"application/x-tcl\":[\"tcl\",\"tk\"],\"application/x-tex\":[\"tex\"],\"application/x-tex-tfm\":[\"tfm\"],\"application/x-texinfo\":[\"texinfo\",\"texi\"],\"application/x-tgif\":[\"*obj\"],\"application/x-ustar\":[\"ustar\"],\"application/x-virtualbox-hdd\":[\"hdd\"],\"application/x-virtualbox-ova\":[\"ova\"],\"application/x-virtualbox-ovf\":[\"ovf\"],\"application/x-virtualbox-vbox\":[\"vbox\"],\"application/x-virtualbox-vbox-extpack\":[\"vbox-extpack\"],\"application/x-virtualbox-vdi\":[\"vdi\"],\"application/x-virtualbox-vhd\":[\"vhd\"],\"application/x-virtualbox-vmdk\":[\"vmdk\"],\"application/x-wais-source\":[\"src\"],\"application/x-web-app-manifest+json\":[\"webapp\"],\"application/x-x509-ca-cert\":[\"der\",\"crt\",\"pem\"],\"application/x-xfig\":[\"fig\"],\"application/x-xliff+xml\":[\"*xlf\"],\"application/x-xpinstall\":[\"xpi\"],\"application/x-xz\":[\"xz\"],\"application/x-zmachine\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"],\"audio/vnd.dece.audio\":[\"uva\",\"uvva\"],\"audio/vnd.digital-winds\":[\"eol\"],\"audio/vnd.dra\":[\"dra\"],\"audio/vnd.dts\":[\"dts\"],\"audio/vnd.dts.hd\":[\"dtshd\"],\"audio/vnd.lucent.voice\":[\"lvp\"],\"audio/vnd.ms-playready.media.pya\":[\"pya\"],\"audio/vnd.nuera.ecelp4800\":[\"ecelp4800\"],\"audio/vnd.nuera.ecelp7470\":[\"ecelp7470\"],\"audio/vnd.nuera.ecelp9600\":[\"ecelp9600\"],\"audio/vnd.rip\":[\"rip\"],\"audio/x-aac\":[\"aac\"],\"audio/x-aiff\":[\"aif\",\"aiff\",\"aifc\"],\"audio/x-caf\":[\"caf\"],\"audio/x-flac\":[\"flac\"],\"audio/x-m4a\":[\"*m4a\"],\"audio/x-matroska\":[\"mka\"],\"audio/x-mpegurl\":[\"m3u\"],\"audio/x-ms-wax\":[\"wax\"],\"audio/x-ms-wma\":[\"wma\"],\"audio/x-pn-realaudio\":[\"ram\",\"ra\"],\"audio/x-pn-realaudio-plugin\":[\"rmp\"],\"audio/x-realaudio\":[\"*ra\"],\"audio/x-wav\":[\"*wav\"],\"chemical/x-cdx\":[\"cdx\"],\"chemical/x-cif\":[\"cif\"],\"chemical/x-cmdf\":[\"cmdf\"],\"chemical/x-cml\":[\"cml\"],\"chemical/x-csml\":[\"csml\"],\"chemical/x-xyz\":[\"xyz\"],\"image/prs.btif\":[\"btif\"],\"image/prs.pti\":[\"pti\"],\"image/vnd.adobe.photoshop\":[\"psd\"],\"image/vnd.airzip.accelerator.azv\":[\"azv\"],\"image/vnd.dece.graphic\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"],\"image/vnd.djvu\":[\"djvu\",\"djv\"],\"image/vnd.dvb.subtitle\":[\"*sub\"],\"image/vnd.dwg\":[\"dwg\"],\"image/vnd.dxf\":[\"dxf\"],\"image/vnd.fastbidsheet\":[\"fbs\"],\"image/vnd.fpx\":[\"fpx\"],\"image/vnd.fst\":[\"fst\"],\"image/vnd.fujixerox.edmics-mmr\":[\"mmr\"],\"image/vnd.fujixerox.edmics-rlc\":[\"rlc\"],\"image/vnd.microsoft.icon\":[\"ico\"],\"image/vnd.ms-dds\":[\"dds\"],\"image/vnd.ms-modi\":[\"mdi\"],\"image/vnd.ms-photo\":[\"wdp\"],\"image/vnd.net-fpx\":[\"npx\"],\"image/vnd.pco.b16\":[\"b16\"],\"image/vnd.tencent.tap\":[\"tap\"],\"image/vnd.valve.source.texture\":[\"vtf\"],\"image/vnd.wap.wbmp\":[\"wbmp\"],\"image/vnd.xiff\":[\"xif\"],\"image/vnd.zbrush.pcx\":[\"pcx\"],\"image/x-3ds\":[\"3ds\"],\"image/x-cmu-raster\":[\"ras\"],\"image/x-cmx\":[\"cmx\"],\"image/x-freehand\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"],\"image/x-icon\":[\"*ico\"],\"image/x-jng\":[\"jng\"],\"image/x-mrsid-image\":[\"sid\"],\"image/x-ms-bmp\":[\"*bmp\"],\"image/x-pcx\":[\"*pcx\"],\"image/x-pict\":[\"pic\",\"pct\"],\"image/x-portable-anymap\":[\"pnm\"],\"image/x-portable-bitmap\":[\"pbm\"],\"image/x-portable-graymap\":[\"pgm\"],\"image/x-portable-pixmap\":[\"ppm\"],\"image/x-rgb\":[\"rgb\"],\"image/x-tga\":[\"tga\"],\"image/x-xbitmap\":[\"xbm\"],\"image/x-xpixmap\":[\"xpm\"],\"image/x-xwindowdump\":[\"xwd\"],\"message/vnd.wfa.wsc\":[\"wsc\"],\"model/vnd.collada+xml\":[\"dae\"],\"model/vnd.dwf\":[\"dwf\"],\"model/vnd.gdl\":[\"gdl\"],\"model/vnd.gtw\":[\"gtw\"],\"model/vnd.mts\":[\"mts\"],\"model/vnd.opengex\":[\"ogex\"],\"model/vnd.parasolid.transmit.binary\":[\"x_b\"],\"model/vnd.parasolid.transmit.text\":[\"x_t\"],\"model/vnd.usdz+zip\":[\"usdz\"],\"model/vnd.valve.source.compiled-map\":[\"bsp\"],\"model/vnd.vtu\":[\"vtu\"],\"text/prs.lines.tag\":[\"dsc\"],\"text/vnd.curl\":[\"curl\"],\"text/vnd.curl.dcurl\":[\"dcurl\"],\"text/vnd.curl.mcurl\":[\"mcurl\"],\"text/vnd.curl.scurl\":[\"scurl\"],\"text/vnd.dvb.subtitle\":[\"sub\"],\"text/vnd.fly\":[\"fly\"],\"text/vnd.fmi.flexstor\":[\"flx\"],\"text/vnd.graphviz\":[\"gv\"],\"text/vnd.in3d.3dml\":[\"3dml\"],\"text/vnd.in3d.spot\":[\"spot\"],\"text/vnd.sun.j2me.app-descriptor\":[\"jad\"],\"text/vnd.wap.wml\":[\"wml\"],\"text/vnd.wap.wmlscript\":[\"wmls\"],\"text/x-asm\":[\"s\",\"asm\"],\"text/x-c\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"],\"text/x-component\":[\"htc\"],\"text/x-fortran\":[\"f\",\"for\",\"f77\",\"f90\"],\"text/x-handlebars-template\":[\"hbs\"],\"text/x-java-source\":[\"java\"],\"text/x-lua\":[\"lua\"],\"text/x-markdown\":[\"mkd\"],\"text/x-nfo\":[\"nfo\"],\"text/x-opml\":[\"opml\"],\"text/x-org\":[\"*org\"],\"text/x-pascal\":[\"p\",\"pas\"],\"text/x-processing\":[\"pde\"],\"text/x-sass\":[\"sass\"],\"text/x-scss\":[\"scss\"],\"text/x-setext\":[\"etx\"],\"text/x-sfv\":[\"sfv\"],\"text/x-suse-ymp\":[\"ymp\"],\"text/x-uuencode\":[\"uu\"],\"text/x-vcalendar\":[\"vcs\"],\"text/x-vcard\":[\"vcf\"],\"video/vnd.dece.hd\":[\"uvh\",\"uvvh\"],\"video/vnd.dece.mobile\":[\"uvm\",\"uvvm\"],\"video/vnd.dece.pd\":[\"uvp\",\"uvvp\"],\"video/vnd.dece.sd\":[\"uvs\",\"uvvs\"],\"video/vnd.dece.video\":[\"uvv\",\"uvvv\"],\"video/vnd.dvb.file\":[\"dvb\"],\"video/vnd.fvt\":[\"fvt\"],\"video/vnd.mpegurl\":[\"mxu\",\"m4u\"],\"video/vnd.ms-playready.media.pyv\":[\"pyv\"],\"video/vnd.uvvu.mp4\":[\"uvu\",\"uvvu\"],\"video/vnd.vivo\":[\"viv\"],\"video/x-f4v\":[\"f4v\"],\"video/x-fli\":[\"fli\"],\"video/x-flv\":[\"flv\"],\"video/x-m4v\":[\"m4v\"],\"video/x-matroska\":[\"mkv\",\"mk3d\",\"mks\"],\"video/x-mng\":[\"mng\"],\"video/x-ms-asf\":[\"asf\",\"asx\"],\"video/x-ms-vob\":[\"vob\"],\"video/x-ms-wm\":[\"wm\"],\"video/x-ms-wmv\":[\"wmv\"],\"video/x-ms-wmx\":[\"wmx\"],\"video/x-ms-wvx\":[\"wvx\"],\"video/x-msvideo\":[\"avi\"],\"video/x-sgi-movie\":[\"movie\"],\"video/x-smv\":[\"smv\"],\"x-conference/x-cooltalk\":[\"ice\"]};\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/mime/types/other.js?");

/***/ }),

/***/ "./node_modules/mime/types/standard.js":
/*!*********************************************!*\
  !*** ./node_modules/mime/types/standard.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = {\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"ecma\",\"es\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/mrb-consumer+xml\":[\"*xdf\"],\"application/mrb-publish+xml\":[\"*xdf\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"*xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-error+xml\":[\"xer\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/amr\":[\"amr\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\",\"opus\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/iso.segment\":[\"m4s\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/mime/types/standard.js?");

/***/ }),

/***/ "./node_modules/miniget/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/miniget/dist/index.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst http_1 = __importDefault(__webpack_require__(/*! http */ \"http\"));\nconst https_1 = __importDefault(__webpack_require__(/*! https */ \"https\"));\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst httpLibs = { 'http:': http_1.default, 'https:': https_1.default };\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst retryStatusCodes = new Set([429, 503]);\n// `request`, `response`, `abort`, left out, miniget will emit these.\nconst requestEvents = ['connect', 'continue', 'information', 'socket', 'timeout', 'upgrade'];\nconst responseEvents = ['aborted'];\nMiniget.MinigetError = class MinigetError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.statusCode = statusCode;\n    }\n};\nMiniget.defaultOptions = {\n    maxRedirects: 10,\n    maxRetries: 2,\n    maxReconnects: 0,\n    backoff: { inc: 100, max: 10000 },\n};\nfunction Miniget(url, options = {}) {\n    var _a;\n    const opts = Object.assign({}, Miniget.defaultOptions, options);\n    const stream = new stream_1.PassThrough({ highWaterMark: opts.highWaterMark });\n    stream.destroyed = stream.aborted = false;\n    let activeRequest;\n    let activeResponse;\n    let activeDecodedStream;\n    let redirects = 0;\n    let retries = 0;\n    let retryTimeout;\n    let reconnects = 0;\n    let contentLength;\n    let acceptRanges = false;\n    let rangeStart = 0, rangeEnd;\n    let downloaded = 0;\n    // Check if this is a ranged request.\n    if ((_a = opts.headers) === null || _a === void 0 ? void 0 : _a.Range) {\n        let r = /bytes=(\\d+)-(\\d+)?/.exec(`${opts.headers.Range}`);\n        if (r) {\n            rangeStart = parseInt(r[1], 10);\n            rangeEnd = parseInt(r[2], 10);\n        }\n    }\n    // Add `Accept-Encoding` header.\n    if (opts.acceptEncoding) {\n        opts.headers = Object.assign({\n            'Accept-Encoding': Object.keys(opts.acceptEncoding).join(', '),\n        }, opts.headers);\n    }\n    const downloadHasStarted = () => activeDecodedStream && downloaded > 0;\n    const downloadComplete = () => !acceptRanges || downloaded === contentLength;\n    const reconnect = (err) => {\n        activeDecodedStream = null;\n        retries = 0;\n        let inc = opts.backoff.inc;\n        let ms = Math.min(inc, opts.backoff.max);\n        retryTimeout = setTimeout(doDownload, ms);\n        stream.emit('reconnect', reconnects, err);\n    };\n    const reconnectIfEndedEarly = (err) => {\n        if (options.method !== 'HEAD' && !downloadComplete() && reconnects++ < opts.maxReconnects) {\n            reconnect(err);\n            return true;\n        }\n        return false;\n    };\n    const retryRequest = (retryOptions) => {\n        if (stream.destroyed) {\n            return false;\n        }\n        if (downloadHasStarted()) {\n            return reconnectIfEndedEarly(retryOptions.err);\n        }\n        else if ((!retryOptions.err || retryOptions.err.message === 'ENOTFOUND') &&\n            retries++ < opts.maxRetries) {\n            let ms = retryOptions.retryAfter ||\n                Math.min(retries * opts.backoff.inc, opts.backoff.max);\n            retryTimeout = setTimeout(doDownload, ms);\n            stream.emit('retry', retries, retryOptions.err);\n            return true;\n        }\n        return false;\n    };\n    const forwardEvents = (ee, events) => {\n        for (let event of events) {\n            ee.on(event, stream.emit.bind(stream, event));\n        }\n    };\n    const doDownload = () => {\n        let parsed = {}, httpLib;\n        try {\n            let urlObj = typeof url === 'string' ? new URL(url) : url;\n            parsed = Object.assign({}, {\n                host: urlObj.host,\n                hostname: urlObj.hostname,\n                path: urlObj.pathname + urlObj.search + urlObj.hash,\n                port: urlObj.port,\n                protocol: urlObj.protocol,\n            });\n            if (urlObj.username) {\n                parsed.auth = `${urlObj.username}:${urlObj.password}`;\n            }\n            httpLib = httpLibs[String(parsed.protocol)];\n        }\n        catch (err) {\n            // Let the error be caught by the if statement below.\n        }\n        if (!httpLib) {\n            stream.emit('error', new Miniget.MinigetError(`Invalid URL: ${url}`));\n            return;\n        }\n        Object.assign(parsed, opts);\n        if (acceptRanges && downloaded > 0) {\n            let start = downloaded + rangeStart;\n            let end = rangeEnd || '';\n            parsed.headers = Object.assign({}, parsed.headers, {\n                Range: `bytes=${start}-${end}`,\n            });\n        }\n        if (opts.transform) {\n            try {\n                parsed = opts.transform(parsed);\n            }\n            catch (err) {\n                stream.emit('error', err);\n                return;\n            }\n            if (!parsed || parsed.protocol) {\n                httpLib = httpLibs[String(parsed === null || parsed === void 0 ? void 0 : parsed.protocol)];\n                if (!httpLib) {\n                    stream.emit('error', new Miniget.MinigetError('Invalid URL object from `transform` function'));\n                    return;\n                }\n            }\n        }\n        const onError = (err) => {\n            if (stream.destroyed || stream.readableEnded) {\n                return;\n            }\n            // Needed for node v10.\n            if (stream._readableState.ended) {\n                return;\n            }\n            cleanup();\n            if (!retryRequest({ err })) {\n                stream.emit('error', err);\n            }\n            else {\n                activeRequest.removeListener('close', onRequestClose);\n            }\n        };\n        const onRequestClose = () => {\n            cleanup();\n            retryRequest({});\n        };\n        const cleanup = () => {\n            activeRequest.removeListener('close', onRequestClose);\n            activeResponse === null || activeResponse === void 0 ? void 0 : activeResponse.removeListener('data', onData);\n            activeDecodedStream === null || activeDecodedStream === void 0 ? void 0 : activeDecodedStream.removeListener('end', onEnd);\n        };\n        const onData = (chunk) => { downloaded += chunk.length; };\n        const onEnd = () => {\n            cleanup();\n            if (!reconnectIfEndedEarly()) {\n                stream.end();\n            }\n        };\n        activeRequest = httpLib.request(parsed, (res) => {\n            // Needed for node v10, v12.\n            // istanbul ignore next\n            if (stream.destroyed) {\n                return;\n            }\n            if (redirectStatusCodes.has(res.statusCode)) {\n                if (redirects++ >= opts.maxRedirects) {\n                    stream.emit('error', new Miniget.MinigetError('Too many redirects'));\n                }\n                else {\n                    if (res.headers.location) {\n                        url = res.headers.location;\n                    }\n                    else {\n                        let err = new Miniget.MinigetError('Redirect status code given with no location', res.statusCode);\n                        stream.emit('error', err);\n                        cleanup();\n                        return;\n                    }\n                    setTimeout(doDownload, parseInt(res.headers['retry-after'] || '0', 10) * 1000);\n                    stream.emit('redirect', url);\n                }\n                cleanup();\n                return;\n                // Check for rate limiting.\n            }\n            else if (retryStatusCodes.has(res.statusCode)) {\n                if (!retryRequest({ retryAfter: parseInt(res.headers['retry-after'] || '0', 10) })) {\n                    let err = new Miniget.MinigetError(`Status code: ${res.statusCode}`, res.statusCode);\n                    stream.emit('error', err);\n                }\n                cleanup();\n                return;\n            }\n            else if (res.statusCode && (res.statusCode < 200 || res.statusCode >= 400)) {\n                let err = new Miniget.MinigetError(`Status code: ${res.statusCode}`, res.statusCode);\n                if (res.statusCode >= 500) {\n                    onError(err);\n                }\n                else {\n                    stream.emit('error', err);\n                }\n                cleanup();\n                return;\n            }\n            activeDecodedStream = res;\n            if (opts.acceptEncoding && res.headers['content-encoding']) {\n                for (let enc of res.headers['content-encoding'].split(', ').reverse()) {\n                    let fn = opts.acceptEncoding[enc];\n                    if (fn) {\n                        activeDecodedStream = activeDecodedStream.pipe(fn());\n                        activeDecodedStream.on('error', onError);\n                    }\n                }\n            }\n            if (!contentLength) {\n                contentLength = parseInt(`${res.headers['content-length']}`, 10);\n                acceptRanges = res.headers['accept-ranges'] === 'bytes' &&\n                    contentLength > 0 && opts.maxReconnects > 0;\n            }\n            res.on('data', onData);\n            activeDecodedStream.on('end', onEnd);\n            activeDecodedStream.pipe(stream, { end: !acceptRanges });\n            activeResponse = res;\n            stream.emit('response', res);\n            res.on('error', onError);\n            forwardEvents(res, responseEvents);\n        });\n        activeRequest.on('error', onError);\n        activeRequest.on('close', onRequestClose);\n        forwardEvents(activeRequest, requestEvents);\n        if (stream.destroyed) {\n            streamDestroy(...destroyArgs);\n        }\n        stream.emit('request', activeRequest);\n        activeRequest.end();\n    };\n    stream.abort = (err) => {\n        console.warn('`MinigetStream#abort()` has been deprecated in favor of `MinigetStream#destroy()`');\n        stream.aborted = true;\n        stream.emit('abort');\n        stream.destroy(err);\n    };\n    let destroyArgs;\n    const streamDestroy = (err) => {\n        activeRequest.destroy(err);\n        activeDecodedStream === null || activeDecodedStream === void 0 ? void 0 : activeDecodedStream.unpipe(stream);\n        activeDecodedStream === null || activeDecodedStream === void 0 ? void 0 : activeDecodedStream.destroy();\n        clearTimeout(retryTimeout);\n    };\n    stream._destroy = (...args) => {\n        stream.destroyed = true;\n        if (activeRequest) {\n            streamDestroy(...args);\n        }\n        else {\n            destroyArgs = args;\n        }\n    };\n    stream.text = () => new Promise((resolve, reject) => {\n        let body = '';\n        stream.setEncoding('utf8');\n        stream.on('data', chunk => body += chunk);\n        stream.on('end', () => resolve(body));\n        stream.on('error', reject);\n    });\n    process.nextTick(doDownload);\n    return stream;\n}\nmodule.exports = Miniget;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/miniget/dist/index.js?");

/***/ }),

/***/ "./node_modules/object-inspect/index.js":
/*!**********************************************!*\
  !*** ./node_modules/object-inspect/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar match = String.prototype.match;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nvar inspectCustom = __webpack_require__(/*! ./util.inspect */ \"./node_modules/object-inspect/util.inspect.js\").custom;\nvar inspectSymbol = inspectCustom && isSymbol(inspectCustom) ? inspectCustom : null;\nvar toStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag !== 'undefined' ? Symbol.toStringTag : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('options \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        return String(obj);\n    }\n    if (typeof obj === 'bigint') {\n        return String(obj) + 'n';\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = seen.slice();\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function') {\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + keys.join(', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? String(obj).replace(/^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + String(obj.nodeName).toLowerCase();\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + String(obj.nodeName).toLowerCase() + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + xs.join(', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {\n            return obj[inspectSymbol]();\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        mapForEach.call(obj, function (value, key) {\n            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n        });\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        setForEach.call(obj, function (value) {\n            setParts.push(inspect(value, obj));\n        });\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? toStr(obj).slice(8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + [].concat(stringTag || [], protoTag || []).join(': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + ys.join(', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return String(s).replace(/\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString(str.slice(0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = str.replace(/(['\\\\])/g, '\\\\$1').replace(/[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + n.toString(16).toUpperCase();\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : entries.join(', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = Array(opts.indent + 1).join(' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: Array(depth + 1).join(baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + xs.join(',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ((/[^\\w$]/).test(key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/object-inspect/index.js?");

/***/ }),

/***/ "./node_modules/object-inspect/util.inspect.js":
/*!*****************************************************!*\
  !*** ./node_modules/object-inspect/util.inspect.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! util */ \"util\").inspect;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/object-inspect/util.inspect.js?");

/***/ }),

/***/ "./node_modules/ow/dist/argument-error.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/argument-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArgumentError = void 0;\nconst generate_stack_1 = __webpack_require__(/*! ./utils/generate-stack */ \"./node_modules/ow/dist/utils/generate-stack.js\");\nconst wrapStackTrace = (error, stack) => `${error.name}: ${error.message}\\n${stack}`;\n/**\n@hidden\n*/\nclass ArgumentError extends Error {\n    constructor(message, context, errors = new Map()) {\n        super(message);\n        Object.defineProperty(this, \"validationErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'ArgumentError';\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, context);\n        }\n        else {\n            this.stack = wrapStackTrace(this, generate_stack_1.generateStackTrace());\n        }\n        this.validationErrors = errors;\n    }\n}\nexports.ArgumentError = ArgumentError;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/argument-error.js?");

/***/ }),

/***/ "./node_modules/ow/dist/index.js":
/*!***************************************!*\
  !*** ./node_modules/ow/dist/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArgumentError = exports.Predicate = void 0;\nconst callsites_1 = __webpack_require__(/*! callsites */ \"./node_modules/callsites/index.js\");\nconst infer_label_1 = __webpack_require__(/*! ./utils/infer-label */ \"./node_modules/ow/dist/utils/infer-label.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicates/predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nObject.defineProperty(exports, \"Predicate\", ({ enumerable: true, get: function () { return predicate_1.Predicate; } }));\nconst base_predicate_1 = __webpack_require__(/*! ./predicates/base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\nconst modifiers_1 = __webpack_require__(/*! ./modifiers */ \"./node_modules/ow/dist/modifiers.js\");\nconst predicates_1 = __webpack_require__(/*! ./predicates */ \"./node_modules/ow/dist/predicates.js\");\nconst test_1 = __webpack_require__(/*! ./test */ \"./node_modules/ow/dist/test.js\");\nconst ow = (value, labelOrPredicate, predicate) => {\n    if (!base_predicate_1.isPredicate(labelOrPredicate) && typeof labelOrPredicate !== 'string') {\n        throw new TypeError(`Expected second argument to be a predicate or a string, got \\`${typeof labelOrPredicate}\\``);\n    }\n    if (base_predicate_1.isPredicate(labelOrPredicate)) {\n        // If the second argument is a predicate, infer the label\n        const stackFrames = callsites_1.default();\n        test_1.default(value, () => infer_label_1.inferLabel(stackFrames), labelOrPredicate);\n        return;\n    }\n    test_1.default(value, labelOrPredicate, predicate);\n};\nObject.defineProperties(ow, {\n    isValid: {\n        value: (value, predicate) => {\n            try {\n                test_1.default(value, '', predicate);\n                return true;\n            }\n            catch {\n                return false;\n            }\n        }\n    },\n    create: {\n        value: (labelOrPredicate, predicate) => (value, label) => {\n            if (base_predicate_1.isPredicate(labelOrPredicate)) {\n                const stackFrames = callsites_1.default();\n                test_1.default(value, label !== null && label !== void 0 ? label : (() => infer_label_1.inferLabel(stackFrames)), labelOrPredicate);\n                return;\n            }\n            test_1.default(value, label !== null && label !== void 0 ? label : (labelOrPredicate), predicate);\n        }\n    }\n});\n// Can't use `export default predicates(modifiers(ow)) as Ow` because the variable needs a type annotation to avoid a compiler error when used:\n// Assertions require every name in the call target to be declared with an explicit type annotation.ts(2775)\n// See https://github.com/microsoft/TypeScript/issues/36931 for more details.\nconst _ow = predicates_1.default(modifiers_1.default(ow));\nexports[\"default\"] = _ow;\n__exportStar(__webpack_require__(/*! ./predicates */ \"./node_modules/ow/dist/predicates.js\"), exports);\nvar argument_error_1 = __webpack_require__(/*! ./argument-error */ \"./node_modules/ow/dist/argument-error.js\");\nObject.defineProperty(exports, \"ArgumentError\", ({ enumerable: true, get: function () { return argument_error_1.ArgumentError; } }));\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/index.js?");

/***/ }),

/***/ "./node_modules/ow/dist/modifiers.js":
/*!*******************************************!*\
  !*** ./node_modules/ow/dist/modifiers.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst predicates_1 = __webpack_require__(/*! ./predicates */ \"./node_modules/ow/dist/predicates.js\");\nexports[\"default\"] = (object) => {\n    Object.defineProperties(object, {\n        optional: {\n            get: () => predicates_1.default({}, { optional: true })\n        }\n    });\n    return object;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/modifiers.js?");

/***/ }),

/***/ "./node_modules/ow/dist/operators/not.js":
/*!***********************************************!*\
  !*** ./node_modules/ow/dist/operators/not.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.not = void 0;\nconst random_id_1 = __webpack_require__(/*! ../utils/random-id */ \"./node_modules/ow/dist/utils/random-id.js\");\nconst predicate_1 = __webpack_require__(/*! ../predicates/predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\n/**\nOperator which inverts the following validation.\n\n@hidden\n\n@param predictate - Predicate to wrap inside the operator.\n*/\nconst not = (predicate) => {\n    const originalAddValidator = predicate.addValidator;\n    predicate.addValidator = (validator) => {\n        const { validator: fn, message, negatedMessage } = validator;\n        const placeholder = random_id_1.default();\n        validator.message = (value, label) => (negatedMessage ?\n            negatedMessage(value, label) :\n            message(value, placeholder).replace(/ to /, '$&not ').replace(placeholder, label));\n        validator.validator = (value) => !fn(value);\n        predicate[predicate_1.validatorSymbol].push(validator);\n        predicate.addValidator = originalAddValidator;\n        return predicate;\n    };\n    return predicate;\n};\nexports.not = not;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/operators/not.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates.js":
/*!********************************************!*\
  !*** ./node_modules/ow/dist/predicates.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AnyPredicate = exports.DataViewPredicate = exports.ArrayBufferPredicate = exports.TypedArrayPredicate = exports.WeakSetPredicate = exports.SetPredicate = exports.WeakMapPredicate = exports.MapPredicate = exports.ErrorPredicate = exports.DatePredicate = exports.ObjectPredicate = exports.ArrayPredicate = exports.BooleanPredicate = exports.BigIntPredicate = exports.NumberPredicate = exports.StringPredicate = void 0;\nconst string_1 = __webpack_require__(/*! ./predicates/string */ \"./node_modules/ow/dist/predicates/string.js\");\nObject.defineProperty(exports, \"StringPredicate\", ({ enumerable: true, get: function () { return string_1.StringPredicate; } }));\nconst number_1 = __webpack_require__(/*! ./predicates/number */ \"./node_modules/ow/dist/predicates/number.js\");\nObject.defineProperty(exports, \"NumberPredicate\", ({ enumerable: true, get: function () { return number_1.NumberPredicate; } }));\nconst bigint_1 = __webpack_require__(/*! ./predicates/bigint */ \"./node_modules/ow/dist/predicates/bigint.js\");\nObject.defineProperty(exports, \"BigIntPredicate\", ({ enumerable: true, get: function () { return bigint_1.BigIntPredicate; } }));\nconst boolean_1 = __webpack_require__(/*! ./predicates/boolean */ \"./node_modules/ow/dist/predicates/boolean.js\");\nObject.defineProperty(exports, \"BooleanPredicate\", ({ enumerable: true, get: function () { return boolean_1.BooleanPredicate; } }));\nconst predicate_1 = __webpack_require__(/*! ./predicates/predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nconst array_1 = __webpack_require__(/*! ./predicates/array */ \"./node_modules/ow/dist/predicates/array.js\");\nObject.defineProperty(exports, \"ArrayPredicate\", ({ enumerable: true, get: function () { return array_1.ArrayPredicate; } }));\nconst object_1 = __webpack_require__(/*! ./predicates/object */ \"./node_modules/ow/dist/predicates/object.js\");\nObject.defineProperty(exports, \"ObjectPredicate\", ({ enumerable: true, get: function () { return object_1.ObjectPredicate; } }));\nconst date_1 = __webpack_require__(/*! ./predicates/date */ \"./node_modules/ow/dist/predicates/date.js\");\nObject.defineProperty(exports, \"DatePredicate\", ({ enumerable: true, get: function () { return date_1.DatePredicate; } }));\nconst error_1 = __webpack_require__(/*! ./predicates/error */ \"./node_modules/ow/dist/predicates/error.js\");\nObject.defineProperty(exports, \"ErrorPredicate\", ({ enumerable: true, get: function () { return error_1.ErrorPredicate; } }));\nconst map_1 = __webpack_require__(/*! ./predicates/map */ \"./node_modules/ow/dist/predicates/map.js\");\nObject.defineProperty(exports, \"MapPredicate\", ({ enumerable: true, get: function () { return map_1.MapPredicate; } }));\nconst weak_map_1 = __webpack_require__(/*! ./predicates/weak-map */ \"./node_modules/ow/dist/predicates/weak-map.js\");\nObject.defineProperty(exports, \"WeakMapPredicate\", ({ enumerable: true, get: function () { return weak_map_1.WeakMapPredicate; } }));\nconst set_1 = __webpack_require__(/*! ./predicates/set */ \"./node_modules/ow/dist/predicates/set.js\");\nObject.defineProperty(exports, \"SetPredicate\", ({ enumerable: true, get: function () { return set_1.SetPredicate; } }));\nconst weak_set_1 = __webpack_require__(/*! ./predicates/weak-set */ \"./node_modules/ow/dist/predicates/weak-set.js\");\nObject.defineProperty(exports, \"WeakSetPredicate\", ({ enumerable: true, get: function () { return weak_set_1.WeakSetPredicate; } }));\nconst typed_array_1 = __webpack_require__(/*! ./predicates/typed-array */ \"./node_modules/ow/dist/predicates/typed-array.js\");\nObject.defineProperty(exports, \"TypedArrayPredicate\", ({ enumerable: true, get: function () { return typed_array_1.TypedArrayPredicate; } }));\nconst array_buffer_1 = __webpack_require__(/*! ./predicates/array-buffer */ \"./node_modules/ow/dist/predicates/array-buffer.js\");\nObject.defineProperty(exports, \"ArrayBufferPredicate\", ({ enumerable: true, get: function () { return array_buffer_1.ArrayBufferPredicate; } }));\nconst data_view_1 = __webpack_require__(/*! ./predicates/data-view */ \"./node_modules/ow/dist/predicates/data-view.js\");\nObject.defineProperty(exports, \"DataViewPredicate\", ({ enumerable: true, get: function () { return data_view_1.DataViewPredicate; } }));\nconst any_1 = __webpack_require__(/*! ./predicates/any */ \"./node_modules/ow/dist/predicates/any.js\");\nObject.defineProperty(exports, \"AnyPredicate\", ({ enumerable: true, get: function () { return any_1.AnyPredicate; } }));\nexports[\"default\"] = (object, options) => {\n    Object.defineProperties(object, {\n        string: {\n            get: () => new string_1.StringPredicate(options)\n        },\n        number: {\n            get: () => new number_1.NumberPredicate(options)\n        },\n        bigint: {\n            get: () => new bigint_1.BigIntPredicate(options)\n        },\n        boolean: {\n            get: () => new boolean_1.BooleanPredicate(options)\n        },\n        undefined: {\n            get: () => new predicate_1.Predicate('undefined', options)\n        },\n        null: {\n            get: () => new predicate_1.Predicate('null', options)\n        },\n        nullOrUndefined: {\n            get: () => new predicate_1.Predicate('nullOrUndefined', options)\n        },\n        nan: {\n            get: () => new predicate_1.Predicate('nan', options)\n        },\n        symbol: {\n            get: () => new predicate_1.Predicate('symbol', options)\n        },\n        array: {\n            get: () => new array_1.ArrayPredicate(options)\n        },\n        object: {\n            get: () => new object_1.ObjectPredicate(options)\n        },\n        date: {\n            get: () => new date_1.DatePredicate(options)\n        },\n        error: {\n            get: () => new error_1.ErrorPredicate(options)\n        },\n        map: {\n            get: () => new map_1.MapPredicate(options)\n        },\n        weakMap: {\n            get: () => new weak_map_1.WeakMapPredicate(options)\n        },\n        set: {\n            get: () => new set_1.SetPredicate(options)\n        },\n        weakSet: {\n            get: () => new weak_set_1.WeakSetPredicate(options)\n        },\n        function: {\n            get: () => new predicate_1.Predicate('Function', options)\n        },\n        buffer: {\n            get: () => new predicate_1.Predicate('Buffer', options)\n        },\n        regExp: {\n            get: () => new predicate_1.Predicate('RegExp', options)\n        },\n        promise: {\n            get: () => new predicate_1.Predicate('Promise', options)\n        },\n        typedArray: {\n            get: () => new typed_array_1.TypedArrayPredicate('TypedArray', options)\n        },\n        int8Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int8Array', options)\n        },\n        uint8Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint8Array', options)\n        },\n        uint8ClampedArray: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint8ClampedArray', options)\n        },\n        int16Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int16Array', options)\n        },\n        uint16Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint16Array', options)\n        },\n        int32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int32Array', options)\n        },\n        uint32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint32Array', options)\n        },\n        float32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Float32Array', options)\n        },\n        float64Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Float64Array', options)\n        },\n        arrayBuffer: {\n            get: () => new array_buffer_1.ArrayBufferPredicate('ArrayBuffer', options)\n        },\n        sharedArrayBuffer: {\n            get: () => new array_buffer_1.ArrayBufferPredicate('SharedArrayBuffer', options)\n        },\n        dataView: {\n            get: () => new data_view_1.DataViewPredicate(options)\n        },\n        iterable: {\n            get: () => new predicate_1.Predicate('Iterable', options)\n        },\n        any: {\n            value: (...predicates) => new any_1.AnyPredicate(predicates, options)\n        }\n    });\n    return object;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/any.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/predicates/any.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AnyPredicate = void 0;\nconst argument_error_1 = __webpack_require__(/*! ../argument-error */ \"./node_modules/ow/dist/argument-error.js\");\nconst base_predicate_1 = __webpack_require__(/*! ./base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\nconst generate_argument_error_message_1 = __webpack_require__(/*! ../utils/generate-argument-error-message */ \"./node_modules/ow/dist/utils/generate-argument-error-message.js\");\n/**\n@hidden\n*/\nclass AnyPredicate {\n    constructor(predicates, options = {}) {\n        Object.defineProperty(this, \"predicates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: predicates\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n    }\n    [base_predicate_1.testSymbol](value, main, label, idLabel) {\n        const errors = new Map();\n        for (const predicate of this.predicates) {\n            try {\n                main(value, label, predicate, idLabel);\n                return;\n            }\n            catch (error) {\n                if (value === undefined && this.options.optional === true) {\n                    return;\n                }\n                // If we received an ArgumentError, then..\n                if (error instanceof argument_error_1.ArgumentError) {\n                    // Iterate through every error reported.\n                    for (const [key, value] of error.validationErrors.entries()) {\n                        // Get the current errors set, if any.\n                        const alreadyPresent = errors.get(key);\n                        // Add all errors under the same key\n                        errors.set(key, new Set([...alreadyPresent !== null && alreadyPresent !== void 0 ? alreadyPresent : [], ...value]));\n                    }\n                }\n            }\n        }\n        if (errors.size > 0) {\n            // Generate the `error.message` property.\n            const message = generate_argument_error_message_1.generateArgumentErrorMessage(errors, true);\n            throw new argument_error_1.ArgumentError(`Any predicate failed with the following errors:\\n${message}`, main, errors);\n        }\n    }\n}\nexports.AnyPredicate = AnyPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/any.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/array-buffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/ow/dist/predicates/array-buffer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArrayBufferPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass ArrayBufferPredicate extends predicate_1.Predicate {\n    /**\n    Test an array buffer to have a specific byte length.\n\n    @param byteLength - The byte length of the array buffer.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test an array buffer to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the array buffer.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test an array buffer to have a minimum byte length.\n\n    @param length - The minimum byte length of the array buffer.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n}\nexports.ArrayBufferPredicate = ArrayBufferPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/array-buffer.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/array.js":
/*!**************************************************!*\
  !*** ./node_modules/ow/dist/predicates/array.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArrayPredicate = void 0;\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nconst match_shape_1 = __webpack_require__(/*! ../utils/match-shape */ \"./node_modules/ow/dist/utils/match-shape.js\");\nconst of_type_1 = __webpack_require__(/*! ../utils/of-type */ \"./node_modules/ow/dist/utils/of-type.js\");\nclass ArrayPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('array', options);\n    }\n    /**\n    Test an array to have a specific length.\n\n    @param length - The length of the array.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test an array to have a minimum length.\n\n    @param length - The minimum length of the array.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test an array to have a maximum length.\n\n    @param length - The maximum length of the array.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test an array to start with a specific value. The value is tested by identity, not structure.\n\n    @param searchElement - The value that should be the start of the array.\n    */\n    startsWith(searchElement) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to start with \\`${searchElement}\\`, got \\`${value[0]}\\``,\n            validator: value => value[0] === searchElement\n        });\n    }\n    /**\n    Test an array to end with a specific value. The value is tested by identity, not structure.\n\n    @param searchElement - The value that should be the end of the array.\n    */\n    endsWith(searchElement) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to end with \\`${searchElement}\\`, got \\`${value[value.length - 1]}\\``,\n            validator: value => value[value.length - 1] === searchElement\n        });\n    }\n    /**\n    Test an array to include all the provided elements. The values are tested by identity, not structure.\n\n    @param searchElements - The values that should be included in the array.\n    */\n    includes(...searchElements) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include all elements of \\`${JSON.stringify(searchElements)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => searchElements.every(element => value.includes(element))\n        });\n    }\n    /**\n    Test an array to include any of the provided elements. The values are tested by identity, not structure.\n\n    @param searchElements - The values that should be included in the array.\n    */\n    includesAny(...searchElements) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include any element of \\`${JSON.stringify(searchElements)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => searchElements.some(element => value.includes(element))\n        });\n    }\n    /**\n    Test an array to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be empty, got \\`${JSON.stringify(value)}\\``,\n            validator: value => value.length === 0\n        });\n    }\n    /**\n    Test an array to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: value => value.length > 0\n        });\n    }\n    /**\n    Test an array to be deeply equal to the provided array.\n\n    @param expected - Expected value to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify(expected)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => isEqual(value, expected)\n        });\n    }\n    /**\n    Test all elements in the array to match to provided predicate.\n\n    @param predicate - The predicate that should be applied against every individual item.\n\n    @example\n    ```\n    ow(['a', 1], ow.array.ofType(ow.any(ow.string, ow.number)));\n    ```\n    */\n    ofType(predicate) {\n        // TODO [typescript@>=5] If higher-kinded types are supported natively by typescript, refactor `addValidator` to use them to avoid the usage of `any`. Otherwise, bump or remove this TODO.\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: value => of_type_1.default(value, 'values', predicate)\n        });\n    }\n    /**\n    Test if the elements in the array exactly matches the elements placed at the same indices in the predicates array.\n\n    @param predicates - Predicates to test the array against. Describes what the tested array should look like.\n\n    @example\n    ```\n    ow(['1', 2], ow.array.exactShape([ow.string, ow.number]));\n    ```\n    */\n    exactShape(predicates) {\n        const shape = predicates;\n        return this.addValidator({\n            message: (_, label, message) => `${message.replace('Expected', 'Expected element')} in ${label}`,\n            validator: object => match_shape_1.exact(object, shape, undefined, true)\n        });\n    }\n}\nexports.ArrayPredicate = ArrayPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/array.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/base-predicate.js":
/*!***********************************************************!*\
  !*** ./node_modules/ow/dist/predicates/base-predicate.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isPredicate = exports.testSymbol = void 0;\n/**\n@hidden\n*/\nexports.testSymbol = Symbol('test');\n/**\n@hidden\n*/\nconst isPredicate = (value) => Boolean(value[exports.testSymbol]);\nexports.isPredicate = isPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/base-predicate.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/bigint.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/predicates/bigint.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BigIntPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass BigIntPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('bigint', options);\n    }\n}\nexports.BigIntPredicate = BigIntPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/bigint.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/boolean.js":
/*!****************************************************!*\
  !*** ./node_modules/ow/dist/predicates/boolean.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BooleanPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass BooleanPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('boolean', options);\n    }\n    /**\n    Test a boolean to be true.\n    */\n    get true() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be true, got ${value}`,\n            validator: value => value\n        });\n    }\n    /**\n    Test a boolean to be false.\n    */\n    get false() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be false, got ${value}`,\n            validator: value => !value\n        });\n    }\n}\nexports.BooleanPredicate = BooleanPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/boolean.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/data-view.js":
/*!******************************************************!*\
  !*** ./node_modules/ow/dist/predicates/data-view.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DataViewPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass DataViewPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('DataView', options);\n    }\n    /**\n    Test a DataView to have a specific byte length.\n\n    @param byteLength - The byte length of the DataView.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the DataView.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param length - The minimum byte length of the DataView.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n}\nexports.DataViewPredicate = DataViewPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/data-view.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/date.js":
/*!*************************************************!*\
  !*** ./node_modules/ow/dist/predicates/date.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DatePredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass DatePredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('date', options);\n    }\n    /**\n    Test a date to be before another date.\n\n    @param date - Maximum value.\n    */\n    before(date) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} ${value.toISOString()} to be before ${date.toISOString()}`,\n            validator: value => value.getTime() < date.getTime()\n        });\n    }\n    /**\n    Test a date to be before another date.\n\n    @param date - Minimum value.\n    */\n    after(date) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} ${value.toISOString()} to be after ${date.toISOString()}`,\n            validator: value => value.getTime() > date.getTime()\n        });\n    }\n}\nexports.DatePredicate = DatePredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/date.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/error.js":
/*!**************************************************!*\
  !*** ./node_modules/ow/dist/predicates/error.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass ErrorPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('error', options);\n    }\n    /**\n    Test an error to have a specific name.\n\n    @param expected - Expected name of the Error.\n    */\n    name(expected) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} to have name \\`${expected}\\`, got \\`${error.name}\\``,\n            validator: error => error.name === expected\n        });\n    }\n    /**\n    Test an error to have a specific message.\n\n    @param expected - Expected message of the Error.\n    */\n    message(expected) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} message to be \\`${expected}\\`, got \\`${error.message}\\``,\n            validator: error => error.message === expected\n        });\n    }\n    /**\n    Test the error message to include a specific message.\n\n    @param message - Message that should be included in the error.\n    */\n    messageIncludes(message) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} message to include \\`${message}\\`, got \\`${error.message}\\``,\n            validator: error => error.message.includes(message)\n        });\n    }\n    /**\n    Test the error object to have specific keys.\n\n    @param keys - One or more keys which should be part of the error object.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} message to have keys \\`${keys.join('`, `')}\\``,\n            validator: error => keys.every(key => Object.prototype.hasOwnProperty.call(error, key))\n        });\n    }\n    /**\n    Test an error to be of a specific instance type.\n\n    @param instance - The expected instance type of the error.\n    */\n    instanceOf(instance) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} \\`${error.name}\\` to be of type \\`${instance.name}\\``,\n            validator: error => error instanceof instance\n        });\n    }\n    /**\n    Test an Error to be a TypeError.\n    */\n    get typeError() {\n        return this.instanceOf(TypeError);\n    }\n    /**\n    Test an Error to be an EvalError.\n    */\n    get evalError() {\n        return this.instanceOf(EvalError);\n    }\n    /**\n    Test an Error to be a RangeError.\n    */\n    get rangeError() {\n        return this.instanceOf(RangeError);\n    }\n    /**\n    Test an Error to be a ReferenceError.\n    */\n    get referenceError() {\n        return this.instanceOf(ReferenceError);\n    }\n    /**\n    Test an Error to be a SyntaxError.\n    */\n    get syntaxError() {\n        return this.instanceOf(SyntaxError);\n    }\n    /**\n    Test an Error to be a URIError.\n    */\n    get uriError() {\n        return this.instanceOf(URIError);\n    }\n}\nexports.ErrorPredicate = ErrorPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/error.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/map.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/predicates/map.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MapPredicate = void 0;\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst of_type_1 = __webpack_require__(/*! ../utils/of-type */ \"./node_modules/ow/dist/utils/of-type.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass MapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('Map', options);\n    }\n    /**\n    Test a Map to have a specific size.\n\n    @param size - The size of the Map.\n    */\n    size(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have size \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size === size\n        });\n    }\n    /**\n    Test an Map to have a minimum size.\n\n    @param size - The minimum size of the Map.\n    */\n    minSize(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have a minimum size of \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size >= size,\n            negatedMessage: (map, label) => `Expected ${label} to have a maximum size of \\`${size - 1}\\`, got \\`${map.size}\\``\n        });\n    }\n    /**\n    Test an Map to have a maximum size.\n\n    @param size - The maximum size of the Map.\n    */\n    maxSize(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have a maximum size of \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size <= size,\n            negatedMessage: (map, label) => `Expected ${label} to have a minimum size of \\`${size + 1}\\`, got \\`${map.size}\\``\n        });\n    }\n    /**\n    Test a Map to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the Map.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a Map to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the Map.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n    /**\n    Test a Map to include all the provided values. The values are tested by identity, not structure.\n\n    @param values - The values that should be a value in the Map.\n    */\n    hasValues(...values) {\n        return this.addValidator({\n            message: (_, label, missingValues) => `Expected ${label} to have values \\`${JSON.stringify(missingValues)}\\``,\n            validator: map => has_items_1.default(new Set(map.values()), values)\n        });\n    }\n    /**\n    Test a Map to include any of the provided values. The values are tested by identity, not structure.\n\n    @param values - The values that could be a value in the Map.\n    */\n    hasAnyValues(...values) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any value of \\`${JSON.stringify(values)}\\``,\n            validator: map => {\n                const valueSet = new Set(map.values());\n                return values.some(key => valueSet.has(key));\n            }\n        });\n    }\n    /**\n    Test all the keys in the Map to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every key in the Map.\n    */\n    keysOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: map => of_type_1.default(map.keys(), 'keys', predicate)\n        });\n    }\n    /**\n    Test all the values in the Map to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the Map.\n    */\n    valuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: map => of_type_1.default(map.values(), 'values', predicate)\n        });\n    }\n    /**\n    Test a Map to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to be empty, got \\`${JSON.stringify([...map])}\\``,\n            validator: map => map.size === 0\n        });\n    }\n    /**\n    Test a Map to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: map => map.size > 0\n        });\n    }\n    /**\n    Test a Map to be deeply equal to the provided Map.\n\n    @param expected - Expected Map to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify([...expected])}\\`, got \\`${JSON.stringify([...map])}\\``,\n            validator: map => isEqual(map, expected)\n        });\n    }\n}\nexports.MapPredicate = MapPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/map.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/number.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/predicates/number.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NumberPredicate = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass NumberPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('number', options);\n    }\n    /**\n    Test a number to be in a specified range.\n\n    @param start - Start of the range.\n    @param end - End of the range.\n    */\n    inRange(start, end) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be in range [${start}..${end}], got ${value}`,\n            validator: value => is_1.default.inRange(value, [start, end])\n        });\n    }\n    /**\n    Test a number to be greater than the provided value.\n\n    @param number - Minimum value.\n    */\n    greaterThan(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be greater than ${number}, got ${value}`,\n            validator: value => value > number\n        });\n    }\n    /**\n    Test a number to be greater than or equal to the provided value.\n\n    @param number - Minimum value.\n    */\n    greaterThanOrEqual(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be greater than or equal to ${number}, got ${value}`,\n            validator: value => value >= number\n        });\n    }\n    /**\n    Test a number to be less than the provided value.\n\n    @param number - Maximum value.\n    */\n    lessThan(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be less than ${number}, got ${value}`,\n            validator: value => value < number\n        });\n    }\n    /**\n    Test a number to be less than or equal to the provided value.\n\n    @param number - Minimum value.\n    */\n    lessThanOrEqual(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be less than or equal to ${number}, got ${value}`,\n            validator: value => value <= number\n        });\n    }\n    /**\n    Test a number to be equal to a specified number.\n\n    @param expected - Expected value to match.\n    */\n    equal(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be equal to ${expected}, got ${value}`,\n            validator: value => value === expected\n        });\n    }\n    /**\n    Test if a number is an element of the provided list.\n\n    @param list - List of possible values.\n    */\n    oneOf(list) {\n        return this.addValidator({\n            message: (value, label) => {\n                let printedList = JSON.stringify(list);\n                if (list.length > 10) {\n                    const overflow = list.length - 10;\n                    printedList = JSON.stringify(list.slice(0, 10)).replace(/]$/, `,…+${overflow} more]`);\n                }\n                return `Expected ${label} to be one of \\`${printedList}\\`, got ${value}`;\n            },\n            validator: value => list.includes(value)\n        });\n    }\n    /**\n    Test a number to be an integer.\n    */\n    get integer() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be an integer, got ${value}`,\n            validator: value => is_1.default.integer(value)\n        });\n    }\n    /**\n    Test a number to be finite.\n    */\n    get finite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be finite, got ${value}`,\n            validator: value => !is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be infinite.\n    */\n    get infinite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be infinite, got ${value}`,\n            validator: value => is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be positive.\n    */\n    get positive() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be positive, got ${value}`,\n            validator: value => value > 0\n        });\n    }\n    /**\n    Test a number to be negative.\n    */\n    get negative() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be negative, got ${value}`,\n            validator: value => value < 0\n        });\n    }\n    /**\n    Test a number to be an integer or infinite.\n    */\n    get integerOrInfinite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be an integer or infinite, got ${value}`,\n            validator: value => is_1.default.integer(value) || is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be in a valid range for a 8-bit unsigned integer.\n    */\n    get uint8() {\n        return this.integer.inRange(0, 255);\n    }\n    /**\n    Test a number to be in a valid range for a 16-bit unsigned integer.\n    */\n    get uint16() {\n        return this.integer.inRange(0, 65535);\n    }\n    /**\n    Test a number to be in a valid range for a 32-bit unsigned integer.\n    */\n    get uint32() {\n        return this.integer.inRange(0, 4294967295);\n    }\n    /**\n    Test a number to be in a valid range for a 8-bit signed integer.\n    */\n    get int8() {\n        return this.integer.inRange(-128, 127);\n    }\n    /**\n    Test a number to be in a valid range for a 16-bit signed integer.\n    */\n    get int16() {\n        return this.integer.inRange(-32768, 32767);\n    }\n    /**\n    Test a number to be in a valid range for a 32-bit signed integer.\n    */\n    get int32() {\n        return this.integer.inRange(-2147483648, 2147483647);\n    }\n}\nexports.NumberPredicate = NumberPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/number.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/object.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/predicates/object.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ObjectPredicate = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js\");\nconst dotProp = __webpack_require__(/*! dot-prop */ \"./node_modules/ow/node_modules/dot-prop/index.js\");\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst of_type_1 = __webpack_require__(/*! ../utils/of-type */ \"./node_modules/ow/dist/utils/of-type.js\");\nconst of_type_deep_1 = __webpack_require__(/*! ../utils/of-type-deep */ \"./node_modules/ow/dist/utils/of-type-deep.js\");\nconst match_shape_1 = __webpack_require__(/*! ../utils/match-shape */ \"./node_modules/ow/dist/utils/match-shape.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass ObjectPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('object', options);\n    }\n    /**\n    Test if an Object is a plain object.\n    */\n    get plain() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to be a plain object`,\n            validator: object => is_1.default.plainObject(object)\n        });\n    }\n    /**\n    Test an object to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (object, label) => `Expected ${label} to be empty, got \\`${JSON.stringify(object)}\\``,\n            validator: object => Object.keys(object).length === 0\n        });\n    }\n    /**\n    Test an object to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: object => Object.keys(object).length > 0\n        });\n    }\n    /**\n    Test all the values in the object to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the object.\n    */\n    valuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: object => of_type_1.default(Object.values(object), 'values', predicate)\n        });\n    }\n    /**\n    Test all the values in the object deeply to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the object.\n    */\n    deepValuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: object => of_type_deep_1.default(object, predicate)\n        });\n    }\n    /**\n    Test an object to be deeply equal to the provided object.\n\n    @param expected - Expected object to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (object, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify(expected)}\\`, got \\`${JSON.stringify(object)}\\``,\n            validator: object => isEqual(object, expected)\n        });\n    }\n    /**\n    Test an object to be of a specific instance type.\n\n    @param instance - The expected instance type of the object.\n    */\n    instanceOf(instance) {\n        return this.addValidator({\n            message: (object, label) => {\n                var _a;\n                let { name } = (_a = object === null || object === void 0 ? void 0 : object.constructor) !== null && _a !== void 0 ? _a : {};\n                if (!name || name === 'Object') {\n                    name = JSON.stringify(object);\n                }\n                return `Expected ${label} \\`${name}\\` to be of type \\`${instance.name}\\``;\n            },\n            validator: object => object instanceof instance\n        });\n    }\n    /**\n    Test an object to include all the provided keys. You can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a key to access nested properties.\n\n    @param keys - The keys that should be present in the object.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: object => has_items_1.default({\n                has: item => dotProp.has(object, item)\n            }, keys)\n        });\n    }\n    /**\n    Test an object to include any of the provided keys. You can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a key to access nested properties.\n\n    @param keys - The keys that could be a key in the object.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: object => keys.some(key => dotProp.has(object, key))\n        });\n    }\n    /**\n    Test an object to match the `shape` partially. This means that it ignores unexpected properties. The shape comparison is deep.\n\n    The shape is an object which describes how the tested object should look like. The keys are the same as the source object and the values are predicates.\n\n    @param shape - Shape to test the object against.\n\n    @example\n    ```\n    import ow from 'ow';\n\n    const object = {\n        unicorn: '🦄',\n        rainbow: '🌈'\n    };\n\n    ow(object, ow.object.partialShape({\n        unicorn: ow.string\n    }));\n    ```\n    */\n    partialShape(shape) {\n        return this.addValidator({\n            // TODO: Improve this when message handling becomes smarter\n            message: (_, label, message) => `${message.replace('Expected', 'Expected property')} in ${label}`,\n            validator: object => match_shape_1.partial(object, shape)\n        });\n    }\n    /**\n    Test an object to match the `shape` exactly. This means that will fail if it comes across unexpected properties. The shape comparison is deep.\n\n    The shape is an object which describes how the tested object should look like. The keys are the same as the source object and the values are predicates.\n\n    @param shape - Shape to test the object against.\n\n    @example\n    ```\n    import ow from 'ow';\n\n    ow({unicorn: '🦄'}, ow.object.exactShape({\n        unicorn: ow.string\n    }));\n    ```\n    */\n    exactShape(shape) {\n        // TODO [typescript@>=5] If higher-kinded types are supported natively by typescript, refactor `addValidator` to use them to avoid the usage of `any`. Otherwise, bump or remove this TODO.\n        return this.addValidator({\n            // TODO: Improve this when message handling becomes smarter\n            message: (_, label, message) => `${message.replace('Expected', 'Expected property')} in ${label}`,\n            validator: object => match_shape_1.exact(object, shape)\n        });\n    }\n}\nexports.ObjectPredicate = ObjectPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/object.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/predicate.js":
/*!******************************************************!*\
  !*** ./node_modules/ow/dist/predicates/predicate.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Predicate = exports.validatorSymbol = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js\");\nconst argument_error_1 = __webpack_require__(/*! ../argument-error */ \"./node_modules/ow/dist/argument-error.js\");\nconst not_1 = __webpack_require__(/*! ../operators/not */ \"./node_modules/ow/dist/operators/not.js\");\nconst base_predicate_1 = __webpack_require__(/*! ./base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\nconst generate_argument_error_message_1 = __webpack_require__(/*! ../utils/generate-argument-error-message */ \"./node_modules/ow/dist/utils/generate-argument-error-message.js\");\n/**\n@hidden\n*/\nexports.validatorSymbol = Symbol('validators');\n/**\n@hidden\n*/\nclass Predicate {\n    constructor(type, options = {}) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: type\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"context\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                validators: []\n            }\n        });\n        this.context = {\n            ...this.context,\n            ...this.options\n        };\n        const typeString = this.type.charAt(0).toLowerCase() + this.type.slice(1);\n        this.addValidator({\n            message: (value, label) => {\n                // We do not include type in this label as we do for other messages, because it would be redundant.\n                const label_ = label === null || label === void 0 ? void 0 : label.slice(this.type.length + 1);\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                return `Expected ${label_ || 'argument'} to be of type \\`${this.type}\\` but received type \\`${is_1.default(value)}\\``;\n            },\n            validator: value => is_1.default[typeString](value)\n        });\n    }\n    /**\n    @hidden\n    */\n    [base_predicate_1.testSymbol](value, main, label, idLabel) {\n        // Create a map of labels -> received errors.\n        const errors = new Map();\n        for (const { validator, message } of this.context.validators) {\n            if (this.options.optional === true && value === undefined) {\n                continue;\n            }\n            let result;\n            try {\n                result = validator(value);\n            }\n            catch (error) {\n                // Any errors caught means validators couldn't process the input.\n                result = error;\n            }\n            if (result === true) {\n                continue;\n            }\n            const label2 = is_1.default.function_(label) ? label() : label;\n            const labelWithTick = (label2 && idLabel) ? `\\`${label2}\\`` : label2;\n            const label_ = labelWithTick ?\n                `${this.type} ${labelWithTick}` :\n                this.type;\n            const mapKey = label2 || this.type;\n            // Get the current errors encountered for this label.\n            const currentErrors = errors.get(mapKey);\n            // Pre-generate the error message that will be reported to the user.\n            const errorMessage = message(value, label_, result);\n            // If we already have any errors for this label.\n            if (currentErrors) {\n                // If we don't already have this error logged, add it.\n                currentErrors.add(errorMessage);\n            }\n            else {\n                // Set this label and error in the full map.\n                errors.set(mapKey, new Set([errorMessage]));\n            }\n        }\n        // If we have any errors to report, throw.\n        if (errors.size > 0) {\n            // Generate the `error.message` property.\n            const message = generate_argument_error_message_1.generateArgumentErrorMessage(errors);\n            throw new argument_error_1.ArgumentError(message, main, errors);\n        }\n    }\n    /**\n    @hidden\n    */\n    get [exports.validatorSymbol]() {\n        return this.context.validators;\n    }\n    /**\n    Invert the following validators.\n    */\n    get not() {\n        return not_1.not(this);\n    }\n    /**\n    Test if the value matches a custom validation function. The validation function should return an object containing a `validator` and `message`. If the `validator` is `false`, the validation fails and the `message` will be used as error message. If the `message` is a function, the function is invoked with the `label` as argument to let you further customize the error message.\n\n    @param customValidator - Custom validation function.\n    */\n    validate(customValidator) {\n        return this.addValidator({\n            message: (_, label, error) => typeof error === 'string' ?\n                `(${label}) ${error}` :\n                error(label),\n            validator: value => {\n                const { message, validator } = customValidator(value);\n                if (validator) {\n                    return true;\n                }\n                return message;\n            }\n        });\n    }\n    /**\n    Test if the value matches a custom validation function. The validation function should return `true` if the value passes the function. If the function either returns `false` or a string, the function fails and the string will be used as error message.\n\n    @param validator - Validation function.\n    */\n    is(validator) {\n        return this.addValidator({\n            message: (value, label, error) => (error ?\n                `(${label}) ${error}` :\n                `Expected ${label} \\`${value}\\` to pass custom validation function`),\n            validator\n        });\n    }\n    /**\n    Provide a new error message to be thrown when the validation fails.\n\n    @param newMessage - Either a string containing the new message or a function returning the new message.\n\n    @example\n    ```\n    ow('🌈', 'unicorn', ow.string.equals('🦄').message('Expected unicorn, got rainbow'));\n    //=> ArgumentError: Expected unicorn, got rainbow\n    ```\n\n    @example\n    ```\n    ow('🌈', ow.string.minLength(5).message((value, label) => `Expected ${label}, to have a minimum length of 5, got \\`${value}\\``));\n    //=> ArgumentError: Expected string, to be have a minimum length of 5, got `🌈`\n    ```\n    */\n    message(newMessage) {\n        const { validators } = this.context;\n        validators[validators.length - 1].message = (value, label) => {\n            if (typeof newMessage === 'function') {\n                return newMessage(value, label);\n            }\n            return newMessage;\n        };\n        return this;\n    }\n    /**\n    Register a new validator.\n\n    @param validator - Validator to register.\n    */\n    addValidator(validator) {\n        this.context.validators.push(validator);\n        return this;\n    }\n}\nexports.Predicate = Predicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/predicate.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/set.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/predicates/set.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SetPredicate = void 0;\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst of_type_1 = __webpack_require__(/*! ../utils/of-type */ \"./node_modules/ow/dist/utils/of-type.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass SetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('Set', options);\n    }\n    /**\n    Test a Set to have a specific size.\n\n    @param size - The size of the Set.\n    */\n    size(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have size \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size === size\n        });\n    }\n    /**\n    Test a Set to have a minimum size.\n\n    @param size - The minimum size of the Set.\n    */\n    minSize(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have a minimum size of \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size >= size,\n            negatedMessage: (set, label) => `Expected ${label} to have a maximum size of \\`${size - 1}\\`, got \\`${set.size}\\``\n        });\n    }\n    /**\n    Test a Set to have a maximum size.\n\n    @param size - The maximum size of the Set.\n    */\n    maxSize(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have a maximum size of \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size <= size,\n            negatedMessage: (set, label) => `Expected ${label} to have a minimum size of \\`${size + 1}\\`, got \\`${set.size}\\``\n        });\n    }\n    /**\n    Test a Set to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the Set.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a Set to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the Set.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n    /**\n    Test all the items in the Set to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every item in the Set.\n    */\n    ofType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: set => of_type_1.default(set, 'values', predicate)\n        });\n    }\n    /**\n    Test a Set to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to be empty, got \\`${JSON.stringify([...set])}\\``,\n            validator: set => set.size === 0\n        });\n    }\n    /**\n    Test a Set to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: set => set.size > 0\n        });\n    }\n    /**\n    Test a Set to be deeply equal to the provided Set.\n\n    @param expected - Expected Set to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify([...expected])}\\`, got \\`${JSON.stringify([...set])}\\``,\n            validator: set => isEqual(set, expected)\n        });\n    }\n}\nexports.SetPredicate = SetPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/set.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/string.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/predicates/string.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StringPredicate = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js\");\nconst valiDate = __webpack_require__(/*! vali-date */ \"./node_modules/vali-date/index.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass StringPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('string', options);\n    }\n    /**\n    Test a string to have a specific length.\n\n    @param length - The length of the string.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test a string to have a minimum length.\n\n    @param length - The minimum length of the string.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value}\\``\n        });\n    }\n    /**\n    Test a string to have a maximum length.\n\n    @param length - The maximum length of the string.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value}\\``\n        });\n    }\n    /**\n    Test a string against a regular expression.\n\n    @param regex - The regular expression to match the value with.\n    */\n    matches(regex) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to match \\`${regex}\\`, got \\`${value}\\``,\n            validator: value => regex.test(value)\n        });\n    }\n    /**\n    Test a string to start with a specific value.\n\n    @param searchString - The value that should be the start of the string.\n    */\n    startsWith(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to start with \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.startsWith(searchString)\n        });\n    }\n    /**\n    Test a string to end with a specific value.\n\n    @param searchString - The value that should be the end of the string.\n    */\n    endsWith(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to end with \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.endsWith(searchString)\n        });\n    }\n    /**\n    Test a string to include a specific value.\n\n    @param searchString - The value that should be included in the string.\n    */\n    includes(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.includes(searchString)\n        });\n    }\n    /**\n    Test if the string is an element of the provided list.\n\n    @param list - List of possible values.\n    */\n    oneOf(list) {\n        return this.addValidator({\n            message: (value, label) => {\n                let printedList = JSON.stringify(list);\n                if (list.length > 10) {\n                    const overflow = list.length - 10;\n                    printedList = JSON.stringify(list.slice(0, 10)).replace(/]$/, `,…+${overflow} more]`);\n                }\n                return `Expected ${label} to be one of \\`${printedList}\\`, got \\`${value}\\``;\n            },\n            validator: value => list.includes(value)\n        });\n    }\n    /**\n    Test a string to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be empty, got \\`${value}\\``,\n            validator: value => value === ''\n        });\n    }\n    /**\n    Test a string to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: value => value !== ''\n        });\n    }\n    /**\n    Test a string to be equal to a specified string.\n\n    @param expected - Expected value to match.\n    */\n    equals(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be equal to \\`${expected}\\`, got \\`${value}\\``,\n            validator: value => value === expected\n        });\n    }\n    /**\n    Test a string to be alphanumeric.\n    */\n    get alphanumeric() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be alphanumeric, got \\`${value}\\``,\n            validator: value => /^[a-z\\d]+$/i.test(value)\n        });\n    }\n    /**\n    Test a string to be alphabetical.\n    */\n    get alphabetical() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be alphabetical, got \\`${value}\\``,\n            validator: value => /^[a-z]+$/gi.test(value)\n        });\n    }\n    /**\n    Test a string to be numeric.\n    */\n    get numeric() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be numeric, got \\`${value}\\``,\n            validator: value => /^[+-]?\\d+$/i.test(value)\n        });\n    }\n    /**\n    Test a string to be a valid date.\n    */\n    get date() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be a date, got \\`${value}\\``,\n            validator: valiDate\n        });\n    }\n    /**\n    Test a non-empty string to be lowercase. Matching both alphabetical & numbers.\n    */\n    get lowercase() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be lowercase, got \\`${value}\\``,\n            validator: value => value.trim() !== '' && value === value.toLowerCase()\n        });\n    }\n    /**\n    Test a non-empty string to be uppercase. Matching both alphabetical & numbers.\n    */\n    get uppercase() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be uppercase, got \\`${value}\\``,\n            validator: value => value.trim() !== '' && value === value.toUpperCase()\n        });\n    }\n    /**\n    Test a string to be a valid URL.\n    */\n    get url() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be a URL, got \\`${value}\\``,\n            validator: is_1.default.urlString\n        });\n    }\n}\nexports.StringPredicate = StringPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/string.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/typed-array.js":
/*!********************************************************!*\
  !*** ./node_modules/ow/dist/predicates/typed-array.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypedArrayPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass TypedArrayPredicate extends predicate_1.Predicate {\n    /**\n    Test a typed array to have a specific byte length.\n\n    @param byteLength - The byte length of the typed array.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test a typed array to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the typed array.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a typed array to have a minimum byte length.\n\n    @param length - The minimum byte length of the typed array.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a typed array to have a specific length.\n\n    @param length - The length of the typed array.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test a typed array to have a minimum length.\n\n    @param length - The minimum length of the typed array.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test a typed array to have a maximum length.\n\n    @param length - The maximum length of the typed array.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value.length}\\``\n        });\n    }\n}\nexports.TypedArrayPredicate = TypedArrayPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/typed-array.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/weak-map.js":
/*!*****************************************************!*\
  !*** ./node_modules/ow/dist/predicates/weak-map.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WeakMapPredicate = void 0;\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass WeakMapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakMap', options);\n    }\n    /**\n    Test a WeakMap to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the WeakMap.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a WeakMap to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the WeakMap.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n}\nexports.WeakMapPredicate = WeakMapPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/weak-map.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/weak-set.js":
/*!*****************************************************!*\
  !*** ./node_modules/ow/dist/predicates/weak-set.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WeakSetPredicate = void 0;\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass WeakSetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakSet', options);\n    }\n    /**\n    Test a WeakSet to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the WeakSet.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a WeakSet to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the WeakSet.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n}\nexports.WeakSetPredicate = WeakSetPredicate;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/predicates/weak-set.js?");

/***/ }),

/***/ "./node_modules/ow/dist/test.js":
/*!**************************************!*\
  !*** ./node_modules/ow/dist/test.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_predicate_1 = __webpack_require__(/*! ./predicates/base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\n/**\nValidate the value against the provided predicate.\n\n@hidden\n\n@param value - Value to test.\n@param label - Label which should be used in error messages.\n@param predicate - Predicate to test to value against.\n@param idLabel - If true, the label is a variable or type. Default: true.\n*/\nfunction test(value, label, predicate, idLabel = true) {\n    predicate[base_predicate_1.testSymbol](value, test, label, idLabel);\n}\nexports[\"default\"] = test;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/test.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/generate-argument-error-message.js":
/*!***********************************************************************!*\
  !*** ./node_modules/ow/dist/utils/generate-argument-error-message.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.generateArgumentErrorMessage = void 0;\n/**\nGenerates a complete message from all errors generated by predicates.\n\n@param errors - The errors generated by the predicates.\n@param isAny - If this function is called from the any argument.\n@hidden\n*/\nconst generateArgumentErrorMessage = (errors, isAny = false) => {\n    const message = [];\n    const errorArray = [...errors.entries()];\n    const anyErrorWithoutOneItemOnly = errorArray.some(([, array]) => array.size !== 1);\n    // If only one error \"key\" is present, enumerate all of those errors only.\n    if (errorArray.length === 1) {\n        const [, returnedErrors] = errorArray[0];\n        if (!isAny && returnedErrors.size === 1) {\n            const [errorMessage] = returnedErrors;\n            return errorMessage;\n        }\n        for (const entry of returnedErrors) {\n            message.push(`${isAny ? '  - ' : ''}${entry}`);\n        }\n        return message.join('\\n');\n    }\n    // If every predicate returns just one error, enumerate them as is.\n    if (!anyErrorWithoutOneItemOnly) {\n        return errorArray.map(([, [item]]) => `  - ${item}`).join('\\n');\n    }\n    // Else, iterate through all the errors and enumerate them.\n    for (const [key, value] of errorArray) {\n        message.push(`Errors from the \"${key}\" predicate:`);\n        for (const entry of value) {\n            message.push(`  - ${entry}`);\n        }\n    }\n    return message.join('\\n');\n};\nexports.generateArgumentErrorMessage = generateArgumentErrorMessage;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/generate-argument-error-message.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/generate-stack.js":
/*!******************************************************!*\
  !*** ./node_modules/ow/dist/utils/generate-stack.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.generateStackTrace = void 0;\n/**\nGenerates a useful stacktrace that points to the user's code where the error happened on platforms without the `Error.captureStackTrace()` method.\n\n@hidden\n*/\nconst generateStackTrace = () => {\n    const stack = new RangeError('INTERNAL_OW_ERROR').stack;\n    return stack;\n};\nexports.generateStackTrace = generateStackTrace;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/generate-stack.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/has-items.js":
/*!*************************************************!*\
  !*** ./node_modules/ow/dist/utils/has-items.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\nRetrieve the missing values in a collection based on an array of items.\n\n@hidden\n\n@param source - Source collection to search through.\n@param items - Items to search for.\n@param maxValues - Maximum number of values after the search process is stopped. Default: 5.\n*/\nexports[\"default\"] = (source, items, maxValues = 5) => {\n    const missingValues = [];\n    for (const value of items) {\n        if (source.has(value)) {\n            continue;\n        }\n        missingValues.push(value);\n        if (missingValues.length === maxValues) {\n            return missingValues;\n        }\n    }\n    return missingValues.length === 0 ? true : missingValues;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/has-items.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/infer-label.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/utils/infer-label.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.inferLabel = void 0;\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst is_valid_identifier_1 = __webpack_require__(/*! ./is-valid-identifier */ \"./node_modules/ow/dist/utils/is-valid-identifier.js\");\nconst is_node_1 = __webpack_require__(/*! ./node/is-node */ \"./node_modules/ow/dist/utils/node/is-node.js\");\n// Regex to extract the label out of the `ow` function call\nconst labelRegex = /^.*?\\((?<label>.*?)[,)]/;\n/**\nInfer the label of the caller.\n\n@hidden\n\n@param callsites - List of stack frames.\n*/\nconst inferLabel = (callsites) => {\n    var _a;\n    if (!is_node_1.default) {\n        // Exit if we are not running in a Node.js environment\n        return;\n    }\n    // Grab the stackframe with the `ow` function call\n    const functionCallStackFrame = callsites[1];\n    if (!functionCallStackFrame) {\n        return;\n    }\n    const fileName = functionCallStackFrame.getFileName();\n    const lineNumber = functionCallStackFrame.getLineNumber();\n    const columnNumber = functionCallStackFrame.getColumnNumber();\n    if (fileName === null || lineNumber === null || columnNumber === null) {\n        return;\n    }\n    let content = [];\n    try {\n        content = fs.readFileSync(fileName, 'utf8').split('\\n');\n    }\n    catch {\n        return;\n    }\n    let line = content[lineNumber - 1];\n    if (!line) {\n        // Exit if the line number couldn't be found\n        return;\n    }\n    line = line.slice(columnNumber - 1);\n    const match = labelRegex.exec(line);\n    if (!((_a = match === null || match === void 0 ? void 0 : match.groups) === null || _a === void 0 ? void 0 : _a.label)) {\n        // Exit if we didn't find a label\n        return;\n    }\n    const token = match.groups.label;\n    if (is_valid_identifier_1.default(token) || is_valid_identifier_1.default(token.split('.').pop())) {\n        return token;\n    }\n    return;\n};\nexports.inferLabel = inferLabel;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/infer-label.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/is-valid-identifier.js":
/*!***********************************************************!*\
  !*** ./node_modules/ow/dist/utils/is-valid-identifier.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst identifierRegex = /^[a-z$_][$\\w]*$/i;\nconst reservedSet = new Set([\n    'undefined',\n    'null',\n    'true',\n    'false',\n    'super',\n    'this',\n    'Infinity',\n    'NaN'\n]);\n/**\nTest if the string is a valid JavaScript identifier.\n\n@param string - String to test.\n*/\nexports[\"default\"] = (string) => string && !reservedSet.has(string) && identifierRegex.test(string);\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/is-valid-identifier.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/match-shape.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/utils/match-shape.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exact = exports.partial = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js\");\nconst test_1 = __webpack_require__(/*! ../test */ \"./node_modules/ow/dist/test.js\");\nconst base_predicate_1 = __webpack_require__(/*! ../predicates/base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\n/**\nTest if the `object` matches the `shape` partially.\n\n@hidden\n\n@param object - Object to test against the provided shape.\n@param shape - Shape to test the object against.\n@param parent - Name of the parent property.\n*/\nfunction partial(object, shape, parent) {\n    try {\n        for (const key of Object.keys(shape)) {\n            const label = parent ? `${parent}.${key}` : key;\n            if (base_predicate_1.isPredicate(shape[key])) {\n                test_1.default(object[key], label, shape[key]);\n            }\n            else if (is_1.default.plainObject(shape[key])) {\n                const result = partial(object[key], shape[key], label);\n                if (result !== true) {\n                    return result;\n                }\n            }\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n}\nexports.partial = partial;\n/**\nTest if the `object` matches the `shape` exactly.\n\n@hidden\n\n@param object - Object to test against the provided shape.\n@param shape - Shape to test the object against.\n@param parent - Name of the parent property.\n*/\nfunction exact(object, shape, parent, isArray) {\n    try {\n        const objectKeys = new Set(Object.keys(object));\n        for (const key of Object.keys(shape)) {\n            objectKeys.delete(key);\n            const label = parent ? `${parent}.${key}` : key;\n            if (base_predicate_1.isPredicate(shape[key])) {\n                test_1.default(object[key], label, shape[key]);\n            }\n            else if (is_1.default.plainObject(shape[key])) {\n                if (!Object.prototype.hasOwnProperty.call(object, key)) {\n                    return `Expected \\`${label}\\` to exist`;\n                }\n                const result = exact(object[key], shape[key], label);\n                if (result !== true) {\n                    return result;\n                }\n            }\n        }\n        if (objectKeys.size > 0) {\n            const firstKey = [...objectKeys.keys()][0];\n            const label = parent ? `${parent}.${firstKey}` : firstKey;\n            return `Did not expect ${isArray ? 'element' : 'property'} \\`${label}\\` to exist, got \\`${object[firstKey]}\\``;\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n}\nexports.exact = exact;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/match-shape.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/node/is-node.js":
/*!****************************************************!*\
  !*** ./node_modules/ow/dist/utils/node/is-node.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = Boolean((_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node);\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/node/is-node.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/of-type-deep.js":
/*!****************************************************!*\
  !*** ./node_modules/ow/dist/utils/of-type-deep.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js\");\nconst test_1 = __webpack_require__(/*! ../test */ \"./node_modules/ow/dist/test.js\");\nconst ofTypeDeep = (object, predicate) => {\n    if (!is_1.default.plainObject(object)) {\n        test_1.default(object, 'deep values', predicate, false);\n        return true;\n    }\n    return Object.values(object).every(value => ofTypeDeep(value, predicate));\n};\n/**\nTest all the values in the object against a provided predicate.\n\n@hidden\n\n@param predicate - Predicate to test every value in the given object against.\n*/\nexports[\"default\"] = (object, predicate) => {\n    try {\n        return ofTypeDeep(object, predicate);\n    }\n    catch (error) {\n        return error.message;\n    }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/of-type-deep.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/of-type.js":
/*!***********************************************!*\
  !*** ./node_modules/ow/dist/utils/of-type.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst test_1 = __webpack_require__(/*! ../test */ \"./node_modules/ow/dist/test.js\");\n/**\nTest all the values in the collection against a provided predicate.\n\n@hidden\n@param source Source collection to test.\n@param name The name to call the collection of values, such as `values` or `keys`.\n@param predicate Predicate to test every item in the source collection against.\n*/\nexports[\"default\"] = (source, name, predicate) => {\n    try {\n        for (const item of source) {\n            test_1.default(item, name, predicate, false);\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/of-type.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/random-id.js":
/*!*************************************************!*\
  !*** ./node_modules/ow/dist/utils/random-id.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = () => Math.random().toString(16).slice(2);\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/dist/utils/random-id.js?");

/***/ }),

/***/ "./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js ***!
  \*********************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n/// <reference lib=\"es2018\"/>\n/// <reference lib=\"dom\"/>\n/// <reference types=\"node\"/>\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst typedArrayTypeNames = [\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array',\n    'BigInt64Array',\n    'BigUint64Array'\n];\nfunction isTypedArrayName(name) {\n    return typedArrayTypeNames.includes(name);\n}\nconst objectTypeNames = [\n    'Function',\n    'Generator',\n    'AsyncGenerator',\n    'GeneratorFunction',\n    'AsyncGeneratorFunction',\n    'AsyncFunction',\n    'Observable',\n    'Array',\n    'Buffer',\n    'Object',\n    'RegExp',\n    'Date',\n    'Error',\n    'Map',\n    'Set',\n    'WeakMap',\n    'WeakSet',\n    'ArrayBuffer',\n    'SharedArrayBuffer',\n    'DataView',\n    'Promise',\n    'URL',\n    'HTMLElement',\n    ...typedArrayTypeNames\n];\nfunction isObjectTypeName(name) {\n    return objectTypeNames.includes(name);\n}\nconst primitiveTypeNames = [\n    'null',\n    'undefined',\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol'\n];\nfunction isPrimitiveTypeName(name) {\n    return primitiveTypeNames.includes(name);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType(type) {\n    return (value) => typeof value === type;\n}\nconst { toString } = Object.prototype;\nconst getObjectType = (value) => {\n    const objectTypeName = toString.call(value).slice(8, -1);\n    if (/HTML\\w+Element/.test(objectTypeName) && is.domElement(value)) {\n        return 'HTMLElement';\n    }\n    if (isObjectTypeName(objectTypeName)) {\n        return objectTypeName;\n    }\n    return undefined;\n};\nconst isObjectOfType = (type) => (value) => getObjectType(value) === type;\nfunction is(value) {\n    if (value === null) {\n        return 'null';\n    }\n    switch (typeof value) {\n        case 'undefined':\n            return 'undefined';\n        case 'string':\n            return 'string';\n        case 'number':\n            return 'number';\n        case 'boolean':\n            return 'boolean';\n        case 'function':\n            return 'Function';\n        case 'bigint':\n            return 'bigint';\n        case 'symbol':\n            return 'symbol';\n        default:\n    }\n    if (is.observable(value)) {\n        return 'Observable';\n    }\n    if (is.array(value)) {\n        return 'Array';\n    }\n    if (is.buffer(value)) {\n        return 'Buffer';\n    }\n    const tagType = getObjectType(value);\n    if (tagType) {\n        return tagType;\n    }\n    if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n        throw new TypeError('Please don\\'t use object wrappers for primitive types');\n    }\n    return 'Object';\n}\nis.undefined = isOfType('undefined');\nis.string = isOfType('string');\nconst isNumberType = isOfType('number');\nis.number = (value) => isNumberType(value) && !is.nan(value);\nis.bigint = isOfType('bigint');\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.function_ = isOfType('function');\nis.null_ = (value) => value === null;\nis.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');\nis.boolean = (value) => value === true || value === false;\nis.symbol = isOfType('symbol');\nis.numericString = (value) => is.string(value) && !is.emptyStringOrWhitespace(value) && !Number.isNaN(Number(value));\nis.array = (value, assertion) => {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    if (!is.function_(assertion)) {\n        return true;\n    }\n    return value.every(assertion);\n};\nis.buffer = (value) => { var _a, _b, _c, _d; return (_d = (_c = (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.isBuffer) === null || _c === void 0 ? void 0 : _c.call(_b, value)) !== null && _d !== void 0 ? _d : false; };\nis.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);\nis.object = (value) => !is.null_(value) && (typeof value === 'object' || is.function_(value));\nis.iterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.iterator]); };\nis.asyncIterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.asyncIterator]); };\nis.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.asyncGenerator = (value) => is.asyncIterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.nativePromise = (value) => isObjectOfType('Promise')(value);\nconst hasPromiseAPI = (value) => {\n    var _a, _b;\n    return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a.then) &&\n        is.function_((_b = value) === null || _b === void 0 ? void 0 : _b.catch);\n};\nis.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);\nis.generatorFunction = isObjectOfType('GeneratorFunction');\nis.asyncGeneratorFunction = (value) => getObjectType(value) === 'AsyncGeneratorFunction';\nis.asyncFunction = (value) => getObjectType(value) === 'AsyncFunction';\n// eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types\nis.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');\nis.regExp = isObjectOfType('RegExp');\nis.date = isObjectOfType('Date');\nis.error = isObjectOfType('Error');\nis.map = (value) => isObjectOfType('Map')(value);\nis.set = (value) => isObjectOfType('Set')(value);\nis.weakMap = (value) => isObjectOfType('WeakMap')(value);\nis.weakSet = (value) => isObjectOfType('WeakSet')(value);\nis.int8Array = isObjectOfType('Int8Array');\nis.uint8Array = isObjectOfType('Uint8Array');\nis.uint8ClampedArray = isObjectOfType('Uint8ClampedArray');\nis.int16Array = isObjectOfType('Int16Array');\nis.uint16Array = isObjectOfType('Uint16Array');\nis.int32Array = isObjectOfType('Int32Array');\nis.uint32Array = isObjectOfType('Uint32Array');\nis.float32Array = isObjectOfType('Float32Array');\nis.float64Array = isObjectOfType('Float64Array');\nis.bigInt64Array = isObjectOfType('BigInt64Array');\nis.bigUint64Array = isObjectOfType('BigUint64Array');\nis.arrayBuffer = isObjectOfType('ArrayBuffer');\nis.sharedArrayBuffer = isObjectOfType('SharedArrayBuffer');\nis.dataView = isObjectOfType('DataView');\nis.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;\nis.urlInstance = (value) => isObjectOfType('URL')(value);\nis.urlString = (value) => {\n    if (!is.string(value)) {\n        return false;\n    }\n    try {\n        new URL(value); // eslint-disable-line no-new\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\n// TODO: Use the `not` operator with a type guard here when it's available.\n// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`\nis.truthy = (value) => Boolean(value);\n// Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`\nis.falsy = (value) => !value;\nis.nan = (value) => Number.isNaN(value);\nis.primitive = (value) => is.null_(value) || isPrimitiveTypeName(typeof value);\nis.integer = (value) => Number.isInteger(value);\nis.safeInteger = (value) => Number.isSafeInteger(value);\nis.plainObject = (value) => {\n    // From: https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\n    if (toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.typedArray = (value) => isTypedArrayName(getObjectType(value));\nconst isValidLength = (value) => is.safeInteger(value) && value >= 0;\nis.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\nis.inRange = (value, range) => {\n    if (is.number(range)) {\n        return value >= Math.min(0, range) && value <= Math.max(range, 0);\n    }\n    if (is.array(range) && range.length === 2) {\n        return value >= Math.min(...range) && value <= Math.max(...range);\n    }\n    throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n};\nconst NODE_TYPE_ELEMENT = 1;\nconst DOM_PROPERTIES_TO_CHECK = [\n    'innerHTML',\n    'ownerDocument',\n    'style',\n    'attributes',\n    'nodeValue'\n];\nis.domElement = (value) => {\n    return is.object(value) &&\n        value.nodeType === NODE_TYPE_ELEMENT &&\n        is.string(value.nodeName) &&\n        !is.plainObject(value) &&\n        DOM_PROPERTIES_TO_CHECK.every(property => property in value);\n};\nis.observable = (value) => {\n    var _a, _b, _c, _d;\n    if (!value) {\n        return false;\n    }\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n    if (value === ((_b = (_a = value)[Symbol.observable]) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n        return true;\n    }\n    if (value === ((_d = (_c = value)['@@observable']) === null || _d === void 0 ? void 0 : _d.call(_c))) {\n        return true;\n    }\n    return false;\n};\nis.nodeStream = (value) => is.object(value) && is.function_(value.pipe) && !is.observable(value);\nis.infinite = (value) => value === Infinity || value === -Infinity;\nconst isAbsoluteMod2 = (remainder) => (value) => is.integer(value) && Math.abs(value % 2) === remainder;\nis.evenInteger = isAbsoluteMod2(0);\nis.oddInteger = isAbsoluteMod2(1);\nis.emptyArray = (value) => is.array(value) && value.length === 0;\nis.nonEmptyArray = (value) => is.array(value) && value.length > 0;\nis.emptyString = (value) => is.string(value) && value.length === 0;\n// TODO: Use `not ''` when the `not` operator is available.\nis.nonEmptyString = (value) => is.string(value) && value.length > 0;\nconst isWhiteSpaceString = (value) => is.string(value) && !/\\S/.test(value);\nis.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);\nis.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n// TODO: Use `not` operator here to remove `Map` and `Set` from type guard:\n// - https://github.com/Microsoft/TypeScript/pull/29317\nis.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\nis.emptySet = (value) => is.set(value) && value.size === 0;\nis.nonEmptySet = (value) => is.set(value) && value.size > 0;\nis.emptyMap = (value) => is.map(value) && value.size === 0;\nis.nonEmptyMap = (value) => is.map(value) && value.size > 0;\nconst predicateOnArray = (method, predicate, values) => {\n    if (!is.function_(predicate)) {\n        throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n    }\n    if (values.length === 0) {\n        throw new TypeError('Invalid number of values');\n    }\n    return method.call(values, predicate);\n};\nis.any = (predicate, ...values) => {\n    const predicates = is.array(predicate) ? predicate : [predicate];\n    return predicates.some(singlePredicate => predicateOnArray(Array.prototype.some, singlePredicate, values));\n};\nis.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);\nconst assertType = (condition, description, value, options = {}) => {\n    if (!condition) {\n        const { multipleValues } = options;\n        const valuesMessage = multipleValues ?\n            `received values of types ${[\n                ...new Set(value.map(singleValue => `\\`${is(singleValue)}\\``))\n            ].join(', ')}` :\n            `received value of type \\`${is(value)}\\``;\n        throw new TypeError(`Expected value which is \\`${description}\\`, ${valuesMessage}.`);\n    }\n};\nexports.assert = {\n    // Unknowns.\n    undefined: (value) => assertType(is.undefined(value), 'undefined', value),\n    string: (value) => assertType(is.string(value), 'string', value),\n    number: (value) => assertType(is.number(value), 'number', value),\n    bigint: (value) => assertType(is.bigint(value), 'bigint', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function_: (value) => assertType(is.function_(value), 'Function', value),\n    null_: (value) => assertType(is.null_(value), 'null', value),\n    class_: (value) => assertType(is.class_(value), \"Class\" /* class_ */, value),\n    boolean: (value) => assertType(is.boolean(value), 'boolean', value),\n    symbol: (value) => assertType(is.symbol(value), 'symbol', value),\n    numericString: (value) => assertType(is.numericString(value), \"string with a number\" /* numericString */, value),\n    array: (value, assertion) => {\n        const assert = assertType;\n        assert(is.array(value), 'Array', value);\n        if (assertion) {\n            value.forEach(assertion);\n        }\n    },\n    buffer: (value) => assertType(is.buffer(value), 'Buffer', value),\n    nullOrUndefined: (value) => assertType(is.nullOrUndefined(value), \"null or undefined\" /* nullOrUndefined */, value),\n    object: (value) => assertType(is.object(value), 'Object', value),\n    iterable: (value) => assertType(is.iterable(value), \"Iterable\" /* iterable */, value),\n    asyncIterable: (value) => assertType(is.asyncIterable(value), \"AsyncIterable\" /* asyncIterable */, value),\n    generator: (value) => assertType(is.generator(value), 'Generator', value),\n    asyncGenerator: (value) => assertType(is.asyncGenerator(value), 'AsyncGenerator', value),\n    nativePromise: (value) => assertType(is.nativePromise(value), \"native Promise\" /* nativePromise */, value),\n    promise: (value) => assertType(is.promise(value), 'Promise', value),\n    generatorFunction: (value) => assertType(is.generatorFunction(value), 'GeneratorFunction', value),\n    asyncGeneratorFunction: (value) => assertType(is.asyncGeneratorFunction(value), 'AsyncGeneratorFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    asyncFunction: (value) => assertType(is.asyncFunction(value), 'AsyncFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    boundFunction: (value) => assertType(is.boundFunction(value), 'Function', value),\n    regExp: (value) => assertType(is.regExp(value), 'RegExp', value),\n    date: (value) => assertType(is.date(value), 'Date', value),\n    error: (value) => assertType(is.error(value), 'Error', value),\n    map: (value) => assertType(is.map(value), 'Map', value),\n    set: (value) => assertType(is.set(value), 'Set', value),\n    weakMap: (value) => assertType(is.weakMap(value), 'WeakMap', value),\n    weakSet: (value) => assertType(is.weakSet(value), 'WeakSet', value),\n    int8Array: (value) => assertType(is.int8Array(value), 'Int8Array', value),\n    uint8Array: (value) => assertType(is.uint8Array(value), 'Uint8Array', value),\n    uint8ClampedArray: (value) => assertType(is.uint8ClampedArray(value), 'Uint8ClampedArray', value),\n    int16Array: (value) => assertType(is.int16Array(value), 'Int16Array', value),\n    uint16Array: (value) => assertType(is.uint16Array(value), 'Uint16Array', value),\n    int32Array: (value) => assertType(is.int32Array(value), 'Int32Array', value),\n    uint32Array: (value) => assertType(is.uint32Array(value), 'Uint32Array', value),\n    float32Array: (value) => assertType(is.float32Array(value), 'Float32Array', value),\n    float64Array: (value) => assertType(is.float64Array(value), 'Float64Array', value),\n    bigInt64Array: (value) => assertType(is.bigInt64Array(value), 'BigInt64Array', value),\n    bigUint64Array: (value) => assertType(is.bigUint64Array(value), 'BigUint64Array', value),\n    arrayBuffer: (value) => assertType(is.arrayBuffer(value), 'ArrayBuffer', value),\n    sharedArrayBuffer: (value) => assertType(is.sharedArrayBuffer(value), 'SharedArrayBuffer', value),\n    dataView: (value) => assertType(is.dataView(value), 'DataView', value),\n    urlInstance: (value) => assertType(is.urlInstance(value), 'URL', value),\n    urlString: (value) => assertType(is.urlString(value), \"string with a URL\" /* urlString */, value),\n    truthy: (value) => assertType(is.truthy(value), \"truthy\" /* truthy */, value),\n    falsy: (value) => assertType(is.falsy(value), \"falsy\" /* falsy */, value),\n    nan: (value) => assertType(is.nan(value), \"NaN\" /* nan */, value),\n    primitive: (value) => assertType(is.primitive(value), \"primitive\" /* primitive */, value),\n    integer: (value) => assertType(is.integer(value), \"integer\" /* integer */, value),\n    safeInteger: (value) => assertType(is.safeInteger(value), \"integer\" /* safeInteger */, value),\n    plainObject: (value) => assertType(is.plainObject(value), \"plain object\" /* plainObject */, value),\n    typedArray: (value) => assertType(is.typedArray(value), \"TypedArray\" /* typedArray */, value),\n    arrayLike: (value) => assertType(is.arrayLike(value), \"array-like\" /* arrayLike */, value),\n    domElement: (value) => assertType(is.domElement(value), \"HTMLElement\" /* domElement */, value),\n    observable: (value) => assertType(is.observable(value), 'Observable', value),\n    nodeStream: (value) => assertType(is.nodeStream(value), \"Node.js Stream\" /* nodeStream */, value),\n    infinite: (value) => assertType(is.infinite(value), \"infinite number\" /* infinite */, value),\n    emptyArray: (value) => assertType(is.emptyArray(value), \"empty array\" /* emptyArray */, value),\n    nonEmptyArray: (value) => assertType(is.nonEmptyArray(value), \"non-empty array\" /* nonEmptyArray */, value),\n    emptyString: (value) => assertType(is.emptyString(value), \"empty string\" /* emptyString */, value),\n    nonEmptyString: (value) => assertType(is.nonEmptyString(value), \"non-empty string\" /* nonEmptyString */, value),\n    emptyStringOrWhitespace: (value) => assertType(is.emptyStringOrWhitespace(value), \"empty string or whitespace\" /* emptyStringOrWhitespace */, value),\n    emptyObject: (value) => assertType(is.emptyObject(value), \"empty object\" /* emptyObject */, value),\n    nonEmptyObject: (value) => assertType(is.nonEmptyObject(value), \"non-empty object\" /* nonEmptyObject */, value),\n    emptySet: (value) => assertType(is.emptySet(value), \"empty set\" /* emptySet */, value),\n    nonEmptySet: (value) => assertType(is.nonEmptySet(value), \"non-empty set\" /* nonEmptySet */, value),\n    emptyMap: (value) => assertType(is.emptyMap(value), \"empty map\" /* emptyMap */, value),\n    nonEmptyMap: (value) => assertType(is.nonEmptyMap(value), \"non-empty map\" /* nonEmptyMap */, value),\n    // Numbers.\n    evenInteger: (value) => assertType(is.evenInteger(value), \"even integer\" /* evenInteger */, value),\n    oddInteger: (value) => assertType(is.oddInteger(value), \"odd integer\" /* oddInteger */, value),\n    // Two arguments.\n    directInstanceOf: (instance, class_) => assertType(is.directInstanceOf(instance, class_), \"T\" /* directInstanceOf */, instance),\n    inRange: (value, range) => assertType(is.inRange(value, range), \"in range\" /* inRange */, value),\n    // Variadic functions.\n    any: (predicate, ...values) => {\n        return assertType(is.any(predicate, ...values), \"predicate returns truthy for any value\" /* any */, values, { multipleValues: true });\n    },\n    all: (predicate, ...values) => assertType(is.all(predicate, ...values), \"predicate returns truthy for all values\" /* all */, values, { multipleValues: true })\n};\n// Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\nObject.defineProperties(is, {\n    class: {\n        value: is.class_\n    },\n    function: {\n        value: is.function_\n    },\n    null: {\n        value: is.null_\n    }\n});\nObject.defineProperties(exports.assert, {\n    class: {\n        value: exports.assert.class_\n    },\n    function: {\n        value: exports.assert.function_\n    },\n    null: {\n        value: exports.assert.null_\n    }\n});\nexports[\"default\"] = is;\n// For CommonJS default export support\nmodule.exports = is;\nmodule.exports[\"default\"] = is;\nmodule.exports.assert = exports.assert;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/node_modules/@sindresorhus/is/dist/index.js?");

/***/ }),

/***/ "./node_modules/ow/node_modules/dot-prop/index.js":
/*!********************************************************!*\
  !*** ./node_modules/ow/node_modules/dot-prop/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst isObj = __webpack_require__(/*! is-obj */ \"./node_modules/is-obj/index.js\");\n\nconst disallowedKeys = new Set([\n\t'__proto__',\n\t'prototype',\n\t'constructor'\n]);\n\nconst isValidPath = pathSegments => !pathSegments.some(segment => disallowedKeys.has(segment));\n\nfunction getPathSegments(path) {\n\tconst pathArray = path.split('.');\n\tconst parts = [];\n\n\tfor (let i = 0; i < pathArray.length; i++) {\n\t\tlet p = pathArray[i];\n\n\t\twhile (p[p.length - 1] === '\\\\' && pathArray[i + 1] !== undefined) {\n\t\t\tp = p.slice(0, -1) + '.';\n\t\t\tp += pathArray[++i];\n\t\t}\n\n\t\tparts.push(p);\n\t}\n\n\tif (!isValidPath(parts)) {\n\t\treturn [];\n\t}\n\n\treturn parts;\n}\n\nmodule.exports = {\n\tget(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn value === undefined ? object : value;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tobject = object[pathArray[i]];\n\n\t\t\tif (object === undefined || object === null) {\n\t\t\t\t// `object` is either `undefined` or `null` so we want to stop the loop, and\n\t\t\t\t// if this is not the last bit of the path, and\n\t\t\t\t// if it did't return `undefined`\n\t\t\t\t// it would return `null` if `object` is `null`\n\t\t\t\t// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n\t\t\t\tif (i !== pathArray.length - 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn object === undefined ? value : object;\n\t},\n\n\tset(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn object;\n\t\t}\n\n\t\tconst root = object;\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (!isObj(object[p])) {\n\t\t\t\tobject[p] = {};\n\t\t\t}\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tobject[p] = value;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\t\t}\n\n\t\treturn root;\n\t},\n\n\tdelete(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tdelete object[p];\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\n\t\t\tif (!isObj(object)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\thas(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line unicorn/no-for-loop\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tif (isObj(object)) {\n\t\t\t\tif (!(pathArray[i] in object)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tobject = object[pathArray[i]];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ow/node_modules/dot-prop/index.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/core/FFmpeg.js":
/*!*****************************************************!*\
  !*** ./node_modules/prism-media/src/core/FFmpeg.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ChildProcess = __webpack_require__(/*! child_process */ \"child_process\");\nconst { Duplex } = __webpack_require__(/*! stream */ \"stream\");\n\nlet FFMPEG = {\n  command: null,\n  output: null,\n};\n\nconst VERSION_REGEX = /version (.+) Copyright/mi;\n\nObject.defineProperty(FFMPEG, 'version', {\n  get() {\n    return VERSION_REGEX.exec(FFMPEG.output)[1];\n  },\n  enumerable: true,\n});\n\n/**\n * An FFmpeg transform stream that provides an interface to FFmpeg.\n * @memberof core\n */\nclass FFmpeg extends Duplex {\n  /**\n   * Creates a new FFmpeg transform stream\n   * @memberof core\n   * @param {Object} options Options you would pass to a regular Transform stream, plus an `args` option\n   * @param {Array<string>} options.args Arguments to pass to FFmpeg\n   * @param {boolean} [options.shell=false] Whether FFmpeg should be spawned inside a shell\n   * @example\n   * // By default, if you don't specify an input (`-i ...`) prism will assume you're piping a stream into it.\n   * const transcoder = new prism.FFmpeg({\n   *  args: [\n   *    '-analyzeduration', '0',\n   *    '-loglevel', '0',\n   *    '-f', 's16le',\n   *    '-ar', '48000',\n   *    '-ac', '2',\n   *  ]\n   * });\n   * const s16le = mp3File.pipe(transcoder);\n   * const opus = s16le.pipe(new prism.opus.Encoder({ rate: 48000, channels: 2, frameSize: 960 }));\n   */\n  constructor(options = {}) {\n    super();\n    this.process = FFmpeg.create({ shell: false, ...options });\n    const EVENTS = {\n      readable: this._reader,\n      data: this._reader,\n      end: this._reader,\n      unpipe: this._reader,\n      finish: this._writer,\n      drain: this._writer,\n    };\n\n    this._readableState = this._reader._readableState;\n    this._writableState = this._writer._writableState;\n\n    this._copy(['write', 'end'], this._writer);\n    this._copy(['read', 'setEncoding', 'pipe', 'unpipe'], this._reader);\n\n    for (const method of ['on', 'once', 'removeListener', 'removeListeners', 'listeners']) {\n      this[method] = (ev, fn) => EVENTS[ev] ? EVENTS[ev][method](ev, fn) : Duplex.prototype[method].call(this, ev, fn);\n    }\n\n    const processError = error => this.emit('error', error);\n    this._reader.on('error', processError);\n    this._writer.on('error', processError);\n  }\n\n  get _reader() { return this.process.stdout; }\n  get _writer() { return this.process.stdin; }\n\n  _copy(methods, target) {\n    for (const method of methods) {\n      this[method] = target[method].bind(target);\n    }\n  }\n\n  _destroy(err, cb) {\n    this._cleanup();\n    return cb ? cb(err) : undefined;\n  }\n\n  _final(cb) {\n    this._cleanup();\n    cb();\n  }\n\n  _cleanup() {\n    if (this.process) {\n      this.once('error', () => {});\n      this.process.kill('SIGKILL');\n      this.process = null;\n    }\n  }\n\n\n  /**\n   * The available FFmpeg information\n   * @typedef {Object} FFmpegInfo\n   * @memberof core\n   * @property {string} command The command used to launch FFmpeg\n   * @property {string} output The output from running `ffmpeg -h`\n   * @property {string} version The version of FFmpeg being used, determined from `output`.\n   */\n\n  /**\n   * Finds a suitable FFmpeg command and obtains the debug information from it.\n   * @param {boolean} [force=false] If true, will ignore any cached results and search for the command again\n   * @returns {FFmpegInfo}\n   * @throws Will throw an error if FFmpeg cannot be found.\n   * @example\n   * const ffmpeg = prism.FFmpeg.getInfo();\n   *\n   * console.log(`Using FFmpeg version ${ffmpeg.version}`);\n   *\n   * if (ffmpeg.output.includes('--enable-libopus')) {\n   *   console.log('libopus is available!');\n   * } else {\n   *   console.log('libopus is unavailable!');\n   * }\n   */\n  static getInfo(force = false) {\n    if (FFMPEG.command && !force) return FFMPEG;\n    const sources = [() => {\n      const ffmpegStatic = __webpack_require__(/*! ffmpeg-static */ \"./node_modules/ffmpeg-static/index.js\");\n      return ffmpegStatic.path || ffmpegStatic;\n    }, 'ffmpeg', 'avconv', './ffmpeg', './avconv'];\n    for (let source of sources) {\n      try {\n        if (typeof source === 'function') source = source();\n        const result = ChildProcess.spawnSync(source, ['-h'], { windowsHide: true });\n        if (result.error) throw result.error;\n        Object.assign(FFMPEG, {\n          command: source,\n          output: Buffer.concat(result.output.filter(Boolean)).toString(),\n        });\n        return FFMPEG;\n      } catch (error) {\n        // Do nothing\n      }\n    }\n    throw new Error('FFmpeg/avconv not found!');\n  }\n\n  /**\n   * Creates a new FFmpeg instance. If you do not include `-i ...` it will be assumed that `-i -` should be prepended\n   * to the options and that you'll be piping data into the process.\n   * @param {String[]} [args=[]] Arguments to pass to FFmpeg\n   * @returns {ChildProcess}\n   * @private\n   * @throws Will throw an error if FFmpeg cannot be found.\n   */\n  static create({ args = [], shell = false } = {}) {\n    if (!args.includes('-i')) args.unshift('-i', '-');\n    return ChildProcess.spawn(FFmpeg.getInfo().command, args.concat(['pipe:1']), { windowsHide: true, shell });\n  }\n}\n\nmodule.exports = FFmpeg;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/core/FFmpeg.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/core/VolumeTransformer.js":
/*!****************************************************************!*\
  !*** ./node_modules/prism-media/src/core/VolumeTransformer.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Based on discord.js' old volume system\n\nconst { Transform } = __webpack_require__(/*! stream */ \"stream\");\n\n/**\n * Transforms a stream of PCM volume.\n * @memberof core\n * @extends TransformStream\n */\nclass VolumeTransformer extends Transform {\n  /**\n   * @memberof core\n   * @param {Object} options Any optional TransformStream options plus some extra:\n   * @param {string} options.type The type of transformer: s16le (signed 16-bit little-endian), s16be, s32le, s32be\n   * @param {number} [options.volume=1] The output volume of the stream\n   * @example\n   * // Half the volume of a signed 16-bit little-endian PCM stream\n   * input\n   *  .pipe(new prism.VolumeTransformer({ type: 's16le', volume: 0.5 }))\n   *  .pipe(writeStream);\n   */\n  constructor(options = {}) {\n    super(options);\n    switch (options.type) {\n      case 's16le':\n        this._readInt = (buffer, index) => buffer.readInt16LE(index);\n        this._writeInt = (buffer, int, index) => buffer.writeInt16LE(int, index);\n        this._bits = 16;\n        break;\n      case 's16be':\n        this._readInt = (buffer, index) => buffer.readInt16BE(index);\n        this._writeInt = (buffer, int, index) => buffer.writeInt16BE(int, index);\n        this._bits = 16;\n        break;\n      case 's32le':\n        this._readInt = (buffer, index) => buffer.readInt32LE(index);\n        this._writeInt = (buffer, int, index) => buffer.writeInt32LE(int, index);\n        this._bits = 32;\n        break;\n      case 's32be':\n        this._readInt = (buffer, index) => buffer.readInt32BE(index);\n        this._writeInt = (buffer, int, index) => buffer.writeInt32BE(int, index);\n        this._bits = 32;\n        break;\n      default:\n        throw new Error('VolumeTransformer type should be one of s16le, s16be, s32le, s32be');\n    }\n    this._bytes = this._bits / 8;\n    this._extremum = Math.pow(2, this._bits - 1);\n    this.volume = typeof options.volume === 'undefined' ? 1 : options.volume;\n    this._chunk = Buffer.alloc(0);\n  }\n\n  _readInt(buffer, index) { return index; }\n  _writeInt(buffer, int, index) { return index; }\n\n  _transform(chunk, encoding, done) {\n    // If the volume is 1, act like a passthrough stream\n    if (this.volume === 1) {\n      this.push(chunk);\n      return done();\n    }\n\n    const { _bytes, _extremum } = this;\n\n    chunk = this._chunk = Buffer.concat([this._chunk, chunk]);\n    if (chunk.length < _bytes) return done();\n\n    const complete = Math.floor(chunk.length / _bytes) * _bytes;\n\n    for (let i = 0; i < complete; i += _bytes) {\n      const int = Math.min(_extremum - 1, Math.max(-_extremum, Math.floor(this.volume * this._readInt(chunk, i))));\n      this._writeInt(chunk, int, i);\n    }\n\n    this._chunk = chunk.slice(complete);\n    this.push(chunk.slice(0, complete));\n    return done();\n  }\n\n  _destroy(err, cb) {\n    super._destroy(err, cb);\n    this._chunk = null;\n  }\n\n  /**\n   * Sets the volume relative to the input stream - i.e. 1 is normal, 0.5 is half, 2 is double.\n   * @param {number} volume The volume that you want to set\n   */\n  setVolume(volume) {\n    this.volume = volume;\n  }\n\n  /**\n   * Sets the volume in decibels.\n   * @param {number} db The decibels\n   */\n  setVolumeDecibels(db) {\n    this.setVolume(Math.pow(10, db / 20));\n  }\n\n  /**\n   * Sets the volume so that a perceived value of 0.5 is half the perceived volume etc.\n   * @param {number} value The value for the volume\n   */\n  setVolumeLogarithmic(value) {\n    this.setVolume(Math.pow(value, 1.660964));\n  }\n\n  /**\n   * The current volume of the stream in decibels\n   * @readonly\n   * @type {number}\n   */\n  get volumeDecibels() {\n    return Math.log10(this.volume) * 20;\n  }\n  /**\n   * The current volume of the stream from a logarithmic scale\n   * @readonly\n   * @type {number}\n   */\n  get volumeLogarithmic() {\n    return Math.pow(this.volume, 1 / 1.660964);\n  }\n}\n\nmodule.exports = VolumeTransformer;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/core/VolumeTransformer.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/core/WebmBase.js":
/*!*******************************************************!*\
  !*** ./node_modules/prism-media/src/core/WebmBase.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Transform } = __webpack_require__(/*! stream */ \"stream\");\n\n/**\n * Base class for WebmOpusDemuxer and WebmVorbisDemuxer.\n * **You shouldn't directly instantiate this class, use the opus.WebmDemuxer and vorbis.WebmDemuxer\n * implementations instead!**\n * @memberof core\n * @protected\n * @extends TransformStream\n */\nclass WebmBaseDemuxer extends Transform {\n  /**\n   * Creates a new Webm demuxer.\n   * @private\n   * @memberof core\n   * @param {Object} [options] options that you would pass to a regular Transform stream.\n   */\n  constructor(options = {}) {\n    super(Object.assign({ readableObjectMode: true }, options));\n    this._remainder = null;\n    this._length = 0;\n    this._count = 0;\n    this._skipUntil = null;\n    this._track = null;\n    this._incompleteTrack = {};\n    this._ebmlFound = false;\n  }\n\n  _transform(chunk, encoding, done) {\n    this._length += chunk.length;\n    if (this._remainder) {\n      chunk = Buffer.concat([this._remainder, chunk]);\n      this._remainder = null;\n    }\n    let offset = 0;\n    if (this._skipUntil && this._length > this._skipUntil) {\n      offset = this._skipUntil - this._count;\n      this._skipUntil = null;\n    } else if (this._skipUntil) {\n      this._count += chunk.length;\n      done();\n      return;\n    }\n    let result;\n    while (result !== TOO_SHORT) {\n      try {\n        result = this._readTag(chunk, offset);\n      } catch (error) {\n        done(error);\n        return;\n      }\n      if (result === TOO_SHORT) break;\n      if (result._skipUntil) {\n        this._skipUntil = result._skipUntil;\n        break;\n      }\n      if (result.offset) offset = result.offset;\n      else break;\n    }\n    this._count += offset;\n    this._remainder = chunk.slice(offset);\n    done();\n    return;\n  }\n\n  /**\n   * Reads an EBML ID from a buffer.\n   * @private\n   * @param {Buffer} chunk the buffer to read from.\n   * @param {number} offset the offset in the buffer.\n   * @returns {Object|Symbol} contains an `id` property (buffer) and the new `offset` (number).\n   * Returns the TOO_SHORT symbol if the data wasn't big enough to facilitate the request.\n   */\n  _readEBMLId(chunk, offset) {\n    const idLength = vintLength(chunk, offset);\n    if (idLength === TOO_SHORT) return TOO_SHORT;\n    return {\n      id: chunk.slice(offset, offset + idLength),\n      offset: offset + idLength,\n    };\n  }\n\n  /**\n   * Reads a size variable-integer to calculate the length of the data of a tag.\n   * @private\n   * @param {Buffer} chunk the buffer to read from.\n   * @param {number} offset the offset in the buffer.\n   * @returns {Object|Symbol} contains property `offset` (number), `dataLength` (number) and `sizeLength` (number).\n   * Returns the TOO_SHORT symbol if the data wasn't big enough to facilitate the request.\n   */\n  _readTagDataSize(chunk, offset) {\n    const sizeLength = vintLength(chunk, offset);\n    if (sizeLength === TOO_SHORT) return TOO_SHORT;\n    const dataLength = expandVint(chunk, offset, offset + sizeLength);\n    return { offset: offset + sizeLength, dataLength, sizeLength };\n  }\n\n  /**\n   * Takes a buffer and attempts to read and process a tag.\n   * @private\n   * @param {Buffer} chunk the buffer to read from.\n   * @param {number} offset the offset in the buffer.\n   * @returns {Object|Symbol} contains the new `offset` (number) and optionally the `_skipUntil` property,\n   * indicating that the stream should ignore any data until a certain length is reached.\n   * Returns the TOO_SHORT symbol if the data wasn't big enough to facilitate the request.\n   */\n  _readTag(chunk, offset) {\n    const idData = this._readEBMLId(chunk, offset);\n    if (idData === TOO_SHORT) return TOO_SHORT;\n    const ebmlID = idData.id.toString('hex');\n    if (!this._ebmlFound) {\n      if (ebmlID === '1a45dfa3') this._ebmlFound = true;\n      else throw Error('Did not find the EBML tag at the start of the stream');\n    }\n    offset = idData.offset;\n    const sizeData = this._readTagDataSize(chunk, offset);\n    if (sizeData === TOO_SHORT) return TOO_SHORT;\n    const { dataLength } = sizeData;\n    offset = sizeData.offset;\n    // If this tag isn't useful, tell the stream to stop processing data until the tag ends\n    if (typeof TAGS[ebmlID] === 'undefined') {\n      if (chunk.length > offset + dataLength) {\n        return { offset: offset + dataLength };\n      }\n      return { offset, _skipUntil: this._count + offset + dataLength };\n    }\n\n    const tagHasChildren = TAGS[ebmlID];\n    if (tagHasChildren) {\n      return { offset };\n    }\n\n    if (offset + dataLength > chunk.length) return TOO_SHORT;\n    const data = chunk.slice(offset, offset + dataLength);\n    if (!this._track) {\n      if (ebmlID === 'ae') this._incompleteTrack = {};\n      if (ebmlID === 'd7') this._incompleteTrack.number = data[0];\n      if (ebmlID === '83') this._incompleteTrack.type = data[0];\n      if (this._incompleteTrack.type === 2 && typeof this._incompleteTrack.number !== 'undefined') {\n        this._track = this._incompleteTrack;\n      }\n    }\n    if (ebmlID === '63a2') {\n      this._checkHead(data);\n      this.emit('head', data);\n    } else if (ebmlID === 'a3') {\n      if (!this._track) throw Error('No audio track in this webm!');\n      if ((data[0] & 0xF) === this._track.number) {\n        this.push(data.slice(4));\n      }\n    }\n    return { offset: offset + dataLength };\n  }\n\n  _destroy(err, cb) {\n    this._cleanup();\n    return cb ? cb(err) : undefined;\n  }\n\n  _final(cb) {\n    this._cleanup();\n    cb();\n  }\n\n  /**\n   * Cleans up the demuxer when it is no longer required.\n   * @private\n   */\n  _cleanup() {\n    this._remainder = null;\n    this._incompleteTrack = {};\n  }\n}\n\n/**\n * A symbol that is returned by some functions that indicates the buffer it has been provided is not large enough\n * to facilitate a request.\n * @name WebmBaseDemuxer#TOO_SHORT\n * @memberof core\n * @private\n * @type {Symbol}\n */\nconst TOO_SHORT = WebmBaseDemuxer.TOO_SHORT = Symbol('TOO_SHORT');\n\n/**\n * A map that takes a value of an EBML ID in hex string form, with the value being a boolean that indicates whether\n * this tag has children.\n * @name WebmBaseDemuxer#TAGS\n * @memberof core\n * @private\n * @type {Object}\n */\nconst TAGS = WebmBaseDemuxer.TAGS = { // value is true if the element has children\n  '1a45dfa3': true, // EBML\n  '18538067': true, // Segment\n  '1f43b675': true, // Cluster\n  '1654ae6b': true, // Tracks\n  'ae': true, // TrackEntry\n  'd7': false, // TrackNumber\n  '83': false, // TrackType\n  'a3': false, // SimpleBlock\n  '63a2': false,\n};\n\nmodule.exports = WebmBaseDemuxer;\n\nfunction vintLength(buffer, index) {\n  let i = 0;\n  for (; i < 8; i++) if ((1 << (7 - i)) & buffer[index]) break;\n  i++;\n  if (index + i > buffer.length) {\n    return TOO_SHORT;\n  }\n  return i;\n}\n\nfunction expandVint(buffer, start, end) {\n  const length = vintLength(buffer, start);\n  if (end > buffer.length || length === TOO_SHORT) return TOO_SHORT;\n  let mask = (1 << (8 - length)) - 1;\n  let value = buffer[start] & mask;\n  for (let i = start + 1; i < end; i++) {\n    value = (value << 8) + buffer[i];\n  }\n  return value;\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/core/WebmBase.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/core/index.js":
/*!****************************************************!*\
  !*** ./node_modules/prism-media/src/core/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Core features.\n * **You shouldn't prefix imports from this namespace with `core`.**\n * @namespace core\n */\nmodule.exports = {\n  FFmpeg: __webpack_require__(/*! ./FFmpeg */ \"./node_modules/prism-media/src/core/FFmpeg.js\"),\n  VolumeTransformer: __webpack_require__(/*! ./VolumeTransformer */ \"./node_modules/prism-media/src/core/VolumeTransformer.js\"),\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/core/index.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/prism-media/src/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = {\r\n  opus: __webpack_require__(/*! ./opus */ \"./node_modules/prism-media/src/opus/index.js\"),\r\n  vorbis: __webpack_require__(/*! ./vorbis */ \"./node_modules/prism-media/src/vorbis/index.js\"),\r\n  ...__webpack_require__(/*! ./core */ \"./node_modules/prism-media/src/core/index.js\"),\r\n};\r\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/index.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/opus/OggDemuxer.js":
/*!*********************************************************!*\
  !*** ./node_modules/prism-media/src/opus/OggDemuxer.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Transform } = __webpack_require__(/*! stream */ \"stream\");\n\nconst OGG_PAGE_HEADER_SIZE = 26;\nconst STREAM_STRUCTURE_VERSION = 0;\n\nconst charCode = x => x.charCodeAt(0);\nconst OGGS_HEADER = Buffer.from([...'OggS'].map(charCode));\nconst OPUS_HEAD = Buffer.from([...'OpusHead'].map(charCode));\nconst OPUS_TAGS = Buffer.from([...'OpusTags'].map(charCode));\n\n/**\n * Demuxes an Ogg stream (containing Opus audio) to output an Opus stream.\n * @extends {TransformStream}\n * @memberof opus\n */\nclass OggDemuxer extends Transform {\n  /**\n   * Creates a new OggOpus demuxer.\n   * @param {Object} [options] options that you would pass to a regular Transform stream.\n   * @memberof opus\n   */\n  constructor(options = {}) {\n    super(Object.assign({ readableObjectMode: true }, options));\n    this._remainder = null;\n    this._head = null;\n    this._bitstream = null;\n  }\n\n  _transform(chunk, encoding, done) {\n    if (this._remainder) {\n      chunk = Buffer.concat([this._remainder, chunk]);\n      this._remainder = null;\n    }\n\n    try {\n      while (chunk) {\n        const result = this._readPage(chunk);\n        if (result) chunk = result;\n        else break;\n      }\n    } catch (error) {\n      done(error);\n      return;\n    }\n    this._remainder = chunk;\n    done();\n  }\n\n  /**\n   * Reads a page from a buffer\n   * @private\n   * @param {Buffer} chunk the chunk containing the page\n   * @returns {boolean|Buffer} if a buffer, it will be a slice of the excess data of the original, otherwise it will be\n   * false and would indicate that there is not enough data to go ahead with reading this page.\n   */\n  _readPage(chunk) {\n    if (chunk.length < OGG_PAGE_HEADER_SIZE) {\n      return false;\n    }\n    if (!chunk.slice(0, 4).equals(OGGS_HEADER)) {\n      throw Error(`capture_pattern is not ${OGGS_HEADER}`);\n    }\n    if (chunk.readUInt8(4) !== STREAM_STRUCTURE_VERSION) {\n      throw Error(`stream_structure_version is not ${STREAM_STRUCTURE_VERSION}`);\n    }\n\n    if (chunk.length < 27) return false;\n    const pageSegments = chunk.readUInt8(26);\n    if (chunk.length < 27 + pageSegments) return false;\n    const table = chunk.slice(27, 27 + pageSegments);\n    const bitstream = chunk.readUInt32BE(14);\n\n    let sizes = [], totalSize = 0;\n\n    for (let i = 0; i < pageSegments;) {\n      let size = 0, x = 255;\n      while (x === 255) {\n        if (i >= table.length) return false;\n        x = table.readUInt8(i);\n        i++;\n        size += x;\n      }\n      sizes.push(size);\n      totalSize += size;\n    }\n\n    if (chunk.length < 27 + pageSegments + totalSize) return false;\n\n    let start = 27 + pageSegments;\n    for (const size of sizes) {\n      const segment = chunk.slice(start, start + size);\n      const header = segment.slice(0, 8);\n      if (this._head) {\n        if (header.equals(OPUS_TAGS)) this.emit('tags', segment);\n        else if (this._bitstream === bitstream) this.push(segment);\n      } else if (header.equals(OPUS_HEAD)) {\n        this.emit('head', segment);\n        this._head = segment;\n        this._bitstream = bitstream;\n      } else {\n        this.emit('unknownSegment', segment);\n      }\n      start += size;\n    }\n    return chunk.slice(start);\n  }\n\n  _destroy(err, cb) {\n    this._cleanup();\n    return cb ? cb(err) : undefined;\n  }\n\n  _final(cb) {\n    this._cleanup();\n    cb();\n  }\n\n  /**\n   * Cleans up the demuxer when it is no longer required.\n   * @private\n   */\n  _cleanup() {\n    this._remainder = null;\n    this._head = null;\n    this._bitstream = null;\n  }\n}\n\n/**\n * Emitted when the demuxer encounters the opus head.\n * @event OggDemuxer#head\n * @memberof opus\n * @param {Buffer} segment a buffer containing the opus head data.\n */\n\n/**\n * Emitted when the demuxer encounters opus tags.\n * @event OggDemuxer#tags\n * @memberof opus\n * @param {Buffer} segment a buffer containing the opus tags.\n */\n\nmodule.exports = OggDemuxer;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/opus/OggDemuxer.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/opus/Opus.js":
/*!***************************************************!*\
  !*** ./node_modules/prism-media/src/opus/Opus.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Partly based on https://github.com/Rantanen/node-opus/blob/master/lib/Encoder.js\n\nconst { Transform } = __webpack_require__(/*! stream */ \"stream\");\nconst loader = __webpack_require__(/*! ../util/loader */ \"./node_modules/prism-media/src/util/loader.js\");\n\nconst CTL = {\n  BITRATE: 4002,\n  FEC: 4012,\n  PLP: 4014,\n};\n\nlet Opus = {};\n\nfunction loadOpus(refresh = false) {\n  if (Opus.Encoder && !refresh) return Opus;\n\n  Opus = loader.require([\n    ['@discordjs/opus', opus => ({ Encoder: opus.OpusEncoder })],\n    ['node-opus', opus => ({ Encoder: opus.OpusEncoder })],\n    ['opusscript', opus => ({ Encoder: opus })],\n  ]);\n  return Opus;\n}\n\nconst charCode = x => x.charCodeAt(0);\nconst OPUS_HEAD = Buffer.from([...'OpusHead'].map(charCode));\nconst OPUS_TAGS = Buffer.from([...'OpusTags'].map(charCode));\n\n// frame size = (channels * rate * frame_duration) / 1000\n\n/**\n * Takes a stream of Opus data and outputs a stream of PCM data, or the inverse.\n * **You shouldn't directly instantiate this class, see opus.Encoder and opus.Decoder instead!**\n * @memberof opus\n * @extends TransformStream\n * @protected\n */\nclass OpusStream extends Transform {\n  /**\n   * Creates a new Opus transformer.\n   * @private\n   * @memberof opus\n   * @param {Object} [options] options that you would pass to a regular Transform stream\n   */\n  constructor(options = {}) {\n    if (!loadOpus().Encoder) {\n      throw Error('Could not find an Opus module! Please install @discordjs/opus, node-opus, or opusscript.');\n    }\n    super(Object.assign({ readableObjectMode: true }, options));\n    if (Opus.name === 'opusscript') {\n      options.application = Opus.Encoder.Application[options.application];\n    }\n    this.encoder = new Opus.Encoder(options.rate, options.channels, options.application);\n\n    this._options = options;\n    this._required = this._options.frameSize * this._options.channels * 2;\n  }\n\n  _encode(buffer) {\n    return this.encoder.encode(buffer, this._options.frameSize);\n  }\n\n  _decode(buffer) {\n    return this.encoder.decode(buffer, Opus.name === 'opusscript' ? null : this._options.frameSize);\n  }\n\n  /**\n   * Returns the Opus module being used - `opusscript`, `node-opus`, or `@discordjs/opus`.\n   * @type {string}\n   * @readonly\n   * @example\n   * console.log(`Using Opus module ${prism.opus.Encoder.type}`);\n   */\n  static get type() {\n    return Opus.name;\n  }\n\n  /**\n   * Sets the bitrate of the stream.\n   * @param {number} bitrate the bitrate to use use, e.g. 48000\n   * @public\n   */\n  setBitrate(bitrate) {\n    (this.encoder.applyEncoderCTL || this.encoder.encoderCTL)\n      .apply(this.encoder, [CTL.BITRATE, Math.min(128e3, Math.max(16e3, bitrate))]);\n  }\n\n  /**\n   * Enables or disables forward error correction.\n   * @param {boolean} enabled whether or not to enable FEC.\n   * @public\n   */\n  setFEC(enabled) {\n    (this.encoder.applyEncoderCTL || this.encoder.encoderCTL)\n      .apply(this.encoder, [CTL.FEC, enabled ? 1 : 0]);\n  }\n\n  /**\n   * Sets the expected packet loss over network transmission.\n   * @param {number} [percentage] a percentage (represented between 0 and 1)\n   */\n  setPLP(percentage) {\n    (this.encoder.applyEncoderCTL || this.encoder.encoderCTL)\n      .apply(this.encoder, [CTL.PLP, Math.min(100, Math.max(0, percentage * 100))]);\n  }\n\n  _final(cb) {\n    this._cleanup();\n    cb();\n  }\n\n  _destroy(err, cb) {\n    this._cleanup();\n    return cb ? cb(err) : undefined;\n  }\n\n  /**\n   * Cleans up the Opus stream when it is no longer needed\n   * @private\n   */\n  _cleanup() {\n    if (Opus.name === 'opusscript' && this.encoder) this.encoder.delete();\n    this.encoder = null;\n  }\n}\n\n/**\n * An Opus encoder stream.\n *\n * Outputs opus packets in [object mode.](https://nodejs.org/api/stream.html#stream_object_mode)\n * @extends opus.OpusStream\n * @memberof opus\n * @example\n * const encoder = new prism.opus.Encoder({ frameSize: 960, channels: 2, rate: 48000 });\n * pcmAudio.pipe(encoder);\n * // encoder will now output Opus-encoded audio packets\n */\nclass Encoder extends OpusStream {\n  /**\n   * Creates a new Opus encoder stream.\n   * @memberof opus\n   * @param {Object} options options that you would pass to a regular OpusStream, plus a few more:\n   * @param {number} options.frameSize the frame size in bytes to use (e.g. 960 for stereo audio at 48KHz with a frame\n   * duration of 20ms)\n   * @param {number} options.channels the number of channels to use\n   * @param {number} options.rate the sampling rate in Hz\n   */\n  constructor(options) {\n    super(options);\n    this._buffer = Buffer.alloc(0);\n  }\n\n  _transform(chunk, encoding, done) {\n    this._buffer = Buffer.concat([this._buffer, chunk]);\n    let n = 0;\n    while (this._buffer.length >= this._required * (n + 1)) {\n      const buf = this._encode(this._buffer.slice(n * this._required, (n + 1) * this._required));\n      this.push(buf);\n      n++;\n    }\n    if (n > 0) this._buffer = this._buffer.slice(n * this._required);\n    return done();\n  }\n\n  _destroy(err, cb) {\n    super._destroy(err, cb);\n    this._buffer = null;\n  }\n}\n\n/**\n * An Opus decoder stream.\n *\n * Note that any stream you pipe into this must be in\n * [object mode](https://nodejs.org/api/stream.html#stream_object_mode) and should output Opus packets.\n * @extends opus.OpusStream\n * @memberof opus\n * @example\n * const decoder = new prism.opus.Decoder({ frameSize: 960, channels: 2, rate: 48000 });\n * input.pipe(decoder);\n * // decoder will now output PCM audio\n */\nclass Decoder extends OpusStream {\n  _transform(chunk, encoding, done) {\n    const signature = chunk.slice(0, 8);\n    if (signature.equals(OPUS_HEAD)) {\n      this.emit('format', {\n        channels: this._options.channels,\n        sampleRate: this._options.rate,\n        bitDepth: 16,\n        float: false,\n        signed: true,\n        version: chunk.readUInt8(8),\n        preSkip: chunk.readUInt16LE(10),\n        gain: chunk.readUInt16LE(16),\n      });\n      return done();\n    }\n    if (signature.equals(OPUS_TAGS)) {\n      this.emit('tags', chunk);\n      return done();\n    }\n    try {\n      this.push(this._decode(chunk));\n    } catch (e) {\n      return done(e);\n    }\n    return done();\n  }\n}\n\nmodule.exports = { Decoder, Encoder };\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/opus/Opus.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/opus/WebmDemuxer.js":
/*!**********************************************************!*\
  !*** ./node_modules/prism-media/src/opus/WebmDemuxer.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const WebmBaseDemuxer = __webpack_require__(/*! ../core/WebmBase */ \"./node_modules/prism-media/src/core/WebmBase.js\");\n\nconst OPUS_HEAD = Buffer.from([...'OpusHead'].map(x => x.charCodeAt(0)));\n\n/**\n * Demuxes a Webm stream (containing Opus audio) to output an Opus stream.\n * @extends core.WebmBaseDemuxer\n * @memberof opus\n * @example\n * const fs = require('fs');\n * const file = fs.createReadStream('./audio.webm');\n * const demuxer = new prism.opus.WebmDemuxer();\n * const opus = file.pipe(demuxer);\n * // opus is now a ReadableStream in object mode outputting Opus packets\n */\nclass WebmDemuxer extends WebmBaseDemuxer {\n  _checkHead(data) {\n    if (!data.slice(0, 8).equals(OPUS_HEAD)) {\n      throw Error('Audio codec is not Opus!');\n    }\n  }\n}\n\nmodule.exports = WebmDemuxer;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/opus/WebmDemuxer.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/opus/index.js":
/*!****************************************************!*\
  !*** ./node_modules/prism-media/src/opus/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Opus features\n * @namespace opus\n */\nmodule.exports = {\n  // Encoder and Decoder\n  ...__webpack_require__(/*! ./Opus */ \"./node_modules/prism-media/src/opus/Opus.js\"),\n  OggDemuxer: __webpack_require__(/*! ./OggDemuxer */ \"./node_modules/prism-media/src/opus/OggDemuxer.js\"),\n  WebmDemuxer: __webpack_require__(/*! ./WebmDemuxer */ \"./node_modules/prism-media/src/opus/WebmDemuxer.js\"),\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/opus/index.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/util/loader.js":
/*!*****************************************************!*\
  !*** ./node_modules/prism-media/src/util/loader.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.require = function loader(list) {\n  const errorLog = [];\n  for (const [name, fn] of list) {\n    try {\n      const data = fn(__webpack_require__(\"./node_modules/prism-media/src/util sync recursive\")(name));\n      data.name = name;\n      return data;\n    } catch (e) {\n      errorLog.push(e);\n    }\n  }\n  throw new Error(errorLog.join('\\n'));\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/util/loader.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/util sync recursive":
/*!*************************************************!*\
  !*** ./node_modules/prism-media/src/util/ sync ***!
  \*************************************************/
/***/ ((module) => {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/prism-media/src/util sync recursive\";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/util/_sync?");

/***/ }),

/***/ "./node_modules/prism-media/src/vorbis/WebmDemuxer.js":
/*!************************************************************!*\
  !*** ./node_modules/prism-media/src/vorbis/WebmDemuxer.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const WebmBaseDemuxer = __webpack_require__(/*! ../core/WebmBase */ \"./node_modules/prism-media/src/core/WebmBase.js\");\n\nconst VORBIS_HEAD = Buffer.from([...'vorbis'].map(x => x.charCodeAt(0)));\n\n/**\n * Demuxes a Webm stream (containing Vorbis audio) to output a Vorbis stream.\n * @memberof vorbis\n * @extends core.WebmBaseDemuxer\n */\nclass WebmDemuxer extends WebmBaseDemuxer {\n  _checkHead(data) {\n    if (data.readUInt8(0) !== 2 || !data.slice(4, 10).equals(VORBIS_HEAD)) {\n      throw Error('Audio codec is not Vorbis!');\n    }\n\n    this.push(data.slice(3, 3 + data.readUInt8(1)));\n    this.push(data.slice(3 + data.readUInt8(1), 3 + data.readUInt8(1) + data.readUInt8(2)));\n    this.push(data.slice(3 + data.readUInt8(1) + data.readUInt8(2)));\n  }\n}\n\nmodule.exports = WebmDemuxer;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/vorbis/WebmDemuxer.js?");

/***/ }),

/***/ "./node_modules/prism-media/src/vorbis/index.js":
/*!******************************************************!*\
  !*** ./node_modules/prism-media/src/vorbis/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Vorbis features\n * @namespace vorbis\n */\n\nmodule.exports = {\n  WebmDemuxer: __webpack_require__(/*! ./WebmDemuxer */ \"./node_modules/prism-media/src/vorbis/WebmDemuxer.js\"),\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/prism-media/src/vorbis/index.js?");

/***/ }),

/***/ "./node_modules/qs/lib/formats.js":
/*!****************************************!*\
  !*** ./node_modules/qs/lib/formats.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/qs/lib/formats.js?");

/***/ }),

/***/ "./node_modules/qs/lib/index.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar stringify = __webpack_require__(/*! ./stringify */ \"./node_modules/qs/lib/stringify.js\");\nvar parse = __webpack_require__(/*! ./parse */ \"./node_modules/qs/lib/parse.js\");\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/qs/lib/index.js?");

/***/ }),

/***/ "./node_modules/qs/lib/parse.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/parse.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/qs/lib/parse.js?");

/***/ }),

/***/ "./node_modules/qs/lib/stringify.js":
/*!******************************************!*\
  !*** ./node_modules/qs/lib/stringify.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar getSideChannel = __webpack_require__(/*! side-channel */ \"./node_modules/side-channel/index.js\");\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    if (sideChannel.has(object)) {\n        throw new RangeError('Cyclic object value');\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = typeof key === 'object' && key.value !== undefined ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, true);\n        var valueSideChannel = getSideChannel();\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/qs/lib/stringify.js?");

/***/ }),

/***/ "./node_modules/qs/lib/utils.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/utils.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/qs/lib/utils.js?");

/***/ }),

/***/ "./node_modules/sax/lib/sax.js":
/*!*************************************!*\
  !*** ./node_modules/sax/lib/sax.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = __webpack_require__(/*! stream */ \"stream\").Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = __webpack_require__(/*! string_decoder */ \"string_decoder\").StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})( false ? 0 : exports)\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/sax/lib/sax.js?");

/***/ }),

/***/ "./node_modules/side-channel/index.js":
/*!********************************************!*\
  !*** ./node_modules/side-channel/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\nvar inspect = __webpack_require__(/*! object-inspect */ \"./node_modules/object-inspect/index.js\");\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/side-channel/index.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/authentication-request.js":
/*!*************************************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/authentication-request.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Request = __webpack_require__(/*! ./base-request */ \"./node_modules/spotify-web-api-node/src/base-request.js\");\n\nvar DEFAULT_HOST = 'accounts.spotify.com',\n  DEFAULT_PORT = 443,\n  DEFAULT_SCHEME = 'https';\n\nmodule.exports.builder = function() {\n  return Request.builder()\n    .withHost(DEFAULT_HOST)\n    .withPort(DEFAULT_PORT)\n    .withScheme(DEFAULT_SCHEME);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/authentication-request.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/base-request.js":
/*!***************************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/base-request.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar Request = function(builder) {\n  if (!builder) {\n    throw new Error('No builder supplied to constructor');\n  }\n\n  this.host = builder.host;\n  this.port = builder.port;\n  this.scheme = builder.scheme;\n  this.queryParameters = builder.queryParameters;\n  this.bodyParameters = builder.bodyParameters;\n  this.headers = builder.headers;\n  this.path = builder.path;\n};\n\nRequest.prototype._getter = function(key) {\n  return function() {\n    return this[key];\n  };\n};\n\nRequest.prototype.getHost = Request.prototype._getter('host');\n\nRequest.prototype.getPort = Request.prototype._getter('port');\n\nRequest.prototype.getScheme = Request.prototype._getter('scheme');\n\nRequest.prototype.getPath = Request.prototype._getter('path');\n\nRequest.prototype.getQueryParameters = Request.prototype._getter(\n  'queryParameters'\n);\n\nRequest.prototype.getBodyParameters = Request.prototype._getter(\n  'bodyParameters'\n);\n\nRequest.prototype.getHeaders = Request.prototype._getter('headers');\n\nRequest.prototype.getURI = function() {\n  if (!this.scheme || !this.host || !this.port) {\n    throw new Error('Missing components necessary to construct URI');\n  }\n  var uri = this.scheme + '://' + this.host;\n  if (\n    (this.scheme === 'http' && this.port !== 80) ||\n    (this.scheme === 'https' && this.port !== 443)\n  ) {\n    uri += ':' + this.port;\n  }\n  if (this.path) {\n    uri += this.path;\n  }\n  return uri;\n};\n\nRequest.prototype.getURL = function() {\n  var uri = this.getURI();\n  if (this.getQueryParameters()) {\n    return uri + this.getQueryParameterString(this.getQueryParameters());\n  } else {\n    return uri;\n  }\n};\n\nRequest.prototype.getQueryParameterString = function() {\n  var queryParameters = this.getQueryParameters();\n  if (queryParameters) {\n    return (\n      '?' +\n      Object.keys(queryParameters)\n        .filter(function(key) {\n          return queryParameters[key] !== undefined;\n        })\n        .map(function(key) {\n          return key + '=' + queryParameters[key];\n        })\n        .join('&')\n    );\n  }\n};\n\nRequest.prototype.execute = function(method, callback) {\n  if (callback) {\n    method(this, callback);\n    return;\n  }\n  var _self = this;\n\n  return new Promise(function(resolve, reject) {\n    method(_self, function(error, result) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nvar Builder = function() {};\n\nBuilder.prototype._setter = function(key) {\n  return function(value) {\n    this[key] = value;\n    return this;\n  };\n};\n\nBuilder.prototype.withHost = Builder.prototype._setter('host');\n\nBuilder.prototype.withPort = Builder.prototype._setter('port');\n\nBuilder.prototype.withScheme = Builder.prototype._setter('scheme');\n\nBuilder.prototype.withPath = Builder.prototype._setter('path');\n\nBuilder.prototype._assigner = function(key) {\n  return function() {\n    for (var i = 0; i < arguments.length; i++) {\n      this[key] = this._assign(this[key], arguments[i]);\n    }\n    \n    return this;\n  };\n};\n\nBuilder.prototype.withQueryParameters = Builder.prototype._assigner(\n  'queryParameters'\n);\n\nBuilder.prototype.withBodyParameters = Builder.prototype._assigner(\n  'bodyParameters'\n);\n\nBuilder.prototype.withHeaders = Builder.prototype._assigner('headers');\n\nBuilder.prototype.withAuth = function(accessToken) {\n  if (accessToken) {\n    this.withHeaders({ Authorization: 'Bearer ' + accessToken });\n  }\n  return this;\n};\n\nBuilder.prototype._assign = function(src, obj) {\n  if (obj && Array.isArray(obj)) {\n    return obj;\n  }\n  if (obj && typeof obj === 'string') {\n    return obj;\n  }\n  if (obj && Object.keys(obj).length > 0) {\n    return Object.assign(src || {}, obj);\n  }\n  return src;\n};\n\nBuilder.prototype.build = function() {\n  return new Request(this);\n};\n\nmodule.exports.builder = function() {\n  return new Builder();\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/base-request.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/http-manager.js":
/*!***************************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/http-manager.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar superagent = __webpack_require__(/*! superagent */ \"./node_modules/superagent/lib/node/index.js\"),\n  { TimeoutError, \n    WebapiError, \n    WebapiRegularError, \n    WebapiAuthenticationError,\n    WebapiPlayerError \n  } =  __webpack_require__(/*! ./response-error */ \"./node_modules/spotify-web-api-node/src/response-error.js\");\n\nvar HttpManager = {};\n\n/* Create superagent options from the base request */\nvar _getParametersFromRequest = function(request) {\n  var options = {};\n\n  if (request.getQueryParameters()) {\n    options.query = request.getQueryParameters();\n  }\n\n  if (request.getHeaders() && request.getHeaders()['Content-Type'] === 'application/json') {\n    options.data = JSON.stringify(request.getBodyParameters());\n  } else if (request.getBodyParameters()) {\n    options.data = request.getBodyParameters();\n  }\n\n  if (request.getHeaders()) {\n    options.headers = request.getHeaders();\n  }\n  return options;\n};\n\nvar _toError = function(response) {\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'object' && response.body.error.reason) {\n    return new WebapiPlayerError(response.body, response.headers, response.statusCode);\n  }\n\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'object') {\n    return new WebapiRegularError(response.body, response.headers, response.statusCode);\n  }\n\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'string') {\n    return new WebapiAuthenticationError(response.body, response.headers, response.statusCode);\n  }\n  \n  /* Other type of error, or unhandled Web API error format */\n  return new WebapiError(response.body, response.headers, response.statusCode, response.body);\n};\n\n/* Make the request to the Web API */\nHttpManager._makeRequest = function(method, options, uri, callback) {\n  var req = method.bind(superagent)(uri);\n\n  if (options.query) {\n    req.query(options.query);\n  }\n\n  if (options.headers) {\n    req.set(options.headers);\n  }\n\n  if (options.data) {\n    req.send(options.data);\n  }\n\n  req.end(function(err, response) {\n    if (err) {\n      if (err.timeout) {\n        return callback(new TimeoutError());\n      } else if (err.response) {\n        return callback(_toError(err.response));\n      } else {\n        return callback(err);\n      }\n    }\n\n    return callback(null, {\n      body: response.body,\n      headers: response.headers,\n      statusCode: response.statusCode\n    });\n  });\n};\n\n/**\n * Make a HTTP GET request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.get = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.get;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP POST request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.post = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.post;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP DELETE request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.del = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.del;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP PUT request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.put = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.put;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\nmodule.exports = HttpManager;\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/http-manager.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/response-error.js":
/*!*****************************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/response-error.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("/* Timeout */\nclass NamedError extends Error {\n  get name() {\n    return this.constructor.name;\n  }  \n}\n\nclass TimeoutError extends NamedError {\n  constructor() {\n    const message = 'A timeout occurred while communicating with Spotify\\'s Web API.';\n    super(message);\n  }\n\n}\n\n/* Web API Parent and fallback error */\nclass WebapiError extends NamedError {\n  constructor(body, headers, statusCode, message) {\n    super(message);\n    this.body = body;\n    this.headers = headers;\n    this.statusCode = statusCode;\n  }\n\n}\n\n/** \n * Regular Error\n * { status : <integer>, message : <string> }\n */\nclass WebapiRegularError extends WebapiError {\n  constructor(body, headers, statusCode) {\n    const message = 'An error occurred while communicating with Spotify\\'s Web API.\\n' +\n    'Details: ' + body.error.message + '.';\n\n    super(body, headers, statusCode, message);\n  }\n}\n\n/**\n * Authentication Error \n * { error : <string>, error_description : <string> }\n */\nclass WebapiAuthenticationError extends WebapiError {\n  constructor(body, headers, statusCode) {\n    const message = 'An authentication error occurred while communicating with Spotify\\'s Web API.\\n' +\n    'Details: ' + body.error + (body.error_description ? ' ' + body.error_description + '.' : '.');\n\n    super(body, headers, statusCode, message);\n  }\n}\n\n/**\n * Player Error \n * { status : <integer>, message : <string>, reason : <string> }\n */\nclass WebapiPlayerError extends WebapiError {\n  constructor(body, headers, statusCode) {\n    const message = 'An error occurred while communicating with Spotify\\'s Web API.\\n' +\n    'Details: ' + body.error.message + (body.error.reason ? ' ' + body.error.reason + '.' : '.');\n\n    super(body, headers, statusCode, message);\n  }\n}\n\nmodule.exports = { WebapiError, TimeoutError, WebapiRegularError, WebapiAuthenticationError, WebapiPlayerError };\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/response-error.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/server-methods.js":
/*!*****************************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/server-methods.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar AuthenticationRequest = __webpack_require__(/*! ./authentication-request */ \"./node_modules/spotify-web-api-node/src/authentication-request.js\");\nvar HttpManager = __webpack_require__(/*! ./http-manager */ \"./node_modules/spotify-web-api-node/src/http-manager.js\");\n\nmodule.exports = {\n\n  /**\n   * Retrieve a URL where the user can give the application permissions.\n   * @param {string[]} scopes The scopes corresponding to the permissions the application needs.\n   * @param {string} state A parameter that you can use to maintain a value between the request and the callback to redirect_uri.It is useful to prevent CSRF exploits.\n   * @param {boolean} showDialog A parameter that you can use to force the user to approve the app on each login rather than being automatically redirected.\n   * @param {string} responseType An optional parameter that you can use to specify the code response based on the authentication type - can be set to 'code' or 'token'. Default 'code' to ensure backwards compatability.\n   * @returns {string} The URL where the user can give application permissions.\n   */\n  createAuthorizeURL: function(scopes, state, showDialog, responseType = 'code') {\n    return AuthenticationRequest.builder()\n      .withPath('/authorize')\n      .withQueryParameters({\n        client_id: this.getClientId(),\n        response_type: responseType,\n        redirect_uri: this.getRedirectURI(),\n        scope: scopes.join('%20'),\n        state: state,\n        show_dialog: showDialog && !!showDialog\n      })\n      .build()\n      .getURL();\n  },\n\n  /**\n   * Request an access token using the Client Credentials flow.\n   * Requires that client ID and client secret has been set previous to the call.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into an object containing the access token,\n   *          token type and time to expiration. If rejected, it contains an error object. Not returned if a callback is given.\n   */\n  clientCredentialsGrant: function(callback) {\n    return AuthenticationRequest.builder()\n      .withPath('/api/token')\n      .withBodyParameters({\n        grant_type: 'client_credentials'\n      })\n      .withHeaders({\n        Authorization:\n          'Basic ' +\n          new Buffer(\n            this.getClientId() + ':' + this.getClientSecret()\n          ).toString('base64'),\n        'Content-Type' : 'application/x-www-form-urlencoded'        \n      })\n      .build()\n      .execute(HttpManager.post, callback);\n  },\n\n  /**\n   * Request an access token using the Authorization Code flow.\n   * Requires that client ID, client secret, and redirect URI has been set previous to the call.\n   * @param {string} code The authorization code returned in the callback in the Authorization Code flow.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into an object containing the access token,\n   *          refresh token, token type and time to expiration. If rejected, it contains an error object.\n   *          Not returned if a callback is given.\n   */\n  authorizationCodeGrant: function(code, callback) {\n    return AuthenticationRequest.builder()\n      .withPath('/api/token')\n      .withBodyParameters({\n        grant_type: 'authorization_code',\n        redirect_uri: this.getRedirectURI(),\n        code: code,\n        client_id: this.getClientId(),\n        client_secret: this.getClientSecret()\n      })\n      .withHeaders({ 'Content-Type' : 'application/x-www-form-urlencoded' })\n      .build()\n      .execute(HttpManager.post, callback);\n  },\n\n  /**\n   * Refresh the access token given that it hasn't expired.\n   * Requires that client ID, client secret and refresh token has been set previous to the call.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing the\n   *          access token, time to expiration and token type. If rejected, it contains an error object.\n   *          Not returned if a callback is given.\n   */\n  refreshAccessToken: function(callback) {\n    return AuthenticationRequest.builder()\n      .withPath('/api/token')\n      .withBodyParameters({\n        grant_type: 'refresh_token',\n        refresh_token: this.getRefreshToken()\n      })\n      .withHeaders({\n        Authorization:\n          'Basic ' +\n          new Buffer(\n            this.getClientId() + ':' + this.getClientSecret()\n          ).toString('base64'),\n          'Content-Type' : 'application/x-www-form-urlencoded'\n      })\n      .build()\n      .execute(HttpManager.post, callback);\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/server-methods.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/server.js":
/*!*********************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/server.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var SpotifyWebApi = __webpack_require__(/*! ./spotify-web-api */ \"./node_modules/spotify-web-api-node/src/spotify-web-api.js\");\nvar ServerMethods = __webpack_require__(/*! ./server-methods */ \"./node_modules/spotify-web-api-node/src/server-methods.js\");\nSpotifyWebApi._addMethods(ServerMethods);\nmodule.exports = SpotifyWebApi;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/server.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/spotify-web-api.js":
/*!******************************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/spotify-web-api.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar AuthenticationRequest = __webpack_require__(/*! ./authentication-request */ \"./node_modules/spotify-web-api-node/src/authentication-request.js\"),\n  WebApiRequest = __webpack_require__(/*! ./webapi-request */ \"./node_modules/spotify-web-api-node/src/webapi-request.js\"),\n  HttpManager = __webpack_require__(/*! ./http-manager */ \"./node_modules/spotify-web-api-node/src/http-manager.js\");\n\nfunction SpotifyWebApi(credentials) {\n  this._credentials = credentials || {};\n}\n\nSpotifyWebApi.prototype = {\n  setCredentials: function(credentials) {\n    for (var key in credentials) {\n      if (credentials.hasOwnProperty(key)) {\n        this._credentials[key] = credentials[key];\n      }\n    }\n  },\n\n  getCredentials: function() {\n    return this._credentials;\n  },\n\n  resetCredentials: function() {\n    this._credentials = null;\n  },\n\n  setClientId: function(clientId) {\n    this._setCredential('clientId', clientId);\n  },\n\n  setClientSecret: function(clientSecret) {\n    this._setCredential('clientSecret', clientSecret);\n  },\n\n  setAccessToken: function(accessToken) {\n    this._setCredential('accessToken', accessToken);\n  },\n\n  setRefreshToken: function(refreshToken) {\n    this._setCredential('refreshToken', refreshToken);\n  },\n\n  setRedirectURI: function(redirectUri) {\n    this._setCredential('redirectUri', redirectUri);\n  },\n\n  getRedirectURI: function() {\n    return this._getCredential('redirectUri');\n  },\n\n  getClientId: function() {\n    return this._getCredential('clientId');\n  },\n\n  getClientSecret: function() {\n    return this._getCredential('clientSecret');\n  },\n\n  getAccessToken: function() {\n    return this._getCredential('accessToken');\n  },\n\n  getRefreshToken: function() {\n    return this._getCredential('refreshToken');\n  },\n\n  resetClientId: function() {\n    this._resetCredential('clientId');\n  },\n\n  resetClientSecret: function() {\n    this._resetCredential('clientSecret');\n  },\n\n  resetAccessToken: function() {\n    this._resetCredential('accessToken');\n  },\n\n  resetRefreshToken: function() {\n    this._resetCredential('refreshToken');\n  },\n\n  resetRedirectURI: function() {\n    this._resetCredential('redirectUri');\n  },\n\n  _setCredential: function(credentialKey, value) {\n    this._credentials = this._credentials || {};\n    this._credentials[credentialKey] = value;\n  },\n\n  _getCredential: function(credentialKey) {\n    if (!this._credentials) {\n      return;\n    } else {\n      return this._credentials[credentialKey];\n    }\n  },\n\n  _resetCredential: function(credentialKey) {\n    if (!this._credentials) {\n      return;\n    } else {\n      this._credentials[credentialKey] = null;\n    }\n  },\n\n  /**\n   * Look up a track.\n   * @param {string} trackId The track's ID.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getTrack('3Qm86XLflmIXVm1wcwkgDK').then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the track. Not returned if a callback is given.\n   */\n  getTrack: function(trackId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/tracks/' + trackId)\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Look up several tracks.\n   * @param {string[]} trackIds The IDs of the artists.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getArtists(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the artists. Not returned if a callback is given.\n   */\n  getTracks: function(trackIds, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/tracks')\n      .withQueryParameters(\n        {\n          ids: trackIds.join(',')\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Look up an album.\n   * @param {string} albumId The album's ID.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getAlbum('0sNOF9WDwhWunNAHPD3Baj').then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the album. Not returned if a callback is given.\n   */\n  getAlbum: function(albumId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/albums/' + albumId)\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Look up several albums.\n   * @param {string[]} albumIds The IDs of the albums.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getAlbums(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the albums. Not returned if a callback is given.\n   */\n  getAlbums: function(albumIds, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/albums')\n      .withQueryParameters(\n        {\n          ids: albumIds.join(',')\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Look up an artist.\n   * @param {string} artistId The artist's ID.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example api.getArtist('1u7kkVrr14iBvrpYnZILJR').then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the artist. Not returned if a callback is given.\n   */\n  getArtist: function(artistId, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/artists/' + artistId)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Look up several artists.\n   * @param {string[]} artistIds The IDs of the artists.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getArtists(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the artists. Not returned if a callback is given.\n   */\n  getArtists: function(artistIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/artists')\n      .withQueryParameters({\n        ids: artistIds.join(',')\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Search for music entities of certain types.\n   * @param {string} query The search query.\n   * @param {string[]} types An array of item types to search across.\n   * Valid types are: 'album', 'artist', 'playlist', 'track', 'show', and 'episode'.\n   * @param {Object} [options] The possible options, e.g. limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example search('Abba', ['track', 'playlist'], { limit : 5, offset : 1 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          search results. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  search: function(query, types, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/search/')\n      .withQueryParameters(\n        {\n          type: types.join(','),\n          q: query\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Search for an album.\n   * @param {string} query The search query.\n   * @param {Object} [options] The possible options, e.g. limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example searchAlbums('Space Oddity', { limit : 5, offset : 1 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          search results. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  searchAlbums: function(query, options, callback) {\n    return this.search(query, ['album'], options, callback);\n  },\n\n  /**\n   * Search for an artist.\n   * @param {string} query The search query.\n   * @param {Object} [options] The possible options, e.g. limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example searchArtists('David Bowie', { limit : 5, offset : 1 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          search results. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  searchArtists: function(query, options, callback) {\n    return this.search(query, ['artist'], options, callback);\n  },\n\n  /**\n   * Search for a track.\n   * @param {string} query The search query.\n   * @param {Object} [options] The possible options, e.g. limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example searchTracks('Mr. Brightside', { limit : 3, offset : 2 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          search results. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  searchTracks: function(query, options, callback) {\n    return this.search(query, ['track'], options, callback);\n  },\n\n  /**\n   * Search for playlists.\n   * @param {string} query The search query.\n   * @param {Object} options The possible options.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example searchPlaylists('workout', { limit : 1, offset : 0 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          search results. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  searchPlaylists: function(query, options, callback) {\n    return this.search(query, ['playlist'], options, callback);\n  },\n\n  /**\n   * Get an artist's albums.\n   * @param {string} artistId The artist's ID.\n   * @options {Object} [options] The possible options, e.g. limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getArtistAlbums('0oSGxfWSnnOXhD2fKuz2Gy', { album_type : 'album', country : 'GB', limit : 2, offset : 5 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the albums\n   *          for the given artist. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  getArtistAlbums: function(artistId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/artists/' + artistId + '/albums')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get the tracks of an album.\n   * @param albumId the album's ID.\n   * @options {Object} [options] The possible options, e.g. limit.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getAlbumTracks('41MnTivkwTO3UUJ8DrqEJJ', { limit : 5, offset : 1 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *                    tracks in the album. The result is paginated. If the promise is rejected.\n   *                    it contains an error object. Not returned if a callback is given.\n   */\n  getAlbumTracks: function(albumId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/albums/' + albumId + '/tracks')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get an artist's top tracks.\n   * @param {string} artistId The artist's ID.\n   * @param {string} country The country/territory where the tracks are most popular. (format: ISO 3166-1 alpha-2)\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getArtistTopTracks('0oSGxfWSnnOXhD2fKuz2Gy', 'GB').then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          artist's top tracks in the given country. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  getArtistTopTracks: function(artistId, country, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/artists/' + artistId + '/top-tracks')\n      .withQueryParameters({\n        country: country\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get related artists.\n   * @param {string} artistId The artist's ID.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getArtistRelatedArtists('0oSGxfWSnnOXhD2fKuz2Gy').then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          related artists. If the promise is rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getArtistRelatedArtists: function(artistId, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/artists/' + artistId + '/related-artists')\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get information about a user.\n   * @param userId The user ID.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getUser('thelinmichael').then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object\n   *          containing information about the user. If the promise is\n   *          rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getUser: function(userId, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/users/' + encodeURIComponent(userId))\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get information about the user that has signed in (the current user).\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getMe().then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object\n   *          containing information about the user. The amount of information\n   *          depends on the permissions given by the user. If the promise is\n   *          rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getMe: function(callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me')\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get a user's playlists.\n   * @param {string} userId An optional id of the user. If you know the Spotify URI it is easy\n   * to find the id (e.g. spotify:user:<here_is_the_id>). If not provided, the id of the user that granted\n   * the permissions will be used.\n   * @param {Object} [options] The options supplied to this request.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getUserPlaylists('thelinmichael').then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing\n   *          a list of playlists. If rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getUserPlaylists: function(userId, options, callback) {\n    var path;\n    if (typeof userId === 'string') {\n      path = '/v1/users/' + encodeURIComponent(userId) + '/playlists';\n    } else if (typeof userId === 'object') {\n      callback = options;\n      options = userId;\n      path = '/v1/me/playlists';\n    } /* undefined */ else {\n      path = '/v1/me/playlists';\n    }\n\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath(path)\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get a playlist.\n   * @param {string} playlistId The playlist's ID.\n   * @param {Object} [options] The options supplied to this request.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getPlaylist('3EsfV6XzCHU8SPNdbnFogK').then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing\n   *          the playlist. If rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getPlaylist: function(playlistId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId)\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get tracks in a playlist.\n   * @param {string} playlistId The playlist's ID.\n   * @param {Object} [options] Optional options, such as fields.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getPlaylistTracks('3ktAYNcRHpazJ9qecm3ptn').then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object that containing\n   * the tracks in the playlist. If rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getPlaylistTracks: function(playlistId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/tracks')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Create a playlist.\n   * @param {string} [name] The name of the playlist.\n   * @param {Object} [options] The possible options, being description, collaborative and public.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example createPlaylist('My playlist', {''description': 'My description', 'collaborative' : false, 'public': true}).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing information about the\n   *          created playlist. If rejected, it contains an error object. Not returned if a callback is given.\n   */\n  createPlaylist: function(name, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/playlists')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters({\n        name : name,\n      }, options)\n      .build()\n      .execute(HttpManager.post, callback);\n  },\n\n  /**\n   * Follow a playlist.\n   * @param {string} playlistId The playlist's ID\n   * @param {Object} [options] The possible options, currently only public.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  followPlaylist: function(playlistId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/followers')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(options)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Unfollow a playlist.\n   * @param {string} playlistId The playlist's ID\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  unfollowPlaylist: function(playlistId, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/followers')\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Change playlist details.\n   * @param {string} playlistId The playlist's ID\n   * @param {Object} [options] The possible options, e.g. name, public.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example changePlaylistDetails('3EsfV6XzCHU8SPNdbnFogK', {name: 'New name', public: true}).then(...)\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  changePlaylistDetails: function(playlistId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId)\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(options)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Replace the image used to represent a specific playlist.\n   * @param {string} playlistId The playlist's ID\n   * @param {string} base64URI Base64 encoded JPEG image data, maximum payload size is 256 KB\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example uploadCustomPlaylistCoverImage('3EsfV6XzCHU8SPNdbnFogK', 'longbase64uri').then(...)\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  uploadCustomPlaylistCoverImage: function(playlistId, base64URI, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/images')\n      .withHeaders({ 'Content-Type': 'image/jpeg' })\n      .withBodyParameters(base64URI)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Add tracks to a playlist.\n   * @param {string} playlistId The playlist's ID\n   * @param {string[]} tracks URIs of the tracks to add to the playlist.\n   * @param {Object} [options] Options, position being the only one.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example addTracksToPlaylist('3EsfV6XzCHU8SPNdbnFogK',\n              '[\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\", \"spotify:track:1301WleyT98MSxVHPZCA6M\"]').then(...)\n   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  addTracksToPlaylist: function(playlistId, tracks, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/tracks')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withQueryParameters(options)\n      .withBodyParameters({\n        uris: tracks\n      })\n      .build()\n      .execute(HttpManager.post, callback);\n  },\n\n  /**\n   * Remove tracks from a playlist.\n   * @param {string} playlistId The playlist's ID\n   * @param {Object[]} tracks An array of objects containing a property called uri with the track URI (String), and\n   * an optional property called positions (int[]), e.g. { uri : \"spotify:track:491rM2JN8KvmV6p0oDDuJT\", positions : [0, 15] }\n   * @param {Object} options Options, snapshot_id being the only one.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  removeTracksFromPlaylist: function(playlistId, tracks, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/tracks')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(\n        {\n          tracks: tracks\n        }, \n        options\n      )\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Remove tracks from a playlist by position instead of specifying the tracks' URIs.\n   * @param {string} playlistId The playlist's ID\n   * @param {int[]} positions The positions of the tracks in the playlist that should be removed\n   * @param {string} snapshot_id The snapshot ID, or version, of the playlist. Required\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  removeTracksFromPlaylistByPosition: function(\n    playlistId,\n    positions,\n    snapshotId,\n    callback\n  ) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/tracks')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters({\n        positions: positions,\n        snapshot_id: snapshotId\n      })\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Replace tracks in a playlist.\n   * @param {string} playlistId The playlist's ID\n   * @param {Object[]} uris An array of track URIs (strings)\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns an empty object. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  replaceTracksInPlaylist: function(playlistId, uris, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/tracks')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters({\n        uris: uris\n      })\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Reorder tracks in a playlist.\n   * @param {string} playlistId The playlist's ID\n   * @param {int} rangeStart The position of the first track to be reordered.\n   * @param {int} insertBefore The position where the tracks should be inserted.\n   * @param {Object} options Optional parameters, i.e. range_length and snapshot_id.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  reorderTracksInPlaylist: function(\n    playlistId,\n    rangeStart,\n    insertBefore,\n    options,\n    callback\n  ) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/playlists/' + playlistId + '/tracks')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(\n        {\n          range_start: rangeStart,\n          insert_before: insertBefore\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Get audio features for a single track identified by its unique Spotify ID.\n   * @param {string} trackId The track ID\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getAudioFeaturesForTrack('38P3Q4QcdjQALGF2Z92BmR').then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object\n   *          containing information about the audio features. If the promise is\n   *          rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getAudioFeaturesForTrack: function(trackId, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/audio-features/' + trackId)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get audio analysis for a single track identified by its unique Spotify ID.\n   * @param {string} trackId The track ID\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getAudioAnalysisForTrack('38P3Q4QcdjQALGF2Z92BmR').then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object\n   *          containing information about the audio analysis. If the promise is\n   *          rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getAudioAnalysisForTrack: function(trackId, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/audio-analysis/' + trackId)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get audio features for multiple tracks identified by their unique Spotify ID.\n   * @param {string[]} trackIds The track IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getAudioFeaturesForTracks(['38P3Q4QcdjQALGF2Z92BmR', '2HO2bnoMrpnZUbUqiilLHi']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object\n   *          containing information about the audio features for the tracks. If the promise is\n   *          rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getAudioFeaturesForTracks: function(trackIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/audio-features')\n      .withQueryParameters({\n        ids: trackIds.join(',')\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Create a playlist-style listening experience based on seed artists, tracks and genres.\n   * @param {Object} [options] The options supplied to this request.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getRecommendations({ min_energy: 0.4, seed_artists: ['6mfK6Q2tzLMEchAr0e9Uzu', '4DYFVNKZ1uixa6SQTvzQwJ'], min_popularity: 50 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing\n   *          a list of tracks and a list of seeds. If rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getRecommendations: function(options, callback) {\n    var _opts = {};\n    var optionsOfTypeArray = ['seed_artists', 'seed_genres', 'seed_tracks'];\n    for (var option in options) {\n      if (options.hasOwnProperty(option)) {\n        if (\n          optionsOfTypeArray.indexOf(option) !== -1 &&\n          Object.prototype.toString.call(options[option]) === '[object Array]'\n        ) {\n          _opts[option] = options[option].join(',');\n        } else {\n          _opts[option] = options[option];\n        }\n      }\n    }\n\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/recommendations')\n      .withQueryParameters(_opts)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Retrieve a list of available genres seed parameter values for recommendations.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getAvailableGenreSeeds().then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing\n   *          a list of available genres to be used as seeds for recommendations.\n   *          If rejected, it contains an error object. Not returned if a callback is given.\n   */\n  getAvailableGenreSeeds: function(callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/recommendations/available-genre-seeds')\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Retrieve the tracks that are saved to the authenticated users Your Music library.\n   * @param {Object} [options] Options, being market, limit, and/or offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which in turn contains\n   *          playlist track objects. Not returned if a callback is given.\n   */\n  getMySavedTracks: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/tracks')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Check if one or more tracks is already saved in the current Spotify user’s “Your Music” library.\n   * @param {string[]} trackIds The track IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order\n   * of the returned array's elements correspond to the track ID in the request.\n   * The boolean value of true indicates that the track is part of the user's library, otherwise false.\n   * Not returned if a callback is given.\n   */\n  containsMySavedTracks: function(trackIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/tracks/contains')\n      .withQueryParameters({\n        ids: trackIds.join(',')\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Remove a track from the authenticated user's Your Music library.\n   * @param {string[]} trackIds The track IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error.\n   * Not returned if a callback is given.\n   */\n  removeFromMySavedTracks: function(trackIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/tracks')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters({ ids: trackIds })\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Add a track from the authenticated user's Your Music library.\n   * @param {string[]} trackIds The track IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error. Not returned if a callback is given.\n   */\n  addToMySavedTracks: function(trackIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/tracks')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters({ ids: trackIds })\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Remove an album from the authenticated user's Your Music library.\n   * @param {string[]} albumIds The album IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error.\n   * Not returned if a callback is given.\n   */\n  removeFromMySavedAlbums: function(albumIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/albums')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(albumIds)\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Add an album from the authenticated user's Your Music library.\n   * @param {string[]} albumIds The track IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error. Not returned if a callback is given.\n   */\n  addToMySavedAlbums: function(albumIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/albums')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(albumIds)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Retrieve the albums that are saved to the authenticated users Your Music library.\n   * @param {Object} [options] Options, being market, limit, and/or offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which in turn contains\n   *          playlist album objects. Not returned if a callback is given.\n   */\n  getMySavedAlbums: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/albums')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Check if one or more albums is already saved in the current Spotify user’s “Your Music” library.\n   * @param {string[]} albumIds The album IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order\n   * of the returned array's elements correspond to the album ID in the request.\n   * The boolean value of true indicates that the album is part of the user's library, otherwise false.\n   * Not returned if a callback is given.\n   */\n  containsMySavedAlbums: function(albumIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/albums/contains')\n      .withQueryParameters({\n        ids: albumIds.join(',')\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get the current user's top artists based on calculated affinity.\n   * @param {Object} [options] Options, being time_range, limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of artists,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  getMyTopArtists: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/top/artists')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get the current user's top tracks based on calculated affinity.\n   * @param {Object} [options] Options, being time_range, limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of tracks,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  getMyTopTracks: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/top/tracks')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get the Current User's Recently Played Tracks\n   * @param {Object} [options] Options, being type, after, limit, before.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of play history objects,\n   *          otherwise an error. Not returned if a callback is given. Note that the response will be empty\n   *          in case the user has enabled private session.\n   */\n  getMyRecentlyPlayedTracks: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/recently-played')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Add track or episode to device queue\n   * @param {string} [uri] uri of the track or episode to add\n   * @param {Object} [options] Options, being device_id.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of tracks,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  addToQueue: function(uri, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/queue')\n      .withQueryParameters(\n        {\n          uri: uri\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.post, callback);\n  },\n\n\n  /** \n   * Get the Current User's Available Devices\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into an array of device objects,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  getMyDevices: function(callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/devices')\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get the Current User's Currently Playing Track.\n   * @param {Object} [options] Options, being market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of tracks,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  getMyCurrentPlayingTrack: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/currently-playing')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get Information About The User's Current Playback State\n   * @param {Object} [options] Options, being market and additional_types.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of tracks,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  getMyCurrentPlaybackState: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Transfer a User's Playback\n   * @param {string[]} [deviceIds] An _array_ containing a device ID on which playback should be started/transferred. \n   * (NOTE: The API is currently only supporting a single device ID.)\n   * @param {Object} [options] Options, the only one being 'play'.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into an empty response,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  transferMyPlayback: function(deviceIds, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(\n        {\n          device_ids: deviceIds,\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Starts o Resumes the Current User's Playback\n   * @param {Object} [options] Options, being device_id, context_uri, offset, uris, position_ms.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example play({context_uri: 'spotify:album:5ht7ItJgpBH7W6vJ5BqpPr'}).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an empty response,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  play: function(options, callback) {\n    /*jshint camelcase: false */\n    var _options = options || {};\n    var queryParams = _options.device_id\n      ? { device_id: _options.device_id }\n      : null;\n    var postData = {};\n    ['context_uri', 'uris', 'offset', 'position_ms'].forEach(function(field) {\n      if (field in _options) {\n        postData[field] = _options[field];\n      }\n    });\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/play')\n      .withQueryParameters(queryParams)\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(postData)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Pauses the Current User's Playback\n   * @param {Object} [options] Options, being device_id. If left empty will target the user's currently active device.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example pause().then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an empty response,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  pause: function(options, callback) {\n    return (\n      WebApiRequest.builder(this.getAccessToken())\n        .withPath('/v1/me/player/pause')\n        /*jshint camelcase: false */\n        .withQueryParameters(\n          options && options.device_id ? { device_id: options.device_id } : null\n        )\n        .withHeaders({ 'Content-Type': 'application/json' })\n        .build()\n        .execute(HttpManager.put, callback)\n    );\n  },\n\n  /**\n   * Skip the Current User's Playback To Previous Track\n   * @param {Object} [options] Options, being device_id. If left empty will target the user's currently active device.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example skipToPrevious().then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an empty response,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  skipToPrevious: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/previous')\n      .withQueryParameters(\n        options && options.device_id ? { device_id: options.device_id } : null\n      )\n      .build()\n      .execute(HttpManager.post, callback);\n  },\n\n  /**\n   * Skip the Current User's Playback To Next Track\n   * @param {Object} [options] Options, being device_id. If left empty will target the user's currently active device.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example skipToNext().then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an empty response,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  skipToNext: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/next')\n      .withQueryParameters(\n        options && options.device_id ? { device_id: options.device_id } : null\n      )\n      .build()\n      .execute(HttpManager.post, callback);\n  },\n\n  /**\n   * Seeks to the given position in the user’s currently playing track.\n   *\n   * @param {number} positionMs The position in milliseconds to seek to. Must be a positive number.\n   * @param {Object} options Options, being device_id. If left empty will target the user's currently active device.\n   * @param {function(Object,Object)} callback An optional callback that receives 2 parameters. The first\n   * one is the error object (null if no error), and the second is the value if the request succeeded.\n   * @return {Object} Null if a callback is provided, a `Promise` object otherwise\n   */\n  seek: function(positionMs, options, callback) {\n    var params = {\n      /* jshint camelcase: false */\n      position_ms: positionMs\n    };\n    if (options && 'device_id' in options) {\n      /* jshint camelcase: false */\n      params.device_id = options.device_id;\n    }\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/seek')\n      .withQueryParameters(params)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Set Repeat Mode On The Current User's Playback\n   * @param {string} [state] State (track, context, or off)\n   * @param {Object} [options] Options, being device_id. If left empty will target the user's currently active device.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example setRepeat('context', {}).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an empty response,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  setRepeat: function(state, options, callback) {\n    var params = {\n      state: state\n    };\n    if (options && 'device_id' in options) {\n      /* jshint camelcase: false */\n      params.device_id = options.device_id;\n    }\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/repeat')\n      .withQueryParameters(params)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Set Shuffle Mode On The Current User's Playback\n   * @param {boolean} [state] State \n   * @param {Object} [options] Options, being device_id. If left empty will target the user's currently active device.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example setShuffle({state: 'false'}).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an empty response,\n   *          otherwise an error. Not returned if a callback is given.\n   */\n  setShuffle: function(state, options, callback) {\n    var params = {\n      state: state\n    };\n    if (options && 'device_id' in options) {\n      /* jshint camelcase: false */\n      params.device_id = options.device_id;\n    }\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/shuffle')\n      .withQueryParameters(params)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Set the volume for the user’s current playback device.\n   * @param {number} volumePercent The volume to set. Must be a value from 0 to 100.\n   * @param {Object} options Options, being device_id. If left empty will target the user's currently active device.\n   * @param {function(Object,Object)} callback An optional callback that receives 2 parameters. The first\n   * one is the error object (null if no error), and the second is the value if the request succeeded.\n   * @return {Object} Null if a callback is provided, a `Promise` object otherwise\n   */\n  setVolume: function(volumePercent, options, callback) {\n    var params = {\n      /* jshint camelcase: false */\n      volume_percent: volumePercent\n    };\n    if (options && 'device_id' in options) {\n      /* jshint camelcase: false */\n      params.device_id = options.device_id;\n    }\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/player/volume')\n      .withQueryParameters(params)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Add the current user as a follower of one or more other Spotify users.\n   * @param {string[]} userIds The IDs of the users to be followed.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example followUsers(['thelinmichael', 'wizzler']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  followUsers: function(userIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/following')\n      .withQueryParameters({\n        ids: userIds.join(','),\n        type: 'user'\n      })\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Add the current user as a follower of one or more artists.\n   * @param {string[]} artistIds The IDs of the artists to be followed.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example followArtists(['0LcJLqbBmaGUft1e9Mm8HV', '3gqv1kgivAc92KnUm4elKv']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  followArtists: function(artistIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/following')\n      .withQueryParameters({\n        ids: artistIds.join(','),\n        type: 'artist'\n      })\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Remove the current user as a follower of one or more other Spotify users.\n   * @param {string[]} userIds The IDs of the users to be unfollowed.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example unfollowUsers(['thelinmichael', 'wizzler']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  unfollowUsers: function(userIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/following')\n      .withQueryParameters({\n        ids: userIds.join(','),\n        type: 'user'\n      })\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Remove the current user as a follower of one or more artists.\n   * @param {string[]} artistIds The IDs of the artists to be unfollowed.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example unfollowArtists(['0LcJLqbBmaGUft1e9Mm8HV', '3gqv1kgivAc92KnUm4elKv']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  unfollowArtists: function(artistIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/following')\n      .withQueryParameters({\n        ids: artistIds.join(','),\n        type: 'artist'\n      })\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Check to see if the current user is following one or more other Spotify users.\n   * @param {string[]} userIds The IDs of the users to check if are followed by the current user.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example isFollowingUsers(['thelinmichael', 'wizzler']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order\n   *          of the returned array's elements correspond to the users IDs in the request.\n   *          The boolean value of true indicates that the user is following that user, otherwise is not.\n   *          Not returned if a callback is given.\n   */\n  isFollowingUsers: function(userIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/following/contains')\n      .withQueryParameters({\n        ids: userIds.join(','),\n        type: 'user'\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get the current user's followed artists.\n   * @param {Object} [options] Options, being after and limit.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which contains\n   * album objects. Not returned if a callback is given.\n   */\n  getFollowedArtists: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/following')\n      .withQueryParameters(\n        {\n          type: 'artist'\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Check if users are following a playlist.\n   * @param {string} userId The playlist's owner's user ID\n   * @param {string} playlistId The playlist's ID\n   * @param {String[]} User IDs of the following users\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns an array of booleans. If rejected,\n   * it contains an error object. Not returned if a callback is given.\n   */\n  areFollowingPlaylist: function(userId, playlistId, followerIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath(\n        '/v1/users/' +\n          encodeURIComponent(userId) +\n          '/playlists/' +\n          playlistId +\n          '/followers/contains'\n      )\n      .withQueryParameters({\n        ids: followerIds.join(',')\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Check to see if the current user is following one or more artists.\n   * @param {string[]} artistIds The IDs of the artists to check if are followed by the current user.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example isFollowingArtists(['0LcJLqbBmaGUft1e9Mm8HV', '3gqv1kgivAc92KnUm4elKv']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order\n   *          of the returned array's elements correspond to the artists IDs in the request.\n   *          The boolean value of true indicates that the user is following that artist, otherwise is not.\n   *          Not returned if a callback is given.\n   */\n  isFollowingArtists: function(artistIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/following/contains')\n      .withQueryParameters({\n        ids: artistIds.join(','),\n        type: 'artist'\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Retrieve new releases\n   * @param {Object} [options] Options, being country, limit and/or offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which contains\n   * album objects. Not returned if a callback is given.\n   */\n  getNewReleases: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/browse/new-releases')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Retrieve featured playlists\n   * @param {Object} [options] Options, being country, locale, timestamp, limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which contains\n   * featured playlists. Not returned if a callback is given.\n   */\n  getFeaturedPlaylists: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/browse/featured-playlists')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Retrieve a list of categories used to tag items in Spotify (e.g. in the 'Browse' tab)\n   * @param {Object} [options] Options, being country, locale, limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object of categories.\n   * Not returned if a callback is given.\n   */\n  getCategories: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/browse/categories')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Retrieve a category.\n   * @param {string} categoryId The id of the category to retrieve.\n   * @param {Object} [options] Options, being country, locale.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a category object.\n   * Not returned if a callback is given.\n   */\n  getCategory: function(categoryId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/browse/categories/' + categoryId)\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Retrieve playlists for a category.\n   * @param {string} categoryId The id of the category to retrieve playlists for.\n   * @param {Object} [options] Options, being country, limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to a paging object containing simple playlists.\n   * Not returned if a callback is given.\n   */\n  getPlaylistsForCategory: function(categoryId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/browse/categories/' + categoryId + '/playlists')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get a show.\n   * @param {string} showId The show's ID.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getShow('3Qm86XLflmIXVm1wcwkgDK').then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the show. Not returned if a callback is given.\n   */\n  getShow: function(showId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n    .withPath('/v1/shows/' + showId)\n    .withQueryParameters(options)\n    .build()\n    .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Look up several shows.\n   * @param {string[]} showIds The IDs of the shows.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getShows(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the shows. Not returned if a callback is given.\n   */\n  getShows: function(showIds, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/shows')\n      .withQueryParameters(\n        {\n          ids: showIds.join(',')\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Check if one or more shows is already saved in the current Spotify user’s “Your Music” library.\n   * @param {string[]} showIds The show IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order\n   * of the returned array's elements correspond to the show ID in the request.\n   * The boolean value of true indicates that the show is part of the user's library, otherwise false.\n   * Not returned if a callback is given.\n   */\n  containsMySavedShows: function(showIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/shows/contains')\n      .withQueryParameters({\n        ids: showIds.join(',')\n      })\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Remove an show from the authenticated user's Your Music library.\n   * @param {string[]} showIds The show IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error.\n   * Not returned if a callback is given.\n   */\n  removeFromMySavedShows: function(showIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/shows')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(showIds)\n      .build()\n      .execute(HttpManager.del, callback);\n  },\n\n  /**\n   * Add a show from the authenticated user's Your Music library.\n   * @param {string[]} showIds The show IDs\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error. Not returned if a callback is given.\n   */\n  addToMySavedShows: function(showIds, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/shows')\n      .withHeaders({ 'Content-Type': 'application/json' })\n      .withBodyParameters(showIds)\n      .build()\n      .execute(HttpManager.put, callback);\n  },\n\n  /**\n   * Retrieve the shows that are saved to the authenticated users Your Music library.\n   * @param {Object} [options] Options, being market, limit, and/or offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which in turn contains\n   *          playlist show objects. Not returned if a callback is given.\n   */\n  getMySavedShows: function(options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/me/shows')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Get the episodes of an show.\n   * @param showId the show's ID.\n   * @options {Object} [options] The possible options, being limit, offset, and market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getShowEpisodes('41MnTivkwTO3UUJ8DrqEJJ', { limit : 5, offset : 1 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *                    episodes in the album. The result is paginated. If the promise is rejected.\n   *                    it contains an error object. Not returned if a callback is given.\n   */\n  getShowEpisodes: function(showId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/shows/' + showId + '/episodes')\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Search for a show.\n   * @param {string} query The search query.\n   * @param {Object} [options] The possible options, e.g. limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example searchShows('Space Oddity', { limit : 5, offset : 1 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          search results. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  searchShows: function(query, options, callback) {\n    return this.search(query, ['show'], options, callback);\n  },\n\n  /**\n   * Search for an episode.\n   * @param {string} query The search query.\n   * @param {Object} [options] The possible options, e.g. limit, offset.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example searchEpisodes('Space Oddity', { limit : 5, offset : 1 }).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing the\n   *          search results. The result is paginated. If the promise is rejected,\n   *          it contains an error object. Not returned if a callback is given.\n   */\n  searchEpisodes: function(query, options, callback) {\n    return this.search(query, ['episode'], options, callback);\n  },\n\n /**\n   * Look up an episode.\n   * @param {string} episodeId The episode's ID.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getEpisode('3Qm86XLflmIXVm1wcwkgDK').then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the episode. Not returned if a callback is given.\n   */\n  getEpisode: function(episodeId, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/episodes/' + episodeId)\n      .withQueryParameters(options)\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n\n  /**\n   * Look up several episodes.\n   * @param {string[]} episodeIds The IDs of the episodes.\n   * @param {Object} [options] The possible options, currently only market.\n   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.\n   * @example getEpisodes(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)\n   * @returns {Promise|undefined} A promise that if successful, returns an object containing information\n   *          about the episodes. Not returned if a callback is given.\n   */\n  getEpisodes: function(episodeIds, options, callback) {\n    return WebApiRequest.builder(this.getAccessToken())\n      .withPath('/v1/episodes')\n      .withQueryParameters(\n        {\n          ids: episodeIds.join(',')\n        },\n        options\n      )\n      .build()\n      .execute(HttpManager.get, callback);\n  },\n};\n\nSpotifyWebApi._addMethods = function(methods) {\n  for (var i in methods) {\n    if (methods.hasOwnProperty(i)) {\n      this.prototype[i] = methods[i];\n    }\n  }\n};\n\nmodule.exports = SpotifyWebApi;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/spotify-web-api.js?");

/***/ }),

/***/ "./node_modules/spotify-web-api-node/src/webapi-request.js":
/*!*****************************************************************!*\
  !*** ./node_modules/spotify-web-api-node/src/webapi-request.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Request = __webpack_require__(/*! ./base-request */ \"./node_modules/spotify-web-api-node/src/base-request.js\");\n\nvar DEFAULT_HOST = 'api.spotify.com',\n  DEFAULT_PORT = 443,\n  DEFAULT_SCHEME = 'https';\n\nmodule.exports.builder = function(accessToken) {\n  return Request.builder()\n    .withHost(DEFAULT_HOST)\n    .withPort(DEFAULT_PORT)\n    .withScheme(DEFAULT_SCHEME)\n    .withAuth(accessToken);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/spotify-web-api-node/src/webapi-request.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/agent-base.js":
/*!***************************************************!*\
  !*** ./node_modules/superagent/lib/agent-base.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Agent() {\n  this._defaults = [];\n}\n\n['use', 'on', 'once', 'set', 'query', 'type', 'accept', 'auth', 'withCredentials', 'sortQuery', 'retry', 'ok', 'redirects', 'timeout', 'buffer', 'serialize', 'parse', 'ca', 'key', 'pfx', 'cert', 'disableTLSCerts'].forEach(function (fn) {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._defaults.push({\n      fn: fn,\n      args: args\n    });\n\n    return this;\n  };\n});\n\nAgent.prototype._setDefaults = function (req) {\n  this._defaults.forEach(function (def) {\n    req[def.fn].apply(req, _toConsumableArray(def.args));\n  });\n};\n\nmodule.exports = Agent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hZ2VudC1iYXNlLmpzIl0sIm5hbWVzIjpbIkFnZW50IiwiX2RlZmF1bHRzIiwiZm9yRWFjaCIsImZuIiwicHJvdG90eXBlIiwiYXJncyIsInB1c2giLCJfc2V0RGVmYXVsdHMiLCJyZXEiLCJkZWYiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLFNBQVNBLEtBQVQsR0FBaUI7QUFDZixPQUFLQyxTQUFMLEdBQWlCLEVBQWpCO0FBQ0Q7O0FBRUQsQ0FDRSxLQURGLEVBRUUsSUFGRixFQUdFLE1BSEYsRUFJRSxLQUpGLEVBS0UsT0FMRixFQU1FLE1BTkYsRUFPRSxRQVBGLEVBUUUsTUFSRixFQVNFLGlCQVRGLEVBVUUsV0FWRixFQVdFLE9BWEYsRUFZRSxJQVpGLEVBYUUsV0FiRixFQWNFLFNBZEYsRUFlRSxRQWZGLEVBZ0JFLFdBaEJGLEVBaUJFLE9BakJGLEVBa0JFLElBbEJGLEVBbUJFLEtBbkJGLEVBb0JFLEtBcEJGLEVBcUJFLE1BckJGLEVBc0JFLGlCQXRCRixFQXVCRUMsT0F2QkYsQ0F1QlUsVUFBQ0MsRUFBRCxFQUFRO0FBQ2hCO0FBQ0FILEVBQUFBLEtBQUssQ0FBQ0ksU0FBTixDQUFnQkQsRUFBaEIsSUFBc0IsWUFBbUI7QUFBQSxzQ0FBTkUsSUFBTTtBQUFOQSxNQUFBQSxJQUFNO0FBQUE7O0FBQ3ZDLFNBQUtKLFNBQUwsQ0FBZUssSUFBZixDQUFvQjtBQUFFSCxNQUFBQSxFQUFFLEVBQUZBLEVBQUY7QUFBTUUsTUFBQUEsSUFBSSxFQUFKQTtBQUFOLEtBQXBCOztBQUNBLFdBQU8sSUFBUDtBQUNELEdBSEQ7QUFJRCxDQTdCRDs7QUErQkFMLEtBQUssQ0FBQ0ksU0FBTixDQUFnQkcsWUFBaEIsR0FBK0IsVUFBVUMsR0FBVixFQUFlO0FBQzVDLE9BQUtQLFNBQUwsQ0FBZUMsT0FBZixDQUF1QixVQUFDTyxHQUFELEVBQVM7QUFDOUJELElBQUFBLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDTixFQUFMLENBQUgsT0FBQUssR0FBRyxxQkFBWUMsR0FBRyxDQUFDSixJQUFoQixFQUFIO0FBQ0QsR0FGRDtBQUdELENBSkQ7O0FBTUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlgsS0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBBZ2VudCgpIHtcbiAgdGhpcy5fZGVmYXVsdHMgPSBbXTtcbn1cblxuW1xuICAndXNlJyxcbiAgJ29uJyxcbiAgJ29uY2UnLFxuICAnc2V0JyxcbiAgJ3F1ZXJ5JyxcbiAgJ3R5cGUnLFxuICAnYWNjZXB0JyxcbiAgJ2F1dGgnLFxuICAnd2l0aENyZWRlbnRpYWxzJyxcbiAgJ3NvcnRRdWVyeScsXG4gICdyZXRyeScsXG4gICdvaycsXG4gICdyZWRpcmVjdHMnLFxuICAndGltZW91dCcsXG4gICdidWZmZXInLFxuICAnc2VyaWFsaXplJyxcbiAgJ3BhcnNlJyxcbiAgJ2NhJyxcbiAgJ2tleScsXG4gICdwZngnLFxuICAnY2VydCcsXG4gICdkaXNhYmxlVExTQ2VydHMnXG5dLmZvckVhY2goKGZuKSA9PiB7XG4gIC8vIERlZmF1bHQgc2V0dGluZyBmb3IgYWxsIHJlcXVlc3RzIGZyb20gdGhpcyBhZ2VudFxuICBBZ2VudC5wcm90b3R5cGVbZm5dID0gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICB0aGlzLl9kZWZhdWx0cy5wdXNoKHsgZm4sIGFyZ3MgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG59KTtcblxuQWdlbnQucHJvdG90eXBlLl9zZXREZWZhdWx0cyA9IGZ1bmN0aW9uIChyZXEpIHtcbiAgdGhpcy5fZGVmYXVsdHMuZm9yRWFjaCgoZGVmKSA9PiB7XG4gICAgcmVxW2RlZi5mbl0oLi4uZGVmLmFyZ3MpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQWdlbnQ7XG4iXX0=\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/agent-base.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/is-object.js":
/*!**************************************************!*\
  !*** ./node_modules/superagent/lib/is-object.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nfunction isObject(obj) {\n  return obj !== null && _typeof(obj) === 'object';\n}\n\nmodule.exports = isObject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pcy1vYmplY3QuanMiXSwibmFtZXMiOlsiaXNPYmplY3QiLCJvYmoiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7QUFRQSxTQUFTQSxRQUFULENBQWtCQyxHQUFsQixFQUF1QjtBQUNyQixTQUFPQSxHQUFHLEtBQUssSUFBUixJQUFnQixRQUFPQSxHQUFQLE1BQWUsUUFBdEM7QUFDRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxRQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgYG9iamAgaXMgYW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBpc09iamVjdChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdDtcbiJdfQ==\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/is-object.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/agent.js":
/*!***************************************************!*\
  !*** ./node_modules/superagent/lib/node/agent.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Module dependencies.\n */\n// eslint-disable-next-line node/no-deprecated-api\nvar _require = __webpack_require__(/*! url */ \"url\"),\n    parse = _require.parse;\n\nvar _require2 = __webpack_require__(/*! cookiejar */ \"./node_modules/cookiejar/cookiejar.js\"),\n    CookieJar = _require2.CookieJar;\n\nvar _require3 = __webpack_require__(/*! cookiejar */ \"./node_modules/cookiejar/cookiejar.js\"),\n    CookieAccessInfo = _require3.CookieAccessInfo;\n\nvar methods = __webpack_require__(/*! methods */ \"./node_modules/methods/index.js\");\n\nvar request = __webpack_require__(/*! ../.. */ \"./node_modules/superagent/lib/node/index.js\");\n\nvar AgentBase = __webpack_require__(/*! ../agent-base */ \"./node_modules/superagent/lib/agent-base.js\");\n/**\n * Expose `Agent`.\n */\n\n\nmodule.exports = Agent;\n/**\n * Initialize a new `Agent`.\n *\n * @api public\n */\n\nfunction Agent(options) {\n  if (!(this instanceof Agent)) {\n    return new Agent(options);\n  }\n\n  AgentBase.call(this);\n  this.jar = new CookieJar();\n\n  if (options) {\n    if (options.ca) {\n      this.ca(options.ca);\n    }\n\n    if (options.key) {\n      this.key(options.key);\n    }\n\n    if (options.pfx) {\n      this.pfx(options.pfx);\n    }\n\n    if (options.cert) {\n      this.cert(options.cert);\n    }\n\n    if (options.rejectUnauthorized === false) {\n      this.disableTLSCerts();\n    }\n  }\n}\n\nAgent.prototype = Object.create(AgentBase.prototype);\n/**\n * Save the cookies in the given `res` to\n * the agent's cookie jar for persistence.\n *\n * @param {Response} res\n * @api private\n */\n\nAgent.prototype._saveCookies = function (res) {\n  var cookies = res.headers['set-cookie'];\n  if (cookies) this.jar.setCookies(cookies);\n};\n/**\n * Attach cookies when available to the given `req`.\n *\n * @param {Request} req\n * @api private\n */\n\n\nAgent.prototype._attachCookies = function (req) {\n  var url = parse(req.url);\n  var access = new CookieAccessInfo(url.hostname, url.pathname, url.protocol === 'https:');\n  var cookies = this.jar.getCookies(access).toValueString();\n  req.cookies = cookies;\n};\n\nmethods.forEach(function (name) {\n  var method = name.toUpperCase();\n\n  Agent.prototype[name] = function (url, fn) {\n    var req = new request.Request(method, url);\n    req.on('response', this._saveCookies.bind(this));\n    req.on('redirect', this._saveCookies.bind(this));\n    req.on('redirect', this._attachCookies.bind(this, req));\n\n    this._setDefaults(req);\n\n    this._attachCookies(req);\n\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\nAgent.prototype.del = Agent.prototype.delete;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlL2FnZW50LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJwYXJzZSIsIkNvb2tpZUphciIsIkNvb2tpZUFjY2Vzc0luZm8iLCJtZXRob2RzIiwicmVxdWVzdCIsIkFnZW50QmFzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJBZ2VudCIsIm9wdGlvbnMiLCJjYWxsIiwiamFyIiwiY2EiLCJrZXkiLCJwZngiLCJjZXJ0IiwicmVqZWN0VW5hdXRob3JpemVkIiwiZGlzYWJsZVRMU0NlcnRzIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiX3NhdmVDb29raWVzIiwicmVzIiwiY29va2llcyIsImhlYWRlcnMiLCJzZXRDb29raWVzIiwiX2F0dGFjaENvb2tpZXMiLCJyZXEiLCJ1cmwiLCJhY2Nlc3MiLCJob3N0bmFtZSIsInBhdGhuYW1lIiwicHJvdG9jb2wiLCJnZXRDb29raWVzIiwidG9WYWx1ZVN0cmluZyIsImZvckVhY2giLCJuYW1lIiwibWV0aG9kIiwidG9VcHBlckNhc2UiLCJmbiIsIlJlcXVlc3QiLCJvbiIsImJpbmQiLCJfc2V0RGVmYXVsdHMiLCJlbmQiLCJkZWwiLCJkZWxldGUiXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUlBO2VBQ2tCQSxPQUFPLENBQUMsS0FBRCxDO0lBQWpCQyxLLFlBQUFBLEs7O2dCQUNjRCxPQUFPLENBQUMsV0FBRCxDO0lBQXJCRSxTLGFBQUFBLFM7O2dCQUNxQkYsT0FBTyxDQUFDLFdBQUQsQztJQUE1QkcsZ0IsYUFBQUEsZ0I7O0FBQ1IsSUFBTUMsT0FBTyxHQUFHSixPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNSyxPQUFPLEdBQUdMLE9BQU8sQ0FBQyxPQUFELENBQXZCOztBQUNBLElBQU1NLFNBQVMsR0FBR04sT0FBTyxDQUFDLGVBQUQsQ0FBekI7QUFFQTs7Ozs7QUFJQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxLQUFqQjtBQUVBOzs7Ozs7QUFNQSxTQUFTQSxLQUFULENBQWVDLE9BQWYsRUFBd0I7QUFDdEIsTUFBSSxFQUFFLGdCQUFnQkQsS0FBbEIsQ0FBSixFQUE4QjtBQUM1QixXQUFPLElBQUlBLEtBQUosQ0FBVUMsT0FBVixDQUFQO0FBQ0Q7O0FBRURKLEVBQUFBLFNBQVMsQ0FBQ0ssSUFBVixDQUFlLElBQWY7QUFDQSxPQUFLQyxHQUFMLEdBQVcsSUFBSVYsU0FBSixFQUFYOztBQUVBLE1BQUlRLE9BQUosRUFBYTtBQUNYLFFBQUlBLE9BQU8sQ0FBQ0csRUFBWixFQUFnQjtBQUNkLFdBQUtBLEVBQUwsQ0FBUUgsT0FBTyxDQUFDRyxFQUFoQjtBQUNEOztBQUVELFFBQUlILE9BQU8sQ0FBQ0ksR0FBWixFQUFpQjtBQUNmLFdBQUtBLEdBQUwsQ0FBU0osT0FBTyxDQUFDSSxHQUFqQjtBQUNEOztBQUVELFFBQUlKLE9BQU8sQ0FBQ0ssR0FBWixFQUFpQjtBQUNmLFdBQUtBLEdBQUwsQ0FBU0wsT0FBTyxDQUFDSyxHQUFqQjtBQUNEOztBQUVELFFBQUlMLE9BQU8sQ0FBQ00sSUFBWixFQUFrQjtBQUNoQixXQUFLQSxJQUFMLENBQVVOLE9BQU8sQ0FBQ00sSUFBbEI7QUFDRDs7QUFFRCxRQUFJTixPQUFPLENBQUNPLGtCQUFSLEtBQStCLEtBQW5DLEVBQTBDO0FBQ3hDLFdBQUtDLGVBQUw7QUFDRDtBQUNGO0FBQ0Y7O0FBRURULEtBQUssQ0FBQ1UsU0FBTixHQUFrQkMsTUFBTSxDQUFDQyxNQUFQLENBQWNmLFNBQVMsQ0FBQ2EsU0FBeEIsQ0FBbEI7QUFFQTs7Ozs7Ozs7QUFRQVYsS0FBSyxDQUFDVSxTQUFOLENBQWdCRyxZQUFoQixHQUErQixVQUFVQyxHQUFWLEVBQWU7QUFDNUMsTUFBTUMsT0FBTyxHQUFHRCxHQUFHLENBQUNFLE9BQUosQ0FBWSxZQUFaLENBQWhCO0FBQ0EsTUFBSUQsT0FBSixFQUFhLEtBQUtaLEdBQUwsQ0FBU2MsVUFBVCxDQUFvQkYsT0FBcEI7QUFDZCxDQUhEO0FBS0E7Ozs7Ozs7O0FBT0FmLEtBQUssQ0FBQ1UsU0FBTixDQUFnQlEsY0FBaEIsR0FBaUMsVUFBVUMsR0FBVixFQUFlO0FBQzlDLE1BQU1DLEdBQUcsR0FBRzVCLEtBQUssQ0FBQzJCLEdBQUcsQ0FBQ0MsR0FBTCxDQUFqQjtBQUNBLE1BQU1DLE1BQU0sR0FBRyxJQUFJM0IsZ0JBQUosQ0FDYjBCLEdBQUcsQ0FBQ0UsUUFEUyxFQUViRixHQUFHLENBQUNHLFFBRlMsRUFHYkgsR0FBRyxDQUFDSSxRQUFKLEtBQWlCLFFBSEosQ0FBZjtBQUtBLE1BQU1ULE9BQU8sR0FBRyxLQUFLWixHQUFMLENBQVNzQixVQUFULENBQW9CSixNQUFwQixFQUE0QkssYUFBNUIsRUFBaEI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDSixPQUFKLEdBQWNBLE9BQWQ7QUFDRCxDQVREOztBQVdBcEIsT0FBTyxDQUFDZ0MsT0FBUixDQUFnQixVQUFDQyxJQUFELEVBQVU7QUFDeEIsTUFBTUMsTUFBTSxHQUFHRCxJQUFJLENBQUNFLFdBQUwsRUFBZjs7QUFDQTlCLEVBQUFBLEtBQUssQ0FBQ1UsU0FBTixDQUFnQmtCLElBQWhCLElBQXdCLFVBQVVSLEdBQVYsRUFBZVcsRUFBZixFQUFtQjtBQUN6QyxRQUFNWixHQUFHLEdBQUcsSUFBSXZCLE9BQU8sQ0FBQ29DLE9BQVosQ0FBb0JILE1BQXBCLEVBQTRCVCxHQUE1QixDQUFaO0FBRUFELElBQUFBLEdBQUcsQ0FBQ2MsRUFBSixDQUFPLFVBQVAsRUFBbUIsS0FBS3BCLFlBQUwsQ0FBa0JxQixJQUFsQixDQUF1QixJQUF2QixDQUFuQjtBQUNBZixJQUFBQSxHQUFHLENBQUNjLEVBQUosQ0FBTyxVQUFQLEVBQW1CLEtBQUtwQixZQUFMLENBQWtCcUIsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBbkI7QUFDQWYsSUFBQUEsR0FBRyxDQUFDYyxFQUFKLENBQU8sVUFBUCxFQUFtQixLQUFLZixjQUFMLENBQW9CZ0IsSUFBcEIsQ0FBeUIsSUFBekIsRUFBK0JmLEdBQS9CLENBQW5COztBQUNBLFNBQUtnQixZQUFMLENBQWtCaEIsR0FBbEI7O0FBQ0EsU0FBS0QsY0FBTCxDQUFvQkMsR0FBcEI7O0FBRUEsUUFBSVksRUFBSixFQUFRO0FBQ05aLE1BQUFBLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUUwsRUFBUjtBQUNEOztBQUVELFdBQU9aLEdBQVA7QUFDRCxHQWREO0FBZUQsQ0FqQkQ7QUFtQkFuQixLQUFLLENBQUNVLFNBQU4sQ0FBZ0IyQixHQUFoQixHQUFzQnJDLEtBQUssQ0FBQ1UsU0FBTixDQUFnQjRCLE1BQXRDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpXG5jb25zdCB7IHBhcnNlIH0gPSByZXF1aXJlKCd1cmwnKTtcbmNvbnN0IHsgQ29va2llSmFyIH0gPSByZXF1aXJlKCdjb29raWVqYXInKTtcbmNvbnN0IHsgQ29va2llQWNjZXNzSW5mbyB9ID0gcmVxdWlyZSgnY29va2llamFyJyk7XG5jb25zdCBtZXRob2RzID0gcmVxdWlyZSgnbWV0aG9kcycpO1xuY29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoJy4uLy4uJyk7XG5jb25zdCBBZ2VudEJhc2UgPSByZXF1aXJlKCcuLi9hZ2VudC1iYXNlJyk7XG5cbi8qKlxuICogRXhwb3NlIGBBZ2VudGAuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBBZ2VudDtcblxuLyoqXG4gKiBJbml0aWFsaXplIGEgbmV3IGBBZ2VudGAuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBBZ2VudChvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBBZ2VudCkpIHtcbiAgICByZXR1cm4gbmV3IEFnZW50KG9wdGlvbnMpO1xuICB9XG5cbiAgQWdlbnRCYXNlLmNhbGwodGhpcyk7XG4gIHRoaXMuamFyID0gbmV3IENvb2tpZUphcigpO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMuY2EpIHtcbiAgICAgIHRoaXMuY2Eob3B0aW9ucy5jYSk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMua2V5KSB7XG4gICAgICB0aGlzLmtleShvcHRpb25zLmtleSk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMucGZ4KSB7XG4gICAgICB0aGlzLnBmeChvcHRpb25zLnBmeCk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuY2VydCkge1xuICAgICAgdGhpcy5jZXJ0KG9wdGlvbnMuY2VydCk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMucmVqZWN0VW5hdXRob3JpemVkID09PSBmYWxzZSkge1xuICAgICAgdGhpcy5kaXNhYmxlVExTQ2VydHMoKTtcbiAgICB9XG4gIH1cbn1cblxuQWdlbnQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShBZ2VudEJhc2UucHJvdG90eXBlKTtcblxuLyoqXG4gKiBTYXZlIHRoZSBjb29raWVzIGluIHRoZSBnaXZlbiBgcmVzYCB0b1xuICogdGhlIGFnZW50J3MgY29va2llIGphciBmb3IgcGVyc2lzdGVuY2UuXG4gKlxuICogQHBhcmFtIHtSZXNwb25zZX0gcmVzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5BZ2VudC5wcm90b3R5cGUuX3NhdmVDb29raWVzID0gZnVuY3Rpb24gKHJlcykge1xuICBjb25zdCBjb29raWVzID0gcmVzLmhlYWRlcnNbJ3NldC1jb29raWUnXTtcbiAgaWYgKGNvb2tpZXMpIHRoaXMuamFyLnNldENvb2tpZXMoY29va2llcyk7XG59O1xuXG4vKipcbiAqIEF0dGFjaCBjb29raWVzIHdoZW4gYXZhaWxhYmxlIHRvIHRoZSBnaXZlbiBgcmVxYC5cbiAqXG4gKiBAcGFyYW0ge1JlcXVlc3R9IHJlcVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuQWdlbnQucHJvdG90eXBlLl9hdHRhY2hDb29raWVzID0gZnVuY3Rpb24gKHJlcSkge1xuICBjb25zdCB1cmwgPSBwYXJzZShyZXEudXJsKTtcbiAgY29uc3QgYWNjZXNzID0gbmV3IENvb2tpZUFjY2Vzc0luZm8oXG4gICAgdXJsLmhvc3RuYW1lLFxuICAgIHVybC5wYXRobmFtZSxcbiAgICB1cmwucHJvdG9jb2wgPT09ICdodHRwczonXG4gICk7XG4gIGNvbnN0IGNvb2tpZXMgPSB0aGlzLmphci5nZXRDb29raWVzKGFjY2VzcykudG9WYWx1ZVN0cmluZygpO1xuICByZXEuY29va2llcyA9IGNvb2tpZXM7XG59O1xuXG5tZXRob2RzLmZvckVhY2goKG5hbWUpID0+IHtcbiAgY29uc3QgbWV0aG9kID0gbmFtZS50b1VwcGVyQ2FzZSgpO1xuICBBZ2VudC5wcm90b3R5cGVbbmFtZV0gPSBmdW5jdGlvbiAodXJsLCBmbikge1xuICAgIGNvbnN0IHJlcSA9IG5ldyByZXF1ZXN0LlJlcXVlc3QobWV0aG9kLCB1cmwpO1xuXG4gICAgcmVxLm9uKCdyZXNwb25zZScsIHRoaXMuX3NhdmVDb29raWVzLmJpbmQodGhpcykpO1xuICAgIHJlcS5vbigncmVkaXJlY3QnLCB0aGlzLl9zYXZlQ29va2llcy5iaW5kKHRoaXMpKTtcbiAgICByZXEub24oJ3JlZGlyZWN0JywgdGhpcy5fYXR0YWNoQ29va2llcy5iaW5kKHRoaXMsIHJlcSkpO1xuICAgIHRoaXMuX3NldERlZmF1bHRzKHJlcSk7XG4gICAgdGhpcy5fYXR0YWNoQ29va2llcyhyZXEpO1xuXG4gICAgaWYgKGZuKSB7XG4gICAgICByZXEuZW5kKGZuKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVxO1xuICB9O1xufSk7XG5cbkFnZW50LnByb3RvdHlwZS5kZWwgPSBBZ2VudC5wcm90b3R5cGUuZGVsZXRlO1xuIl19\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/agent.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/http2wrapper.js":
/*!**********************************************************!*\
  !*** ./node_modules/superagent/lib/node/http2wrapper.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\n\nvar util = __webpack_require__(/*! util */ \"util\");\n\nvar net = __webpack_require__(/*! net */ \"net\");\n\nvar tls = __webpack_require__(/*! tls */ \"tls\"); // eslint-disable-next-line node/no-deprecated-api\n\n\nvar _require = __webpack_require__(/*! url */ \"url\"),\n    parse = _require.parse;\n\nvar semver = __webpack_require__(/*! semver */ \"./node_modules/superagent/node_modules/semver/index.js\");\n\nvar http2; // eslint-disable-next-line node/no-unsupported-features/node-builtins\n\nif (semver.gte(process.version, 'v10.10.0')) http2 = __webpack_require__(/*! http2 */ \"http2\");else throw new Error('superagent: this version of Node.js does not support http2');\nvar _http2$constants = http2.constants,\n    HTTP2_HEADER_PATH = _http2$constants.HTTP2_HEADER_PATH,\n    HTTP2_HEADER_STATUS = _http2$constants.HTTP2_HEADER_STATUS,\n    HTTP2_HEADER_METHOD = _http2$constants.HTTP2_HEADER_METHOD,\n    HTTP2_HEADER_AUTHORITY = _http2$constants.HTTP2_HEADER_AUTHORITY,\n    HTTP2_HEADER_HOST = _http2$constants.HTTP2_HEADER_HOST,\n    HTTP2_HEADER_SET_COOKIE = _http2$constants.HTTP2_HEADER_SET_COOKIE,\n    NGHTTP2_CANCEL = _http2$constants.NGHTTP2_CANCEL;\n\nfunction setProtocol(protocol) {\n  return {\n    request: function request(options) {\n      return new Request(protocol, options);\n    }\n  };\n}\n\nfunction Request(protocol, options) {\n  var _this = this;\n\n  Stream.call(this);\n  var defaultPort = protocol === 'https:' ? 443 : 80;\n  var defaultHost = 'localhost';\n  var port = options.port || defaultPort;\n  var host = options.host || defaultHost;\n  delete options.port;\n  delete options.host;\n  this.method = options.method;\n  this.path = options.path;\n  this.protocol = protocol;\n  this.host = host;\n  delete options.method;\n  delete options.path;\n\n  var sessionOptions = _objectSpread({}, options);\n\n  if (options.socketPath) {\n    sessionOptions.socketPath = options.socketPath;\n    sessionOptions.createConnection = this.createUnixConnection.bind(this);\n  }\n\n  this._headers = {};\n  var session = http2.connect(\"\".concat(protocol, \"//\").concat(host, \":\").concat(port), sessionOptions);\n  this.setHeader('host', \"\".concat(host, \":\").concat(port));\n  session.on('error', function (err) {\n    return _this.emit('error', err);\n  });\n  this.session = session;\n}\n/**\n * Inherit from `Stream` (which inherits from `EventEmitter`).\n */\n\n\nutil.inherits(Request, Stream);\n\nRequest.prototype.createUnixConnection = function (authority, options) {\n  switch (this.protocol) {\n    case 'http:':\n      return net.connect(options.socketPath);\n\n    case 'https:':\n      options.ALPNProtocols = ['h2'];\n      options.servername = this.host;\n      options.allowHalfOpen = true;\n      return tls.connect(options.socketPath, options);\n\n    default:\n      throw new Error('Unsupported protocol', this.protocol);\n  }\n}; // eslint-disable-next-line no-unused-vars\n\n\nRequest.prototype.setNoDelay = function (bool) {// We can not use setNoDelay with HTTP/2.\n  // Node 10 limits http2session.socket methods to ones safe to use with HTTP/2.\n  // See also https://nodejs.org/api/http2.html#http2_http2session_socket\n};\n\nRequest.prototype.getFrame = function () {\n  var _method,\n      _this2 = this;\n\n  if (this.frame) {\n    return this.frame;\n  }\n\n  var method = (_method = {}, _defineProperty(_method, HTTP2_HEADER_PATH, this.path), _defineProperty(_method, HTTP2_HEADER_METHOD, this.method), _method);\n  var headers = this.mapToHttp2Header(this._headers);\n  headers = Object.assign(headers, method);\n  var frame = this.session.request(headers); // eslint-disable-next-line no-unused-vars\n\n  frame.once('response', function (headers, flags) {\n    headers = _this2.mapToHttpHeader(headers);\n    frame.headers = headers;\n    frame.statusCode = headers[HTTP2_HEADER_STATUS];\n    frame.status = frame.statusCode;\n\n    _this2.emit('response', frame);\n  });\n  this._headerSent = true;\n  frame.once('drain', function () {\n    return _this2.emit('drain');\n  });\n  frame.on('error', function (err) {\n    return _this2.emit('error', err);\n  });\n  frame.on('close', function () {\n    return _this2.session.close();\n  });\n  this.frame = frame;\n  return frame;\n};\n\nRequest.prototype.mapToHttpHeader = function (headers) {\n  var keys = Object.keys(headers);\n  var http2Headers = {};\n\n  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n    var value = headers[key];\n    key = key.toLowerCase();\n\n    switch (key) {\n      case HTTP2_HEADER_SET_COOKIE:\n        value = Array.isArray(value) ? value : [value];\n        break;\n\n      default:\n        break;\n    }\n\n    http2Headers[key] = value;\n  }\n\n  return http2Headers;\n};\n\nRequest.prototype.mapToHttp2Header = function (headers) {\n  var keys = Object.keys(headers);\n  var http2Headers = {};\n\n  for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n    var key = _keys2[_i2];\n    var value = headers[key];\n    key = key.toLowerCase();\n\n    switch (key) {\n      case HTTP2_HEADER_HOST:\n        key = HTTP2_HEADER_AUTHORITY;\n        value = /^http:\\/\\/|^https:\\/\\//.test(value) ? parse(value).host : value;\n        break;\n\n      default:\n        break;\n    }\n\n    http2Headers[key] = value;\n  }\n\n  return http2Headers;\n};\n\nRequest.prototype.setHeader = function (name, value) {\n  this._headers[name.toLowerCase()] = value;\n};\n\nRequest.prototype.getHeader = function (name) {\n  return this._headers[name.toLowerCase()];\n};\n\nRequest.prototype.write = function (data, encoding) {\n  var frame = this.getFrame();\n  return frame.write(data, encoding);\n};\n\nRequest.prototype.pipe = function (stream, options) {\n  var frame = this.getFrame();\n  return frame.pipe(stream, options);\n};\n\nRequest.prototype.end = function (data) {\n  var frame = this.getFrame();\n  frame.end(data);\n}; // eslint-disable-next-line no-unused-vars\n\n\nRequest.prototype.abort = function (data) {\n  var frame = this.getFrame();\n  frame.close(NGHTTP2_CANCEL);\n  this.session.destroy();\n};\n\nexports.setProtocol = setProtocol;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlL2h0dHAyd3JhcHBlci5qcyJdLCJuYW1lcyI6WyJTdHJlYW0iLCJyZXF1aXJlIiwidXRpbCIsIm5ldCIsInRscyIsInBhcnNlIiwic2VtdmVyIiwiaHR0cDIiLCJndGUiLCJwcm9jZXNzIiwidmVyc2lvbiIsIkVycm9yIiwiY29uc3RhbnRzIiwiSFRUUDJfSEVBREVSX1BBVEgiLCJIVFRQMl9IRUFERVJfU1RBVFVTIiwiSFRUUDJfSEVBREVSX01FVEhPRCIsIkhUVFAyX0hFQURFUl9BVVRIT1JJVFkiLCJIVFRQMl9IRUFERVJfSE9TVCIsIkhUVFAyX0hFQURFUl9TRVRfQ09PS0lFIiwiTkdIVFRQMl9DQU5DRUwiLCJzZXRQcm90b2NvbCIsInByb3RvY29sIiwicmVxdWVzdCIsIm9wdGlvbnMiLCJSZXF1ZXN0IiwiY2FsbCIsImRlZmF1bHRQb3J0IiwiZGVmYXVsdEhvc3QiLCJwb3J0IiwiaG9zdCIsIm1ldGhvZCIsInBhdGgiLCJzZXNzaW9uT3B0aW9ucyIsInNvY2tldFBhdGgiLCJjcmVhdGVDb25uZWN0aW9uIiwiY3JlYXRlVW5peENvbm5lY3Rpb24iLCJiaW5kIiwiX2hlYWRlcnMiLCJzZXNzaW9uIiwiY29ubmVjdCIsInNldEhlYWRlciIsIm9uIiwiZXJyIiwiZW1pdCIsImluaGVyaXRzIiwicHJvdG90eXBlIiwiYXV0aG9yaXR5IiwiQUxQTlByb3RvY29scyIsInNlcnZlcm5hbWUiLCJhbGxvd0hhbGZPcGVuIiwic2V0Tm9EZWxheSIsImJvb2wiLCJnZXRGcmFtZSIsImZyYW1lIiwiaGVhZGVycyIsIm1hcFRvSHR0cDJIZWFkZXIiLCJPYmplY3QiLCJhc3NpZ24iLCJvbmNlIiwiZmxhZ3MiLCJtYXBUb0h0dHBIZWFkZXIiLCJzdGF0dXNDb2RlIiwic3RhdHVzIiwiX2hlYWRlclNlbnQiLCJjbG9zZSIsImtleXMiLCJodHRwMkhlYWRlcnMiLCJrZXkiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwiQXJyYXkiLCJpc0FycmF5IiwidGVzdCIsIm5hbWUiLCJnZXRIZWFkZXIiLCJ3cml0ZSIsImRhdGEiLCJlbmNvZGluZyIsInBpcGUiLCJzdHJlYW0iLCJlbmQiLCJhYm9ydCIsImRlc3Ryb3kiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRSxHQUFHLEdBQUdGLE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUNBLElBQU1HLEdBQUcsR0FBR0gsT0FBTyxDQUFDLEtBQUQsQ0FBbkIsQyxDQUNBOzs7ZUFDa0JBLE9BQU8sQ0FBQyxLQUFELEM7SUFBakJJLEssWUFBQUEsSzs7QUFDUixJQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBLElBQUlNLEtBQUosQyxDQUNBOztBQUNBLElBQUlELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXQyxPQUFPLENBQUNDLE9BQW5CLEVBQTRCLFVBQTVCLENBQUosRUFBNkNILEtBQUssR0FBR04sT0FBTyxDQUFDLE9BQUQsQ0FBZixDQUE3QyxLQUVFLE1BQU0sSUFBSVUsS0FBSixDQUFVLDREQUFWLENBQU47dUJBVUVKLEtBQUssQ0FBQ0ssUztJQVBSQyxpQixvQkFBQUEsaUI7SUFDQUMsbUIsb0JBQUFBLG1CO0lBQ0FDLG1CLG9CQUFBQSxtQjtJQUNBQyxzQixvQkFBQUEsc0I7SUFDQUMsaUIsb0JBQUFBLGlCO0lBQ0FDLHVCLG9CQUFBQSx1QjtJQUNBQyxjLG9CQUFBQSxjOztBQUdGLFNBQVNDLFdBQVQsQ0FBcUJDLFFBQXJCLEVBQStCO0FBQzdCLFNBQU87QUFDTEMsSUFBQUEsT0FESyxtQkFDR0MsT0FESCxFQUNZO0FBQ2YsYUFBTyxJQUFJQyxPQUFKLENBQVlILFFBQVosRUFBc0JFLE9BQXRCLENBQVA7QUFDRDtBQUhJLEdBQVA7QUFLRDs7QUFFRCxTQUFTQyxPQUFULENBQWlCSCxRQUFqQixFQUEyQkUsT0FBM0IsRUFBb0M7QUFBQTs7QUFDbEN2QixFQUFBQSxNQUFNLENBQUN5QixJQUFQLENBQVksSUFBWjtBQUNBLE1BQU1DLFdBQVcsR0FBR0wsUUFBUSxLQUFLLFFBQWIsR0FBd0IsR0FBeEIsR0FBOEIsRUFBbEQ7QUFDQSxNQUFNTSxXQUFXLEdBQUcsV0FBcEI7QUFDQSxNQUFNQyxJQUFJLEdBQUdMLE9BQU8sQ0FBQ0ssSUFBUixJQUFnQkYsV0FBN0I7QUFDQSxNQUFNRyxJQUFJLEdBQUdOLE9BQU8sQ0FBQ00sSUFBUixJQUFnQkYsV0FBN0I7QUFFQSxTQUFPSixPQUFPLENBQUNLLElBQWY7QUFDQSxTQUFPTCxPQUFPLENBQUNNLElBQWY7QUFFQSxPQUFLQyxNQUFMLEdBQWNQLE9BQU8sQ0FBQ08sTUFBdEI7QUFDQSxPQUFLQyxJQUFMLEdBQVlSLE9BQU8sQ0FBQ1EsSUFBcEI7QUFDQSxPQUFLVixRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLE9BQUtRLElBQUwsR0FBWUEsSUFBWjtBQUVBLFNBQU9OLE9BQU8sQ0FBQ08sTUFBZjtBQUNBLFNBQU9QLE9BQU8sQ0FBQ1EsSUFBZjs7QUFFQSxNQUFNQyxjQUFjLHFCQUFRVCxPQUFSLENBQXBCOztBQUNBLE1BQUlBLE9BQU8sQ0FBQ1UsVUFBWixFQUF3QjtBQUN0QkQsSUFBQUEsY0FBYyxDQUFDQyxVQUFmLEdBQTRCVixPQUFPLENBQUNVLFVBQXBDO0FBQ0FELElBQUFBLGNBQWMsQ0FBQ0UsZ0JBQWYsR0FBa0MsS0FBS0Msb0JBQUwsQ0FBMEJDLElBQTFCLENBQStCLElBQS9CLENBQWxDO0FBQ0Q7O0FBRUQsT0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUVBLE1BQU1DLE9BQU8sR0FBRy9CLEtBQUssQ0FBQ2dDLE9BQU4sV0FBaUJsQixRQUFqQixlQUE4QlEsSUFBOUIsY0FBc0NELElBQXRDLEdBQThDSSxjQUE5QyxDQUFoQjtBQUNBLE9BQUtRLFNBQUwsQ0FBZSxNQUFmLFlBQTBCWCxJQUExQixjQUFrQ0QsSUFBbEM7QUFFQVUsRUFBQUEsT0FBTyxDQUFDRyxFQUFSLENBQVcsT0FBWCxFQUFvQixVQUFDQyxHQUFEO0FBQUEsV0FBUyxLQUFJLENBQUNDLElBQUwsQ0FBVSxPQUFWLEVBQW1CRCxHQUFuQixDQUFUO0FBQUEsR0FBcEI7QUFFQSxPQUFLSixPQUFMLEdBQWVBLE9BQWY7QUFDRDtBQUVEOzs7OztBQUdBcEMsSUFBSSxDQUFDMEMsUUFBTCxDQUFjcEIsT0FBZCxFQUF1QnhCLE1BQXZCOztBQUVBd0IsT0FBTyxDQUFDcUIsU0FBUixDQUFrQlYsb0JBQWxCLEdBQXlDLFVBQVVXLFNBQVYsRUFBcUJ2QixPQUFyQixFQUE4QjtBQUNyRSxVQUFRLEtBQUtGLFFBQWI7QUFDRSxTQUFLLE9BQUw7QUFDRSxhQUFPbEIsR0FBRyxDQUFDb0MsT0FBSixDQUFZaEIsT0FBTyxDQUFDVSxVQUFwQixDQUFQOztBQUNGLFNBQUssUUFBTDtBQUNFVixNQUFBQSxPQUFPLENBQUN3QixhQUFSLEdBQXdCLENBQUMsSUFBRCxDQUF4QjtBQUNBeEIsTUFBQUEsT0FBTyxDQUFDeUIsVUFBUixHQUFxQixLQUFLbkIsSUFBMUI7QUFDQU4sTUFBQUEsT0FBTyxDQUFDMEIsYUFBUixHQUF3QixJQUF4QjtBQUNBLGFBQU83QyxHQUFHLENBQUNtQyxPQUFKLENBQVloQixPQUFPLENBQUNVLFVBQXBCLEVBQWdDVixPQUFoQyxDQUFQOztBQUNGO0FBQ0UsWUFBTSxJQUFJWixLQUFKLENBQVUsc0JBQVYsRUFBa0MsS0FBS1UsUUFBdkMsQ0FBTjtBQVRKO0FBV0QsQ0FaRCxDLENBY0E7OztBQUNBRyxPQUFPLENBQUNxQixTQUFSLENBQWtCSyxVQUFsQixHQUErQixVQUFVQyxJQUFWLEVBQWdCLENBQzdDO0FBQ0E7QUFDQTtBQUNELENBSkQ7O0FBTUEzQixPQUFPLENBQUNxQixTQUFSLENBQWtCTyxRQUFsQixHQUE2QixZQUFZO0FBQUE7QUFBQTs7QUFDdkMsTUFBSSxLQUFLQyxLQUFULEVBQWdCO0FBQ2QsV0FBTyxLQUFLQSxLQUFaO0FBQ0Q7O0FBRUQsTUFBTXZCLE1BQU0sMkNBQ1RqQixpQkFEUyxFQUNXLEtBQUtrQixJQURoQiw0QkFFVGhCLG1CQUZTLEVBRWEsS0FBS2UsTUFGbEIsV0FBWjtBQUtBLE1BQUl3QixPQUFPLEdBQUcsS0FBS0MsZ0JBQUwsQ0FBc0IsS0FBS2xCLFFBQTNCLENBQWQ7QUFFQWlCLEVBQUFBLE9BQU8sR0FBR0UsTUFBTSxDQUFDQyxNQUFQLENBQWNILE9BQWQsRUFBdUJ4QixNQUF2QixDQUFWO0FBRUEsTUFBTXVCLEtBQUssR0FBRyxLQUFLZixPQUFMLENBQWFoQixPQUFiLENBQXFCZ0MsT0FBckIsQ0FBZCxDQWR1QyxDQWV2Qzs7QUFDQUQsRUFBQUEsS0FBSyxDQUFDSyxJQUFOLENBQVcsVUFBWCxFQUF1QixVQUFDSixPQUFELEVBQVVLLEtBQVYsRUFBb0I7QUFDekNMLElBQUFBLE9BQU8sR0FBRyxNQUFJLENBQUNNLGVBQUwsQ0FBcUJOLE9BQXJCLENBQVY7QUFDQUQsSUFBQUEsS0FBSyxDQUFDQyxPQUFOLEdBQWdCQSxPQUFoQjtBQUNBRCxJQUFBQSxLQUFLLENBQUNRLFVBQU4sR0FBbUJQLE9BQU8sQ0FBQ3hDLG1CQUFELENBQTFCO0FBQ0F1QyxJQUFBQSxLQUFLLENBQUNTLE1BQU4sR0FBZVQsS0FBSyxDQUFDUSxVQUFyQjs7QUFDQSxJQUFBLE1BQUksQ0FBQ2xCLElBQUwsQ0FBVSxVQUFWLEVBQXNCVSxLQUF0QjtBQUNELEdBTkQ7QUFRQSxPQUFLVSxXQUFMLEdBQW1CLElBQW5CO0FBRUFWLEVBQUFBLEtBQUssQ0FBQ0ssSUFBTixDQUFXLE9BQVgsRUFBb0I7QUFBQSxXQUFNLE1BQUksQ0FBQ2YsSUFBTCxDQUFVLE9BQVYsQ0FBTjtBQUFBLEdBQXBCO0FBQ0FVLEVBQUFBLEtBQUssQ0FBQ1osRUFBTixDQUFTLE9BQVQsRUFBa0IsVUFBQ0MsR0FBRDtBQUFBLFdBQVMsTUFBSSxDQUFDQyxJQUFMLENBQVUsT0FBVixFQUFtQkQsR0FBbkIsQ0FBVDtBQUFBLEdBQWxCO0FBQ0FXLEVBQUFBLEtBQUssQ0FBQ1osRUFBTixDQUFTLE9BQVQsRUFBa0I7QUFBQSxXQUFNLE1BQUksQ0FBQ0gsT0FBTCxDQUFhMEIsS0FBYixFQUFOO0FBQUEsR0FBbEI7QUFFQSxPQUFLWCxLQUFMLEdBQWFBLEtBQWI7QUFDQSxTQUFPQSxLQUFQO0FBQ0QsQ0FoQ0Q7O0FBa0NBN0IsT0FBTyxDQUFDcUIsU0FBUixDQUFrQmUsZUFBbEIsR0FBb0MsVUFBVU4sT0FBVixFQUFtQjtBQUNyRCxNQUFNVyxJQUFJLEdBQUdULE1BQU0sQ0FBQ1MsSUFBUCxDQUFZWCxPQUFaLENBQWI7QUFDQSxNQUFNWSxZQUFZLEdBQUcsRUFBckI7O0FBQ0EsMkJBQWdCRCxJQUFoQiwyQkFBc0I7QUFBakIsUUFBSUUsR0FBRyxZQUFQO0FBQ0gsUUFBSUMsS0FBSyxHQUFHZCxPQUFPLENBQUNhLEdBQUQsQ0FBbkI7QUFDQUEsSUFBQUEsR0FBRyxHQUFHQSxHQUFHLENBQUNFLFdBQUosRUFBTjs7QUFDQSxZQUFRRixHQUFSO0FBQ0UsV0FBS2pELHVCQUFMO0FBQ0VrRCxRQUFBQSxLQUFLLEdBQUdFLEtBQUssQ0FBQ0MsT0FBTixDQUFjSCxLQUFkLElBQXVCQSxLQUF2QixHQUErQixDQUFDQSxLQUFELENBQXZDO0FBQ0E7O0FBQ0Y7QUFDRTtBQUxKOztBQVFBRixJQUFBQSxZQUFZLENBQUNDLEdBQUQsQ0FBWixHQUFvQkMsS0FBcEI7QUFDRDs7QUFFRCxTQUFPRixZQUFQO0FBQ0QsQ0FsQkQ7O0FBb0JBMUMsT0FBTyxDQUFDcUIsU0FBUixDQUFrQlUsZ0JBQWxCLEdBQXFDLFVBQVVELE9BQVYsRUFBbUI7QUFDdEQsTUFBTVcsSUFBSSxHQUFHVCxNQUFNLENBQUNTLElBQVAsQ0FBWVgsT0FBWixDQUFiO0FBQ0EsTUFBTVksWUFBWSxHQUFHLEVBQXJCOztBQUNBLDZCQUFnQkQsSUFBaEIsOEJBQXNCO0FBQWpCLFFBQUlFLEdBQUcsY0FBUDtBQUNILFFBQUlDLEtBQUssR0FBR2QsT0FBTyxDQUFDYSxHQUFELENBQW5CO0FBQ0FBLElBQUFBLEdBQUcsR0FBR0EsR0FBRyxDQUFDRSxXQUFKLEVBQU47O0FBQ0EsWUFBUUYsR0FBUjtBQUNFLFdBQUtsRCxpQkFBTDtBQUNFa0QsUUFBQUEsR0FBRyxHQUFHbkQsc0JBQU47QUFDQW9ELFFBQUFBLEtBQUssR0FBRyx5QkFBeUJJLElBQXpCLENBQThCSixLQUE5QixJQUNKL0QsS0FBSyxDQUFDK0QsS0FBRCxDQUFMLENBQWF2QyxJQURULEdBRUp1QyxLQUZKO0FBR0E7O0FBQ0Y7QUFDRTtBQVJKOztBQVdBRixJQUFBQSxZQUFZLENBQUNDLEdBQUQsQ0FBWixHQUFvQkMsS0FBcEI7QUFDRDs7QUFFRCxTQUFPRixZQUFQO0FBQ0QsQ0FyQkQ7O0FBdUJBMUMsT0FBTyxDQUFDcUIsU0FBUixDQUFrQkwsU0FBbEIsR0FBOEIsVUFBVWlDLElBQVYsRUFBZ0JMLEtBQWhCLEVBQXVCO0FBQ25ELE9BQUsvQixRQUFMLENBQWNvQyxJQUFJLENBQUNKLFdBQUwsRUFBZCxJQUFvQ0QsS0FBcEM7QUFDRCxDQUZEOztBQUlBNUMsT0FBTyxDQUFDcUIsU0FBUixDQUFrQjZCLFNBQWxCLEdBQThCLFVBQVVELElBQVYsRUFBZ0I7QUFDNUMsU0FBTyxLQUFLcEMsUUFBTCxDQUFjb0MsSUFBSSxDQUFDSixXQUFMLEVBQWQsQ0FBUDtBQUNELENBRkQ7O0FBSUE3QyxPQUFPLENBQUNxQixTQUFSLENBQWtCOEIsS0FBbEIsR0FBMEIsVUFBVUMsSUFBVixFQUFnQkMsUUFBaEIsRUFBMEI7QUFDbEQsTUFBTXhCLEtBQUssR0FBRyxLQUFLRCxRQUFMLEVBQWQ7QUFDQSxTQUFPQyxLQUFLLENBQUNzQixLQUFOLENBQVlDLElBQVosRUFBa0JDLFFBQWxCLENBQVA7QUFDRCxDQUhEOztBQUtBckQsT0FBTyxDQUFDcUIsU0FBUixDQUFrQmlDLElBQWxCLEdBQXlCLFVBQVVDLE1BQVYsRUFBa0J4RCxPQUFsQixFQUEyQjtBQUNsRCxNQUFNOEIsS0FBSyxHQUFHLEtBQUtELFFBQUwsRUFBZDtBQUNBLFNBQU9DLEtBQUssQ0FBQ3lCLElBQU4sQ0FBV0MsTUFBWCxFQUFtQnhELE9BQW5CLENBQVA7QUFDRCxDQUhEOztBQUtBQyxPQUFPLENBQUNxQixTQUFSLENBQWtCbUMsR0FBbEIsR0FBd0IsVUFBVUosSUFBVixFQUFnQjtBQUN0QyxNQUFNdkIsS0FBSyxHQUFHLEtBQUtELFFBQUwsRUFBZDtBQUNBQyxFQUFBQSxLQUFLLENBQUMyQixHQUFOLENBQVVKLElBQVY7QUFDRCxDQUhELEMsQ0FLQTs7O0FBQ0FwRCxPQUFPLENBQUNxQixTQUFSLENBQWtCb0MsS0FBbEIsR0FBMEIsVUFBVUwsSUFBVixFQUFnQjtBQUN4QyxNQUFNdkIsS0FBSyxHQUFHLEtBQUtELFFBQUwsRUFBZDtBQUNBQyxFQUFBQSxLQUFLLENBQUNXLEtBQU4sQ0FBWTdDLGNBQVo7QUFDQSxPQUFLbUIsT0FBTCxDQUFhNEMsT0FBYjtBQUNELENBSkQ7O0FBTUFDLE9BQU8sQ0FBQy9ELFdBQVIsR0FBc0JBLFdBQXRCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJyk7XG5jb25zdCB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuY29uc3QgbmV0ID0gcmVxdWlyZSgnbmV0Jyk7XG5jb25zdCB0bHMgPSByZXF1aXJlKCd0bHMnKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpXG5jb25zdCB7IHBhcnNlIH0gPSByZXF1aXJlKCd1cmwnKTtcbmNvbnN0IHNlbXZlciA9IHJlcXVpcmUoJ3NlbXZlcicpO1xuXG5sZXQgaHR0cDI7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm9kZS9uby11bnN1cHBvcnRlZC1mZWF0dXJlcy9ub2RlLWJ1aWx0aW5zXG5pZiAoc2VtdmVyLmd0ZShwcm9jZXNzLnZlcnNpb24sICd2MTAuMTAuMCcpKSBodHRwMiA9IHJlcXVpcmUoJ2h0dHAyJyk7XG5lbHNlXG4gIHRocm93IG5ldyBFcnJvcignc3VwZXJhZ2VudDogdGhpcyB2ZXJzaW9uIG9mIE5vZGUuanMgZG9lcyBub3Qgc3VwcG9ydCBodHRwMicpO1xuXG5jb25zdCB7XG4gIEhUVFAyX0hFQURFUl9QQVRILFxuICBIVFRQMl9IRUFERVJfU1RBVFVTLFxuICBIVFRQMl9IRUFERVJfTUVUSE9ELFxuICBIVFRQMl9IRUFERVJfQVVUSE9SSVRZLFxuICBIVFRQMl9IRUFERVJfSE9TVCxcbiAgSFRUUDJfSEVBREVSX1NFVF9DT09LSUUsXG4gIE5HSFRUUDJfQ0FOQ0VMXG59ID0gaHR0cDIuY29uc3RhbnRzO1xuXG5mdW5jdGlvbiBzZXRQcm90b2NvbChwcm90b2NvbCkge1xuICByZXR1cm4ge1xuICAgIHJlcXVlc3Qob3B0aW9ucykge1xuICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0KHByb3RvY29sLCBvcHRpb25zKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIFJlcXVlc3QocHJvdG9jb2wsIG9wdGlvbnMpIHtcbiAgU3RyZWFtLmNhbGwodGhpcyk7XG4gIGNvbnN0IGRlZmF1bHRQb3J0ID0gcHJvdG9jb2wgPT09ICdodHRwczonID8gNDQzIDogODA7XG4gIGNvbnN0IGRlZmF1bHRIb3N0ID0gJ2xvY2FsaG9zdCc7XG4gIGNvbnN0IHBvcnQgPSBvcHRpb25zLnBvcnQgfHwgZGVmYXVsdFBvcnQ7XG4gIGNvbnN0IGhvc3QgPSBvcHRpb25zLmhvc3QgfHwgZGVmYXVsdEhvc3Q7XG5cbiAgZGVsZXRlIG9wdGlvbnMucG9ydDtcbiAgZGVsZXRlIG9wdGlvbnMuaG9zdDtcblxuICB0aGlzLm1ldGhvZCA9IG9wdGlvbnMubWV0aG9kO1xuICB0aGlzLnBhdGggPSBvcHRpb25zLnBhdGg7XG4gIHRoaXMucHJvdG9jb2wgPSBwcm90b2NvbDtcbiAgdGhpcy5ob3N0ID0gaG9zdDtcblxuICBkZWxldGUgb3B0aW9ucy5tZXRob2Q7XG4gIGRlbGV0ZSBvcHRpb25zLnBhdGg7XG5cbiAgY29uc3Qgc2Vzc2lvbk9wdGlvbnMgPSB7IC4uLm9wdGlvbnMgfTtcbiAgaWYgKG9wdGlvbnMuc29ja2V0UGF0aCkge1xuICAgIHNlc3Npb25PcHRpb25zLnNvY2tldFBhdGggPSBvcHRpb25zLnNvY2tldFBhdGg7XG4gICAgc2Vzc2lvbk9wdGlvbnMuY3JlYXRlQ29ubmVjdGlvbiA9IHRoaXMuY3JlYXRlVW5peENvbm5lY3Rpb24uYmluZCh0aGlzKTtcbiAgfVxuXG4gIHRoaXMuX2hlYWRlcnMgPSB7fTtcblxuICBjb25zdCBzZXNzaW9uID0gaHR0cDIuY29ubmVjdChgJHtwcm90b2NvbH0vLyR7aG9zdH06JHtwb3J0fWAsIHNlc3Npb25PcHRpb25zKTtcbiAgdGhpcy5zZXRIZWFkZXIoJ2hvc3QnLCBgJHtob3N0fToke3BvcnR9YCk7XG5cbiAgc2Vzc2lvbi5vbignZXJyb3InLCAoZXJyKSA9PiB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKSk7XG5cbiAgdGhpcy5zZXNzaW9uID0gc2Vzc2lvbjtcbn1cblxuLyoqXG4gKiBJbmhlcml0IGZyb20gYFN0cmVhbWAgKHdoaWNoIGluaGVyaXRzIGZyb20gYEV2ZW50RW1pdHRlcmApLlxuICovXG51dGlsLmluaGVyaXRzKFJlcXVlc3QsIFN0cmVhbSk7XG5cblJlcXVlc3QucHJvdG90eXBlLmNyZWF0ZVVuaXhDb25uZWN0aW9uID0gZnVuY3Rpb24gKGF1dGhvcml0eSwgb3B0aW9ucykge1xuICBzd2l0Y2ggKHRoaXMucHJvdG9jb2wpIHtcbiAgICBjYXNlICdodHRwOic6XG4gICAgICByZXR1cm4gbmV0LmNvbm5lY3Qob3B0aW9ucy5zb2NrZXRQYXRoKTtcbiAgICBjYXNlICdodHRwczonOlxuICAgICAgb3B0aW9ucy5BTFBOUHJvdG9jb2xzID0gWydoMiddO1xuICAgICAgb3B0aW9ucy5zZXJ2ZXJuYW1lID0gdGhpcy5ob3N0O1xuICAgICAgb3B0aW9ucy5hbGxvd0hhbGZPcGVuID0gdHJ1ZTtcbiAgICAgIHJldHVybiB0bHMuY29ubmVjdChvcHRpb25zLnNvY2tldFBhdGgsIG9wdGlvbnMpO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vuc3VwcG9ydGVkIHByb3RvY29sJywgdGhpcy5wcm90b2NvbCk7XG4gIH1cbn07XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuUmVxdWVzdC5wcm90b3R5cGUuc2V0Tm9EZWxheSA9IGZ1bmN0aW9uIChib29sKSB7XG4gIC8vIFdlIGNhbiBub3QgdXNlIHNldE5vRGVsYXkgd2l0aCBIVFRQLzIuXG4gIC8vIE5vZGUgMTAgbGltaXRzIGh0dHAyc2Vzc2lvbi5zb2NrZXQgbWV0aG9kcyB0byBvbmVzIHNhZmUgdG8gdXNlIHdpdGggSFRUUC8yLlxuICAvLyBTZWUgYWxzbyBodHRwczovL25vZGVqcy5vcmcvYXBpL2h0dHAyLmh0bWwjaHR0cDJfaHR0cDJzZXNzaW9uX3NvY2tldFxufTtcblxuUmVxdWVzdC5wcm90b3R5cGUuZ2V0RnJhbWUgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLmZyYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuZnJhbWU7XG4gIH1cblxuICBjb25zdCBtZXRob2QgPSB7XG4gICAgW0hUVFAyX0hFQURFUl9QQVRIXTogdGhpcy5wYXRoLFxuICAgIFtIVFRQMl9IRUFERVJfTUVUSE9EXTogdGhpcy5tZXRob2RcbiAgfTtcblxuICBsZXQgaGVhZGVycyA9IHRoaXMubWFwVG9IdHRwMkhlYWRlcih0aGlzLl9oZWFkZXJzKTtcblxuICBoZWFkZXJzID0gT2JqZWN0LmFzc2lnbihoZWFkZXJzLCBtZXRob2QpO1xuXG4gIGNvbnN0IGZyYW1lID0gdGhpcy5zZXNzaW9uLnJlcXVlc3QoaGVhZGVycyk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBmcmFtZS5vbmNlKCdyZXNwb25zZScsIChoZWFkZXJzLCBmbGFncykgPT4ge1xuICAgIGhlYWRlcnMgPSB0aGlzLm1hcFRvSHR0cEhlYWRlcihoZWFkZXJzKTtcbiAgICBmcmFtZS5oZWFkZXJzID0gaGVhZGVycztcbiAgICBmcmFtZS5zdGF0dXNDb2RlID0gaGVhZGVyc1tIVFRQMl9IRUFERVJfU1RBVFVTXTtcbiAgICBmcmFtZS5zdGF0dXMgPSBmcmFtZS5zdGF0dXNDb2RlO1xuICAgIHRoaXMuZW1pdCgncmVzcG9uc2UnLCBmcmFtZSk7XG4gIH0pO1xuXG4gIHRoaXMuX2hlYWRlclNlbnQgPSB0cnVlO1xuXG4gIGZyYW1lLm9uY2UoJ2RyYWluJywgKCkgPT4gdGhpcy5lbWl0KCdkcmFpbicpKTtcbiAgZnJhbWUub24oJ2Vycm9yJywgKGVycikgPT4gdGhpcy5lbWl0KCdlcnJvcicsIGVycikpO1xuICBmcmFtZS5vbignY2xvc2UnLCAoKSA9PiB0aGlzLnNlc3Npb24uY2xvc2UoKSk7XG5cbiAgdGhpcy5mcmFtZSA9IGZyYW1lO1xuICByZXR1cm4gZnJhbWU7XG59O1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5tYXBUb0h0dHBIZWFkZXIgPSBmdW5jdGlvbiAoaGVhZGVycykge1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoaGVhZGVycyk7XG4gIGNvbnN0IGh0dHAySGVhZGVycyA9IHt9O1xuICBmb3IgKGxldCBrZXkgb2Yga2V5cykge1xuICAgIGxldCB2YWx1ZSA9IGhlYWRlcnNba2V5XTtcbiAgICBrZXkgPSBrZXkudG9Mb3dlckNhc2UoKTtcbiAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgY2FzZSBIVFRQMl9IRUFERVJfU0VUX0NPT0tJRTpcbiAgICAgICAgdmFsdWUgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW3ZhbHVlXTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICBodHRwMkhlYWRlcnNba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIGh0dHAySGVhZGVycztcbn07XG5cblJlcXVlc3QucHJvdG90eXBlLm1hcFRvSHR0cDJIZWFkZXIgPSBmdW5jdGlvbiAoaGVhZGVycykge1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoaGVhZGVycyk7XG4gIGNvbnN0IGh0dHAySGVhZGVycyA9IHt9O1xuICBmb3IgKGxldCBrZXkgb2Yga2V5cykge1xuICAgIGxldCB2YWx1ZSA9IGhlYWRlcnNba2V5XTtcbiAgICBrZXkgPSBrZXkudG9Mb3dlckNhc2UoKTtcbiAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgY2FzZSBIVFRQMl9IRUFERVJfSE9TVDpcbiAgICAgICAga2V5ID0gSFRUUDJfSEVBREVSX0FVVEhPUklUWTtcbiAgICAgICAgdmFsdWUgPSAvXmh0dHA6XFwvXFwvfF5odHRwczpcXC9cXC8vLnRlc3QodmFsdWUpXG4gICAgICAgICAgPyBwYXJzZSh2YWx1ZSkuaG9zdFxuICAgICAgICAgIDogdmFsdWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaHR0cDJIZWFkZXJzW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBodHRwMkhlYWRlcnM7XG59O1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5zZXRIZWFkZXIgPSBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgdGhpcy5faGVhZGVyc1tuYW1lLnRvTG93ZXJDYXNlKCldID0gdmFsdWU7XG59O1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5nZXRIZWFkZXIgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gdGhpcy5faGVhZGVyc1tuYW1lLnRvTG93ZXJDYXNlKCldO1xufTtcblxuUmVxdWVzdC5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoZGF0YSwgZW5jb2RpbmcpIHtcbiAgY29uc3QgZnJhbWUgPSB0aGlzLmdldEZyYW1lKCk7XG4gIHJldHVybiBmcmFtZS53cml0ZShkYXRhLCBlbmNvZGluZyk7XG59O1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5waXBlID0gZnVuY3Rpb24gKHN0cmVhbSwgb3B0aW9ucykge1xuICBjb25zdCBmcmFtZSA9IHRoaXMuZ2V0RnJhbWUoKTtcbiAgcmV0dXJuIGZyYW1lLnBpcGUoc3RyZWFtLCBvcHRpb25zKTtcbn07XG5cblJlcXVlc3QucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gIGNvbnN0IGZyYW1lID0gdGhpcy5nZXRGcmFtZSgpO1xuICBmcmFtZS5lbmQoZGF0YSk7XG59O1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcblJlcXVlc3QucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgY29uc3QgZnJhbWUgPSB0aGlzLmdldEZyYW1lKCk7XG4gIGZyYW1lLmNsb3NlKE5HSFRUUDJfQ0FOQ0VMKTtcbiAgdGhpcy5zZXNzaW9uLmRlc3Ryb3koKTtcbn07XG5cbmV4cG9ydHMuc2V0UHJvdG9jb2wgPSBzZXRQcm90b2NvbDtcbiJdfQ==\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/http2wrapper.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/index.js":
/*!***************************************************!*\
  !*** ./node_modules/superagent/lib/node/index.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Module dependencies.\n */\n// eslint-disable-next-line node/no-deprecated-api\nvar _require = __webpack_require__(/*! url */ \"url\"),\n    parse = _require.parse,\n    format = _require.format,\n    resolve = _require.resolve;\n\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\n\nvar https = __webpack_require__(/*! https */ \"https\");\n\nvar http = __webpack_require__(/*! http */ \"http\");\n\nvar fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\n\nvar util = __webpack_require__(/*! util */ \"util\");\n\nvar qs = __webpack_require__(/*! qs */ \"./node_modules/qs/lib/index.js\");\n\nvar mime = __webpack_require__(/*! mime */ \"./node_modules/mime/index.js\");\n\nvar methods = __webpack_require__(/*! methods */ \"./node_modules/methods/index.js\");\n\nvar FormData = __webpack_require__(/*! form-data */ \"./node_modules/superagent/node_modules/form-data/lib/form_data.js\");\n\nvar formidable = __webpack_require__(/*! formidable */ \"./node_modules/formidable/lib/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/superagent/node_modules/debug/src/index.js\")('superagent');\n\nvar CookieJar = __webpack_require__(/*! cookiejar */ \"./node_modules/cookiejar/cookiejar.js\");\n\nvar semver = __webpack_require__(/*! semver */ \"./node_modules/superagent/node_modules/semver/index.js\");\n\nvar safeStringify = __webpack_require__(/*! fast-safe-stringify */ \"./node_modules/fast-safe-stringify/index.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/superagent/lib/utils.js\");\n\nvar RequestBase = __webpack_require__(/*! ../request-base */ \"./node_modules/superagent/lib/request-base.js\");\n\nvar _require2 = __webpack_require__(/*! ./unzip */ \"./node_modules/superagent/lib/node/unzip.js\"),\n    unzip = _require2.unzip;\n\nvar Response = __webpack_require__(/*! ./response */ \"./node_modules/superagent/lib/node/response.js\");\n\nvar http2;\nif (semver.gte(process.version, 'v10.10.0')) http2 = __webpack_require__(/*! ./http2wrapper */ \"./node_modules/superagent/lib/node/http2wrapper.js\");\n\nfunction request(method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  } // url first\n\n\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nmodule.exports = request;\nexports = module.exports;\n/**\n * Expose `Request`.\n */\n\nexports.Request = Request;\n/**\n * Expose the agent function\n */\n\nexports.agent = __webpack_require__(/*! ./agent */ \"./node_modules/superagent/lib/node/agent.js\");\n/**\n * Noop.\n */\n\nfunction noop() {}\n/**\n * Expose `Response`.\n */\n\n\nexports.Response = Response;\n/**\n * Define \"form\" mime type.\n */\n\nmime.define({\n  'application/x-www-form-urlencoded': ['form', 'urlencoded', 'form-data']\n}, true);\n/**\n * Protocol map.\n */\n\nexports.protocols = {\n  'http:': http,\n  'https:': https,\n  'http2:': http2\n};\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nexports.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(res, fn){\n *       fn(null, res);\n *     };\n *\n */\n\nexports.parse = __webpack_require__(/*! ./parsers */ \"./node_modules/superagent/lib/node/parsers/index.js\");\n/**\n * Default buffering map. Can be used to set certain\n * response types to buffer/not buffer.\n *\n *     superagent.buffer['application/xml'] = true;\n */\n\nexports.buffer = {};\n/**\n * Initialize internal header tracking properties on a request instance.\n *\n * @param {Object} req the instance\n * @api private\n */\n\nfunction _initHeaders(req) {\n  req._header = {// coerces header names to lowercase\n  };\n  req.header = {// preserves header name case\n  };\n}\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String|Object} url\n * @api public\n */\n\n\nfunction Request(method, url) {\n  Stream.call(this);\n  if (typeof url !== 'string') url = format(url);\n  this._enableHttp2 = Boolean(process.env.HTTP2_TEST); // internal only\n\n  this._agent = false;\n  this._formData = null;\n  this.method = method;\n  this.url = url;\n\n  _initHeaders(this);\n\n  this.writable = true;\n  this._redirects = 0;\n  this.redirects(method === 'HEAD' ? 0 : 5);\n  this.cookies = '';\n  this.qs = {};\n  this._query = [];\n  this.qsRaw = this._query; // Unused, for backwards compatibility only\n\n  this._redirectList = [];\n  this._streamRequest = false;\n  this.once('end', this.clearTimeout.bind(this));\n}\n/**\n * Inherit from `Stream` (which inherits from `EventEmitter`).\n * Mixin `RequestBase`.\n */\n\n\nutil.inherits(Request, Stream); // eslint-disable-next-line new-cap\n\nRequestBase(Request.prototype);\n/**\n * Enable or Disable http2.\n *\n * Enable http2.\n *\n * ``` js\n * request.get('http://localhost/')\n *   .http2()\n *   .end(callback);\n *\n * request.get('http://localhost/')\n *   .http2(true)\n *   .end(callback);\n * ```\n *\n * Disable http2.\n *\n * ``` js\n * request = request.http2();\n * request.get('http://localhost/')\n *   .http2(false)\n *   .end(callback);\n * ```\n *\n * @param {Boolean} enable\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.http2 = function (bool) {\n  if (exports.protocols['http2:'] === undefined) {\n    throw new Error('superagent: this version of Node.js does not support http2');\n  }\n\n  this._enableHttp2 = bool === undefined ? true : bool;\n  return this;\n};\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('field', Buffer.from('<b>Hello world</b>'), 'hello.html')\n *   .end(callback);\n * ```\n *\n * A filename may also be used:\n *\n * ``` js\n * request.post('http://localhost/upload')\n *   .attach('files', 'image.jpg')\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {String|fs.ReadStream|Buffer} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    var o = options || {};\n\n    if (typeof options === 'string') {\n      o = {\n        filename: options\n      };\n    }\n\n    if (typeof file === 'string') {\n      if (!o.filename) o.filename = file;\n      debug('creating `fs.ReadStream` instance for file: %s', file);\n      file = fs.createReadStream(file);\n    } else if (!o.filename && file.path) {\n      o.filename = file.path;\n    }\n\n    this._getFormData().append(field, file, o);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  var _this = this;\n\n  if (!this._formData) {\n    this._formData = new FormData();\n\n    this._formData.on('error', function (err) {\n      debug('FormData error', err);\n\n      if (_this.called) {\n        // The request has already finished and the callback was called.\n        // Silently ignore the error.\n        return;\n      }\n\n      _this.callback(err);\n\n      _this.abort();\n    });\n  }\n\n  return this._formData;\n};\n/**\n * Gets/sets the `Agent` to use for this HTTP request. The default (if this\n * function is not called) is to opt out of connection pooling (`agent: false`).\n *\n * @param {http.Agent} agent\n * @return {http.Agent}\n * @api public\n */\n\n\nRequest.prototype.agent = function (agent) {\n  if (arguments.length === 0) return this._agent;\n  this._agent = agent;\n  return this;\n};\n/**\n * Set _Content-Type_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/json')\n *        .send(jsonstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.type = function (type) {\n  return this.set('Content-Type', type.includes('/') ? type : mime.getType(type));\n};\n/**\n * Set _Accept_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.accept = function (type) {\n  return this.set('Accept', type.includes('/') ? type : mime.getType(type));\n};\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.query = function (val) {\n  if (typeof val === 'string') {\n    this._query.push(val);\n  } else {\n    Object.assign(this.qs, val);\n  }\n\n  return this;\n};\n/**\n * Write raw `data` / `encoding` to the socket.\n *\n * @param {Buffer|String} data\n * @param {String} encoding\n * @return {Boolean}\n * @api public\n */\n\n\nRequest.prototype.write = function (data, encoding) {\n  var req = this.request();\n\n  if (!this._streamRequest) {\n    this._streamRequest = true;\n  }\n\n  return req.write(data, encoding);\n};\n/**\n * Pipe the request body to `stream`.\n *\n * @param {Stream} stream\n * @param {Object} options\n * @return {Stream}\n * @api public\n */\n\n\nRequest.prototype.pipe = function (stream, options) {\n  this.piped = true; // HACK...\n\n  this.buffer(false);\n  this.end();\n  return this._pipeContinue(stream, options);\n};\n\nRequest.prototype._pipeContinue = function (stream, options) {\n  var _this2 = this;\n\n  this.req.once('response', function (res) {\n    // redirect\n    if (isRedirect(res.statusCode) && _this2._redirects++ !== _this2._maxRedirects) {\n      return _this2._redirect(res) === _this2 ? _this2._pipeContinue(stream, options) : undefined;\n    }\n\n    _this2.res = res;\n\n    _this2._emitResponse();\n\n    if (_this2._aborted) return;\n\n    if (_this2._shouldUnzip(res)) {\n      var unzipObj = zlib.createUnzip();\n      unzipObj.on('error', function (err) {\n        if (err && err.code === 'Z_BUF_ERROR') {\n          // unexpected end of file is ignored by browsers and curl\n          stream.emit('end');\n          return;\n        }\n\n        stream.emit('error', err);\n      });\n      res.pipe(unzipObj).pipe(stream, options);\n    } else {\n      res.pipe(stream, options);\n    }\n\n    res.once('end', function () {\n      _this2.emit('end');\n    });\n  });\n  return stream;\n};\n/**\n * Enable / disable buffering.\n *\n * @return {Boolean} [val]\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.buffer = function (val) {\n  this._buffer = val !== false;\n  return this;\n};\n/**\n * Redirect to `url\n *\n * @param {IncomingMessage} res\n * @return {Request} for chaining\n * @api private\n */\n\n\nRequest.prototype._redirect = function (res) {\n  var url = res.headers.location;\n\n  if (!url) {\n    return this.callback(new Error('No location header for redirect'), res);\n  }\n\n  debug('redirect %s -> %s', this.url, url); // location\n\n  url = resolve(this.url, url); // ensure the response is being consumed\n  // this is required for Node v0.10+\n\n  res.resume();\n  var headers = this.req.getHeaders ? this.req.getHeaders() : this.req._headers;\n  var changesOrigin = parse(url).host !== parse(this.url).host; // implementation of 302 following defacto standard\n\n  if (res.statusCode === 301 || res.statusCode === 302) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin); // force GET\n\n    this.method = this.method === 'HEAD' ? 'HEAD' : 'GET'; // clear data\n\n    this._data = null;\n  } // 303 is always GET\n\n\n  if (res.statusCode === 303) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin); // force method\n\n    this.method = 'GET'; // clear data\n\n    this._data = null;\n  } // 307 preserves method\n  // 308 preserves method\n\n\n  delete headers.host;\n  delete this.req;\n  delete this._formData; // remove all add header except User-Agent\n\n  _initHeaders(this); // redirect\n\n\n  this._endCalled = false;\n  this.url = url;\n  this.qs = {};\n  this._query.length = 0;\n  this.set(headers);\n  this.emit('redirect', res);\n\n  this._redirectList.push(this.url);\n\n  this.end(this._callback);\n  return this;\n};\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * Examples:\n *\n *   .auth('tobi', 'learnboost')\n *   .auth('tobi:learnboost')\n *   .auth('tobi')\n *   .auth(accessToken, { type: 'bearer' })\n *\n * @param {String} user\n * @param {String} [pass]\n * @param {Object} [options] options with authorization type 'basic' or 'bearer' ('basic' is default)\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n\n  if (_typeof(pass) === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: 'basic'\n    };\n  }\n\n  var encoder = function encoder(string) {\n    return Buffer.from(string).toString('base64');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n/**\n * Set the certificate authority option for https request.\n *\n * @param {Buffer | Array} cert\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.ca = function (cert) {\n  this._ca = cert;\n  return this;\n};\n/**\n * Set the client certificate key option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.key = function (cert) {\n  this._key = cert;\n  return this;\n};\n/**\n * Set the key, certificate, and CA certs of the client in PFX or PKCS12 format.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.pfx = function (cert) {\n  if (_typeof(cert) === 'object' && !Buffer.isBuffer(cert)) {\n    this._pfx = cert.pfx;\n    this._passphrase = cert.passphrase;\n  } else {\n    this._pfx = cert;\n  }\n\n  return this;\n};\n/**\n * Set the client certificate option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.cert = function (cert) {\n  this._cert = cert;\n  return this;\n};\n/**\n * Do not reject expired or invalid TLS certs.\n * sets `rejectUnauthorized=true`. Be warned that this allows MITM attacks.\n *\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.disableTLSCerts = function () {\n  this._disableTLSCerts = true;\n  return this;\n};\n/**\n * Return an http[s] request.\n *\n * @return {OutgoingMessage}\n * @api private\n */\n// eslint-disable-next-line complexity\n\n\nRequest.prototype.request = function () {\n  var _this3 = this;\n\n  if (this.req) return this.req;\n  var options = {};\n\n  try {\n    var query = qs.stringify(this.qs, {\n      indices: false,\n      strictNullHandling: true\n    });\n\n    if (query) {\n      this.qs = {};\n\n      this._query.push(query);\n    }\n\n    this._finalizeQueryString();\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  var url = this.url;\n  var retries = this._retries; // Capture backticks as-is from the final query string built above.\n  // Note: this'll only find backticks entered in req.query(String)\n  // calls, because qs.stringify unconditionally encodes backticks.\n\n  var queryStringBackticks;\n\n  if (url.includes('`')) {\n    var queryStartIndex = url.indexOf('?');\n\n    if (queryStartIndex !== -1) {\n      var queryString = url.slice(queryStartIndex + 1);\n      queryStringBackticks = queryString.match(/`|%60/g);\n    }\n  } // default to http://\n\n\n  if (url.indexOf('http') !== 0) url = \"http://\".concat(url);\n  url = parse(url); // See https://github.com/visionmedia/superagent/issues/1367\n\n  if (queryStringBackticks) {\n    var i = 0;\n    url.query = url.query.replace(/%60/g, function () {\n      return queryStringBackticks[i++];\n    });\n    url.search = \"?\".concat(url.query);\n    url.path = url.pathname + url.search;\n  } // support unix sockets\n\n\n  if (/^https?\\+unix:/.test(url.protocol) === true) {\n    // get the protocol\n    url.protocol = \"\".concat(url.protocol.split('+')[0], \":\"); // get the socket, path\n\n    var unixParts = url.path.match(/^([^/]+)(.+)$/);\n    options.socketPath = unixParts[1].replace(/%2F/g, '/');\n    url.path = unixParts[2];\n  } // Override IP address of a hostname\n\n\n  if (this._connectOverride) {\n    var _url = url,\n        hostname = _url.hostname;\n    var match = hostname in this._connectOverride ? this._connectOverride[hostname] : this._connectOverride['*'];\n\n    if (match) {\n      // backup the real host\n      if (!this._header.host) {\n        this.set('host', url.host);\n      }\n\n      var newHost;\n      var newPort;\n\n      if (_typeof(match) === 'object') {\n        newHost = match.host;\n        newPort = match.port;\n      } else {\n        newHost = match;\n        newPort = url.port;\n      } // wrap [ipv6]\n\n\n      url.host = /:/.test(newHost) ? \"[\".concat(newHost, \"]\") : newHost;\n\n      if (newPort) {\n        url.host += \":\".concat(newPort);\n        url.port = newPort;\n      }\n\n      url.hostname = newHost;\n    }\n  } // options\n\n\n  options.method = this.method;\n  options.port = url.port;\n  options.path = url.path;\n  options.host = url.hostname;\n  options.ca = this._ca;\n  options.key = this._key;\n  options.pfx = this._pfx;\n  options.cert = this._cert;\n  options.passphrase = this._passphrase;\n  options.agent = this._agent;\n  options.rejectUnauthorized = typeof this._disableTLSCerts === 'boolean' ? !this._disableTLSCerts : process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0'; // Allows request.get('https://1.2.3.4/').set('Host', 'example.com')\n\n  if (this._header.host) {\n    options.servername = this._header.host.replace(/:\\d+$/, '');\n  }\n\n  if (this._trustLocalhost && /^(?:localhost|127\\.0\\.0\\.\\d+|(0*:)+:0*1)$/.test(url.hostname)) {\n    options.rejectUnauthorized = false;\n  } // initiate request\n\n\n  var mod = this._enableHttp2 ? exports.protocols['http2:'].setProtocol(url.protocol) : exports.protocols[url.protocol]; // request\n\n  this.req = mod.request(options);\n  var req = this.req; // set tcp no delay\n\n  req.setNoDelay(true);\n\n  if (options.method !== 'HEAD') {\n    req.setHeader('Accept-Encoding', 'gzip, deflate');\n  }\n\n  this.protocol = url.protocol;\n  this.host = url.host; // expose events\n\n  req.once('drain', function () {\n    _this3.emit('drain');\n  });\n  req.on('error', function (err) {\n    // flag abortion here for out timeouts\n    // because node will emit a faux-error \"socket hang up\"\n    // when request is aborted before a connection is made\n    if (_this3._aborted) return; // if not the same, we are in the **old** (cancelled) request,\n    // so need to continue (same as for above)\n\n    if (_this3._retries !== retries) return; // if we've received a response then we don't want to let\n    // an error in the request blow up the response\n\n    if (_this3.response) return;\n\n    _this3.callback(err);\n  }); // auth\n\n  if (url.auth) {\n    var auth = url.auth.split(':');\n    this.auth(auth[0], auth[1]);\n  }\n\n  if (this.username && this.password) {\n    this.auth(this.username, this.password);\n  }\n\n  for (var key in this.header) {\n    if (Object.prototype.hasOwnProperty.call(this.header, key)) req.setHeader(key, this.header[key]);\n  } // add cookies\n\n\n  if (this.cookies) {\n    if (Object.prototype.hasOwnProperty.call(this._header, 'cookie')) {\n      // merge\n      var tmpJar = new CookieJar.CookieJar();\n      tmpJar.setCookies(this._header.cookie.split(';'));\n      tmpJar.setCookies(this.cookies.split(';'));\n      req.setHeader('Cookie', tmpJar.getCookies(CookieJar.CookieAccessInfo.All).toValueString());\n    } else {\n      req.setHeader('Cookie', this.cookies);\n    }\n  }\n\n  return req;\n};\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  } // Avoid the error which is emitted from 'socket hang up' to cause the fn undefined error on JS runtime.\n\n\n  var fn = this._callback || noop;\n  this.clearTimeout();\n  if (this.called) return console.warn('superagent: double callback bug');\n  this.called = true;\n\n  if (!err) {\n    try {\n      if (!this._isResponseOK(res)) {\n        var msg = 'Unsuccessful HTTP response';\n\n        if (res) {\n          msg = http.STATUS_CODES[res.status] || msg;\n        }\n\n        err = new Error(msg);\n        err.status = res ? res.status : undefined;\n      }\n    } catch (err_) {\n      err = err_;\n    }\n  } // It's important that the callback is called outside try/catch\n  // to avoid double callback\n\n\n  if (!err) {\n    return fn(null, res);\n  }\n\n  err.response = res;\n  if (this._maxRetries) err.retries = this._retries - 1; // only emit error event if there is a listener\n  // otherwise we assume the callback to `.end()` will get the error\n\n  if (err && this.listeners('error').length > 0) {\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n/**\n * Check if `obj` is a host object,\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\n\n\nRequest.prototype._isHost = function (obj) {\n  return Buffer.isBuffer(obj) || obj instanceof Stream || obj instanceof FormData;\n};\n/**\n * Initiate request, invoking callback `fn(err, res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype._emitResponse = function (body, files) {\n  var response = new Response(this);\n  this.response = response;\n  response.redirects = this._redirectList;\n\n  if (undefined !== body) {\n    response.body = body;\n  }\n\n  response.files = files;\n\n  if (this._endCalled) {\n    response.pipe = function () {\n      throw new Error(\"end() has already been called, so it's too late to start piping\");\n    };\n  }\n\n  this.emit('response', response);\n  return response;\n};\n\nRequest.prototype.end = function (fn) {\n  this.request();\n  debug('%s %s', this.method, this.url);\n\n  if (this._endCalled) {\n    throw new Error('.end() was called twice. This is not supported in superagent');\n  }\n\n  this._endCalled = true; // store callback\n\n  this._callback = fn || noop;\n\n  this._end();\n};\n\nRequest.prototype._end = function () {\n  var _this4 = this;\n\n  if (this._aborted) return this.callback(new Error('The request has been aborted even before .end() was called'));\n  var data = this._data;\n  var req = this.req;\n  var method = this.method;\n\n  this._setTimeouts(); // body\n\n\n  if (method !== 'HEAD' && !req._headerSent) {\n    // serialize stuff\n    if (typeof data !== 'string') {\n      var contentType = req.getHeader('Content-Type'); // Parse out just the content type from the header (ignore the charset)\n\n      if (contentType) contentType = contentType.split(';')[0];\n      var serialize = this._serializer || exports.serialize[contentType];\n\n      if (!serialize && isJSON(contentType)) {\n        serialize = exports.serialize['application/json'];\n      }\n\n      if (serialize) data = serialize(data);\n    } // content-length\n\n\n    if (data && !req.getHeader('Content-Length')) {\n      req.setHeader('Content-Length', Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data));\n    }\n  } // response\n  // eslint-disable-next-line complexity\n\n\n  req.once('response', function (res) {\n    debug('%s %s -> %s', _this4.method, _this4.url, res.statusCode);\n\n    if (_this4._responseTimeoutTimer) {\n      clearTimeout(_this4._responseTimeoutTimer);\n    }\n\n    if (_this4.piped) {\n      return;\n    }\n\n    var max = _this4._maxRedirects;\n    var mime = utils.type(res.headers['content-type'] || '') || 'text/plain';\n    var type = mime.split('/')[0];\n    if (type) type = type.toLowerCase().trim();\n    var multipart = type === 'multipart';\n    var redirect = isRedirect(res.statusCode);\n    var responseType = _this4._responseType;\n    _this4.res = res; // redirect\n\n    if (redirect && _this4._redirects++ !== max) {\n      return _this4._redirect(res);\n    }\n\n    if (_this4.method === 'HEAD') {\n      _this4.emit('end');\n\n      _this4.callback(null, _this4._emitResponse());\n\n      return;\n    } // zlib support\n\n\n    if (_this4._shouldUnzip(res)) {\n      unzip(req, res);\n    }\n\n    var buffer = _this4._buffer;\n\n    if (buffer === undefined && mime in exports.buffer) {\n      buffer = Boolean(exports.buffer[mime]);\n    }\n\n    var parser = _this4._parser;\n\n    if (undefined === buffer) {\n      if (parser) {\n        console.warn(\"A custom superagent parser has been set, but buffering strategy for the parser hasn't been configured. Call `req.buffer(true or false)` or set `superagent.buffer[mime] = true or false`\");\n        buffer = true;\n      }\n    }\n\n    if (!parser) {\n      if (responseType) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n\n        buffer = true;\n      } else if (multipart) {\n        var form = new formidable.IncomingForm();\n        parser = form.parse.bind(form);\n        buffer = true;\n      } else if (isImageOrVideo(mime)) {\n        parser = exports.parse.image;\n        buffer = true; // For backwards-compatibility buffering default is ad-hoc MIME-dependent\n      } else if (exports.parse[mime]) {\n        parser = exports.parse[mime];\n      } else if (type === 'text') {\n        parser = exports.parse.text;\n        buffer = buffer !== false; // everyone wants their own white-labeled json\n      } else if (isJSON(mime)) {\n        parser = exports.parse['application/json'];\n        buffer = buffer !== false;\n      } else if (buffer) {\n        parser = exports.parse.text;\n      } else if (undefined === buffer) {\n        parser = exports.parse.image; // It's actually a generic Buffer\n\n        buffer = true;\n      }\n    } // by default only buffer text/*, json and messed up thing from hell\n\n\n    if (undefined === buffer && isText(mime) || isJSON(mime)) {\n      buffer = true;\n    }\n\n    _this4._resBuffered = buffer;\n    var parserHandlesEnd = false;\n\n    if (buffer) {\n      // Protectiona against zip bombs and other nuisance\n      var responseBytesLeft = _this4._maxResponseSize || 200000000;\n      res.on('data', function (buf) {\n        responseBytesLeft -= buf.byteLength || buf.length;\n\n        if (responseBytesLeft < 0) {\n          // This will propagate through error event\n          var err = new Error('Maximum response size reached');\n          err.code = 'ETOOLARGE'; // Parsers aren't required to observe error event,\n          // so would incorrectly report success\n\n          parserHandlesEnd = false; // Will emit error event\n\n          res.destroy(err);\n        }\n      });\n    }\n\n    if (parser) {\n      try {\n        // Unbuffered parsers are supposed to emit response early,\n        // which is weird BTW, because response.body won't be there.\n        parserHandlesEnd = buffer;\n        parser(res, function (err, obj, files) {\n          if (_this4.timedout) {\n            // Timeout has already handled all callbacks\n            return;\n          } // Intentional (non-timeout) abort is supposed to preserve partial response,\n          // even if it doesn't parse.\n\n\n          if (err && !_this4._aborted) {\n            return _this4.callback(err);\n          }\n\n          if (parserHandlesEnd) {\n            _this4.emit('end');\n\n            _this4.callback(null, _this4._emitResponse(obj, files));\n          }\n        });\n      } catch (err) {\n        _this4.callback(err);\n\n        return;\n      }\n    }\n\n    _this4.res = res; // unbuffered\n\n    if (!buffer) {\n      debug('unbuffered %s %s', _this4.method, _this4.url);\n\n      _this4.callback(null, _this4._emitResponse());\n\n      if (multipart) return; // allow multipart to handle end event\n\n      res.once('end', function () {\n        debug('end %s %s', _this4.method, _this4.url);\n\n        _this4.emit('end');\n      });\n      return;\n    } // terminating events\n\n\n    res.once('error', function (err) {\n      parserHandlesEnd = false;\n\n      _this4.callback(err, null);\n    });\n    if (!parserHandlesEnd) res.once('end', function () {\n      debug('end %s %s', _this4.method, _this4.url); // TODO: unless buffering emit earlier to stream\n\n      _this4.emit('end');\n\n      _this4.callback(null, _this4._emitResponse());\n    });\n  });\n  this.emit('request', this);\n\n  var getProgressMonitor = function getProgressMonitor() {\n    var lengthComputable = true;\n    var total = req.getHeader('Content-Length');\n    var loaded = 0;\n    var progress = new Stream.Transform();\n\n    progress._transform = function (chunk, encoding, cb) {\n      loaded += chunk.length;\n\n      _this4.emit('progress', {\n        direction: 'upload',\n        lengthComputable: lengthComputable,\n        loaded: loaded,\n        total: total\n      });\n\n      cb(null, chunk);\n    };\n\n    return progress;\n  };\n\n  var bufferToChunks = function bufferToChunks(buffer) {\n    var chunkSize = 16 * 1024; // default highWaterMark value\n\n    var chunking = new Stream.Readable();\n    var totalLength = buffer.length;\n    var remainder = totalLength % chunkSize;\n    var cutoff = totalLength - remainder;\n\n    for (var i = 0; i < cutoff; i += chunkSize) {\n      var chunk = buffer.slice(i, i + chunkSize);\n      chunking.push(chunk);\n    }\n\n    if (remainder > 0) {\n      var remainderBuffer = buffer.slice(-remainder);\n      chunking.push(remainderBuffer);\n    }\n\n    chunking.push(null); // no more data\n\n    return chunking;\n  }; // if a FormData instance got created, then we send that as the request body\n\n\n  var formData = this._formData;\n\n  if (formData) {\n    // set headers\n    var headers = formData.getHeaders();\n\n    for (var i in headers) {\n      if (Object.prototype.hasOwnProperty.call(headers, i)) {\n        debug('setting FormData header: \"%s: %s\"', i, headers[i]);\n        req.setHeader(i, headers[i]);\n      }\n    } // attempt to get \"Content-Length\" header\n\n\n    formData.getLength(function (err, length) {\n      // TODO: Add chunked encoding when no length (if err)\n      if (err) debug('formData.getLength had error', err, length);\n      debug('got FormData Content-Length: %s', length);\n\n      if (typeof length === 'number') {\n        req.setHeader('Content-Length', length);\n      }\n\n      formData.pipe(getProgressMonitor()).pipe(req);\n    });\n  } else if (Buffer.isBuffer(data)) {\n    bufferToChunks(data).pipe(getProgressMonitor()).pipe(req);\n  } else {\n    req.end(data);\n  }\n}; // Check whether response has a non-0-sized gzip-encoded body\n\n\nRequest.prototype._shouldUnzip = function (res) {\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    // These aren't supposed to have any body\n    return false;\n  } // header content is a string, and distinction between 0 and no information is crucial\n\n\n  if (res.headers['content-length'] === '0') {\n    // We know that the body is empty (unfortunately, this check does not cover chunked encoding)\n    return false;\n  } // console.log(res);\n\n\n  return /^\\s*(?:deflate|gzip)\\s*$/.test(res.headers['content-encoding']);\n};\n/**\n * Overrides DNS for selected hostnames. Takes object mapping hostnames to IP addresses.\n *\n * When making a request to a URL with a hostname exactly matching a key in the object,\n * use the given IP address to connect, instead of using DNS to resolve the hostname.\n *\n * A special host `*` matches every hostname (keep redirects in mind!)\n *\n *      request.connect({\n *        'test.example.com': '127.0.0.1',\n *        'ipv6.example.com': '::1',\n *      })\n */\n\n\nRequest.prototype.connect = function (connectOverride) {\n  if (typeof connectOverride === 'string') {\n    this._connectOverride = {\n      '*': connectOverride\n    };\n  } else if (_typeof(connectOverride) === 'object') {\n    this._connectOverride = connectOverride;\n  } else {\n    this._connectOverride = undefined;\n  }\n\n  return this;\n};\n\nRequest.prototype.trustLocalhost = function (toggle) {\n  this._trustLocalhost = toggle === undefined ? true : toggle;\n  return this;\n}; // generate HTTP verb methods\n\n\nif (!methods.includes('del')) {\n  // create a copy so we don't cause conflicts with\n  // other packages using the methods package and\n  // npm 3.x\n  methods = methods.slice(0);\n  methods.push('del');\n}\n\nmethods.forEach(function (method) {\n  var name = method;\n  method = method === 'del' ? 'delete' : method;\n  method = method.toUpperCase();\n\n  request[name] = function (url, data, fn) {\n    var req = request(method, url);\n\n    if (typeof data === 'function') {\n      fn = data;\n      data = null;\n    }\n\n    if (data) {\n      if (method === 'GET' || method === 'HEAD') {\n        req.query(data);\n      } else {\n        req.send(data);\n      }\n    }\n\n    if (fn) req.end(fn);\n    return req;\n  };\n});\n/**\n * Check if `mime` is text and should be buffered.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api public\n */\n\nfunction isText(mime) {\n  var parts = mime.split('/');\n  var type = parts[0];\n  if (type) type = type.toLowerCase().trim();\n  var subtype = parts[1];\n  if (subtype) subtype = subtype.toLowerCase().trim();\n  return type === 'text' || subtype === 'x-www-form-urlencoded';\n}\n\nfunction isImageOrVideo(mime) {\n  var type = mime.split('/')[0];\n  if (type) type = type.toLowerCase().trim();\n  return type === 'image' || type === 'video';\n}\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n/**\n * Check if we should follow the redirect `code`.\n *\n * @param {Number} code\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isRedirect(code) {\n  return [301, 302, 303, 305, 307, 308].includes(code);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/index.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/parsers/image.js":
/*!***********************************************************!*\
  !*** ./node_modules/superagent/lib/node/parsers/image.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (res, fn) {\n  var data = []; // Binary data needs binary storage\n\n  res.on('data', function (chunk) {\n    data.push(chunk);\n  });\n  res.on('end', function () {\n    fn(null, Buffer.concat(data));\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL3BhcnNlcnMvaW1hZ2UuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcyIsImZuIiwiZGF0YSIsIm9uIiwiY2h1bmsiLCJwdXNoIiwiQnVmZmVyIiwiY29uY2F0Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxFQUFOLEVBQWE7QUFDNUIsTUFBTUMsSUFBSSxHQUFHLEVBQWIsQ0FENEIsQ0FDWDs7QUFFakJGLEVBQUFBLEdBQUcsQ0FBQ0csRUFBSixDQUFPLE1BQVAsRUFBZSxVQUFDQyxLQUFELEVBQVc7QUFDeEJGLElBQUFBLElBQUksQ0FBQ0csSUFBTCxDQUFVRCxLQUFWO0FBQ0QsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNHLEVBQUosQ0FBTyxLQUFQLEVBQWMsWUFBTTtBQUNsQkYsSUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0ssTUFBTSxDQUFDQyxNQUFQLENBQWNMLElBQWQsQ0FBUCxDQUFGO0FBQ0QsR0FGRDtBQUdELENBVEQiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChyZXMsIGZuKSA9PiB7XG4gIGNvbnN0IGRhdGEgPSBbXTsgLy8gQmluYXJ5IGRhdGEgbmVlZHMgYmluYXJ5IHN0b3JhZ2VcblxuICByZXMub24oJ2RhdGEnLCAoY2h1bmspID0+IHtcbiAgICBkYXRhLnB1c2goY2h1bmspO1xuICB9KTtcbiAgcmVzLm9uKCdlbmQnLCAoKSA9PiB7XG4gICAgZm4obnVsbCwgQnVmZmVyLmNvbmNhdChkYXRhKSk7XG4gIH0pO1xufTtcbiJdfQ==\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/parsers/image.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/parsers/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/superagent/lib/node/parsers/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports[\"application/x-www-form-urlencoded\"] = __webpack_require__(/*! ./urlencoded */ \"./node_modules/superagent/lib/node/parsers/urlencoded.js\");\nexports[\"application/json\"] = __webpack_require__(/*! ./json */ \"./node_modules/superagent/lib/node/parsers/json.js\");\nexports.text = __webpack_require__(/*! ./text */ \"./node_modules/superagent/lib/node/parsers/text.js\");\n\nvar binary = __webpack_require__(/*! ./image */ \"./node_modules/superagent/lib/node/parsers/image.js\");\n\nexports[\"application/octet-stream\"] = binary;\nexports[\"application/pdf\"] = binary;\nexports.image = binary;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL3BhcnNlcnMvaW5kZXguanMiXSwibmFtZXMiOlsiZXhwb3J0cyIsInJlcXVpcmUiLCJ0ZXh0IiwiYmluYXJ5IiwiaW1hZ2UiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQyxtQ0FBRCxDQUFQLEdBQStDQyxPQUFPLENBQUMsY0FBRCxDQUF0RDtBQUNBRCxPQUFPLENBQUMsa0JBQUQsQ0FBUCxHQUE4QkMsT0FBTyxDQUFDLFFBQUQsQ0FBckM7QUFDQUQsT0FBTyxDQUFDRSxJQUFSLEdBQWVELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBLElBQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBRUFELE9BQU8sQ0FBQywwQkFBRCxDQUFQLEdBQXNDRyxNQUF0QztBQUNBSCxPQUFPLENBQUMsaUJBQUQsQ0FBUCxHQUE2QkcsTUFBN0I7QUFDQUgsT0FBTyxDQUFDSSxLQUFSLEdBQWdCRCxNQUFoQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHNbJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCddID0gcmVxdWlyZSgnLi91cmxlbmNvZGVkJyk7XG5leHBvcnRzWydhcHBsaWNhdGlvbi9qc29uJ10gPSByZXF1aXJlKCcuL2pzb24nKTtcbmV4cG9ydHMudGV4dCA9IHJlcXVpcmUoJy4vdGV4dCcpO1xuXG5jb25zdCBiaW5hcnkgPSByZXF1aXJlKCcuL2ltYWdlJyk7XG5cbmV4cG9ydHNbJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSddID0gYmluYXJ5O1xuZXhwb3J0c1snYXBwbGljYXRpb24vcGRmJ10gPSBiaW5hcnk7XG5leHBvcnRzLmltYWdlID0gYmluYXJ5O1xuIl19\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/parsers/index.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/parsers/json.js":
/*!**********************************************************!*\
  !*** ./node_modules/superagent/lib/node/parsers/json.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (res, fn) {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', function (chunk) {\n    res.text += chunk;\n  });\n  res.on('end', function () {\n    var body;\n    var err;\n\n    try {\n      body = res.text && JSON.parse(res.text);\n    } catch (err_) {\n      err = err_; // issue #675: return the raw response if the response parsing fails\n\n      err.rawResponse = res.text || null; // issue #876: return the http status code if the response parsing fails\n\n      err.statusCode = res.statusCode;\n    } finally {\n      fn(err, body);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL3BhcnNlcnMvanNvbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVzIiwiZm4iLCJ0ZXh0Iiwic2V0RW5jb2RpbmciLCJvbiIsImNodW5rIiwiYm9keSIsImVyciIsIkpTT04iLCJwYXJzZSIsImVycl8iLCJyYXdSZXNwb25zZSIsInN0YXR1c0NvZGUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWVDLEVBQWYsRUFBbUI7QUFDbENELEVBQUFBLEdBQUcsQ0FBQ0UsSUFBSixHQUFXLEVBQVg7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRyxXQUFKLENBQWdCLE1BQWhCO0FBQ0FILEVBQUFBLEdBQUcsQ0FBQ0ksRUFBSixDQUFPLE1BQVAsRUFBZSxVQUFDQyxLQUFELEVBQVc7QUFDeEJMLElBQUFBLEdBQUcsQ0FBQ0UsSUFBSixJQUFZRyxLQUFaO0FBQ0QsR0FGRDtBQUdBTCxFQUFBQSxHQUFHLENBQUNJLEVBQUosQ0FBTyxLQUFQLEVBQWMsWUFBTTtBQUNsQixRQUFJRSxJQUFKO0FBQ0EsUUFBSUMsR0FBSjs7QUFDQSxRQUFJO0FBQ0ZELE1BQUFBLElBQUksR0FBR04sR0FBRyxDQUFDRSxJQUFKLElBQVlNLElBQUksQ0FBQ0MsS0FBTCxDQUFXVCxHQUFHLENBQUNFLElBQWYsQ0FBbkI7QUFDRCxLQUZELENBRUUsT0FBT1EsSUFBUCxFQUFhO0FBQ2JILE1BQUFBLEdBQUcsR0FBR0csSUFBTixDQURhLENBRWI7O0FBQ0FILE1BQUFBLEdBQUcsQ0FBQ0ksV0FBSixHQUFrQlgsR0FBRyxDQUFDRSxJQUFKLElBQVksSUFBOUIsQ0FIYSxDQUliOztBQUNBSyxNQUFBQSxHQUFHLENBQUNLLFVBQUosR0FBaUJaLEdBQUcsQ0FBQ1ksVUFBckI7QUFDRCxLQVJELFNBUVU7QUFDUlgsTUFBQUEsRUFBRSxDQUFDTSxHQUFELEVBQU1ELElBQU4sQ0FBRjtBQUNEO0FBQ0YsR0FkRDtBQWVELENBckJEIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocmVzLCBmbikge1xuICByZXMudGV4dCA9ICcnO1xuICByZXMuc2V0RW5jb2RpbmcoJ3V0ZjgnKTtcbiAgcmVzLm9uKCdkYXRhJywgKGNodW5rKSA9PiB7XG4gICAgcmVzLnRleHQgKz0gY2h1bms7XG4gIH0pO1xuICByZXMub24oJ2VuZCcsICgpID0+IHtcbiAgICBsZXQgYm9keTtcbiAgICBsZXQgZXJyO1xuICAgIHRyeSB7XG4gICAgICBib2R5ID0gcmVzLnRleHQgJiYgSlNPTi5wYXJzZShyZXMudGV4dCk7XG4gICAgfSBjYXRjaCAoZXJyXykge1xuICAgICAgZXJyID0gZXJyXztcbiAgICAgIC8vIGlzc3VlICM2NzU6IHJldHVybiB0aGUgcmF3IHJlc3BvbnNlIGlmIHRoZSByZXNwb25zZSBwYXJzaW5nIGZhaWxzXG4gICAgICBlcnIucmF3UmVzcG9uc2UgPSByZXMudGV4dCB8fCBudWxsO1xuICAgICAgLy8gaXNzdWUgIzg3NjogcmV0dXJuIHRoZSBodHRwIHN0YXR1cyBjb2RlIGlmIHRoZSByZXNwb25zZSBwYXJzaW5nIGZhaWxzXG4gICAgICBlcnIuc3RhdHVzQ29kZSA9IHJlcy5zdGF0dXNDb2RlO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBmbihlcnIsIGJvZHkpO1xuICAgIH1cbiAgfSk7XG59O1xuIl19\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/parsers/json.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/parsers/text.js":
/*!**********************************************************!*\
  !*** ./node_modules/superagent/lib/node/parsers/text.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (res, fn) {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', function (chunk) {\n    res.text += chunk;\n  });\n  res.on('end', fn);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL3BhcnNlcnMvdGV4dC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVzIiwiZm4iLCJ0ZXh0Iiwic2V0RW5jb2RpbmciLCJvbiIsImNodW5rIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxFQUFOLEVBQWE7QUFDNUJELEVBQUFBLEdBQUcsQ0FBQ0UsSUFBSixHQUFXLEVBQVg7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRyxXQUFKLENBQWdCLE1BQWhCO0FBQ0FILEVBQUFBLEdBQUcsQ0FBQ0ksRUFBSixDQUFPLE1BQVAsRUFBZSxVQUFDQyxLQUFELEVBQVc7QUFDeEJMLElBQUFBLEdBQUcsQ0FBQ0UsSUFBSixJQUFZRyxLQUFaO0FBQ0QsR0FGRDtBQUdBTCxFQUFBQSxHQUFHLENBQUNJLEVBQUosQ0FBTyxLQUFQLEVBQWNILEVBQWQ7QUFDRCxDQVBEIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAocmVzLCBmbikgPT4ge1xuICByZXMudGV4dCA9ICcnO1xuICByZXMuc2V0RW5jb2RpbmcoJ3V0ZjgnKTtcbiAgcmVzLm9uKCdkYXRhJywgKGNodW5rKSA9PiB7XG4gICAgcmVzLnRleHQgKz0gY2h1bms7XG4gIH0pO1xuICByZXMub24oJ2VuZCcsIGZuKTtcbn07XG4iXX0=\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/parsers/text.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/parsers/urlencoded.js":
/*!****************************************************************!*\
  !*** ./node_modules/superagent/lib/node/parsers/urlencoded.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Module dependencies.\n */\nvar qs = __webpack_require__(/*! qs */ \"./node_modules/qs/lib/index.js\");\n\nmodule.exports = function (res, fn) {\n  res.text = '';\n  res.setEncoding('ascii');\n  res.on('data', function (chunk) {\n    res.text += chunk;\n  });\n  res.on('end', function () {\n    try {\n      fn(null, qs.parse(res.text));\n    } catch (err) {\n      fn(err);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL3BhcnNlcnMvdXJsZW5jb2RlZC5qcyJdLCJuYW1lcyI6WyJxcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVzIiwiZm4iLCJ0ZXh0Iiwic2V0RW5jb2RpbmciLCJvbiIsImNodW5rIiwicGFyc2UiLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUlBLElBQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLEVBQU4sRUFBYTtBQUM1QkQsRUFBQUEsR0FBRyxDQUFDRSxJQUFKLEdBQVcsRUFBWDtBQUNBRixFQUFBQSxHQUFHLENBQUNHLFdBQUosQ0FBZ0IsT0FBaEI7QUFDQUgsRUFBQUEsR0FBRyxDQUFDSSxFQUFKLENBQU8sTUFBUCxFQUFlLFVBQUNDLEtBQUQsRUFBVztBQUN4QkwsSUFBQUEsR0FBRyxDQUFDRSxJQUFKLElBQVlHLEtBQVo7QUFDRCxHQUZEO0FBR0FMLEVBQUFBLEdBQUcsQ0FBQ0ksRUFBSixDQUFPLEtBQVAsRUFBYyxZQUFNO0FBQ2xCLFFBQUk7QUFDRkgsTUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0wsRUFBRSxDQUFDVSxLQUFILENBQVNOLEdBQUcsQ0FBQ0UsSUFBYixDQUFQLENBQUY7QUFDRCxLQUZELENBRUUsT0FBT0ssR0FBUCxFQUFZO0FBQ1pOLE1BQUFBLEVBQUUsQ0FBQ00sR0FBRCxDQUFGO0FBQ0Q7QUFDRixHQU5EO0FBT0QsQ0FiRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG5jb25zdCBxcyA9IHJlcXVpcmUoJ3FzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcywgZm4pID0+IHtcbiAgcmVzLnRleHQgPSAnJztcbiAgcmVzLnNldEVuY29kaW5nKCdhc2NpaScpO1xuICByZXMub24oJ2RhdGEnLCAoY2h1bmspID0+IHtcbiAgICByZXMudGV4dCArPSBjaHVuaztcbiAgfSk7XG4gIHJlcy5vbignZW5kJywgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBmbihudWxsLCBxcy5wYXJzZShyZXMudGV4dCkpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgZm4oZXJyKTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/parsers/urlencoded.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/response.js":
/*!******************************************************!*\
  !*** ./node_modules/superagent/lib/node/response.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Module dependencies.\n */\nvar util = __webpack_require__(/*! util */ \"util\");\n\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\n\nvar ResponseBase = __webpack_require__(/*! ../response-base */ \"./node_modules/superagent/lib/response-base.js\");\n/**\n * Expose `Response`.\n */\n\n\nmodule.exports = Response;\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * @param {Request} req\n * @param {Object} options\n * @constructor\n * @extends {Stream}\n * @implements {ReadableStream}\n * @api private\n */\n\nfunction Response(req) {\n  Stream.call(this);\n  this.res = req.res;\n  var res = this.res;\n  this.request = req;\n  this.req = req.req;\n  this.text = res.text;\n  this.body = res.body === undefined ? {} : res.body;\n  this.files = res.files || {};\n  this.buffered = req._resBuffered;\n  this.headers = res.headers;\n  this.header = this.headers;\n\n  this._setStatusProperties(res.statusCode);\n\n  this._setHeaderProperties(this.header);\n\n  this.setEncoding = res.setEncoding.bind(res);\n  res.on('data', this.emit.bind(this, 'data'));\n  res.on('end', this.emit.bind(this, 'end'));\n  res.on('close', this.emit.bind(this, 'close'));\n  res.on('error', this.emit.bind(this, 'error'));\n}\n/**\n * Inherit from `Stream`.\n */\n\n\nutil.inherits(Response, Stream); // eslint-disable-next-line new-cap\n\nResponseBase(Response.prototype);\n/**\n * Implements methods of a `ReadableStream`\n */\n\nResponse.prototype.destroy = function (err) {\n  this.res.destroy(err);\n};\n/**\n * Pause.\n */\n\n\nResponse.prototype.pause = function () {\n  this.res.pause();\n};\n/**\n * Resume.\n */\n\n\nResponse.prototype.resume = function () {\n  this.res.resume();\n};\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\n\nResponse.prototype.toError = function () {\n  var req = this.req;\n  var method = req.method;\n  var path = req.path;\n  var msg = \"cannot \".concat(method, \" \").concat(path, \" (\").concat(this.status, \")\");\n  var err = new Error(msg);\n  err.status = this.status;\n  err.text = this.text;\n  err.method = method;\n  err.path = path;\n  return err;\n};\n\nResponse.prototype.setStatusProperties = function (status) {\n  console.warn('In superagent 2.x setStatusProperties is a private method');\n  return this._setStatusProperties(status);\n};\n/**\n * To json.\n *\n * @return {Object}\n * @api public\n */\n\n\nResponse.prototype.toJSON = function () {\n  return {\n    req: this.request.toJSON(),\n    header: this.header,\n    status: this.status,\n    text: this.text\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlL3Jlc3BvbnNlLmpzIl0sIm5hbWVzIjpbInV0aWwiLCJyZXF1aXJlIiwiU3RyZWFtIiwiUmVzcG9uc2VCYXNlIiwibW9kdWxlIiwiZXhwb3J0cyIsIlJlc3BvbnNlIiwicmVxIiwiY2FsbCIsInJlcyIsInJlcXVlc3QiLCJ0ZXh0IiwiYm9keSIsInVuZGVmaW5lZCIsImZpbGVzIiwiYnVmZmVyZWQiLCJfcmVzQnVmZmVyZWQiLCJoZWFkZXJzIiwiaGVhZGVyIiwiX3NldFN0YXR1c1Byb3BlcnRpZXMiLCJzdGF0dXNDb2RlIiwiX3NldEhlYWRlclByb3BlcnRpZXMiLCJzZXRFbmNvZGluZyIsImJpbmQiLCJvbiIsImVtaXQiLCJpbmhlcml0cyIsInByb3RvdHlwZSIsImRlc3Ryb3kiLCJlcnIiLCJwYXVzZSIsInJlc3VtZSIsInRvRXJyb3IiLCJtZXRob2QiLCJwYXRoIiwibXNnIiwic3RhdHVzIiwiRXJyb3IiLCJzZXRTdGF0dXNQcm9wZXJ0aWVzIiwiY29uc29sZSIsIndhcm4iLCJ0b0pTT04iXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUlBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNRSxZQUFZLEdBQUdGLE9BQU8sQ0FBQyxrQkFBRCxDQUE1QjtBQUVBOzs7OztBQUlBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLFFBQWpCO0FBRUE7Ozs7Ozs7Ozs7Ozs7O0FBY0EsU0FBU0EsUUFBVCxDQUFrQkMsR0FBbEIsRUFBdUI7QUFDckJMLEVBQUFBLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLElBQVo7QUFDQSxPQUFLQyxHQUFMLEdBQVdGLEdBQUcsQ0FBQ0UsR0FBZjtBQUZxQixNQUdiQSxHQUhhLEdBR0wsSUFISyxDQUdiQSxHQUhhO0FBSXJCLE9BQUtDLE9BQUwsR0FBZUgsR0FBZjtBQUNBLE9BQUtBLEdBQUwsR0FBV0EsR0FBRyxDQUFDQSxHQUFmO0FBQ0EsT0FBS0ksSUFBTCxHQUFZRixHQUFHLENBQUNFLElBQWhCO0FBQ0EsT0FBS0MsSUFBTCxHQUFZSCxHQUFHLENBQUNHLElBQUosS0FBYUMsU0FBYixHQUF5QixFQUF6QixHQUE4QkosR0FBRyxDQUFDRyxJQUE5QztBQUNBLE9BQUtFLEtBQUwsR0FBYUwsR0FBRyxDQUFDSyxLQUFKLElBQWEsRUFBMUI7QUFDQSxPQUFLQyxRQUFMLEdBQWdCUixHQUFHLENBQUNTLFlBQXBCO0FBQ0EsT0FBS0MsT0FBTCxHQUFlUixHQUFHLENBQUNRLE9BQW5CO0FBQ0EsT0FBS0MsTUFBTCxHQUFjLEtBQUtELE9BQW5COztBQUNBLE9BQUtFLG9CQUFMLENBQTBCVixHQUFHLENBQUNXLFVBQTlCOztBQUNBLE9BQUtDLG9CQUFMLENBQTBCLEtBQUtILE1BQS9COztBQUNBLE9BQUtJLFdBQUwsR0FBbUJiLEdBQUcsQ0FBQ2EsV0FBSixDQUFnQkMsSUFBaEIsQ0FBcUJkLEdBQXJCLENBQW5CO0FBQ0FBLEVBQUFBLEdBQUcsQ0FBQ2UsRUFBSixDQUFPLE1BQVAsRUFBZSxLQUFLQyxJQUFMLENBQVVGLElBQVYsQ0FBZSxJQUFmLEVBQXFCLE1BQXJCLENBQWY7QUFDQWQsRUFBQUEsR0FBRyxDQUFDZSxFQUFKLENBQU8sS0FBUCxFQUFjLEtBQUtDLElBQUwsQ0FBVUYsSUFBVixDQUFlLElBQWYsRUFBcUIsS0FBckIsQ0FBZDtBQUNBZCxFQUFBQSxHQUFHLENBQUNlLEVBQUosQ0FBTyxPQUFQLEVBQWdCLEtBQUtDLElBQUwsQ0FBVUYsSUFBVixDQUFlLElBQWYsRUFBcUIsT0FBckIsQ0FBaEI7QUFDQWQsRUFBQUEsR0FBRyxDQUFDZSxFQUFKLENBQU8sT0FBUCxFQUFnQixLQUFLQyxJQUFMLENBQVVGLElBQVYsQ0FBZSxJQUFmLEVBQXFCLE9BQXJCLENBQWhCO0FBQ0Q7QUFFRDs7Ozs7QUFJQXZCLElBQUksQ0FBQzBCLFFBQUwsQ0FBY3BCLFFBQWQsRUFBd0JKLE1BQXhCLEUsQ0FDQTs7QUFDQUMsWUFBWSxDQUFDRyxRQUFRLENBQUNxQixTQUFWLENBQVo7QUFFQTs7OztBQUlBckIsUUFBUSxDQUFDcUIsU0FBVCxDQUFtQkMsT0FBbkIsR0FBNkIsVUFBVUMsR0FBVixFQUFlO0FBQzFDLE9BQUtwQixHQUFMLENBQVNtQixPQUFULENBQWlCQyxHQUFqQjtBQUNELENBRkQ7QUFJQTs7Ozs7QUFJQXZCLFFBQVEsQ0FBQ3FCLFNBQVQsQ0FBbUJHLEtBQW5CLEdBQTJCLFlBQVk7QUFDckMsT0FBS3JCLEdBQUwsQ0FBU3FCLEtBQVQ7QUFDRCxDQUZEO0FBSUE7Ozs7O0FBSUF4QixRQUFRLENBQUNxQixTQUFULENBQW1CSSxNQUFuQixHQUE0QixZQUFZO0FBQ3RDLE9BQUt0QixHQUFMLENBQVNzQixNQUFUO0FBQ0QsQ0FGRDtBQUlBOzs7Ozs7OztBQU9BekIsUUFBUSxDQUFDcUIsU0FBVCxDQUFtQkssT0FBbkIsR0FBNkIsWUFBWTtBQUFBLE1BQy9CekIsR0FEK0IsR0FDdkIsSUFEdUIsQ0FDL0JBLEdBRCtCO0FBQUEsTUFFL0IwQixNQUYrQixHQUVwQjFCLEdBRm9CLENBRS9CMEIsTUFGK0I7QUFBQSxNQUcvQkMsSUFIK0IsR0FHdEIzQixHQUhzQixDQUcvQjJCLElBSCtCO0FBS3ZDLE1BQU1DLEdBQUcsb0JBQWFGLE1BQWIsY0FBdUJDLElBQXZCLGVBQWdDLEtBQUtFLE1BQXJDLE1BQVQ7QUFDQSxNQUFNUCxHQUFHLEdBQUcsSUFBSVEsS0FBSixDQUFVRixHQUFWLENBQVo7QUFDQU4sRUFBQUEsR0FBRyxDQUFDTyxNQUFKLEdBQWEsS0FBS0EsTUFBbEI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDbEIsSUFBSixHQUFXLEtBQUtBLElBQWhCO0FBQ0FrQixFQUFBQSxHQUFHLENBQUNJLE1BQUosR0FBYUEsTUFBYjtBQUNBSixFQUFBQSxHQUFHLENBQUNLLElBQUosR0FBV0EsSUFBWDtBQUVBLFNBQU9MLEdBQVA7QUFDRCxDQWJEOztBQWVBdkIsUUFBUSxDQUFDcUIsU0FBVCxDQUFtQlcsbUJBQW5CLEdBQXlDLFVBQVVGLE1BQVYsRUFBa0I7QUFDekRHLEVBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLDJEQUFiO0FBQ0EsU0FBTyxLQUFLckIsb0JBQUwsQ0FBMEJpQixNQUExQixDQUFQO0FBQ0QsQ0FIRDtBQUtBOzs7Ozs7OztBQU9BOUIsUUFBUSxDQUFDcUIsU0FBVCxDQUFtQmMsTUFBbkIsR0FBNEIsWUFBWTtBQUN0QyxTQUFPO0FBQ0xsQyxJQUFBQSxHQUFHLEVBQUUsS0FBS0csT0FBTCxDQUFhK0IsTUFBYixFQURBO0FBRUx2QixJQUFBQSxNQUFNLEVBQUUsS0FBS0EsTUFGUjtBQUdMa0IsSUFBQUEsTUFBTSxFQUFFLEtBQUtBLE1BSFI7QUFJTHpCLElBQUFBLElBQUksRUFBRSxLQUFLQTtBQUpOLEdBQVA7QUFNRCxDQVBEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbmNvbnN0IHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5jb25zdCBTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbmNvbnN0IFJlc3BvbnNlQmFzZSA9IHJlcXVpcmUoJy4uL3Jlc3BvbnNlLWJhc2UnKTtcblxuLyoqXG4gKiBFeHBvc2UgYFJlc3BvbnNlYC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlc3BvbnNlO1xuXG4vKipcbiAqIEluaXRpYWxpemUgYSBuZXcgYFJlc3BvbnNlYCB3aXRoIHRoZSBnaXZlbiBgeGhyYC5cbiAqXG4gKiAgLSBzZXQgZmxhZ3MgKC5vaywgLmVycm9yLCBldGMpXG4gKiAgLSBwYXJzZSBoZWFkZXJcbiAqXG4gKiBAcGFyYW0ge1JlcXVlc3R9IHJlcVxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMge1N0cmVhbX1cbiAqIEBpbXBsZW1lbnRzIHtSZWFkYWJsZVN0cmVhbX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIFJlc3BvbnNlKHJlcSkge1xuICBTdHJlYW0uY2FsbCh0aGlzKTtcbiAgdGhpcy5yZXMgPSByZXEucmVzO1xuICBjb25zdCB7IHJlcyB9ID0gdGhpcztcbiAgdGhpcy5yZXF1ZXN0ID0gcmVxO1xuICB0aGlzLnJlcSA9IHJlcS5yZXE7XG4gIHRoaXMudGV4dCA9IHJlcy50ZXh0O1xuICB0aGlzLmJvZHkgPSByZXMuYm9keSA9PT0gdW5kZWZpbmVkID8ge30gOiByZXMuYm9keTtcbiAgdGhpcy5maWxlcyA9IHJlcy5maWxlcyB8fCB7fTtcbiAgdGhpcy5idWZmZXJlZCA9IHJlcS5fcmVzQnVmZmVyZWQ7XG4gIHRoaXMuaGVhZGVycyA9IHJlcy5oZWFkZXJzO1xuICB0aGlzLmhlYWRlciA9IHRoaXMuaGVhZGVycztcbiAgdGhpcy5fc2V0U3RhdHVzUHJvcGVydGllcyhyZXMuc3RhdHVzQ29kZSk7XG4gIHRoaXMuX3NldEhlYWRlclByb3BlcnRpZXModGhpcy5oZWFkZXIpO1xuICB0aGlzLnNldEVuY29kaW5nID0gcmVzLnNldEVuY29kaW5nLmJpbmQocmVzKTtcbiAgcmVzLm9uKCdkYXRhJywgdGhpcy5lbWl0LmJpbmQodGhpcywgJ2RhdGEnKSk7XG4gIHJlcy5vbignZW5kJywgdGhpcy5lbWl0LmJpbmQodGhpcywgJ2VuZCcpKTtcbiAgcmVzLm9uKCdjbG9zZScsIHRoaXMuZW1pdC5iaW5kKHRoaXMsICdjbG9zZScpKTtcbiAgcmVzLm9uKCdlcnJvcicsIHRoaXMuZW1pdC5iaW5kKHRoaXMsICdlcnJvcicpKTtcbn1cblxuLyoqXG4gKiBJbmhlcml0IGZyb20gYFN0cmVhbWAuXG4gKi9cblxudXRpbC5pbmhlcml0cyhSZXNwb25zZSwgU3RyZWFtKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuZXctY2FwXG5SZXNwb25zZUJhc2UoUmVzcG9uc2UucHJvdG90eXBlKTtcblxuLyoqXG4gKiBJbXBsZW1lbnRzIG1ldGhvZHMgb2YgYSBgUmVhZGFibGVTdHJlYW1gXG4gKi9cblxuUmVzcG9uc2UucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoZXJyKSB7XG4gIHRoaXMucmVzLmRlc3Ryb3koZXJyKTtcbn07XG5cbi8qKlxuICogUGF1c2UuXG4gKi9cblxuUmVzcG9uc2UucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnJlcy5wYXVzZSgpO1xufTtcblxuLyoqXG4gKiBSZXN1bWUuXG4gKi9cblxuUmVzcG9uc2UucHJvdG90eXBlLnJlc3VtZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5yZXMucmVzdW1lKCk7XG59O1xuXG4vKipcbiAqIFJldHVybiBhbiBgRXJyb3JgIHJlcHJlc2VudGF0aXZlIG9mIHRoaXMgcmVzcG9uc2UuXG4gKlxuICogQHJldHVybiB7RXJyb3J9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlc3BvbnNlLnByb3RvdHlwZS50b0Vycm9yID0gZnVuY3Rpb24gKCkge1xuICBjb25zdCB7IHJlcSB9ID0gdGhpcztcbiAgY29uc3QgeyBtZXRob2QgfSA9IHJlcTtcbiAgY29uc3QgeyBwYXRoIH0gPSByZXE7XG5cbiAgY29uc3QgbXNnID0gYGNhbm5vdCAke21ldGhvZH0gJHtwYXRofSAoJHt0aGlzLnN0YXR1c30pYDtcbiAgY29uc3QgZXJyID0gbmV3IEVycm9yKG1zZyk7XG4gIGVyci5zdGF0dXMgPSB0aGlzLnN0YXR1cztcbiAgZXJyLnRleHQgPSB0aGlzLnRleHQ7XG4gIGVyci5tZXRob2QgPSBtZXRob2Q7XG4gIGVyci5wYXRoID0gcGF0aDtcblxuICByZXR1cm4gZXJyO1xufTtcblxuUmVzcG9uc2UucHJvdG90eXBlLnNldFN0YXR1c1Byb3BlcnRpZXMgPSBmdW5jdGlvbiAoc3RhdHVzKSB7XG4gIGNvbnNvbGUud2FybignSW4gc3VwZXJhZ2VudCAyLnggc2V0U3RhdHVzUHJvcGVydGllcyBpcyBhIHByaXZhdGUgbWV0aG9kJyk7XG4gIHJldHVybiB0aGlzLl9zZXRTdGF0dXNQcm9wZXJ0aWVzKHN0YXR1cyk7XG59O1xuXG4vKipcbiAqIFRvIGpzb24uXG4gKlxuICogQHJldHVybiB7T2JqZWN0fVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXNwb25zZS5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIHJlcTogdGhpcy5yZXF1ZXN0LnRvSlNPTigpLFxuICAgIGhlYWRlcjogdGhpcy5oZWFkZXIsXG4gICAgc3RhdHVzOiB0aGlzLnN0YXR1cyxcbiAgICB0ZXh0OiB0aGlzLnRleHRcbiAgfTtcbn07XG4iXX0=\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/response.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/node/unzip.js":
/*!***************************************************!*\
  !*** ./node_modules/superagent/lib/node/unzip.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Module dependencies.\n */\nvar _require = __webpack_require__(/*! string_decoder */ \"string_decoder\"),\n    StringDecoder = _require.StringDecoder;\n\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\n\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\n/**\n * Buffers response data events and re-emits when they're unzipped.\n *\n * @param {Request} req\n * @param {Response} res\n * @api private\n */\n\n\nexports.unzip = function (req, res) {\n  var unzip = zlib.createUnzip();\n  var stream = new Stream();\n  var decoder; // make node responseOnEnd() happy\n\n  stream.req = req;\n  unzip.on('error', function (err) {\n    if (err && err.code === 'Z_BUF_ERROR') {\n      // unexpected end of file is ignored by browsers and curl\n      stream.emit('end');\n      return;\n    }\n\n    stream.emit('error', err);\n  }); // pipe to unzip\n\n  res.pipe(unzip); // override `setEncoding` to capture encoding\n\n  res.setEncoding = function (type) {\n    decoder = new StringDecoder(type);\n  }; // decode upon decompressing with captured encoding\n\n\n  unzip.on('data', function (buf) {\n    if (decoder) {\n      var str = decoder.write(buf);\n      if (str.length > 0) stream.emit('data', str);\n    } else {\n      stream.emit('data', buf);\n    }\n  });\n  unzip.on('end', function () {\n    stream.emit('end');\n  }); // override `on` to capture data listeners\n\n  var _on = res.on;\n\n  res.on = function (type, fn) {\n    if (type === 'data' || type === 'end') {\n      stream.on(type, fn.bind(res));\n    } else if (type === 'error') {\n      stream.on(type, fn.bind(res));\n\n      _on.call(res, type, fn);\n    } else {\n      _on.call(res, type, fn);\n    }\n\n    return this;\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlL3VuemlwLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJTdHJpbmdEZWNvZGVyIiwiU3RyZWFtIiwiemxpYiIsImV4cG9ydHMiLCJ1bnppcCIsInJlcSIsInJlcyIsImNyZWF0ZVVuemlwIiwic3RyZWFtIiwiZGVjb2RlciIsIm9uIiwiZXJyIiwiY29kZSIsImVtaXQiLCJwaXBlIiwic2V0RW5jb2RpbmciLCJ0eXBlIiwiYnVmIiwic3RyIiwid3JpdGUiLCJsZW5ndGgiLCJfb24iLCJmbiIsImJpbmQiLCJjYWxsIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7ZUFJMEJBLE9BQU8sQ0FBQyxnQkFBRCxDO0lBQXpCQyxhLFlBQUFBLGE7O0FBQ1IsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxNQUFELENBQXBCO0FBRUE7Ozs7Ozs7OztBQVFBSSxPQUFPLENBQUNDLEtBQVIsR0FBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDNUIsTUFBTUYsS0FBSyxHQUFHRixJQUFJLENBQUNLLFdBQUwsRUFBZDtBQUNBLE1BQU1DLE1BQU0sR0FBRyxJQUFJUCxNQUFKLEVBQWY7QUFDQSxNQUFJUSxPQUFKLENBSDRCLENBSzVCOztBQUNBRCxFQUFBQSxNQUFNLENBQUNILEdBQVAsR0FBYUEsR0FBYjtBQUVBRCxFQUFBQSxLQUFLLENBQUNNLEVBQU4sQ0FBUyxPQUFULEVBQWtCLFVBQUNDLEdBQUQsRUFBUztBQUN6QixRQUFJQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsSUFBSixLQUFhLGFBQXhCLEVBQXVDO0FBQ3JDO0FBQ0FKLE1BQUFBLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLEtBQVo7QUFDQTtBQUNEOztBQUVETCxJQUFBQSxNQUFNLENBQUNLLElBQVAsQ0FBWSxPQUFaLEVBQXFCRixHQUFyQjtBQUNELEdBUkQsRUFSNEIsQ0FrQjVCOztBQUNBTCxFQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBU1YsS0FBVCxFQW5CNEIsQ0FxQjVCOztBQUNBRSxFQUFBQSxHQUFHLENBQUNTLFdBQUosR0FBa0IsVUFBQ0MsSUFBRCxFQUFVO0FBQzFCUCxJQUFBQSxPQUFPLEdBQUcsSUFBSVQsYUFBSixDQUFrQmdCLElBQWxCLENBQVY7QUFDRCxHQUZELENBdEI0QixDQTBCNUI7OztBQUNBWixFQUFBQSxLQUFLLENBQUNNLEVBQU4sQ0FBUyxNQUFULEVBQWlCLFVBQUNPLEdBQUQsRUFBUztBQUN4QixRQUFJUixPQUFKLEVBQWE7QUFDWCxVQUFNUyxHQUFHLEdBQUdULE9BQU8sQ0FBQ1UsS0FBUixDQUFjRixHQUFkLENBQVo7QUFDQSxVQUFJQyxHQUFHLENBQUNFLE1BQUosR0FBYSxDQUFqQixFQUFvQlosTUFBTSxDQUFDSyxJQUFQLENBQVksTUFBWixFQUFvQkssR0FBcEI7QUFDckIsS0FIRCxNQUdPO0FBQ0xWLE1BQUFBLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLE1BQVosRUFBb0JJLEdBQXBCO0FBQ0Q7QUFDRixHQVBEO0FBU0FiLEVBQUFBLEtBQUssQ0FBQ00sRUFBTixDQUFTLEtBQVQsRUFBZ0IsWUFBTTtBQUNwQkYsSUFBQUEsTUFBTSxDQUFDSyxJQUFQLENBQVksS0FBWjtBQUNELEdBRkQsRUFwQzRCLENBd0M1Qjs7QUFDQSxNQUFNUSxHQUFHLEdBQUdmLEdBQUcsQ0FBQ0ksRUFBaEI7O0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ0ksRUFBSixHQUFTLFVBQVVNLElBQVYsRUFBZ0JNLEVBQWhCLEVBQW9CO0FBQzNCLFFBQUlOLElBQUksS0FBSyxNQUFULElBQW1CQSxJQUFJLEtBQUssS0FBaEMsRUFBdUM7QUFDckNSLE1BQUFBLE1BQU0sQ0FBQ0UsRUFBUCxDQUFVTSxJQUFWLEVBQWdCTSxFQUFFLENBQUNDLElBQUgsQ0FBUWpCLEdBQVIsQ0FBaEI7QUFDRCxLQUZELE1BRU8sSUFBSVUsSUFBSSxLQUFLLE9BQWIsRUFBc0I7QUFDM0JSLE1BQUFBLE1BQU0sQ0FBQ0UsRUFBUCxDQUFVTSxJQUFWLEVBQWdCTSxFQUFFLENBQUNDLElBQUgsQ0FBUWpCLEdBQVIsQ0FBaEI7O0FBQ0FlLE1BQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTbEIsR0FBVCxFQUFjVSxJQUFkLEVBQW9CTSxFQUFwQjtBQUNELEtBSE0sTUFHQTtBQUNMRCxNQUFBQSxHQUFHLENBQUNHLElBQUosQ0FBU2xCLEdBQVQsRUFBY1UsSUFBZCxFQUFvQk0sRUFBcEI7QUFDRDs7QUFFRCxXQUFPLElBQVA7QUFDRCxHQVhEO0FBWUQsQ0F0REQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxuY29uc3QgeyBTdHJpbmdEZWNvZGVyIH0gPSByZXF1aXJlKCdzdHJpbmdfZGVjb2RlcicpO1xuY29uc3QgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJyk7XG5jb25zdCB6bGliID0gcmVxdWlyZSgnemxpYicpO1xuXG4vKipcbiAqIEJ1ZmZlcnMgcmVzcG9uc2UgZGF0YSBldmVudHMgYW5kIHJlLWVtaXRzIHdoZW4gdGhleSdyZSB1bnppcHBlZC5cbiAqXG4gKiBAcGFyYW0ge1JlcXVlc3R9IHJlcVxuICogQHBhcmFtIHtSZXNwb25zZX0gcmVzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLnVuemlwID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHVuemlwID0gemxpYi5jcmVhdGVVbnppcCgpO1xuICBjb25zdCBzdHJlYW0gPSBuZXcgU3RyZWFtKCk7XG4gIGxldCBkZWNvZGVyO1xuXG4gIC8vIG1ha2Ugbm9kZSByZXNwb25zZU9uRW5kKCkgaGFwcHlcbiAgc3RyZWFtLnJlcSA9IHJlcTtcblxuICB1bnppcC5vbignZXJyb3InLCAoZXJyKSA9PiB7XG4gICAgaWYgKGVyciAmJiBlcnIuY29kZSA9PT0gJ1pfQlVGX0VSUk9SJykge1xuICAgICAgLy8gdW5leHBlY3RlZCBlbmQgb2YgZmlsZSBpcyBpZ25vcmVkIGJ5IGJyb3dzZXJzIGFuZCBjdXJsXG4gICAgICBzdHJlYW0uZW1pdCgnZW5kJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgfSk7XG5cbiAgLy8gcGlwZSB0byB1bnppcFxuICByZXMucGlwZSh1bnppcCk7XG5cbiAgLy8gb3ZlcnJpZGUgYHNldEVuY29kaW5nYCB0byBjYXB0dXJlIGVuY29kaW5nXG4gIHJlcy5zZXRFbmNvZGluZyA9ICh0eXBlKSA9PiB7XG4gICAgZGVjb2RlciA9IG5ldyBTdHJpbmdEZWNvZGVyKHR5cGUpO1xuICB9O1xuXG4gIC8vIGRlY29kZSB1cG9uIGRlY29tcHJlc3Npbmcgd2l0aCBjYXB0dXJlZCBlbmNvZGluZ1xuICB1bnppcC5vbignZGF0YScsIChidWYpID0+IHtcbiAgICBpZiAoZGVjb2Rlcikge1xuICAgICAgY29uc3Qgc3RyID0gZGVjb2Rlci53cml0ZShidWYpO1xuICAgICAgaWYgKHN0ci5sZW5ndGggPiAwKSBzdHJlYW0uZW1pdCgnZGF0YScsIHN0cik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0cmVhbS5lbWl0KCdkYXRhJywgYnVmKTtcbiAgICB9XG4gIH0pO1xuXG4gIHVuemlwLm9uKCdlbmQnLCAoKSA9PiB7XG4gICAgc3RyZWFtLmVtaXQoJ2VuZCcpO1xuICB9KTtcblxuICAvLyBvdmVycmlkZSBgb25gIHRvIGNhcHR1cmUgZGF0YSBsaXN0ZW5lcnNcbiAgY29uc3QgX29uID0gcmVzLm9uO1xuICByZXMub24gPSBmdW5jdGlvbiAodHlwZSwgZm4pIHtcbiAgICBpZiAodHlwZSA9PT0gJ2RhdGEnIHx8IHR5cGUgPT09ICdlbmQnKSB7XG4gICAgICBzdHJlYW0ub24odHlwZSwgZm4uYmluZChyZXMpKTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdlcnJvcicpIHtcbiAgICAgIHN0cmVhbS5vbih0eXBlLCBmbi5iaW5kKHJlcykpO1xuICAgICAgX29uLmNhbGwocmVzLCB0eXBlLCBmbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIF9vbi5jYWxsKHJlcywgdHlwZSwgZm4pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xufTtcbiJdfQ==\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/node/unzip.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/request-base.js":
/*!*****************************************************!*\
  !*** ./node_modules/superagent/lib/request-base.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = __webpack_require__(/*! ./is-object */ \"./node_modules/superagent/lib/is-object.js\");\n/**\n * Expose `RequestBase`.\n */\n\n\nmodule.exports = RequestBase;\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(object) {\n  if (object) return mixin(object);\n}\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\n\nfunction mixin(object) {\n  for (var key in RequestBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key)) object[key] = RequestBase.prototype[key];\n  }\n\n  return object;\n}\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.clearTimeout = function () {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\n\nRequestBase.prototype.parse = function (fn) {\n  this._parser = fn;\n  return this;\n};\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.responseType = function (value) {\n  this._responseType = value;\n  return this;\n};\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\n\nRequestBase.prototype.serialize = function (fn) {\n  this._serializer = fn;\n  return this;\n};\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.timeout = function (options) {\n  if (!options || _typeof(options) !== 'object') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (var option in options) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      switch (option) {\n        case 'deadline':\n          this._timeout = options.deadline;\n          break;\n\n        case 'response':\n          this._responseTimeout = options.response;\n          break;\n\n        case 'upload':\n          this._uploadTimeout = options.upload;\n          break;\n\n        default:\n          console.warn('Unknown timeout option', option);\n      }\n    }\n  }\n\n  return this;\n};\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.retry = function (count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n}; //\n// NOTE: we do not include ESOCKETTIMEDOUT because that is from `request` package\n//       <https://github.com/sindresorhus/got/pull/537>\n//\n// NOTE: we do not include EADDRINFO because it was removed from libuv in 2014\n//       <https://github.com/libuv/libuv/commit/02e1ebd40b807be5af46343ea873331b2ee4e9c1>\n//       <https://github.com/request/request/search?q=ESOCKETTIMEDOUT&unscoped_q=ESOCKETTIMEDOUT>\n//\n//\n// TODO: expose these as configurable defaults\n//\n\n\nvar ERROR_CODES = new Set(['ETIMEDOUT', 'ECONNRESET', 'EADDRINUSE', 'ECONNREFUSED', 'EPIPE', 'ENOTFOUND', 'ENETUNREACH', 'EAI_AGAIN']);\nvar STATUS_CODES = new Set([408, 413, 429, 500, 502, 503, 504, 521, 522, 524]); // TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n// const METHODS = new Set(['GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE']);\n\n/**\n * Determine if a request should be retried.\n * (Inspired by https://github.com/sindresorhus/got#retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\n\nRequestBase.prototype._shouldRetry = function (err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      var override = this._retryCallback(err, res);\n\n      if (override === true) return true;\n      if (override === false) return false; // undefined falls back to defaults\n    } catch (err_) {\n      console.error(err_);\n    }\n  } // TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n\n  /*\n  if (\n    this.req &&\n    this.req.method &&\n    !METHODS.has(this.req.method.toUpperCase())\n  )\n    return false;\n  */\n\n\n  if (res && res.status && STATUS_CODES.has(res.status)) return true;\n\n  if (err) {\n    if (err.code && ERROR_CODES.has(err.code)) return true; // Superagent timeout\n\n    if (err.timeout && err.code === 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n\n  return false;\n};\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\n\nRequestBase.prototype._retry = function () {\n  this.clearTimeout(); // node\n\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  this.timedoutError = null;\n  return this._end();\n};\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\n\nRequestBase.prototype.then = function (resolve, reject) {\n  var _this = this;\n\n  if (!this._fullfilledPromise) {\n    var self = this;\n\n    if (this._endCalled) {\n      console.warn('Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises');\n    }\n\n    this._fullfilledPromise = new Promise(function (resolve, reject) {\n      self.on('abort', function () {\n        if (_this._maxRetries && _this._maxRetries > _this._retries) {\n          return;\n        }\n\n        if (_this.timedout && _this.timedoutError) {\n          reject(_this.timedoutError);\n          return;\n        }\n\n        var err = new Error('Aborted');\n        err.code = 'ABORTED';\n        err.status = _this.status;\n        err.method = _this.method;\n        err.url = _this.url;\n        reject(err);\n      });\n      self.end(function (err, res) {\n        if (err) reject(err);else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function (cb) {\n  return this.then(undefined, cb);\n};\n/**\n * Allow for extension\n */\n\n\nRequestBase.prototype.use = function (fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function (cb) {\n  if (typeof cb !== 'function') throw new Error('Callback required');\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function (res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\n\nRequestBase.prototype.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function (field, value) {\n  if (isObject(field)) {\n    for (var key in field) {\n      if (Object.prototype.hasOwnProperty.call(field, key)) this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = value;\n  this.header[field] = value;\n  return this;\n};\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field field name\n */\n\n\nRequestBase.prototype.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.field = function (name, value) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      if (Object.prototype.hasOwnProperty.call(name, key)) this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(value)) {\n    for (var i in value) {\n      if (Object.prototype.hasOwnProperty.call(value, i)) this.field(name, value[i]);\n    }\n\n    return this;\n  } // val should be defined now\n\n\n  if (value === null || undefined === value) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  this._getFormData().append(name, value);\n\n  return this;\n};\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\n\n\nRequestBase.prototype.abort = function () {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n\n  if (this.req) this.req.abort(); // node\n\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function (user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', \"Basic \".concat(base64Encoder(\"\".concat(user, \":\").concat(pass))));\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer':\n      // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', \"Bearer \".concat(user));\n      break;\n\n    default:\n      break;\n  }\n\n  return this;\n};\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\n\nRequestBase.prototype.withCredentials = function (on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.redirects = function (n) {\n  this._maxRedirects = n;\n  return this;\n};\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\n\n\nRequestBase.prototype.maxResponseSize = function (n) {\n  if (typeof n !== 'number') {\n    throw new TypeError('Invalid argument');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\n\nRequestBase.prototype.toJSON = function () {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n// eslint-disable-next-line complexity\n\n\nRequestBase.prototype.send = function (data) {\n  var isObject_ = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject_ && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error(\"Can't merge these send calls\");\n  } // merge\n\n\n  if (isObject_ && isObject(this._data)) {\n    for (var key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key)) this._data[key] = data[key];\n    }\n  } else if (typeof data === 'string') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if (type) type = type.toLowerCase().trim();\n\n    if (type === 'application/x-www-form-urlencoded') {\n      this._data = this._data ? \"\".concat(this._data, \"&\").concat(data) : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObject_ || this._isHost(data)) {\n    return this;\n  } // default to json\n\n\n  if (!type) this.type('json');\n  return this;\n};\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.sortQuery = function (sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\n\nRequestBase.prototype._finalizeQueryString = function () {\n  var query = this._query.join('&');\n\n  if (query) {\n    this.url += (this.url.includes('?') ? '&' : '?') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n\n    if (index >= 0) {\n      var queryArray = this.url.slice(index + 1).split('&');\n\n      if (typeof this._sort === 'function') {\n        queryArray.sort(this._sort);\n      } else {\n        queryArray.sort();\n      }\n\n      this.url = this.url.slice(0, index) + '?' + queryArray.join('&');\n    }\n  }\n}; // For backwards compat only\n\n\nRequestBase.prototype._appendQueryString = function () {\n  console.warn('Unsupported');\n};\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\n\nRequestBase.prototype._timeoutError = function (reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  var err = new Error(\"\".concat(reason + timeout, \"ms exceeded\"));\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.timedoutError = err;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function () {\n  var self = this; // deadline\n\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function () {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  } // response timeout\n\n\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function () {\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/request-base.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/response-base.js":
/*!******************************************************!*\
  !*** ./node_modules/superagent/lib/response-base.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Module dependencies.\n */\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/superagent/lib/utils.js\");\n/**\n * Expose `ResponseBase`.\n */\n\n\nmodule.exports = ResponseBase;\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key)) obj[key] = ResponseBase.prototype[key];\n  }\n\n  return obj;\n}\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\n\nResponseBase.prototype.get = function (field) {\n  return this.header[field.toLowerCase()];\n};\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\n\nResponseBase.prototype._setHeaderProperties = function (header) {\n  // TODO: moar!\n  // TODO: make this a util\n  // content-type\n  var ct = header['content-type'] || '';\n  this.type = utils.type(ct); // params\n\n  var params = utils.params(ct);\n\n  for (var key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key)) this[key] = params[key];\n  }\n\n  this.links = {}; // links\n\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch (_unused) {// ignore\n  }\n};\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\n\nResponseBase.prototype._setStatusProperties = function (status) {\n  var type = status / 100 | 0; // status / class\n\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type; // basics\n\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false; // sugar\n\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXNwb25zZS1iYXNlLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJSZXNwb25zZUJhc2UiLCJvYmoiLCJtaXhpbiIsImtleSIsInByb3RvdHlwZSIsIk9iamVjdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImdldCIsImZpZWxkIiwiaGVhZGVyIiwidG9Mb3dlckNhc2UiLCJfc2V0SGVhZGVyUHJvcGVydGllcyIsImN0IiwidHlwZSIsInBhcmFtcyIsImxpbmtzIiwibGluayIsInBhcnNlTGlua3MiLCJfc2V0U3RhdHVzUHJvcGVydGllcyIsInN0YXR1cyIsInN0YXR1c0NvZGUiLCJzdGF0dXNUeXBlIiwiaW5mbyIsIm9rIiwicmVkaXJlY3QiLCJjbGllbnRFcnJvciIsInNlcnZlckVycm9yIiwiZXJyb3IiLCJ0b0Vycm9yIiwiY3JlYXRlZCIsImFjY2VwdGVkIiwibm9Db250ZW50IiwiYmFkUmVxdWVzdCIsInVuYXV0aG9yaXplZCIsIm5vdEFjY2VwdGFibGUiLCJmb3JiaWRkZW4iLCJub3RGb3VuZCIsInVucHJvY2Vzc2FibGVFbnRpdHkiXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUlBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7QUFFQTs7Ozs7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxZQUFqQjtBQUVBOzs7Ozs7QUFNQSxTQUFTQSxZQUFULENBQXNCQyxHQUF0QixFQUEyQjtBQUN6QixNQUFJQSxHQUFKLEVBQVMsT0FBT0MsS0FBSyxDQUFDRCxHQUFELENBQVo7QUFDVjtBQUVEOzs7Ozs7Ozs7QUFRQSxTQUFTQyxLQUFULENBQWVELEdBQWYsRUFBb0I7QUFDbEIsT0FBSyxJQUFNRSxHQUFYLElBQWtCSCxZQUFZLENBQUNJLFNBQS9CLEVBQTBDO0FBQ3hDLFFBQUlDLE1BQU0sQ0FBQ0QsU0FBUCxDQUFpQkUsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDUCxZQUFZLENBQUNJLFNBQWxELEVBQTZERCxHQUE3RCxDQUFKLEVBQ0VGLEdBQUcsQ0FBQ0UsR0FBRCxDQUFILEdBQVdILFlBQVksQ0FBQ0ksU0FBYixDQUF1QkQsR0FBdkIsQ0FBWDtBQUNIOztBQUVELFNBQU9GLEdBQVA7QUFDRDtBQUVEOzs7Ozs7Ozs7QUFRQUQsWUFBWSxDQUFDSSxTQUFiLENBQXVCSSxHQUF2QixHQUE2QixVQUFVQyxLQUFWLEVBQWlCO0FBQzVDLFNBQU8sS0FBS0MsTUFBTCxDQUFZRCxLQUFLLENBQUNFLFdBQU4sRUFBWixDQUFQO0FBQ0QsQ0FGRDtBQUlBOzs7Ozs7Ozs7Ozs7O0FBWUFYLFlBQVksQ0FBQ0ksU0FBYixDQUF1QlEsb0JBQXZCLEdBQThDLFVBQVVGLE1BQVYsRUFBa0I7QUFDOUQ7QUFDQTtBQUVBO0FBQ0EsTUFBTUcsRUFBRSxHQUFHSCxNQUFNLENBQUMsY0FBRCxDQUFOLElBQTBCLEVBQXJDO0FBQ0EsT0FBS0ksSUFBTCxHQUFZbEIsS0FBSyxDQUFDa0IsSUFBTixDQUFXRCxFQUFYLENBQVosQ0FOOEQsQ0FROUQ7O0FBQ0EsTUFBTUUsTUFBTSxHQUFHbkIsS0FBSyxDQUFDbUIsTUFBTixDQUFhRixFQUFiLENBQWY7O0FBQ0EsT0FBSyxJQUFNVixHQUFYLElBQWtCWSxNQUFsQixFQUEwQjtBQUN4QixRQUFJVixNQUFNLENBQUNELFNBQVAsQ0FBaUJFLGNBQWpCLENBQWdDQyxJQUFoQyxDQUFxQ1EsTUFBckMsRUFBNkNaLEdBQTdDLENBQUosRUFDRSxLQUFLQSxHQUFMLElBQVlZLE1BQU0sQ0FBQ1osR0FBRCxDQUFsQjtBQUNIOztBQUVELE9BQUthLEtBQUwsR0FBYSxFQUFiLENBZjhELENBaUI5RDs7QUFDQSxNQUFJO0FBQ0YsUUFBSU4sTUFBTSxDQUFDTyxJQUFYLEVBQWlCO0FBQ2YsV0FBS0QsS0FBTCxHQUFhcEIsS0FBSyxDQUFDc0IsVUFBTixDQUFpQlIsTUFBTSxDQUFDTyxJQUF4QixDQUFiO0FBQ0Q7QUFDRixHQUpELENBSUUsZ0JBQU0sQ0FDTjtBQUNEO0FBQ0YsQ0F6QkQ7QUEyQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkFqQixZQUFZLENBQUNJLFNBQWIsQ0FBdUJlLG9CQUF2QixHQUE4QyxVQUFVQyxNQUFWLEVBQWtCO0FBQzlELE1BQU1OLElBQUksR0FBSU0sTUFBTSxHQUFHLEdBQVYsR0FBaUIsQ0FBOUIsQ0FEOEQsQ0FHOUQ7O0FBQ0EsT0FBS0MsVUFBTCxHQUFrQkQsTUFBbEI7QUFDQSxPQUFLQSxNQUFMLEdBQWMsS0FBS0MsVUFBbkI7QUFDQSxPQUFLQyxVQUFMLEdBQWtCUixJQUFsQixDQU44RCxDQVE5RDs7QUFDQSxPQUFLUyxJQUFMLEdBQVlULElBQUksS0FBSyxDQUFyQjtBQUNBLE9BQUtVLEVBQUwsR0FBVVYsSUFBSSxLQUFLLENBQW5CO0FBQ0EsT0FBS1csUUFBTCxHQUFnQlgsSUFBSSxLQUFLLENBQXpCO0FBQ0EsT0FBS1ksV0FBTCxHQUFtQlosSUFBSSxLQUFLLENBQTVCO0FBQ0EsT0FBS2EsV0FBTCxHQUFtQmIsSUFBSSxLQUFLLENBQTVCO0FBQ0EsT0FBS2MsS0FBTCxHQUFhZCxJQUFJLEtBQUssQ0FBVCxJQUFjQSxJQUFJLEtBQUssQ0FBdkIsR0FBMkIsS0FBS2UsT0FBTCxFQUEzQixHQUE0QyxLQUF6RCxDQWQ4RCxDQWdCOUQ7O0FBQ0EsT0FBS0MsT0FBTCxHQUFlVixNQUFNLEtBQUssR0FBMUI7QUFDQSxPQUFLVyxRQUFMLEdBQWdCWCxNQUFNLEtBQUssR0FBM0I7QUFDQSxPQUFLWSxTQUFMLEdBQWlCWixNQUFNLEtBQUssR0FBNUI7QUFDQSxPQUFLYSxVQUFMLEdBQWtCYixNQUFNLEtBQUssR0FBN0I7QUFDQSxPQUFLYyxZQUFMLEdBQW9CZCxNQUFNLEtBQUssR0FBL0I7QUFDQSxPQUFLZSxhQUFMLEdBQXFCZixNQUFNLEtBQUssR0FBaEM7QUFDQSxPQUFLZ0IsU0FBTCxHQUFpQmhCLE1BQU0sS0FBSyxHQUE1QjtBQUNBLE9BQUtpQixRQUFMLEdBQWdCakIsTUFBTSxLQUFLLEdBQTNCO0FBQ0EsT0FBS2tCLG1CQUFMLEdBQTJCbEIsTUFBTSxLQUFLLEdBQXRDO0FBQ0QsQ0ExQkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbi8qKlxuICogRXhwb3NlIGBSZXNwb25zZUJhc2VgLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVzcG9uc2VCYXNlO1xuXG4vKipcbiAqIEluaXRpYWxpemUgYSBuZXcgYFJlc3BvbnNlQmFzZWAuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBSZXNwb25zZUJhc2Uob2JqKSB7XG4gIGlmIChvYmopIHJldHVybiBtaXhpbihvYmopO1xufVxuXG4vKipcbiAqIE1peGluIHRoZSBwcm90b3R5cGUgcHJvcGVydGllcy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBtaXhpbihvYmopIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gUmVzcG9uc2VCYXNlLnByb3RvdHlwZSkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoUmVzcG9uc2VCYXNlLnByb3RvdHlwZSwga2V5KSlcbiAgICAgIG9ialtrZXldID0gUmVzcG9uc2VCYXNlLnByb3RvdHlwZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBHZXQgY2FzZS1pbnNlbnNpdGl2ZSBgZmllbGRgIHZhbHVlLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaWVsZFxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXNwb25zZUJhc2UucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChmaWVsZCkge1xuICByZXR1cm4gdGhpcy5oZWFkZXJbZmllbGQudG9Mb3dlckNhc2UoKV07XG59O1xuXG4vKipcbiAqIFNldCBoZWFkZXIgcmVsYXRlZCBwcm9wZXJ0aWVzOlxuICpcbiAqICAgLSBgLnR5cGVgIHRoZSBjb250ZW50IHR5cGUgd2l0aG91dCBwYXJhbXNcbiAqXG4gKiBBIHJlc3BvbnNlIG9mIFwiQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04XCJcbiAqIHdpbGwgcHJvdmlkZSB5b3Ugd2l0aCBhIGAudHlwZWAgb2YgXCJ0ZXh0L3BsYWluXCIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGhlYWRlclxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUmVzcG9uc2VCYXNlLnByb3RvdHlwZS5fc2V0SGVhZGVyUHJvcGVydGllcyA9IGZ1bmN0aW9uIChoZWFkZXIpIHtcbiAgLy8gVE9ETzogbW9hciFcbiAgLy8gVE9ETzogbWFrZSB0aGlzIGEgdXRpbFxuXG4gIC8vIGNvbnRlbnQtdHlwZVxuICBjb25zdCBjdCA9IGhlYWRlclsnY29udGVudC10eXBlJ10gfHwgJyc7XG4gIHRoaXMudHlwZSA9IHV0aWxzLnR5cGUoY3QpO1xuXG4gIC8vIHBhcmFtc1xuICBjb25zdCBwYXJhbXMgPSB1dGlscy5wYXJhbXMoY3QpO1xuICBmb3IgKGNvbnN0IGtleSBpbiBwYXJhbXMpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHBhcmFtcywga2V5KSlcbiAgICAgIHRoaXNba2V5XSA9IHBhcmFtc1trZXldO1xuICB9XG5cbiAgdGhpcy5saW5rcyA9IHt9O1xuXG4gIC8vIGxpbmtzXG4gIHRyeSB7XG4gICAgaWYgKGhlYWRlci5saW5rKSB7XG4gICAgICB0aGlzLmxpbmtzID0gdXRpbHMucGFyc2VMaW5rcyhoZWFkZXIubGluayk7XG4gICAgfVxuICB9IGNhdGNoIHtcbiAgICAvLyBpZ25vcmVcbiAgfVxufTtcblxuLyoqXG4gKiBTZXQgZmxhZ3Mgc3VjaCBhcyBgLm9rYCBiYXNlZCBvbiBgc3RhdHVzYC5cbiAqXG4gKiBGb3IgZXhhbXBsZSBhIDJ4eCByZXNwb25zZSB3aWxsIGdpdmUgeW91IGEgYC5va2Agb2YgX190cnVlX19cbiAqIHdoZXJlYXMgNXh4IHdpbGwgYmUgX19mYWxzZV9fIGFuZCBgLmVycm9yYCB3aWxsIGJlIF9fdHJ1ZV9fLiBUaGVcbiAqIGAuY2xpZW50RXJyb3JgIGFuZCBgLnNlcnZlckVycm9yYCBhcmUgYWxzbyBhdmFpbGFibGUgdG8gYmUgbW9yZVxuICogc3BlY2lmaWMsIGFuZCBgLnN0YXR1c1R5cGVgIGlzIHRoZSBjbGFzcyBvZiBlcnJvciByYW5naW5nIGZyb20gMS4uNVxuICogc29tZXRpbWVzIHVzZWZ1bCBmb3IgbWFwcGluZyByZXNwb25kIGNvbG9ycyBldGMuXG4gKlxuICogXCJzdWdhclwiIHByb3BlcnRpZXMgYXJlIGFsc28gZGVmaW5lZCBmb3IgY29tbW9uIGNhc2VzLiBDdXJyZW50bHkgcHJvdmlkaW5nOlxuICpcbiAqICAgLSAubm9Db250ZW50XG4gKiAgIC0gLmJhZFJlcXVlc3RcbiAqICAgLSAudW5hdXRob3JpemVkXG4gKiAgIC0gLm5vdEFjY2VwdGFibGVcbiAqICAgLSAubm90Rm91bmRcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gc3RhdHVzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXNwb25zZUJhc2UucHJvdG90eXBlLl9zZXRTdGF0dXNQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKHN0YXR1cykge1xuICBjb25zdCB0eXBlID0gKHN0YXR1cyAvIDEwMCkgfCAwO1xuXG4gIC8vIHN0YXR1cyAvIGNsYXNzXG4gIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1cztcbiAgdGhpcy5zdGF0dXMgPSB0aGlzLnN0YXR1c0NvZGU7XG4gIHRoaXMuc3RhdHVzVHlwZSA9IHR5cGU7XG5cbiAgLy8gYmFzaWNzXG4gIHRoaXMuaW5mbyA9IHR5cGUgPT09IDE7XG4gIHRoaXMub2sgPSB0eXBlID09PSAyO1xuICB0aGlzLnJlZGlyZWN0ID0gdHlwZSA9PT0gMztcbiAgdGhpcy5jbGllbnRFcnJvciA9IHR5cGUgPT09IDQ7XG4gIHRoaXMuc2VydmVyRXJyb3IgPSB0eXBlID09PSA1O1xuICB0aGlzLmVycm9yID0gdHlwZSA9PT0gNCB8fCB0eXBlID09PSA1ID8gdGhpcy50b0Vycm9yKCkgOiBmYWxzZTtcblxuICAvLyBzdWdhclxuICB0aGlzLmNyZWF0ZWQgPSBzdGF0dXMgPT09IDIwMTtcbiAgdGhpcy5hY2NlcHRlZCA9IHN0YXR1cyA9PT0gMjAyO1xuICB0aGlzLm5vQ29udGVudCA9IHN0YXR1cyA9PT0gMjA0O1xuICB0aGlzLmJhZFJlcXVlc3QgPSBzdGF0dXMgPT09IDQwMDtcbiAgdGhpcy51bmF1dGhvcml6ZWQgPSBzdGF0dXMgPT09IDQwMTtcbiAgdGhpcy5ub3RBY2NlcHRhYmxlID0gc3RhdHVzID09PSA0MDY7XG4gIHRoaXMuZm9yYmlkZGVuID0gc3RhdHVzID09PSA0MDM7XG4gIHRoaXMubm90Rm91bmQgPSBzdGF0dXMgPT09IDQwNDtcbiAgdGhpcy51bnByb2Nlc3NhYmxlRW50aXR5ID0gc3RhdHVzID09PSA0MjI7XG59O1xuIl19\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/response-base.js?");

/***/ }),

/***/ "./node_modules/superagent/lib/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/superagent/lib/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\nexports.type = function (str) {\n  return str.split(/ *; */).shift();\n};\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.params = function (val) {\n  var obj = {};\n\n  var _iterator = _createForOfIteratorHelper(val.split(/ *; */)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var str = _step.value;\n      var parts = str.split(/ *= */);\n      var key = parts.shift();\n\n      var _val = parts.shift();\n\n      if (key && _val) obj[key] = _val;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return obj;\n};\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.parseLinks = function (val) {\n  var obj = {};\n\n  var _iterator2 = _createForOfIteratorHelper(val.split(/ *, */)),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var str = _step2.value;\n      var parts = str.split(/ *; */);\n      var url = parts[0].slice(1, -1);\n      var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n      obj[rel] = url;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return obj;\n};\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\n\nexports.cleanHeader = function (header, changesOrigin) {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host; // secuirty\n\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlscy5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwidHlwZSIsInN0ciIsInNwbGl0Iiwic2hpZnQiLCJwYXJhbXMiLCJ2YWwiLCJvYmoiLCJwYXJ0cyIsImtleSIsInBhcnNlTGlua3MiLCJ1cmwiLCJzbGljZSIsInJlbCIsImNsZWFuSGVhZGVyIiwiaGVhZGVyIiwiY2hhbmdlc09yaWdpbiIsImhvc3QiLCJhdXRob3JpemF0aW9uIiwiY29va2llIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7O0FBUUFBLE9BQU8sQ0FBQ0MsSUFBUixHQUFlLFVBQUNDLEdBQUQ7QUFBQSxTQUFTQSxHQUFHLENBQUNDLEtBQUosQ0FBVSxPQUFWLEVBQW1CQyxLQUFuQixFQUFUO0FBQUEsQ0FBZjtBQUVBOzs7Ozs7Ozs7QUFRQUosT0FBTyxDQUFDSyxNQUFSLEdBQWlCLFVBQUNDLEdBQUQsRUFBUztBQUN4QixNQUFNQyxHQUFHLEdBQUcsRUFBWjs7QUFEd0IsNkNBRU5ELEdBQUcsQ0FBQ0gsS0FBSixDQUFVLE9BQVYsQ0FGTTtBQUFBOztBQUFBO0FBRXhCLHdEQUFzQztBQUFBLFVBQTNCRCxHQUEyQjtBQUNwQyxVQUFNTSxLQUFLLEdBQUdOLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLE9BQVYsQ0FBZDtBQUNBLFVBQU1NLEdBQUcsR0FBR0QsS0FBSyxDQUFDSixLQUFOLEVBQVo7O0FBQ0EsVUFBTUUsSUFBRyxHQUFHRSxLQUFLLENBQUNKLEtBQU4sRUFBWjs7QUFFQSxVQUFJSyxHQUFHLElBQUlILElBQVgsRUFBZ0JDLEdBQUcsQ0FBQ0UsR0FBRCxDQUFILEdBQVdILElBQVg7QUFDakI7QUFSdUI7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFVeEIsU0FBT0MsR0FBUDtBQUNELENBWEQ7QUFhQTs7Ozs7Ozs7O0FBUUFQLE9BQU8sQ0FBQ1UsVUFBUixHQUFxQixVQUFDSixHQUFELEVBQVM7QUFDNUIsTUFBTUMsR0FBRyxHQUFHLEVBQVo7O0FBRDRCLDhDQUVWRCxHQUFHLENBQUNILEtBQUosQ0FBVSxPQUFWLENBRlU7QUFBQTs7QUFBQTtBQUU1QiwyREFBc0M7QUFBQSxVQUEzQkQsR0FBMkI7QUFDcEMsVUFBTU0sS0FBSyxHQUFHTixHQUFHLENBQUNDLEtBQUosQ0FBVSxPQUFWLENBQWQ7QUFDQSxVQUFNUSxHQUFHLEdBQUdILEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0ksS0FBVCxDQUFlLENBQWYsRUFBa0IsQ0FBQyxDQUFuQixDQUFaO0FBQ0EsVUFBTUMsR0FBRyxHQUFHTCxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNMLEtBQVQsQ0FBZSxPQUFmLEVBQXdCLENBQXhCLEVBQTJCUyxLQUEzQixDQUFpQyxDQUFqQyxFQUFvQyxDQUFDLENBQXJDLENBQVo7QUFDQUwsTUFBQUEsR0FBRyxDQUFDTSxHQUFELENBQUgsR0FBV0YsR0FBWDtBQUNEO0FBUDJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBUzVCLFNBQU9KLEdBQVA7QUFDRCxDQVZEO0FBWUE7Ozs7Ozs7OztBQVFBUCxPQUFPLENBQUNjLFdBQVIsR0FBc0IsVUFBQ0MsTUFBRCxFQUFTQyxhQUFULEVBQTJCO0FBQy9DLFNBQU9ELE1BQU0sQ0FBQyxjQUFELENBQWI7QUFDQSxTQUFPQSxNQUFNLENBQUMsZ0JBQUQsQ0FBYjtBQUNBLFNBQU9BLE1BQU0sQ0FBQyxtQkFBRCxDQUFiO0FBQ0EsU0FBT0EsTUFBTSxDQUFDRSxJQUFkLENBSitDLENBSy9DOztBQUNBLE1BQUlELGFBQUosRUFBbUI7QUFDakIsV0FBT0QsTUFBTSxDQUFDRyxhQUFkO0FBQ0EsV0FBT0gsTUFBTSxDQUFDSSxNQUFkO0FBQ0Q7O0FBRUQsU0FBT0osTUFBUDtBQUNELENBWkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHVybiB0aGUgbWltZSB0eXBlIGZvciB0aGUgZ2l2ZW4gYHN0cmAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy50eXBlID0gKHN0cikgPT4gc3RyLnNwbGl0KC8gKjsgKi8pLnNoaWZ0KCk7XG5cbi8qKlxuICogUmV0dXJuIGhlYWRlciBmaWVsZCBwYXJhbWV0ZXJzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMucGFyYW1zID0gKHZhbCkgPT4ge1xuICBjb25zdCBvYmogPSB7fTtcbiAgZm9yIChjb25zdCBzdHIgb2YgdmFsLnNwbGl0KC8gKjsgKi8pKSB7XG4gICAgY29uc3QgcGFydHMgPSBzdHIuc3BsaXQoLyAqPSAqLyk7XG4gICAgY29uc3Qga2V5ID0gcGFydHMuc2hpZnQoKTtcbiAgICBjb25zdCB2YWwgPSBwYXJ0cy5zaGlmdCgpO1xuXG4gICAgaWYgKGtleSAmJiB2YWwpIG9ialtrZXldID0gdmFsO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn07XG5cbi8qKlxuICogUGFyc2UgTGluayBoZWFkZXIgZmllbGRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMucGFyc2VMaW5rcyA9ICh2YWwpID0+IHtcbiAgY29uc3Qgb2JqID0ge307XG4gIGZvciAoY29uc3Qgc3RyIG9mIHZhbC5zcGxpdCgvICosICovKSkge1xuICAgIGNvbnN0IHBhcnRzID0gc3RyLnNwbGl0KC8gKjsgKi8pO1xuICAgIGNvbnN0IHVybCA9IHBhcnRzWzBdLnNsaWNlKDEsIC0xKTtcbiAgICBjb25zdCByZWwgPSBwYXJ0c1sxXS5zcGxpdCgvICo9ICovKVsxXS5zbGljZSgxLCAtMSk7XG4gICAgb2JqW3JlbF0gPSB1cmw7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufTtcblxuLyoqXG4gKiBTdHJpcCBjb250ZW50IHJlbGF0ZWQgZmllbGRzIGZyb20gYGhlYWRlcmAuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGhlYWRlclxuICogQHJldHVybiB7T2JqZWN0fSBoZWFkZXJcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMuY2xlYW5IZWFkZXIgPSAoaGVhZGVyLCBjaGFuZ2VzT3JpZ2luKSA9PiB7XG4gIGRlbGV0ZSBoZWFkZXJbJ2NvbnRlbnQtdHlwZSddO1xuICBkZWxldGUgaGVhZGVyWydjb250ZW50LWxlbmd0aCddO1xuICBkZWxldGUgaGVhZGVyWyd0cmFuc2Zlci1lbmNvZGluZyddO1xuICBkZWxldGUgaGVhZGVyLmhvc3Q7XG4gIC8vIHNlY3VpcnR5XG4gIGlmIChjaGFuZ2VzT3JpZ2luKSB7XG4gICAgZGVsZXRlIGhlYWRlci5hdXRob3JpemF0aW9uO1xuICAgIGRlbGV0ZSBoZWFkZXIuY29va2llO1xuICB9XG5cbiAgcmV0dXJuIGhlYWRlcjtcbn07XG4iXX0=\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/lib/utils.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/debug/src/browser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/superagent/node_modules/debug/src/browser.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/superagent/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/debug/src/common.js":
/*!******************************************************************!*\
  !*** ./node_modules/superagent/node_modules/debug/src/common.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/superagent/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/debug/src/common.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/debug/src/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/superagent/node_modules/debug/src/index.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = __webpack_require__(/*! ./browser.js */ \"./node_modules/superagent/node_modules/debug/src/browser.js\");\n} else {\n\tmodule.exports = __webpack_require__(/*! ./node.js */ \"./node_modules/superagent/node_modules/debug/src/node.js\");\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/debug/src/index.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/debug/src/node.js":
/*!****************************************************************!*\
  !*** ./node_modules/superagent/node_modules/debug/src/node.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * Module dependencies.\n */\n\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst util = __webpack_require__(/*! util */ \"util\");\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = __webpack_require__(/*! supports-color */ \"./node_modules/supports-color/index.js\");\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/superagent/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/debug/src/node.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/form-data/lib/form_data.js":
/*!*************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/form-data/lib/form_data.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var CombinedStream = __webpack_require__(/*! combined-stream */ \"./node_modules/combined-stream/lib/combined_stream.js\");\nvar util = __webpack_require__(/*! util */ \"util\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar parseUrl = __webpack_require__(/*! url */ \"url\").parse;\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar mime = __webpack_require__(/*! mime-types */ \"./node_modules/mime-types/index.js\");\nvar asynckit = __webpack_require__(/*! asynckit */ \"./node_modules/asynckit/index.js\");\nvar populate = __webpack_require__(/*! ./populate.js */ \"./node_modules/superagent/node_modules/form-data/lib/populate.js\");\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err) {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    request.setHeader('Content-Length', length);\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/form-data/lib/form_data.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/form-data/lib/populate.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/form-data/lib/populate.js ***!
  \************************************************************************/
/***/ ((module) => {

eval("// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/form-data/lib/populate.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/ms/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/superagent/node_modules/ms/index.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/classes/comparator.js":
/*!***************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/classes/comparator.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"./node_modules/superagent/node_modules/semver/internal/parse-options.js\")\nconst {re, t} = __webpack_require__(/*! ../internal/re */ \"./node_modules/superagent/node_modules/semver/internal/re.js\")\nconst cmp = __webpack_require__(/*! ../functions/cmp */ \"./node_modules/superagent/node_modules/semver/functions/cmp.js\")\nconst debug = __webpack_require__(/*! ../internal/debug */ \"./node_modules/superagent/node_modules/semver/internal/debug.js\")\nconst SemVer = __webpack_require__(/*! ./semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst Range = __webpack_require__(/*! ./range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/classes/comparator.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/classes/range.js":
/*!**********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/classes/range.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = __webpack_require__(/*! lru-cache */ \"./node_modules/lru-cache/index.js\")\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"./node_modules/superagent/node_modules/semver/internal/parse-options.js\")\nconst Comparator = __webpack_require__(/*! ./comparator */ \"./node_modules/superagent/node_modules/semver/classes/comparator.js\")\nconst debug = __webpack_require__(/*! ../internal/debug */ \"./node_modules/superagent/node_modules/semver/internal/debug.js\")\nconst SemVer = __webpack_require__(/*! ./semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = __webpack_require__(/*! ../internal/re */ \"./node_modules/superagent/node_modules/semver/internal/re.js\")\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/classes/range.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/classes/semver.js":
/*!***********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/classes/semver.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const debug = __webpack_require__(/*! ../internal/debug */ \"./node_modules/superagent/node_modules/semver/internal/debug.js\")\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = __webpack_require__(/*! ../internal/constants */ \"./node_modules/superagent/node_modules/semver/internal/constants.js\")\nconst { re, t } = __webpack_require__(/*! ../internal/re */ \"./node_modules/superagent/node_modules/semver/internal/re.js\")\n\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"./node_modules/superagent/node_modules/semver/internal/parse-options.js\")\nconst { compareIdentifiers } = __webpack_require__(/*! ../internal/identifiers */ \"./node_modules/superagent/node_modules/semver/internal/identifiers.js\")\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/classes/semver.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/clean.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/clean.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const parse = __webpack_require__(/*! ./parse */ \"./node_modules/superagent/node_modules/semver/functions/parse.js\")\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/clean.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/cmp.js":
/*!**********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/cmp.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const eq = __webpack_require__(/*! ./eq */ \"./node_modules/superagent/node_modules/semver/functions/eq.js\")\nconst neq = __webpack_require__(/*! ./neq */ \"./node_modules/superagent/node_modules/semver/functions/neq.js\")\nconst gt = __webpack_require__(/*! ./gt */ \"./node_modules/superagent/node_modules/semver/functions/gt.js\")\nconst gte = __webpack_require__(/*! ./gte */ \"./node_modules/superagent/node_modules/semver/functions/gte.js\")\nconst lt = __webpack_require__(/*! ./lt */ \"./node_modules/superagent/node_modules/semver/functions/lt.js\")\nconst lte = __webpack_require__(/*! ./lte */ \"./node_modules/superagent/node_modules/semver/functions/lte.js\")\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/cmp.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/coerce.js":
/*!*************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/coerce.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst parse = __webpack_require__(/*! ./parse */ \"./node_modules/superagent/node_modules/semver/functions/parse.js\")\nconst {re, t} = __webpack_require__(/*! ../internal/re */ \"./node_modules/superagent/node_modules/semver/internal/re.js\")\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/coerce.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/compare-build.js":
/*!********************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/compare-build.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/compare-build.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/compare-loose.js":
/*!********************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/compare-loose.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/compare-loose.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/compare.js":
/*!**************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/compare.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/compare.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/diff.js":
/*!***********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/diff.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const parse = __webpack_require__(/*! ./parse */ \"./node_modules/superagent/node_modules/semver/functions/parse.js\")\nconst eq = __webpack_require__(/*! ./eq */ \"./node_modules/superagent/node_modules/semver/functions/eq.js\")\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/diff.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/eq.js":
/*!*********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/eq.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/eq.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/gt.js":
/*!*********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/gt.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/gt.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/gte.js":
/*!**********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/gte.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/gte.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/inc.js":
/*!**********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/inc.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/inc.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/lt.js":
/*!*********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/lt.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/lt.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/lte.js":
/*!**********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/lte.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/lte.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/major.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/major.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/major.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/minor.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/minor.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/minor.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/neq.js":
/*!**********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/neq.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/neq.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/parse.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/parse.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {MAX_LENGTH} = __webpack_require__(/*! ../internal/constants */ \"./node_modules/superagent/node_modules/semver/internal/constants.js\")\nconst { re, t } = __webpack_require__(/*! ../internal/re */ \"./node_modules/superagent/node_modules/semver/internal/re.js\")\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\n\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"./node_modules/superagent/node_modules/semver/internal/parse-options.js\")\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/parse.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/patch.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/patch.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/patch.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/prerelease.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/prerelease.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const parse = __webpack_require__(/*! ./parse */ \"./node_modules/superagent/node_modules/semver/functions/parse.js\")\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/prerelease.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/rcompare.js":
/*!***************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/rcompare.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare = __webpack_require__(/*! ./compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/rcompare.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/rsort.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/rsort.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compareBuild = __webpack_require__(/*! ./compare-build */ \"./node_modules/superagent/node_modules/semver/functions/compare-build.js\")\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/rsort.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/satisfies.js":
/*!****************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/satisfies.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/satisfies.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/sort.js":
/*!***********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/sort.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compareBuild = __webpack_require__(/*! ./compare-build */ \"./node_modules/superagent/node_modules/semver/functions/compare-build.js\")\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/sort.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/functions/valid.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/functions/valid.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const parse = __webpack_require__(/*! ./parse */ \"./node_modules/superagent/node_modules/semver/functions/parse.js\")\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/functions/valid.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/index.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// just pre-load all the stuff that index.js lazily exports\nconst internalRe = __webpack_require__(/*! ./internal/re */ \"./node_modules/superagent/node_modules/semver/internal/re.js\")\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: __webpack_require__(/*! ./internal/constants */ \"./node_modules/superagent/node_modules/semver/internal/constants.js\").SEMVER_SPEC_VERSION,\n  SemVer: __webpack_require__(/*! ./classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\"),\n  compareIdentifiers: __webpack_require__(/*! ./internal/identifiers */ \"./node_modules/superagent/node_modules/semver/internal/identifiers.js\").compareIdentifiers,\n  rcompareIdentifiers: __webpack_require__(/*! ./internal/identifiers */ \"./node_modules/superagent/node_modules/semver/internal/identifiers.js\").rcompareIdentifiers,\n  parse: __webpack_require__(/*! ./functions/parse */ \"./node_modules/superagent/node_modules/semver/functions/parse.js\"),\n  valid: __webpack_require__(/*! ./functions/valid */ \"./node_modules/superagent/node_modules/semver/functions/valid.js\"),\n  clean: __webpack_require__(/*! ./functions/clean */ \"./node_modules/superagent/node_modules/semver/functions/clean.js\"),\n  inc: __webpack_require__(/*! ./functions/inc */ \"./node_modules/superagent/node_modules/semver/functions/inc.js\"),\n  diff: __webpack_require__(/*! ./functions/diff */ \"./node_modules/superagent/node_modules/semver/functions/diff.js\"),\n  major: __webpack_require__(/*! ./functions/major */ \"./node_modules/superagent/node_modules/semver/functions/major.js\"),\n  minor: __webpack_require__(/*! ./functions/minor */ \"./node_modules/superagent/node_modules/semver/functions/minor.js\"),\n  patch: __webpack_require__(/*! ./functions/patch */ \"./node_modules/superagent/node_modules/semver/functions/patch.js\"),\n  prerelease: __webpack_require__(/*! ./functions/prerelease */ \"./node_modules/superagent/node_modules/semver/functions/prerelease.js\"),\n  compare: __webpack_require__(/*! ./functions/compare */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\"),\n  rcompare: __webpack_require__(/*! ./functions/rcompare */ \"./node_modules/superagent/node_modules/semver/functions/rcompare.js\"),\n  compareLoose: __webpack_require__(/*! ./functions/compare-loose */ \"./node_modules/superagent/node_modules/semver/functions/compare-loose.js\"),\n  compareBuild: __webpack_require__(/*! ./functions/compare-build */ \"./node_modules/superagent/node_modules/semver/functions/compare-build.js\"),\n  sort: __webpack_require__(/*! ./functions/sort */ \"./node_modules/superagent/node_modules/semver/functions/sort.js\"),\n  rsort: __webpack_require__(/*! ./functions/rsort */ \"./node_modules/superagent/node_modules/semver/functions/rsort.js\"),\n  gt: __webpack_require__(/*! ./functions/gt */ \"./node_modules/superagent/node_modules/semver/functions/gt.js\"),\n  lt: __webpack_require__(/*! ./functions/lt */ \"./node_modules/superagent/node_modules/semver/functions/lt.js\"),\n  eq: __webpack_require__(/*! ./functions/eq */ \"./node_modules/superagent/node_modules/semver/functions/eq.js\"),\n  neq: __webpack_require__(/*! ./functions/neq */ \"./node_modules/superagent/node_modules/semver/functions/neq.js\"),\n  gte: __webpack_require__(/*! ./functions/gte */ \"./node_modules/superagent/node_modules/semver/functions/gte.js\"),\n  lte: __webpack_require__(/*! ./functions/lte */ \"./node_modules/superagent/node_modules/semver/functions/lte.js\"),\n  cmp: __webpack_require__(/*! ./functions/cmp */ \"./node_modules/superagent/node_modules/semver/functions/cmp.js\"),\n  coerce: __webpack_require__(/*! ./functions/coerce */ \"./node_modules/superagent/node_modules/semver/functions/coerce.js\"),\n  Comparator: __webpack_require__(/*! ./classes/comparator */ \"./node_modules/superagent/node_modules/semver/classes/comparator.js\"),\n  Range: __webpack_require__(/*! ./classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\"),\n  satisfies: __webpack_require__(/*! ./functions/satisfies */ \"./node_modules/superagent/node_modules/semver/functions/satisfies.js\"),\n  toComparators: __webpack_require__(/*! ./ranges/to-comparators */ \"./node_modules/superagent/node_modules/semver/ranges/to-comparators.js\"),\n  maxSatisfying: __webpack_require__(/*! ./ranges/max-satisfying */ \"./node_modules/superagent/node_modules/semver/ranges/max-satisfying.js\"),\n  minSatisfying: __webpack_require__(/*! ./ranges/min-satisfying */ \"./node_modules/superagent/node_modules/semver/ranges/min-satisfying.js\"),\n  minVersion: __webpack_require__(/*! ./ranges/min-version */ \"./node_modules/superagent/node_modules/semver/ranges/min-version.js\"),\n  validRange: __webpack_require__(/*! ./ranges/valid */ \"./node_modules/superagent/node_modules/semver/ranges/valid.js\"),\n  outside: __webpack_require__(/*! ./ranges/outside */ \"./node_modules/superagent/node_modules/semver/ranges/outside.js\"),\n  gtr: __webpack_require__(/*! ./ranges/gtr */ \"./node_modules/superagent/node_modules/semver/ranges/gtr.js\"),\n  ltr: __webpack_require__(/*! ./ranges/ltr */ \"./node_modules/superagent/node_modules/semver/ranges/ltr.js\"),\n  intersects: __webpack_require__(/*! ./ranges/intersects */ \"./node_modules/superagent/node_modules/semver/ranges/intersects.js\"),\n  simplifyRange: __webpack_require__(/*! ./ranges/simplify */ \"./node_modules/superagent/node_modules/semver/ranges/simplify.js\"),\n  subset: __webpack_require__(/*! ./ranges/subset */ \"./node_modules/superagent/node_modules/semver/ranges/subset.js\"),\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/index.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/internal/constants.js":
/*!***************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/internal/constants.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/internal/constants.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/internal/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/internal/debug.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/internal/debug.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/internal/identifiers.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/internal/identifiers.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/internal/identifiers.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/internal/parse-options.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/internal/parse-options.js ***!
  \*******************************************************************************/
/***/ ((module) => {

eval("// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/internal/parse-options.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/internal/re.js":
/*!********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/internal/re.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("const { MAX_SAFE_COMPONENT_LENGTH } = __webpack_require__(/*! ./constants */ \"./node_modules/superagent/node_modules/semver/internal/constants.js\")\nconst debug = __webpack_require__(/*! ./debug */ \"./node_modules/superagent/node_modules/semver/internal/debug.js\")\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/internal/re.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/gtr.js":
/*!*******************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/gtr.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Determine if version is greater than all the versions possible in the range.\nconst outside = __webpack_require__(/*! ./outside */ \"./node_modules/superagent/node_modules/semver/ranges/outside.js\")\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/gtr.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/intersects.js":
/*!**************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/intersects.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/intersects.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/ltr.js":
/*!*******************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/ltr.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const outside = __webpack_require__(/*! ./outside */ \"./node_modules/superagent/node_modules/semver/ranges/outside.js\")\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/ltr.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/max-satisfying.js":
/*!******************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/max-satisfying.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/max-satisfying.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/min-satisfying.js":
/*!******************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/min-satisfying.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/min-satisfying.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/min-version.js":
/*!***************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/min-version.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\nconst gt = __webpack_require__(/*! ../functions/gt */ \"./node_modules/superagent/node_modules/semver/functions/gt.js\")\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/min-version.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/outside.js":
/*!***********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/outside.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SemVer = __webpack_require__(/*! ../classes/semver */ \"./node_modules/superagent/node_modules/semver/classes/semver.js\")\nconst Comparator = __webpack_require__(/*! ../classes/comparator */ \"./node_modules/superagent/node_modules/semver/classes/comparator.js\")\nconst {ANY} = Comparator\nconst Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\nconst satisfies = __webpack_require__(/*! ../functions/satisfies */ \"./node_modules/superagent/node_modules/semver/functions/satisfies.js\")\nconst gt = __webpack_require__(/*! ../functions/gt */ \"./node_modules/superagent/node_modules/semver/functions/gt.js\")\nconst lt = __webpack_require__(/*! ../functions/lt */ \"./node_modules/superagent/node_modules/semver/functions/lt.js\")\nconst lte = __webpack_require__(/*! ../functions/lte */ \"./node_modules/superagent/node_modules/semver/functions/lte.js\")\nconst gte = __webpack_require__(/*! ../functions/gte */ \"./node_modules/superagent/node_modules/semver/functions/gte.js\")\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/outside.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/simplify.js":
/*!************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/simplify.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = __webpack_require__(/*! ../functions/satisfies.js */ \"./node_modules/superagent/node_modules/semver/functions/satisfies.js\")\nconst compare = __webpack_require__(/*! ../functions/compare.js */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/simplify.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/subset.js":
/*!**********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/subset.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Range = __webpack_require__(/*! ../classes/range.js */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\nconst Comparator = __webpack_require__(/*! ../classes/comparator.js */ \"./node_modules/superagent/node_modules/semver/classes/comparator.js\")\nconst { ANY } = Comparator\nconst satisfies = __webpack_require__(/*! ../functions/satisfies.js */ \"./node_modules/superagent/node_modules/semver/functions/satisfies.js\")\nconst compare = __webpack_require__(/*! ../functions/compare.js */ \"./node_modules/superagent/node_modules/semver/functions/compare.js\")\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/subset.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/to-comparators.js":
/*!******************************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/to-comparators.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/to-comparators.js?");

/***/ }),

/***/ "./node_modules/superagent/node_modules/semver/ranges/valid.js":
/*!*********************************************************************!*\
  !*** ./node_modules/superagent/node_modules/semver/ranges/valid.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Range = __webpack_require__(/*! ../classes/range */ \"./node_modules/superagent/node_modules/semver/classes/range.js\")\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/superagent/node_modules/semver/ranges/valid.js?");

/***/ }),

/***/ "./node_modules/supports-color/index.js":
/*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst os = __webpack_require__(/*! os */ \"os\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"./node_modules/has-flag/index.js\");\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/supports-color/index.js?");

/***/ }),

/***/ "./node_modules/tiny-typed-emitter/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/tiny-typed-emitter/lib/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypedEmitter = __webpack_require__(/*! events */ \"events\").EventEmitter;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/tiny-typed-emitter/lib/index.js?");

/***/ }),

/***/ "./node_modules/ts-mixer/dist/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/ts-mixer/dist/esm/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mixin\": () => (/* binding */ Mixin),\n/* harmony export */   \"decorate\": () => (/* binding */ decorate),\n/* harmony export */   \"hasMixin\": () => (/* binding */ hasMixin),\n/* harmony export */   \"mix\": () => (/* binding */ mix),\n/* harmony export */   \"settings\": () => (/* binding */ settings)\n/* harmony export */ });\n/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new Map();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach(item => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach(item => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype).map(proto => proto.constructor).filter(item => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach(constituent => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[1];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let decoratorsForTargetType = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType];\n    if (!decoratorsForTargetType) {\n        decoratorsForTargetType = {};\n        decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    }\n    let decoratorsForType = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType];\n    if (!decoratorsForType) {\n        decoratorsForType = {};\n        decoratorsForTargetType[decoratorType] = decoratorsForType;\n    }\n    let decoratorsForKey = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key];\n    if (!decoratorsForKey) {\n        decoratorsForKey = [];\n        decoratorsForType[key] = decoratorsForKey;\n    }\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : [])\n            DecoratedMixedClass = decorator(DecoratedMixedClass);\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\n\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ts-mixer/dist/esm/index.js?");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__extends\": () => (/* binding */ __extends),\n/* harmony export */   \"__assign\": () => (/* binding */ __assign),\n/* harmony export */   \"__rest\": () => (/* binding */ __rest),\n/* harmony export */   \"__decorate\": () => (/* binding */ __decorate),\n/* harmony export */   \"__param\": () => (/* binding */ __param),\n/* harmony export */   \"__metadata\": () => (/* binding */ __metadata),\n/* harmony export */   \"__awaiter\": () => (/* binding */ __awaiter),\n/* harmony export */   \"__generator\": () => (/* binding */ __generator),\n/* harmony export */   \"__createBinding\": () => (/* binding */ __createBinding),\n/* harmony export */   \"__exportStar\": () => (/* binding */ __exportStar),\n/* harmony export */   \"__values\": () => (/* binding */ __values),\n/* harmony export */   \"__read\": () => (/* binding */ __read),\n/* harmony export */   \"__spread\": () => (/* binding */ __spread),\n/* harmony export */   \"__spreadArrays\": () => (/* binding */ __spreadArrays),\n/* harmony export */   \"__spreadArray\": () => (/* binding */ __spreadArray),\n/* harmony export */   \"__await\": () => (/* binding */ __await),\n/* harmony export */   \"__asyncGenerator\": () => (/* binding */ __asyncGenerator),\n/* harmony export */   \"__asyncDelegator\": () => (/* binding */ __asyncDelegator),\n/* harmony export */   \"__asyncValues\": () => (/* binding */ __asyncValues),\n/* harmony export */   \"__makeTemplateObject\": () => (/* binding */ __makeTemplateObject),\n/* harmony export */   \"__importStar\": () => (/* binding */ __importStar),\n/* harmony export */   \"__importDefault\": () => (/* binding */ __importDefault),\n/* harmony export */   \"__classPrivateFieldGet\": () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   \"__classPrivateFieldSet\": () => (/* binding */ __classPrivateFieldSet)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/tslib/tslib.es6.js?");

/***/ }),

/***/ "./node_modules/vali-date/index.js":
/*!*****************************************!*\
  !*** ./node_modules/vali-date/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function (str) {\n\treturn !isNaN(Date.parse(str));\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/vali-date/index.js?");

/***/ }),

/***/ "./node_modules/ws/index.js":
/*!**********************************!*\
  !*** ./node_modules/ws/index.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst WebSocket = __webpack_require__(/*! ./lib/websocket */ \"./node_modules/ws/lib/websocket.js\");\n\nWebSocket.createWebSocketStream = __webpack_require__(/*! ./lib/stream */ \"./node_modules/ws/lib/stream.js\");\nWebSocket.Server = __webpack_require__(/*! ./lib/websocket-server */ \"./node_modules/ws/lib/websocket-server.js\");\nWebSocket.Receiver = __webpack_require__(/*! ./lib/receiver */ \"./node_modules/ws/lib/receiver.js\");\nWebSocket.Sender = __webpack_require__(/*! ./lib/sender */ \"./node_modules/ws/lib/sender.js\");\n\nmodule.exports = WebSocket;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/index.js?");

/***/ }),

/***/ "./node_modules/ws/lib/buffer-util.js":
/*!********************************************!*\
  !*** ./node_modules/ws/lib/buffer-util.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"./node_modules/ws/lib/constants.js\");\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (let i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\ntry {\n  const bufferUtil = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'bufferutil'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    concat,\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    toArrayBuffer,\n    toBuffer,\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    concat,\n    mask: _mask,\n    toArrayBuffer,\n    toBuffer,\n    unmask: _unmask\n  };\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/buffer-util.js?");

/***/ }),

/***/ "./node_modules/ws/lib/constants.js":
/*!******************************************!*\
  !*** ./node_modules/ws/lib/constants.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/constants.js?");

/***/ }),

/***/ "./node_modules/ws/lib/event-target.js":
/*!*********************************************!*\
  !*** ./node_modules/ws/lib/event-target.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being\n   *     closed\n   * @param {String} reason A human-readable string explaining why the\n   *     connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean`` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage(data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose(code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError(error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen() {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    const method = options && options.once ? 'once' : 'on';\n\n    if (type === 'message') {\n      onMessage._listener = listener;\n      this[method](type, onMessage);\n    } else if (type === 'close') {\n      onClose._listener = listener;\n      this[method](type, onClose);\n    } else if (type === 'error') {\n      onError._listener = listener;\n      this[method](type, onError);\n    } else if (type === 'open') {\n      onOpen._listener = listener;\n      this[method](type, onOpen);\n    } else {\n      this[method](type, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners(type);\n\n    for (let i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(type, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/event-target.js?");

/***/ }),

/***/ "./node_modules/ws/lib/extension.js":
/*!******************************************!*\
  !*** ./node_modules/ws/lib/extension.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n\n  if (header === undefined || header === '') return offers;\n\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/extension.js?");

/***/ }),

/***/ "./node_modules/ws/lib/limiter.js":
/*!****************************************!*\
  !*** ./node_modules/ws/lib/limiter.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/limiter.js?");

/***/ }),

/***/ "./node_modules/ws/lib/permessage-deflate.js":
/*!***************************************************!*\
  !*** ./node_modules/ws/lib/permessage-deflate.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\n\nconst bufferUtil = __webpack_require__(/*! ./buffer-util */ \"./node_modules/ws/lib/buffer-util.js\");\nconst Limiter = __webpack_require__(/*! ./limiter */ \"./node_modules/ws/lib/limiter.js\");\nconst { kStatusCode, NOOP } = __webpack_require__(/*! ./constants */ \"./node_modules/ws/lib/constants.js\");\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the\n      // `zlib.DeflateRaw` instance is closed while data is being processed.\n      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong\n      // time due to an abnormal WebSocket closure.\n      //\n      this._deflate.on('error', NOOP);\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/permessage-deflate.js?");

/***/ }),

/***/ "./node_modules/ws/lib/receiver.js":
/*!*****************************************!*\
  !*** ./node_modules/ws/lib/receiver.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Writable } = __webpack_require__(/*! stream */ \"stream\");\n\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"./node_modules/ws/lib/permessage-deflate.js\");\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = __webpack_require__(/*! ./constants */ \"./node_modules/ws/lib/constants.js\");\nconst { concat, toArrayBuffer, unmask } = __webpack_require__(/*! ./buffer-util */ \"./node_modules/ws/lib/buffer-util.js\");\nconst { isValidStatusCode, isValidUTF8 } = __webpack_require__(/*! ./validation */ \"./node_modules/ws/lib/validation.js\");\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} [binaryType=nodebuffer] The type for binary data\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Boolean} [isServer=false] Specifies whether to operate in client or\n   *     server mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(binaryType, extensions, isServer, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || BINARY_TYPES[0];\n    this[kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._isServer = !!isServer;\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/receiver.js?");

/***/ }),

/***/ "./node_modules/ws/lib/sender.js":
/*!***************************************!*\
  !*** ./node_modules/ws/lib/sender.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n\n\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomFillSync } = __webpack_require__(/*! crypto */ \"crypto\");\n\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"./node_modules/ws/lib/permessage-deflate.js\");\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"./node_modules/ws/lib/constants.js\");\nconst { isValidStatusCode } = __webpack_require__(/*! ./validation */ \"./node_modules/ws/lib/validation.js\");\nconst { mask: applyMask, toBuffer } = __webpack_require__(/*! ./buffer-util */ \"./node_modules/ws/lib/buffer-util.js\");\n\nconst mask = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   */\n  constructor(socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame(data, options) {\n    const merge = options.mask && options.readOnly;\n    let offset = options.mask ? 6 : 2;\n    let payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    randomFillSync(mask, 0, 4);\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {String} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  doClose(data, mask, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x08,\n        mask,\n        readOnly: false\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (buf.length > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPing(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  doPing(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x09,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (buf.length > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPong(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  doPong(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x0a,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const buf = toBuffer(data);\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = buf.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly: toBuffer.readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);\n      } else {\n        this.dispatch(buf, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(buf, {\n          fin: options.fin,\n          rsv1: false,\n          opcode,\n          mask: options.mask,\n          readOnly: toBuffer.readOnly\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += data.length;\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const callback = this._queue[i][4];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= data.length;\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/sender.js?");

/***/ }),

/***/ "./node_modules/ws/lib/stream.js":
/*!***************************************!*\
  !*** ./node_modules/ws/lib/stream.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst { Duplex } = __webpack_require__(/*! stream */ \"stream\");\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let resumeOnReceiverDrain = true;\n  let terminateOnDestroy = true;\n\n  function receiverOnDrain() {\n    if (resumeOnReceiverDrain) ws._socket.resume();\n  }\n\n  if (ws.readyState === ws.CONNECTING) {\n    ws.once('open', function open() {\n      ws._receiver.removeAllListeners('drain');\n      ws._receiver.on('drain', receiverOnDrain);\n    });\n  } else {\n    ws._receiver.removeAllListeners('drain');\n    ws._receiver.on('drain', receiverOnDrain);\n  }\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg) {\n    if (!duplex.push(msg)) {\n      resumeOnReceiverDrain = false;\n      ws._socket.pause();\n    }\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.readyState === ws.OPEN && !resumeOnReceiverDrain) {\n      resumeOnReceiverDrain = true;\n      if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n    }\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/stream.js?");

/***/ }),

/***/ "./node_modules/ws/lib/validation.js":
/*!*******************************************!*\
  !*** ./node_modules/ws/lib/validation.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\ntry {\n  let isValidUTF8 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'utf-8-validate'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\n  /* istanbul ignore if */\n  if (typeof isValidUTF8 === 'object') {\n    isValidUTF8 = isValidUTF8.Validation.isValidUTF8; // utf-8-validate@<3.0.0\n  }\n\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8(buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8: _isValidUTF8\n  };\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/validation.js?");

/***/ }),

/***/ "./node_modules/ws/lib/websocket-server.js":
/*!*************************************************!*\
  !*** ./node_modules/ws/lib/websocket-server.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { createHash } = __webpack_require__(/*! crypto */ \"crypto\");\n\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"./node_modules/ws/lib/permessage-deflate.js\");\nconst WebSocket = __webpack_require__(/*! ./websocket */ \"./node_modules/ws/lib/websocket.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"./node_modules/ws/lib/extension.js\");\nconst { GUID, kWebSocket } = __webpack_require__(/*! ./constants */ \"./node_modules/ws/lib/constants.js\");\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(cb) {\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSED) {\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) {\n        server.close(emitClose.bind(undefined, this));\n        return;\n      }\n    }\n\n    process.nextTick(emitClose, this);\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key =\n      req.headers['sec-websocket-key'] !== undefined\n        ? req.headers['sec-websocket-key'].trim()\n        : false;\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' ||\n      req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !key ||\n      !keyRegex.test(key) ||\n      (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = parse(req.headers['sec-websocket-extensions']);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(key, extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(key, extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(key, extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new WebSocket(null);\n    let protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.split(',').map(trim);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    headers = {\n      Connection: 'close',\n      'Content-Type': 'text/html',\n      'Content-Length': Buffer.byteLength(message),\n      ...headers\n    };\n\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n        Object.keys(headers)\n          .map((h) => `${h}: ${headers[h]}`)\n          .join('\\r\\n') +\n        '\\r\\n\\r\\n' +\n        message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n\n/**\n * Remove whitespace characters from both ends of a string.\n *\n * @param {String} str The string\n * @return {String} A new string representing `str` stripped of whitespace\n *     characters from both its beginning and end\n * @private\n */\nfunction trim(str) {\n  return str.trim();\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/websocket-server.js?");

/***/ }),

/***/ "./node_modules/ws/lib/websocket.js":
/*!******************************************!*\
  !*** ./node_modules/ws/lib/websocket.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomBytes, createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst { Readable } = __webpack_require__(/*! stream */ \"stream\");\nconst { URL } = __webpack_require__(/*! url */ \"url\");\n\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"./node_modules/ws/lib/permessage-deflate.js\");\nconst Receiver = __webpack_require__(/*! ./receiver */ \"./node_modules/ws/lib/receiver.js\");\nconst Sender = __webpack_require__(/*! ./sender */ \"./node_modules/ws/lib/sender.js\");\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = __webpack_require__(/*! ./constants */ \"./node_modules/ws/lib/constants.js\");\nconst { addEventListener, removeEventListener } = __webpack_require__(/*! ./event-target */ \"./node_modules/ws/lib/event-target.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"./node_modules/ws/lib/extension.js\");\nconst { toBuffer } = __webpack_require__(/*! ./buffer-util */ \"./node_modules/ws/lib/buffer-util.js\");\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._extensions = {};\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onclose(listener) {}\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onerror(listener) {}\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onopen(listener) {}\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onmessage(listener) {}\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} [maxPayload=0] The maximum allowed message size\n   * @private\n   */\n  setSocket(socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this.binaryType,\n      this._extensions,\n      this._isServer,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {String} [data] A string explaining why the connection is closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n\n      return undefined;\n    },\n    set(listener) {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {String} [protocols] The subprotocols\n * @param {Object} [options] Connection options\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    parsedUrl = new URL(address);\n    websocket._url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${websocket.url}`);\n  }\n\n  const isSecure =\n    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const get = isSecure ? https.get : http.get;\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    opts.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req = (websocket._req = get(opts));\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req.aborted) return;\n\n    req = websocket._req = null;\n    websocket._readyState = WebSocket.CLOSING;\n    websocket.emit('error', err);\n    websocket.emitClose();\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      const addr = new URL(location, address);\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    let protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && !protList.includes(serverProt)) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (extensionNames.length) {\n        if (\n          extensionNames.length !== 1 ||\n          extensionNames[0] !== PerMessageDeflate.extensionName\n        ) {\n          const message =\n            'Server indicated an extension that was not requested';\n          abortHandshake(websocket, socket, message);\n          return;\n        }\n\n        try {\n          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n        } catch (err) {\n          const message = 'Invalid Sec-WebSocket-Extensions header';\n          abortHandshake(websocket, socket, message);\n          return;\n        }\n\n        websocket._extensions[PerMessageDeflate.extensionName] =\n          perMessageDeflate;\n      }\n    }\n\n    websocket.setSocket(socket, head, opts.maxPayload);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n\n  //\n  // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n  // https://github.com/websockets/ws/issues/1940.\n  //\n  process.nextTick(resume, websocket._socket);\n\n  websocket.close(err[kStatusCode]);\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage(data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ws/lib/websocket.js?");

/***/ }),

/***/ "./node_modules/yallist/iterator.js":
/*!******************************************!*\
  !*** ./node_modules/yallist/iterator.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/yallist/iterator.js?");

/***/ }),

/***/ "./node_modules/yallist/yallist.js":
/*!*****************************************!*\
  !*** ./node_modules/yallist/yallist.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  __webpack_require__(/*! ./iterator.js */ \"./node_modules/yallist/iterator.js\")(Yallist)\n} catch (er) {}\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/yallist/yallist.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/cache.js":
/*!*********************************************!*\
  !*** ./node_modules/ytdl-core/lib/cache.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { setTimeout } = __webpack_require__(/*! timers */ \"timers\");\n\n// A cache that expires.\nmodule.exports = class Cache extends Map {\n  constructor(timeout = 1000) {\n    super();\n    this.timeout = timeout;\n  }\n  set(key, value) {\n    if (this.has(key)) {\n      clearTimeout(super.get(key).tid);\n    }\n    super.set(key, {\n      tid: setTimeout(this.delete.bind(this, key), this.timeout).unref(),\n      value,\n    });\n  }\n  get(key) {\n    let entry = super.get(key);\n    if (entry) {\n      return entry.value;\n    }\n    return null;\n  }\n  getOrSet(key, fn) {\n    if (this.has(key)) {\n      return this.get(key);\n    } else {\n      let value = fn();\n      this.set(key, value);\n      (async() => {\n        try {\n          await value;\n        } catch (err) {\n          this.delete(key);\n        }\n      })();\n      return value;\n    }\n  }\n  delete(key) {\n    let entry = super.get(key);\n    if (entry) {\n      clearTimeout(entry.tid);\n      super.delete(key);\n    }\n  }\n  clear() {\n    for (let entry of this.values()) {\n      clearTimeout(entry.tid);\n    }\n    super.clear();\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/cache.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/format-utils.js":
/*!****************************************************!*\
  !*** ./node_modules/ytdl-core/lib/format-utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const utils = __webpack_require__(/*! ./utils */ \"./node_modules/ytdl-core/lib/utils.js\");\nconst FORMATS = __webpack_require__(/*! ./formats */ \"./node_modules/ytdl-core/lib/formats.js\");\n\n\n// Use these to help sort formats, higher index is better.\nconst audioEncodingRanks = [\n  'mp4a',\n  'mp3',\n  'vorbis',\n  'aac',\n  'opus',\n  'flac',\n];\nconst videoEncodingRanks = [\n  'mp4v',\n  'avc1',\n  'Sorenson H.283',\n  'MPEG-4 Visual',\n  'VP8',\n  'VP9',\n  'H.264',\n];\n\nconst getVideoBitrate = format => format.bitrate || 0;\nconst getVideoEncodingRank = format =>\n  videoEncodingRanks.findIndex(enc => format.codecs && format.codecs.includes(enc));\nconst getAudioBitrate = format => format.audioBitrate || 0;\nconst getAudioEncodingRank = format =>\n  audioEncodingRanks.findIndex(enc => format.codecs && format.codecs.includes(enc));\n\n\n/**\n * Sort formats by a list of functions.\n *\n * @param {Object} a\n * @param {Object} b\n * @param {Array.<Function>} sortBy\n * @returns {number}\n */\nconst sortFormatsBy = (a, b, sortBy) => {\n  let res = 0;\n  for (let fn of sortBy) {\n    res = fn(b) - fn(a);\n    if (res !== 0) {\n      break;\n    }\n  }\n  return res;\n};\n\n\nconst sortFormatsByVideo = (a, b) => sortFormatsBy(a, b, [\n  format => parseInt(format.qualityLabel),\n  getVideoBitrate,\n  getVideoEncodingRank,\n]);\n\n\nconst sortFormatsByAudio = (a, b) => sortFormatsBy(a, b, [\n  getAudioBitrate,\n  getAudioEncodingRank,\n]);\n\n\n/**\n * Sort formats from highest quality to lowest.\n *\n * @param {Object} a\n * @param {Object} b\n * @returns {number}\n */\nexports.sortFormats = (a, b) => sortFormatsBy(a, b, [\n  // Formats with both video and audio are ranked highest.\n  format => +!!format.isHLS,\n  format => +!!format.isDashMPD,\n  format => +(format.contentLength > 0),\n  format => +(format.hasVideo && format.hasAudio),\n  format => +format.hasVideo,\n  format => parseInt(format.qualityLabel) || 0,\n  getVideoBitrate,\n  getAudioBitrate,\n  getVideoEncodingRank,\n  getAudioEncodingRank,\n]);\n\n\n/**\n * Choose a format depending on the given options.\n *\n * @param {Array.<Object>} formats\n * @param {Object} options\n * @returns {Object}\n * @throws {Error} when no format matches the filter/format rules\n */\nexports.chooseFormat = (formats, options) => {\n  if (typeof options.format === 'object') {\n    if (!options.format.url) {\n      throw Error('Invalid format given, did you use `ytdl.getInfo()`?');\n    }\n    return options.format;\n  }\n\n  if (options.filter) {\n    formats = exports.filterFormats(formats, options.filter);\n  }\n\n  // We currently only support HLS-Formats for livestreams\n  // So we (now) remove all non-HLS streams\n  if (formats.some(fmt => fmt.isHLS)) {\n    formats = formats.filter(fmt => fmt.isHLS || !fmt.isLive);\n  }\n\n  let format;\n  const quality = options.quality || 'highest';\n  switch (quality) {\n    case 'highest':\n      format = formats[0];\n      break;\n\n    case 'lowest':\n      format = formats[formats.length - 1];\n      break;\n\n    case 'highestaudio': {\n      formats = exports.filterFormats(formats, 'audio');\n      formats.sort(sortFormatsByAudio);\n      // Filter for only the best audio format\n      const bestAudioFormat = formats[0];\n      formats = formats.filter(f => sortFormatsByAudio(bestAudioFormat, f) === 0);\n      // Check for the worst video quality for the best audio quality and pick according\n      // This does not loose default sorting of video encoding and bitrate\n      const worstVideoQuality = formats.map(f => parseInt(f.qualityLabel) || 0).sort((a, b) => a - b)[0];\n      format = formats.find(f => (parseInt(f.qualityLabel) || 0) === worstVideoQuality);\n      break;\n    }\n\n    case 'lowestaudio':\n      formats = exports.filterFormats(formats, 'audio');\n      formats.sort(sortFormatsByAudio);\n      format = formats[formats.length - 1];\n      break;\n\n    case 'highestvideo': {\n      formats = exports.filterFormats(formats, 'video');\n      formats.sort(sortFormatsByVideo);\n      // Filter for only the best video format\n      const bestVideoFormat = formats[0];\n      formats = formats.filter(f => sortFormatsByVideo(bestVideoFormat, f) === 0);\n      // Check for the worst audio quality for the best video quality and pick according\n      // This does not loose default sorting of audio encoding and bitrate\n      const worstAudioQuality = formats.map(f => f.audioBitrate || 0).sort((a, b) => a - b)[0];\n      format = formats.find(f => (f.audioBitrate || 0) === worstAudioQuality);\n      break;\n    }\n\n    case 'lowestvideo':\n      formats = exports.filterFormats(formats, 'video');\n      formats.sort(sortFormatsByVideo);\n      format = formats[formats.length - 1];\n      break;\n\n    default:\n      format = getFormatByQuality(quality, formats);\n      break;\n  }\n\n  if (!format) {\n    throw Error(`No such format found: ${quality}`);\n  }\n  return format;\n};\n\n/**\n * Gets a format based on quality or array of quality's\n *\n * @param {string|[string]} quality\n * @param {[Object]} formats\n * @returns {Object}\n */\nconst getFormatByQuality = (quality, formats) => {\n  let getFormat = itag => formats.find(format => `${format.itag}` === `${itag}`);\n  if (Array.isArray(quality)) {\n    return getFormat(quality.find(q => getFormat(q)));\n  } else {\n    return getFormat(quality);\n  }\n};\n\n\n/**\n * @param {Array.<Object>} formats\n * @param {Function} filter\n * @returns {Array.<Object>}\n */\nexports.filterFormats = (formats, filter) => {\n  let fn;\n  switch (filter) {\n    case 'videoandaudio':\n    case 'audioandvideo':\n      fn = format => format.hasVideo && format.hasAudio;\n      break;\n\n    case 'video':\n      fn = format => format.hasVideo;\n      break;\n\n    case 'videoonly':\n      fn = format => format.hasVideo && !format.hasAudio;\n      break;\n\n    case 'audio':\n      fn = format => format.hasAudio;\n      break;\n\n    case 'audioonly':\n      fn = format => !format.hasVideo && format.hasAudio;\n      break;\n\n    default:\n      if (typeof filter === 'function') {\n        fn = filter;\n      } else {\n        throw TypeError(`Given filter (${filter}) is not supported`);\n      }\n  }\n  return formats.filter(format => !!format.url && fn(format));\n};\n\n\n/**\n * @param {Object} format\n * @returns {Object}\n */\nexports.addFormatMeta = format => {\n  format = Object.assign({}, FORMATS[format.itag], format);\n  format.hasVideo = !!format.qualityLabel;\n  format.hasAudio = !!format.audioBitrate;\n  format.container = format.mimeType ?\n    format.mimeType.split(';')[0].split('/')[1] : null;\n  format.codecs = format.mimeType ?\n    utils.between(format.mimeType, 'codecs=\"', '\"') : null;\n  format.videoCodec = format.hasVideo && format.codecs ?\n    format.codecs.split(', ')[0] : null;\n  format.audioCodec = format.hasAudio && format.codecs ?\n    format.codecs.split(', ').slice(-1)[0] : null;\n  format.isLive = /\\bsource[/=]yt_live_broadcast\\b/.test(format.url);\n  format.isHLS = /\\/manifest\\/hls_(variant|playlist)\\//.test(format.url);\n  format.isDashMPD = /\\/manifest\\/dash\\//.test(format.url);\n  return format;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/format-utils.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/formats.js":
/*!***********************************************!*\
  !*** ./node_modules/ytdl-core/lib/formats.js ***!
  \***********************************************/
/***/ ((module) => {

eval("/**\n * http://en.wikipedia.org/wiki/YouTube#Quality_and_formats\n */\nmodule.exports = {\n\n  5: {\n    mimeType: 'video/flv; codecs=\"Sorenson H.283, mp3\"',\n    qualityLabel: '240p',\n    bitrate: 250000,\n    audioBitrate: 64,\n  },\n\n  6: {\n    mimeType: 'video/flv; codecs=\"Sorenson H.263, mp3\"',\n    qualityLabel: '270p',\n    bitrate: 800000,\n    audioBitrate: 64,\n  },\n\n  13: {\n    mimeType: 'video/3gp; codecs=\"MPEG-4 Visual, aac\"',\n    qualityLabel: null,\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  17: {\n    mimeType: 'video/3gp; codecs=\"MPEG-4 Visual, aac\"',\n    qualityLabel: '144p',\n    bitrate: 50000,\n    audioBitrate: 24,\n  },\n\n  18: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 96,\n  },\n\n  22: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 192,\n  },\n\n  34: {\n    mimeType: 'video/flv; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 128,\n  },\n\n  35: {\n    mimeType: 'video/flv; codecs=\"H.264, aac\"',\n    qualityLabel: '480p',\n    bitrate: 800000,\n    audioBitrate: 128,\n  },\n\n  36: {\n    mimeType: 'video/3gp; codecs=\"MPEG-4 Visual, aac\"',\n    qualityLabel: '240p',\n    bitrate: 175000,\n    audioBitrate: 32,\n  },\n\n  37: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '1080p',\n    bitrate: 3000000,\n    audioBitrate: 192,\n  },\n\n  38: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '3072p',\n    bitrate: 3500000,\n    audioBitrate: 192,\n  },\n\n  43: {\n    mimeType: 'video/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 128,\n  },\n\n  44: {\n    mimeType: 'video/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '480p',\n    bitrate: 1000000,\n    audioBitrate: 128,\n  },\n\n  45: {\n    mimeType: 'video/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 192,\n  },\n\n  46: {\n    mimeType: 'audio/webm; codecs=\"vp8, vorbis\"',\n    qualityLabel: '1080p',\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  82: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 96,\n  },\n\n  83: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '240p',\n    bitrate: 500000,\n    audioBitrate: 96,\n  },\n\n  84: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 192,\n  },\n\n  85: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '1080p',\n    bitrate: 3000000,\n    audioBitrate: 192,\n  },\n\n  91: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '144p',\n    bitrate: 100000,\n    audioBitrate: 48,\n  },\n\n  92: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '240p',\n    bitrate: 150000,\n    audioBitrate: 48,\n  },\n\n  93: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 128,\n  },\n\n  94: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '480p',\n    bitrate: 800000,\n    audioBitrate: 128,\n  },\n\n  95: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 1500000,\n    audioBitrate: 256,\n  },\n\n  96: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '1080p',\n    bitrate: 2500000,\n    audioBitrate: 256,\n  },\n\n  100: {\n    mimeType: 'audio/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '360p',\n    bitrate: null,\n    audioBitrate: 128,\n  },\n\n  101: {\n    mimeType: 'audio/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '360p',\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  102: {\n    mimeType: 'audio/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '720p',\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  120: {\n    mimeType: 'video/flv; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 128,\n  },\n\n  127: {\n    mimeType: 'audio/ts; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 96,\n  },\n\n  128: {\n    mimeType: 'audio/ts; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 96,\n  },\n\n  132: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '240p',\n    bitrate: 150000,\n    audioBitrate: 48,\n  },\n\n  133: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '240p',\n    bitrate: 200000,\n    audioBitrate: null,\n  },\n\n  134: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '360p',\n    bitrate: 300000,\n    audioBitrate: null,\n  },\n\n  135: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '480p',\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  136: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '720p',\n    bitrate: 1000000,\n    audioBitrate: null,\n  },\n\n  137: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '1080p',\n    bitrate: 2500000,\n    audioBitrate: null,\n  },\n\n  138: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '4320p',\n    bitrate: 13500000,\n    audioBitrate: null,\n  },\n\n  139: {\n    mimeType: 'audio/mp4; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 48,\n  },\n\n  140: {\n    mimeType: 'audio/m4a; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 128,\n  },\n\n  141: {\n    mimeType: 'audio/mp4; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 256,\n  },\n\n  151: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 50000,\n    audioBitrate: 24,\n  },\n\n  160: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '144p',\n    bitrate: 100000,\n    audioBitrate: null,\n  },\n\n  171: {\n    mimeType: 'audio/webm; codecs=\"vorbis\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 128,\n  },\n\n  172: {\n    mimeType: 'audio/webm; codecs=\"vorbis\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  242: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '240p',\n    bitrate: 100000,\n    audioBitrate: null,\n  },\n\n  243: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '360p',\n    bitrate: 250000,\n    audioBitrate: null,\n  },\n\n  244: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '480p',\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  247: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '720p',\n    bitrate: 700000,\n    audioBitrate: null,\n  },\n\n  248: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1080p',\n    bitrate: 1500000,\n    audioBitrate: null,\n  },\n\n  249: {\n    mimeType: 'audio/webm; codecs=\"opus\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 48,\n  },\n\n  250: {\n    mimeType: 'audio/webm; codecs=\"opus\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 64,\n  },\n\n  251: {\n    mimeType: 'audio/webm; codecs=\"opus\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 160,\n  },\n\n  264: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '1440p',\n    bitrate: 4000000,\n    audioBitrate: null,\n  },\n\n  266: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '2160p',\n    bitrate: 12500000,\n    audioBitrate: null,\n  },\n\n  271: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1440p',\n    bitrate: 9000000,\n    audioBitrate: null,\n  },\n\n  272: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '4320p',\n    bitrate: 20000000,\n    audioBitrate: null,\n  },\n\n  278: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '144p 30fps',\n    bitrate: 80000,\n    audioBitrate: null,\n  },\n\n  298: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '720p',\n    bitrate: 3000000,\n    audioBitrate: null,\n  },\n\n  299: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '1080p',\n    bitrate: 5500000,\n    audioBitrate: null,\n  },\n\n  300: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 1318000,\n    audioBitrate: 48,\n  },\n\n  302: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '720p HFR',\n    bitrate: 2500000,\n    audioBitrate: null,\n  },\n\n  303: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1080p HFR',\n    bitrate: 5000000,\n    audioBitrate: null,\n  },\n\n  308: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1440p HFR',\n    bitrate: 10000000,\n    audioBitrate: null,\n  },\n\n  313: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '2160p',\n    bitrate: 13000000,\n    audioBitrate: null,\n  },\n\n  315: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '2160p HFR',\n    bitrate: 20000000,\n    audioBitrate: null,\n  },\n\n  330: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '144p HDR, HFR',\n    bitrate: 80000,\n    audioBitrate: null,\n  },\n\n  331: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '240p HDR, HFR',\n    bitrate: 100000,\n    audioBitrate: null,\n  },\n\n  332: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '360p HDR, HFR',\n    bitrate: 250000,\n    audioBitrate: null,\n  },\n\n  333: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '240p HDR, HFR',\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  334: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '720p HDR, HFR',\n    bitrate: 1000000,\n    audioBitrate: null,\n  },\n\n  335: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1080p HDR, HFR',\n    bitrate: 1500000,\n    audioBitrate: null,\n  },\n\n  336: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1440p HDR, HFR',\n    bitrate: 5000000,\n    audioBitrate: null,\n  },\n\n  337: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '2160p HDR, HFR',\n    bitrate: 12000000,\n    audioBitrate: null,\n  },\n\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/formats.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/ytdl-core/lib/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const PassThrough = __webpack_require__(/*! stream */ \"stream\").PassThrough;\nconst getInfo = __webpack_require__(/*! ./info */ \"./node_modules/ytdl-core/lib/info.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"./node_modules/ytdl-core/lib/utils.js\");\nconst formatUtils = __webpack_require__(/*! ./format-utils */ \"./node_modules/ytdl-core/lib/format-utils.js\");\nconst urlUtils = __webpack_require__(/*! ./url-utils */ \"./node_modules/ytdl-core/lib/url-utils.js\");\nconst sig = __webpack_require__(/*! ./sig */ \"./node_modules/ytdl-core/lib/sig.js\");\nconst miniget = __webpack_require__(/*! miniget */ \"./node_modules/miniget/dist/index.js\");\nconst m3u8stream = __webpack_require__(/*! m3u8stream */ \"./node_modules/m3u8stream/dist/index.js\");\nconst { parseTimestamp } = __webpack_require__(/*! m3u8stream */ \"./node_modules/m3u8stream/dist/index.js\");\n\n\n/**\n * @param {string} link\n * @param {!Object} options\n * @returns {ReadableStream}\n */\nconst ytdl = (link, options) => {\n  const stream = createStream(options);\n  ytdl.getInfo(link, options).then(info => {\n    downloadFromInfoCallback(stream, info, options);\n  }, stream.emit.bind(stream, 'error'));\n  return stream;\n};\nmodule.exports = ytdl;\n\nytdl.getBasicInfo = getInfo.getBasicInfo;\nytdl.getInfo = getInfo.getInfo;\nytdl.chooseFormat = formatUtils.chooseFormat;\nytdl.filterFormats = formatUtils.filterFormats;\nytdl.validateID = urlUtils.validateID;\nytdl.validateURL = urlUtils.validateURL;\nytdl.getURLVideoID = urlUtils.getURLVideoID;\nytdl.getVideoID = urlUtils.getVideoID;\nytdl.cache = {\n  sig: sig.cache,\n  info: getInfo.cache,\n  watch: getInfo.watchPageCache,\n  cookie: getInfo.cookieCache,\n};\nytdl.version = __webpack_require__(/*! ../package.json */ \"./node_modules/ytdl-core/package.json\").version;\n\n\nconst createStream = options => {\n  const stream = new PassThrough({\n    highWaterMark: (options && options.highWaterMark) || 1024 * 512,\n  });\n  stream._destroy = () => { stream.destroyed = true; };\n  return stream;\n};\n\n\nconst pipeAndSetEvents = (req, stream, end) => {\n  // Forward events from the request to the stream.\n  [\n    'abort', 'request', 'response', 'error', 'redirect', 'retry', 'reconnect',\n  ].forEach(event => {\n    req.prependListener(event, stream.emit.bind(stream, event));\n  });\n  req.pipe(stream, { end });\n};\n\n\n/**\n * Chooses a format to download.\n *\n * @param {stream.Readable} stream\n * @param {Object} info\n * @param {Object} options\n */\nconst downloadFromInfoCallback = (stream, info, options) => {\n  options = options || {};\n\n  let err = utils.playError(info.player_response, ['UNPLAYABLE', 'LIVE_STREAM_OFFLINE', 'LOGIN_REQUIRED']);\n  if (err) {\n    stream.emit('error', err);\n    return;\n  }\n\n  if (!info.formats.length) {\n    stream.emit('error', Error('This video is unavailable'));\n    return;\n  }\n\n  let format;\n  try {\n    format = formatUtils.chooseFormat(info.formats, options);\n  } catch (e) {\n    stream.emit('error', e);\n    return;\n  }\n  stream.emit('info', info, format);\n  if (stream.destroyed) { return; }\n\n  let contentLength, downloaded = 0;\n  const ondata = chunk => {\n    downloaded += chunk.length;\n    stream.emit('progress', chunk.length, downloaded, contentLength);\n  };\n\n  // Download the file in chunks, in this case the default is 10MB,\n  // anything over this will cause youtube to throttle the download\n  const dlChunkSize = options.dlChunkSize || 1024 * 1024 * 10;\n  let req;\n  let shouldEnd = true;\n\n  if (format.isHLS || format.isDashMPD) {\n    req = m3u8stream(format.url, {\n      chunkReadahead: +info.live_chunk_readahead,\n      begin: options.begin || (format.isLive && Date.now()),\n      liveBuffer: options.liveBuffer,\n      requestOptions: options.requestOptions,\n      parser: format.isDashMPD ? 'dash-mpd' : 'm3u8',\n      id: format.itag,\n    });\n\n    req.on('progress', (segment, totalSegments) => {\n      stream.emit('progress', segment.size, segment.num, totalSegments);\n    });\n    pipeAndSetEvents(req, stream, shouldEnd);\n  } else {\n    const requestOptions = Object.assign({}, options.requestOptions, {\n      maxReconnects: 6,\n      maxRetries: 3,\n      backoff: { inc: 500, max: 10000 },\n    });\n\n    let shouldBeChunked = dlChunkSize !== 0 && (!format.hasAudio || !format.hasVideo);\n\n    if (shouldBeChunked) {\n      let start = (options.range && options.range.start) || 0;\n      let end = start + dlChunkSize;\n      const rangeEnd = options.range && options.range.end;\n\n      contentLength = options.range ?\n        (rangeEnd ? rangeEnd + 1 : parseInt(format.contentLength)) - start :\n        parseInt(format.contentLength);\n\n      const getNextChunk = () => {\n        if (!rangeEnd && end >= contentLength) end = 0;\n        if (rangeEnd && end > rangeEnd) end = rangeEnd;\n        shouldEnd = !end || end === rangeEnd;\n\n        requestOptions.headers = Object.assign({}, requestOptions.headers, {\n          Range: `bytes=${start}-${end || ''}`,\n        });\n\n        req = miniget(format.url, requestOptions);\n        req.on('data', ondata);\n        req.on('end', () => {\n          if (stream.destroyed) { return; }\n          if (end && end !== rangeEnd) {\n            start = end + 1;\n            end += dlChunkSize;\n            getNextChunk();\n          }\n        });\n        pipeAndSetEvents(req, stream, shouldEnd);\n      };\n      getNextChunk();\n    } else {\n      // Audio only and video only formats don't support begin\n      if (options.begin) {\n        format.url += `&begin=${parseTimestamp(options.begin)}`;\n      }\n      if (options.range && (options.range.start || options.range.end)) {\n        requestOptions.headers = Object.assign({}, requestOptions.headers, {\n          Range: `bytes=${options.range.start || '0'}-${options.range.end || ''}`,\n        });\n      }\n      req = miniget(format.url, requestOptions);\n      req.on('response', res => {\n        if (stream.destroyed) { return; }\n        contentLength = contentLength || parseInt(res.headers['content-length']);\n      });\n      req.on('data', ondata);\n      pipeAndSetEvents(req, stream, shouldEnd);\n    }\n  }\n\n  stream._destroy = () => {\n    stream.destroyed = true;\n    req.destroy();\n    req.end();\n  };\n};\n\n\n/**\n * Can be used to download video after its `info` is gotten through\n * `ytdl.getInfo()`. In case the user might want to look at the\n * `info` object before deciding to download.\n *\n * @param {Object} info\n * @param {!Object} options\n * @returns {ReadableStream}\n */\nytdl.downloadFromInfo = (info, options) => {\n  const stream = createStream(options);\n  if (!info.full) {\n    throw Error('Cannot use `ytdl.downloadFromInfo()` when called ' +\n      'with info from `ytdl.getBasicInfo()`');\n  }\n  setImmediate(() => {\n    downloadFromInfoCallback(stream, info, options);\n  });\n  return stream;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/index.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/info-extras.js":
/*!***************************************************!*\
  !*** ./node_modules/ytdl-core/lib/info-extras.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const utils = __webpack_require__(/*! ./utils */ \"./node_modules/ytdl-core/lib/utils.js\");\nconst qs = __webpack_require__(/*! querystring */ \"querystring\");\nconst { parseTimestamp } = __webpack_require__(/*! m3u8stream */ \"./node_modules/m3u8stream/dist/index.js\");\n\n\nconst BASE_URL = 'https://www.youtube.com/watch?v=';\nconst TITLE_TO_CATEGORY = {\n  song: { name: 'Music', url: 'https://music.youtube.com/' },\n};\n\nconst getText = obj => obj ? obj.runs ? obj.runs[0].text : obj.simpleText : null;\n\n\n/**\n * Get video media.\n *\n * @param {Object} info\n * @returns {Object}\n */\nexports.getMedia = info => {\n  let media = {};\n  let results = [];\n  try {\n    results = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n  } catch (err) {\n    // Do nothing\n  }\n\n  let result = results.find(v => v.videoSecondaryInfoRenderer);\n  if (!result) { return {}; }\n\n  try {\n    let metadataRows =\n      (result.metadataRowContainer || result.videoSecondaryInfoRenderer.metadataRowContainer)\n        .metadataRowContainerRenderer.rows;\n    for (let row of metadataRows) {\n      if (row.metadataRowRenderer) {\n        let title = getText(row.metadataRowRenderer.title).toLowerCase();\n        let contents = row.metadataRowRenderer.contents[0];\n        media[title] = getText(contents);\n        let runs = contents.runs;\n        if (runs && runs[0].navigationEndpoint) {\n          media[`${title}_url`] = new URL(\n            runs[0].navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_URL).toString();\n        }\n        if (title in TITLE_TO_CATEGORY) {\n          media.category = TITLE_TO_CATEGORY[title].name;\n          media.category_url = TITLE_TO_CATEGORY[title].url;\n        }\n      } else if (row.richMetadataRowRenderer) {\n        let contents = row.richMetadataRowRenderer.contents;\n        let boxArt = contents\n          .filter(meta => meta.richMetadataRenderer.style === 'RICH_METADATA_RENDERER_STYLE_BOX_ART');\n        for (let { richMetadataRenderer } of boxArt) {\n          let meta = richMetadataRenderer;\n          media.year = getText(meta.subtitle);\n          let type = getText(meta.callToAction).split(' ')[1];\n          media[type] = getText(meta.title);\n          media[`${type}_url`] = new URL(\n            meta.endpoint.commandMetadata.webCommandMetadata.url, BASE_URL).toString();\n          media.thumbnails = meta.thumbnail.thumbnails;\n        }\n        let topic = contents\n          .filter(meta => meta.richMetadataRenderer.style === 'RICH_METADATA_RENDERER_STYLE_TOPIC');\n        for (let { richMetadataRenderer } of topic) {\n          let meta = richMetadataRenderer;\n          media.category = getText(meta.title);\n          media.category_url = new URL(\n            meta.endpoint.commandMetadata.webCommandMetadata.url, BASE_URL).toString();\n        }\n      }\n    }\n  } catch (err) {\n    // Do nothing.\n  }\n\n  return media;\n};\n\n\nconst isVerified = badges => !!(badges && badges.find(b => b.metadataBadgeRenderer.tooltip === 'Verified'));\n\n\n/**\n * Get video author.\n *\n * @param {Object} info\n * @returns {Object}\n */\nexports.getAuthor = info => {\n  let channelId, thumbnails = [], subscriberCount, verified = false;\n  try {\n    let results = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n    let v = results.find(v2 =>\n      v2.videoSecondaryInfoRenderer &&\n      v2.videoSecondaryInfoRenderer.owner &&\n      v2.videoSecondaryInfoRenderer.owner.videoOwnerRenderer);\n    let videoOwnerRenderer = v.videoSecondaryInfoRenderer.owner.videoOwnerRenderer;\n    channelId = videoOwnerRenderer.navigationEndpoint.browseEndpoint.browseId;\n    thumbnails = videoOwnerRenderer.thumbnail.thumbnails.map(thumbnail => {\n      thumbnail.url = new URL(thumbnail.url, BASE_URL).toString();\n      return thumbnail;\n    });\n    subscriberCount = utils.parseAbbreviatedNumber(getText(videoOwnerRenderer.subscriberCountText));\n    verified = isVerified(videoOwnerRenderer.badges);\n  } catch (err) {\n    // Do nothing.\n  }\n  try {\n    let videoDetails = info.player_response.microformat && info.player_response.microformat.playerMicroformatRenderer;\n    let id = (videoDetails && videoDetails.channelId) || channelId || info.player_response.videoDetails.channelId;\n    let author = {\n      id: id,\n      name: videoDetails ? videoDetails.ownerChannelName : info.player_response.videoDetails.author,\n      user: videoDetails ? videoDetails.ownerProfileUrl.split('/').slice(-1)[0] : null,\n      channel_url: `https://www.youtube.com/channel/${id}`,\n      external_channel_url: videoDetails ? `https://www.youtube.com/channel/${videoDetails.externalChannelId}` : '',\n      user_url: videoDetails ? new URL(videoDetails.ownerProfileUrl, BASE_URL).toString() : '',\n      thumbnails,\n      verified,\n      subscriber_count: subscriberCount,\n    };\n    if (thumbnails.length) {\n      utils.deprecate(author, 'avatar', author.thumbnails[0].url, 'author.avatar', 'author.thumbnails[0].url');\n    }\n    return author;\n  } catch (err) {\n    return {};\n  }\n};\n\nconst parseRelatedVideo = (details, rvsParams) => {\n  if (!details) return;\n  try {\n    let viewCount = getText(details.viewCountText);\n    let shortViewCount = getText(details.shortViewCountText);\n    let rvsDetails = rvsParams.find(elem => elem.id === details.videoId);\n    if (!/^\\d/.test(shortViewCount)) {\n      shortViewCount = (rvsDetails && rvsDetails.short_view_count_text) || '';\n    }\n    viewCount = (/^\\d/.test(viewCount) ? viewCount : shortViewCount).split(' ')[0];\n    let browseEndpoint = details.shortBylineText.runs[0].navigationEndpoint.browseEndpoint;\n    let channelId = browseEndpoint.browseId;\n    let name = getText(details.shortBylineText);\n    let user = (browseEndpoint.canonicalBaseUrl || '').split('/').slice(-1)[0];\n    let video = {\n      id: details.videoId,\n      title: getText(details.title),\n      published: getText(details.publishedTimeText),\n      author: {\n        id: channelId,\n        name,\n        user,\n        channel_url: `https://www.youtube.com/channel/${channelId}`,\n        user_url: `https://www.youtube.com/user/${user}`,\n        thumbnails: details.channelThumbnail.thumbnails.map(thumbnail => {\n          thumbnail.url = new URL(thumbnail.url, BASE_URL).toString();\n          return thumbnail;\n        }),\n        verified: isVerified(details.ownerBadges),\n\n        [Symbol.toPrimitive]() {\n          console.warn(`\\`relatedVideo.author\\` will be removed in a near future release, ` +\n            `use \\`relatedVideo.author.name\\` instead.`);\n          return video.author.name;\n        },\n\n      },\n      short_view_count_text: shortViewCount.split(' ')[0],\n      view_count: viewCount.replace(/,/g, ''),\n      length_seconds: details.lengthText ?\n        Math.floor(parseTimestamp(getText(details.lengthText)) / 1000) :\n        rvsParams && `${rvsParams.length_seconds}`,\n      thumbnails: details.thumbnail.thumbnails,\n      richThumbnails:\n        details.richThumbnail ?\n          details.richThumbnail.movingThumbnailRenderer.movingThumbnailDetails.thumbnails : [],\n      isLive: !!(details.badges && details.badges.find(b => b.metadataBadgeRenderer.label === 'LIVE NOW')),\n    };\n\n    utils.deprecate(video, 'author_thumbnail', video.author.thumbnails[0].url,\n      'relatedVideo.author_thumbnail', 'relatedVideo.author.thumbnails[0].url');\n    utils.deprecate(video, 'ucid', video.author.id, 'relatedVideo.ucid', 'relatedVideo.author.id');\n    utils.deprecate(video, 'video_thumbnail', video.thumbnails[0].url,\n      'relatedVideo.video_thumbnail', 'relatedVideo.thumbnails[0].url');\n    return video;\n  } catch (err) {\n    // Skip.\n  }\n};\n\n/**\n * Get related videos.\n *\n * @param {Object} info\n * @returns {Array.<Object>}\n */\nexports.getRelatedVideos = info => {\n  let rvsParams = [], secondaryResults = [];\n  try {\n    rvsParams = info.response.webWatchNextResponseExtensionData.relatedVideoArgs.split(',').map(e => qs.parse(e));\n  } catch (err) {\n    // Do nothing.\n  }\n  try {\n    secondaryResults = info.response.contents.twoColumnWatchNextResults.secondaryResults.secondaryResults.results;\n  } catch (err) {\n    return [];\n  }\n  let videos = [];\n  for (let result of secondaryResults || []) {\n    let details = result.compactVideoRenderer;\n    if (details) {\n      let video = parseRelatedVideo(details, rvsParams);\n      if (video) videos.push(video);\n    } else {\n      let autoplay = result.compactAutoplayRenderer || result.itemSectionRenderer;\n      if (!autoplay || !Array.isArray(autoplay.contents)) continue;\n      for (let content of autoplay.contents) {\n        let video = parseRelatedVideo(content.compactVideoRenderer, rvsParams);\n        if (video) videos.push(video);\n      }\n    }\n  }\n  return videos;\n};\n\n/**\n * Get like count.\n *\n * @param {Object} info\n * @returns {number}\n */\nexports.getLikes = info => {\n  try {\n    let contents = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n    let video = contents.find(r => r.videoPrimaryInfoRenderer);\n    let buttons = video.videoPrimaryInfoRenderer.videoActions.menuRenderer.topLevelButtons;\n    let like = buttons.find(b => b.toggleButtonRenderer &&\n      b.toggleButtonRenderer.defaultIcon.iconType === 'LIKE');\n    return parseInt(like.toggleButtonRenderer.defaultText.accessibility.accessibilityData.label.replace(/\\D+/g, ''));\n  } catch (err) {\n    return null;\n  }\n};\n\n/**\n * Get dislike count.\n *\n * @param {Object} info\n * @returns {number}\n */\nexports.getDislikes = info => {\n  try {\n    let contents = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n    let video = contents.find(r => r.videoPrimaryInfoRenderer);\n    let buttons = video.videoPrimaryInfoRenderer.videoActions.menuRenderer.topLevelButtons;\n    let dislike = buttons.find(b => b.toggleButtonRenderer &&\n      b.toggleButtonRenderer.defaultIcon.iconType === 'DISLIKE');\n    return parseInt(dislike.toggleButtonRenderer.defaultText.accessibility.accessibilityData.label.replace(/\\D+/g, ''));\n  } catch (err) {\n    return null;\n  }\n};\n\n/**\n * Cleans up a few fields on `videoDetails`.\n *\n * @param {Object} videoDetails\n * @param {Object} info\n * @returns {Object}\n */\nexports.cleanVideoDetails = (videoDetails, info) => {\n  videoDetails.thumbnails = videoDetails.thumbnail.thumbnails;\n  delete videoDetails.thumbnail;\n  utils.deprecate(videoDetails, 'thumbnail', { thumbnails: videoDetails.thumbnails },\n    'videoDetails.thumbnail.thumbnails', 'videoDetails.thumbnails');\n  videoDetails.description = videoDetails.shortDescription || getText(videoDetails.description);\n  delete videoDetails.shortDescription;\n  utils.deprecate(videoDetails, 'shortDescription', videoDetails.description,\n    'videoDetails.shortDescription', 'videoDetails.description');\n\n  // Use more reliable `lengthSeconds` from `playerMicroformatRenderer`.\n  videoDetails.lengthSeconds =\n    (info.player_response.microformat &&\n    info.player_response.microformat.playerMicroformatRenderer.lengthSeconds) ||\n    info.player_response.videoDetails.lengthSeconds;\n  return videoDetails;\n};\n\n/**\n * Get storyboards info.\n *\n * @param {Object} info\n * @returns {Array.<Object>}\n */\nexports.getStoryboards = info => {\n  const parts = info.player_response.storyboards &&\n    info.player_response.storyboards.playerStoryboardSpecRenderer &&\n    info.player_response.storyboards.playerStoryboardSpecRenderer.spec &&\n    info.player_response.storyboards.playerStoryboardSpecRenderer.spec.split('|');\n\n  if (!parts) return [];\n\n  const url = new URL(parts.shift());\n\n  return parts.map((part, i) => {\n    let [\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailCount,\n      columns,\n      rows,\n      interval,\n      nameReplacement,\n      sigh,\n    ] = part.split('#');\n\n    url.searchParams.set('sigh', sigh);\n\n    thumbnailCount = parseInt(thumbnailCount, 10);\n    columns = parseInt(columns, 10);\n    rows = parseInt(rows, 10);\n\n    const storyboardCount = Math.ceil(thumbnailCount / (columns * rows));\n\n    return {\n      templateUrl: url.toString().replace('$L', i).replace('$N', nameReplacement),\n      thumbnailWidth: parseInt(thumbnailWidth, 10),\n      thumbnailHeight: parseInt(thumbnailHeight, 10),\n      thumbnailCount,\n      interval: parseInt(interval, 10),\n      columns,\n      rows,\n      storyboardCount,\n    };\n  });\n};\n\n/**\n * Get chapters info.\n *\n * @param {Object} info\n * @returns {Array.<Object>}\n */\nexports.getChapters = info => {\n  const playerOverlayRenderer = info.response &&\n    info.response.playerOverlays &&\n    info.response.playerOverlays.playerOverlayRenderer;\n  const playerBar = playerOverlayRenderer &&\n    playerOverlayRenderer.decoratedPlayerBarRenderer &&\n    playerOverlayRenderer.decoratedPlayerBarRenderer.decoratedPlayerBarRenderer &&\n    playerOverlayRenderer.decoratedPlayerBarRenderer.decoratedPlayerBarRenderer.playerBar;\n  const markersMap = playerBar &&\n    playerBar.multiMarkersPlayerBarRenderer &&\n    playerBar.multiMarkersPlayerBarRenderer.markersMap;\n  const marker = Array.isArray(markersMap) && markersMap.find(m => m.value && Array.isArray(m.value.chapters));\n  if (!marker) return [];\n  const chapters = marker.value.chapters;\n\n  return chapters.map(chapter => ({\n    title: getText(chapter.chapterRenderer.title),\n    start_time: chapter.chapterRenderer.timeRangeStartMillis / 1000,\n  }));\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/info-extras.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/info.js":
/*!********************************************!*\
  !*** ./node_modules/ytdl-core/lib/info.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const querystring = __webpack_require__(/*! querystring */ \"querystring\");\nconst sax = __webpack_require__(/*! sax */ \"./node_modules/sax/lib/sax.js\");\nconst miniget = __webpack_require__(/*! miniget */ \"./node_modules/miniget/dist/index.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"./node_modules/ytdl-core/lib/utils.js\");\n// Forces Node JS version of setTimeout for Electron based applications\nconst { setTimeout } = __webpack_require__(/*! timers */ \"timers\");\nconst formatUtils = __webpack_require__(/*! ./format-utils */ \"./node_modules/ytdl-core/lib/format-utils.js\");\nconst urlUtils = __webpack_require__(/*! ./url-utils */ \"./node_modules/ytdl-core/lib/url-utils.js\");\nconst extras = __webpack_require__(/*! ./info-extras */ \"./node_modules/ytdl-core/lib/info-extras.js\");\nconst sig = __webpack_require__(/*! ./sig */ \"./node_modules/ytdl-core/lib/sig.js\");\nconst Cache = __webpack_require__(/*! ./cache */ \"./node_modules/ytdl-core/lib/cache.js\");\n\n\nconst BASE_URL = 'https://www.youtube.com/watch?v=';\n\n\n// Cached for storing basic/full info.\nexports.cache = new Cache();\nexports.cookieCache = new Cache(1000 * 60 * 60 * 24);\nexports.watchPageCache = new Cache();\n// Cache for cver used in getVideoInfoPage\nlet cver = '2.20210622.10.00';\n\n\n// Special error class used to determine if an error is unrecoverable,\n// as in, ytdl-core should not try again to fetch the video metadata.\n// In this case, the video is usually unavailable in some way.\nclass UnrecoverableError extends Error {}\n\n\n// List of URLs that show up in `notice_url` for age restricted videos.\nconst AGE_RESTRICTED_URLS = [\n  'support.google.com/youtube/?p=age_restrictions',\n  'youtube.com/t/community_guidelines',\n];\n\n\n/**\n * Gets info from a video without getting additional formats.\n *\n * @param {string} id\n * @param {Object} options\n * @returns {Promise<Object>}\n*/\nexports.getBasicInfo = async(id, options) => {\n  const retryOptions = Object.assign({}, miniget.defaultOptions, options.requestOptions);\n  options.requestOptions = Object.assign({}, options.requestOptions, {});\n  options.requestOptions.headers = Object.assign({},\n    {\n      // eslint-disable-next-line max-len\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.101 Safari/537.36',\n    }, options.requestOptions.headers);\n  const validate = info => {\n    let playErr = utils.playError(info.player_response, ['ERROR'], UnrecoverableError);\n    let privateErr = privateVideoError(info.player_response);\n    if (playErr || privateErr) {\n      throw playErr || privateErr;\n    }\n    return info && info.player_response && (\n      info.player_response.streamingData || isRental(info.player_response) || isNotYetBroadcasted(info.player_response)\n    );\n  };\n  let info = await pipeline([id, options], validate, retryOptions, [\n    getWatchHTMLPage,\n    getWatchJSONPage,\n    getVideoInfoPage,\n  ]);\n\n  Object.assign(info, {\n    formats: parseFormats(info.player_response),\n    related_videos: extras.getRelatedVideos(info),\n  });\n\n  // Add additional properties to info.\n  const media = extras.getMedia(info);\n  const additional = {\n    author: extras.getAuthor(info),\n    media,\n    likes: extras.getLikes(info),\n    dislikes: extras.getDislikes(info),\n    age_restricted: !!(media && media.notice_url && AGE_RESTRICTED_URLS.some(url => media.notice_url.includes(url))),\n\n    // Give the standard link to the video.\n    video_url: BASE_URL + id,\n    storyboards: extras.getStoryboards(info),\n    chapters: extras.getChapters(info),\n  };\n\n  info.videoDetails = extras.cleanVideoDetails(Object.assign({},\n    info.player_response && info.player_response.microformat &&\n    info.player_response.microformat.playerMicroformatRenderer,\n    info.player_response && info.player_response.videoDetails, additional), info);\n\n  return info;\n};\n\nconst privateVideoError = player_response => {\n  let playability = player_response && player_response.playabilityStatus;\n  if (playability && playability.status === 'LOGIN_REQUIRED' && playability.messages &&\n    playability.messages.filter(m => /This is a private video/.test(m)).length) {\n    return new UnrecoverableError(playability.reason || (playability.messages && playability.messages[0]));\n  } else {\n    return null;\n  }\n};\n\n\nconst isRental = player_response => {\n  let playability = player_response.playabilityStatus;\n  return playability && playability.status === 'UNPLAYABLE' &&\n    playability.errorScreen && playability.errorScreen.playerLegacyDesktopYpcOfferRenderer;\n};\n\n\nconst isNotYetBroadcasted = player_response => {\n  let playability = player_response.playabilityStatus;\n  return playability && playability.status === 'LIVE_STREAM_OFFLINE';\n};\n\n\nconst getWatchHTMLURL = (id, options) => `${BASE_URL + id}&hl=${options.lang || 'en'}`;\nconst getWatchHTMLPageBody = (id, options) => {\n  const url = getWatchHTMLURL(id, options);\n  return exports.watchPageCache.getOrSet(url, () => utils.exposedMiniget(url, options).text());\n};\n\n\nconst EMBED_URL = 'https://www.youtube.com/embed/';\nconst getEmbedPageBody = (id, options) => {\n  const embedUrl = `${EMBED_URL + id}?hl=${options.lang || 'en'}`;\n  return utils.exposedMiniget(embedUrl, options).text();\n};\n\n\nconst getHTML5player = body => {\n  let html5playerRes =\n    /<script\\s+src=\"([^\"]+)\"(?:\\s+type=\"text\\/javascript\")?\\s+name=\"player_ias\\/base\"\\s*>|\"jsUrl\":\"([^\"]+)\"/\n      .exec(body);\n  return html5playerRes ? html5playerRes[1] || html5playerRes[2] : null;\n};\n\n\nconst getIdentityToken = (id, options, key, throwIfNotFound) =>\n  exports.cookieCache.getOrSet(key, async() => {\n    let page = await getWatchHTMLPageBody(id, options);\n    let match = page.match(/([\"'])ID_TOKEN\\1[:,]\\s?\"([^\"]+)\"/);\n    if (!match && throwIfNotFound) {\n      throw new UnrecoverableError('Cookie header used in request, but unable to find YouTube identity token');\n    }\n    return match && match[2];\n  });\n\n\n/**\n * Goes through each endpoint in the pipeline, retrying on failure if the error is recoverable.\n * If unable to succeed with one endpoint, moves onto the next one.\n *\n * @param {Array.<Object>} args\n * @param {Function} validate\n * @param {Object} retryOptions\n * @param {Array.<Function>} endpoints\n * @returns {[Object, Object, Object]}\n */\nconst pipeline = async(args, validate, retryOptions, endpoints) => {\n  let info;\n  for (let func of endpoints) {\n    try {\n      const newInfo = await retryFunc(func, args.concat([info]), retryOptions);\n      if (newInfo.player_response) {\n        newInfo.player_response.videoDetails = assign(\n          info && info.player_response && info.player_response.videoDetails,\n          newInfo.player_response.videoDetails);\n        newInfo.player_response = assign(info && info.player_response, newInfo.player_response);\n      }\n      info = assign(info, newInfo);\n      if (validate(info, false)) {\n        break;\n      }\n    } catch (err) {\n      if (err instanceof UnrecoverableError || func === endpoints[endpoints.length - 1]) {\n        throw err;\n      }\n      // Unable to find video metadata... so try next endpoint.\n    }\n  }\n  return info;\n};\n\n\n/**\n * Like Object.assign(), but ignores `null` and `undefined` from `source`.\n *\n * @param {Object} target\n * @param {Object} source\n * @returns {Object}\n */\nconst assign = (target, source) => {\n  if (!target || !source) { return target || source; }\n  for (let [key, value] of Object.entries(source)) {\n    if (value !== null && value !== undefined) {\n      target[key] = value;\n    }\n  }\n  return target;\n};\n\n\n/**\n * Given a function, calls it with `args` until it's successful,\n * or until it encounters an unrecoverable error.\n * Currently, any error from miniget is considered unrecoverable. Errors such as\n * too many redirects, invalid URL, status code 404, status code 502.\n *\n * @param {Function} func\n * @param {Array.<Object>} args\n * @param {Object} options\n * @param {number} options.maxRetries\n * @param {Object} options.backoff\n * @param {number} options.backoff.inc\n */\nconst retryFunc = async(func, args, options) => {\n  let currentTry = 0, result;\n  while (currentTry <= options.maxRetries) {\n    try {\n      result = await func(...args);\n      break;\n    } catch (err) {\n      if (err instanceof UnrecoverableError ||\n        (err instanceof miniget.MinigetError && err.statusCode < 500) || currentTry >= options.maxRetries) {\n        throw err;\n      }\n      let wait = Math.min(++currentTry * options.backoff.inc, options.backoff.max);\n      await new Promise(resolve => setTimeout(resolve, wait));\n    }\n  }\n  return result;\n};\n\n\nconst jsonClosingChars = /^[)\\]}'\\s]+/;\nconst parseJSON = (source, varName, json) => {\n  if (!json || typeof json === 'object') {\n    return json;\n  } else {\n    try {\n      json = json.replace(jsonClosingChars, '');\n      return JSON.parse(json);\n    } catch (err) {\n      throw Error(`Error parsing ${varName} in ${source}: ${err.message}`);\n    }\n  }\n};\n\n\nconst findJSON = (source, varName, body, left, right, prependJSON) => {\n  let jsonStr = utils.between(body, left, right);\n  if (!jsonStr) {\n    throw Error(`Could not find ${varName} in ${source}`);\n  }\n  return parseJSON(source, varName, utils.cutAfterJSON(`${prependJSON}${jsonStr}`));\n};\n\n\nconst findPlayerResponse = (source, info) => {\n  const player_response = info && (\n    (info.args && info.args.player_response) ||\n    info.player_response || info.playerResponse || info.embedded_player_response);\n  return parseJSON(source, 'player_response', player_response);\n};\n\n\nconst getWatchJSONURL = (id, options) => `${getWatchHTMLURL(id, options)}&pbj=1`;\nconst getWatchJSONPage = async(id, options) => {\n  const reqOptions = Object.assign({ headers: {} }, options.requestOptions);\n  let cookie = reqOptions.headers.Cookie || reqOptions.headers.cookie;\n  reqOptions.headers = Object.assign({\n    'x-youtube-client-name': '1',\n    'x-youtube-client-version': cver,\n    'x-youtube-identity-token': exports.cookieCache.get(cookie || 'browser') || '',\n  }, reqOptions.headers);\n\n  const setIdentityToken = async(key, throwIfNotFound) => {\n    if (reqOptions.headers['x-youtube-identity-token']) { return; }\n    reqOptions.headers['x-youtube-identity-token'] = await getIdentityToken(id, options, key, throwIfNotFound);\n  };\n\n  if (cookie) {\n    await setIdentityToken(cookie, true);\n  }\n\n  const jsonUrl = getWatchJSONURL(id, options);\n  const body = await utils.exposedMiniget(jsonUrl, options, reqOptions).text();\n  let parsedBody = parseJSON('watch.json', 'body', body);\n  if (parsedBody.reload === 'now') {\n    await setIdentityToken('browser', false);\n  }\n  if (parsedBody.reload === 'now' || !Array.isArray(parsedBody)) {\n    throw Error('Unable to retrieve video metadata in watch.json');\n  }\n  let info = parsedBody.reduce((part, curr) => Object.assign(curr, part), {});\n  info.player_response = findPlayerResponse('watch.json', info);\n  info.html5player = info.player && info.player.assets && info.player.assets.js;\n\n  return info;\n};\n\n\nconst getWatchHTMLPage = async(id, options) => {\n  let body = await getWatchHTMLPageBody(id, options);\n  let info = { page: 'watch' };\n  try {\n    cver = utils.between(body, '{\"key\":\"cver\",\"value\":\"', '\"}');\n    info.player_response = findJSON('watch.html', 'player_response',\n      body, /\\bytInitialPlayerResponse\\s*=\\s*\\{/i, '</script>', '{');\n  } catch (err) {\n    let args = findJSON('watch.html', 'player_response', body, /\\bytplayer\\.config\\s*=\\s*{/, '</script>', '{');\n    info.player_response = findPlayerResponse('watch.html', args);\n  }\n  info.response = findJSON('watch.html', 'response', body, /\\bytInitialData(\"\\])?\\s*=\\s*\\{/i, '</script>', '{');\n  info.html5player = getHTML5player(body);\n  return info;\n};\n\n\nconst INFO_HOST = 'www.youtube.com';\nconst INFO_PATH = '/get_video_info';\nconst VIDEO_EURL = 'https://youtube.googleapis.com/v/';\nconst getVideoInfoPage = async(id, options) => {\n  const url = new URL(`https://${INFO_HOST}${INFO_PATH}`);\n  url.searchParams.set('video_id', id);\n  url.searchParams.set('c', 'TVHTML5');\n  url.searchParams.set('cver', `7${cver.substr(1)}`);\n  url.searchParams.set('eurl', VIDEO_EURL + id);\n  url.searchParams.set('ps', 'default');\n  url.searchParams.set('gl', 'US');\n  url.searchParams.set('hl', options.lang || 'en');\n  url.searchParams.set('html5', '1');\n  const body = await utils.exposedMiniget(url.toString(), options).text();\n  let info = querystring.parse(body);\n  info.player_response = findPlayerResponse('get_video_info', info);\n  return info;\n};\n\n\n/**\n * @param {Object} player_response\n * @returns {Array.<Object>}\n */\nconst parseFormats = player_response => {\n  let formats = [];\n  if (player_response && player_response.streamingData) {\n    formats = formats\n      .concat(player_response.streamingData.formats || [])\n      .concat(player_response.streamingData.adaptiveFormats || []);\n  }\n  return formats;\n};\n\n\n/**\n * Gets info from a video additional formats and deciphered URLs.\n *\n * @param {string} id\n * @param {Object} options\n * @returns {Promise<Object>}\n */\nexports.getInfo = async(id, options) => {\n  let info = await exports.getBasicInfo(id, options);\n  const hasManifest =\n    info.player_response && info.player_response.streamingData && (\n      info.player_response.streamingData.dashManifestUrl ||\n      info.player_response.streamingData.hlsManifestUrl\n    );\n  let funcs = [];\n  if (info.formats.length) {\n    info.html5player = info.html5player ||\n      getHTML5player(await getWatchHTMLPageBody(id, options)) || getHTML5player(await getEmbedPageBody(id, options));\n    if (!info.html5player) {\n      throw Error('Unable to find html5player file');\n    }\n    const html5player = new URL(info.html5player, BASE_URL).toString();\n    funcs.push(sig.decipherFormats(info.formats, html5player, options));\n  }\n  if (hasManifest && info.player_response.streamingData.dashManifestUrl) {\n    let url = info.player_response.streamingData.dashManifestUrl;\n    funcs.push(getDashManifest(url, options));\n  }\n  if (hasManifest && info.player_response.streamingData.hlsManifestUrl) {\n    let url = info.player_response.streamingData.hlsManifestUrl;\n    funcs.push(getM3U8(url, options));\n  }\n\n  let results = await Promise.all(funcs);\n  info.formats = Object.values(Object.assign({}, ...results));\n  info.formats = info.formats.map(formatUtils.addFormatMeta);\n  info.formats.sort(formatUtils.sortFormats);\n  info.full = true;\n  return info;\n};\n\n\n/**\n * Gets additional DASH formats.\n *\n * @param {string} url\n * @param {Object} options\n * @returns {Promise<Array.<Object>>}\n */\nconst getDashManifest = (url, options) => new Promise((resolve, reject) => {\n  let formats = {};\n  const parser = sax.parser(false);\n  parser.onerror = reject;\n  let adaptationSet;\n  parser.onopentag = node => {\n    if (node.name === 'ADAPTATIONSET') {\n      adaptationSet = node.attributes;\n    } else if (node.name === 'REPRESENTATION') {\n      const itag = parseInt(node.attributes.ID);\n      if (!isNaN(itag)) {\n        formats[url] = Object.assign({\n          itag, url,\n          bitrate: parseInt(node.attributes.BANDWIDTH),\n          mimeType: `${adaptationSet.MIMETYPE}; codecs=\"${node.attributes.CODECS}\"`,\n        }, node.attributes.HEIGHT ? {\n          width: parseInt(node.attributes.WIDTH),\n          height: parseInt(node.attributes.HEIGHT),\n          fps: parseInt(node.attributes.FRAMERATE),\n        } : {\n          audioSampleRate: node.attributes.AUDIOSAMPLINGRATE,\n        });\n      }\n    }\n  };\n  parser.onend = () => { resolve(formats); };\n  const req = utils.exposedMiniget(new URL(url, BASE_URL).toString(), options);\n  req.setEncoding('utf8');\n  req.on('error', reject);\n  req.on('data', chunk => { parser.write(chunk); });\n  req.on('end', parser.close.bind(parser));\n});\n\n\n/**\n * Gets additional formats.\n *\n * @param {string} url\n * @param {Object} options\n * @returns {Promise<Array.<Object>>}\n */\nconst getM3U8 = async(url, options) => {\n  url = new URL(url, BASE_URL);\n  const body = await utils.exposedMiniget(url.toString(), options).text();\n  let formats = {};\n  body\n    .split('\\n')\n    .filter(line => /^https?:\\/\\//.test(line))\n    .forEach(line => {\n      const itag = parseInt(line.match(/\\/itag\\/(\\d+)\\//)[1]);\n      formats[line] = { itag, url: line };\n    });\n  return formats;\n};\n\n\n// Cache get info functions.\n// In case a user wants to get a video's info before downloading.\nfor (let funcName of ['getBasicInfo', 'getInfo']) {\n  /**\n   * @param {string} link\n   * @param {Object} options\n   * @returns {Promise<Object>}\n   */\n  const func = exports[funcName];\n  exports[funcName] = async(link, options = {}) => {\n    utils.checkForUpdates();\n    let id = await urlUtils.getVideoID(link);\n    const key = [funcName, id, options.lang].join('-');\n    return exports.cache.getOrSet(key, () => func(id, options));\n  };\n}\n\n\n// Export a few helpers.\nexports.validateID = urlUtils.validateID;\nexports.validateURL = urlUtils.validateURL;\nexports.getURLVideoID = urlUtils.getURLVideoID;\nexports.getVideoID = urlUtils.getVideoID;\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/info.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/sig.js":
/*!*******************************************!*\
  !*** ./node_modules/ytdl-core/lib/sig.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const querystring = __webpack_require__(/*! querystring */ \"querystring\");\nconst Cache = __webpack_require__(/*! ./cache */ \"./node_modules/ytdl-core/lib/cache.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"./node_modules/ytdl-core/lib/utils.js\");\n\n\n// A shared cache to keep track of html5player.js tokens.\nexports.cache = new Cache();\n\n\n/**\n * Extract signature deciphering tokens from html5player file.\n *\n * @param {string} html5playerfile\n * @param {Object} options\n * @returns {Promise<Array.<string>>}\n */\nexports.getTokens = (html5playerfile, options) => exports.cache.getOrSet(html5playerfile, async() => {\n  const body = await utils.exposedMiniget(html5playerfile, options).text();\n  const tokens = exports.extractActions(body);\n  if (!tokens || !tokens.length) {\n    throw Error('Could not extract signature deciphering actions');\n  }\n  exports.cache.set(html5playerfile, tokens);\n  return tokens;\n});\n\n\n/**\n * Decipher a signature based on action tokens.\n *\n * @param {Array.<string>} tokens\n * @param {string} sig\n * @returns {string}\n */\nexports.decipher = (tokens, sig) => {\n  sig = sig.split('');\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    let token = tokens[i], pos;\n    switch (token[0]) {\n      case 'r':\n        sig = sig.reverse();\n        break;\n      case 'w':\n        pos = ~~token.slice(1);\n        sig = swapHeadAndPosition(sig, pos);\n        break;\n      case 's':\n        pos = ~~token.slice(1);\n        sig = sig.slice(pos);\n        break;\n      case 'p':\n        pos = ~~token.slice(1);\n        sig.splice(0, pos);\n        break;\n    }\n  }\n  return sig.join('');\n};\n\n\n/**\n * Swaps the first element of an array with one of given position.\n *\n * @param {Array.<Object>} arr\n * @param {number} position\n * @returns {Array.<Object>}\n */\nconst swapHeadAndPosition = (arr, position) => {\n  const first = arr[0];\n  arr[0] = arr[position % arr.length];\n  arr[position] = first;\n  return arr;\n};\n\n\nconst jsVarStr = '[a-zA-Z_\\\\$][a-zA-Z_0-9]*';\nconst jsSingleQuoteStr = `'[^'\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^'\\\\\\\\]*)*'`;\nconst jsDoubleQuoteStr = `\"[^\"\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^\"\\\\\\\\]*)*\"`;\nconst jsQuoteStr = `(?:${jsSingleQuoteStr}|${jsDoubleQuoteStr})`;\nconst jsKeyStr = `(?:${jsVarStr}|${jsQuoteStr})`;\nconst jsPropStr = `(?:\\\\.${jsVarStr}|\\\\[${jsQuoteStr}\\\\])`;\nconst jsEmptyStr = `(?:''|\"\")`;\nconst reverseStr = ':function\\\\(a\\\\)\\\\{' +\n  '(?:return )?a\\\\.reverse\\\\(\\\\)' +\n'\\\\}';\nconst sliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'return a\\\\.slice\\\\(b\\\\)' +\n'\\\\}';\nconst spliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'a\\\\.splice\\\\(0,b\\\\)' +\n'\\\\}';\nconst swapStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'var c=a\\\\[0\\\\];a\\\\[0\\\\]=a\\\\[b(?:%a\\\\.length)?\\\\];a\\\\[b(?:%a\\\\.length)?\\\\]=c(?:;return a)?' +\n'\\\\}';\nconst actionsObjRegexp = new RegExp(\n  `var (${jsVarStr})=\\\\{((?:(?:${\n    jsKeyStr}${reverseStr}|${\n    jsKeyStr}${sliceStr}|${\n    jsKeyStr}${spliceStr}|${\n    jsKeyStr}${swapStr\n  }),?\\\\r?\\\\n?)+)\\\\};`);\nconst actionsFuncRegexp = new RegExp(`${`function(?: ${jsVarStr})?\\\\(a\\\\)\\\\{` +\n    `a=a\\\\.split\\\\(${jsEmptyStr}\\\\);\\\\s*` +\n    `((?:(?:a=)?${jsVarStr}`}${\n  jsPropStr\n}\\\\(a,\\\\d+\\\\);)+)` +\n    `return a\\\\.join\\\\(${jsEmptyStr}\\\\)` +\n  `\\\\}`);\nconst reverseRegexp = new RegExp(`(?:^|,)(${jsKeyStr})${reverseStr}`, 'm');\nconst sliceRegexp = new RegExp(`(?:^|,)(${jsKeyStr})${sliceStr}`, 'm');\nconst spliceRegexp = new RegExp(`(?:^|,)(${jsKeyStr})${spliceStr}`, 'm');\nconst swapRegexp = new RegExp(`(?:^|,)(${jsKeyStr})${swapStr}`, 'm');\n\n\n/**\n * Extracts the actions that should be taken to decipher a signature.\n *\n * This searches for a function that performs string manipulations on\n * the signature. We already know what the 3 possible changes to a signature\n * are in order to decipher it. There is\n *\n * * Reversing the string.\n * * Removing a number of characters from the beginning.\n * * Swapping the first character with another position.\n *\n * Note, `Array#slice()` used to be used instead of `Array#splice()`,\n * it's kept in case we encounter any older html5player files.\n *\n * After retrieving the function that does this, we can see what actions\n * it takes on a signature.\n *\n * @param {string} body\n * @returns {Array.<string>}\n */\nexports.extractActions = body => {\n  const objResult = actionsObjRegexp.exec(body);\n  const funcResult = actionsFuncRegexp.exec(body);\n  if (!objResult || !funcResult) { return null; }\n\n  const obj = objResult[1].replace(/\\$/g, '\\\\$');\n  const objBody = objResult[2].replace(/\\$/g, '\\\\$');\n  const funcBody = funcResult[1].replace(/\\$/g, '\\\\$');\n\n  let result = reverseRegexp.exec(objBody);\n  const reverseKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = sliceRegexp.exec(objBody);\n  const sliceKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = spliceRegexp.exec(objBody);\n  const spliceKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = swapRegexp.exec(objBody);\n  const swapKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n\n  const keys = `(${[reverseKey, sliceKey, spliceKey, swapKey].join('|')})`;\n  const myreg = `(?:a=)?${obj\n  }(?:\\\\.${keys}|\\\\['${keys}'\\\\]|\\\\[\"${keys}\"\\\\])` +\n    `\\\\(a,(\\\\d+)\\\\)`;\n  const tokenizeRegexp = new RegExp(myreg, 'g');\n  const tokens = [];\n  while ((result = tokenizeRegexp.exec(funcBody)) !== null) {\n    let key = result[1] || result[2] || result[3];\n    switch (key) {\n      case swapKey:\n        tokens.push(`w${result[4]}`);\n        break;\n      case reverseKey:\n        tokens.push('r');\n        break;\n      case sliceKey:\n        tokens.push(`s${result[4]}`);\n        break;\n      case spliceKey:\n        tokens.push(`p${result[4]}`);\n        break;\n    }\n  }\n  return tokens;\n};\n\n\n/**\n * @param {Object} format\n * @param {string} sig\n */\nexports.setDownloadURL = (format, sig) => {\n  let decodedUrl;\n  if (format.url) {\n    decodedUrl = format.url;\n  } else {\n    return;\n  }\n\n  try {\n    decodedUrl = decodeURIComponent(decodedUrl);\n  } catch (err) {\n    return;\n  }\n\n  // Make some adjustments to the final url.\n  const parsedUrl = new URL(decodedUrl);\n\n  // This is needed for a speedier download.\n  // See https://github.com/fent/node-ytdl-core/issues/127\n  parsedUrl.searchParams.set('ratebypass', 'yes');\n\n  if (sig) {\n    // When YouTube provides a `sp` parameter the signature `sig` must go\n    // into the parameter it specifies.\n    // See https://github.com/fent/node-ytdl-core/issues/417\n    parsedUrl.searchParams.set(format.sp || 'signature', sig);\n  }\n\n  format.url = parsedUrl.toString();\n};\n\n\n/**\n * Applies `sig.decipher()` to all format URL's.\n *\n * @param {Array.<Object>} formats\n * @param {string} html5player\n * @param {Object} options\n */\nexports.decipherFormats = async(formats, html5player, options) => {\n  let decipheredFormats = {};\n  let tokens = await exports.getTokens(html5player, options);\n  formats.forEach(format => {\n    let cipher = format.signatureCipher || format.cipher;\n    if (cipher) {\n      Object.assign(format, querystring.parse(cipher));\n      delete format.signatureCipher;\n      delete format.cipher;\n    }\n    const sig = tokens && format.s ? exports.decipher(tokens, format.s) : null;\n    exports.setDownloadURL(format, sig);\n    decipheredFormats[format.url] = format;\n  });\n  return decipheredFormats;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/sig.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/url-utils.js":
/*!*************************************************!*\
  !*** ./node_modules/ytdl-core/lib/url-utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Get video ID.\n *\n * There are a few type of video URL formats.\n *  - https://www.youtube.com/watch?v=VIDEO_ID\n *  - https://m.youtube.com/watch?v=VIDEO_ID\n *  - https://youtu.be/VIDEO_ID\n *  - https://www.youtube.com/v/VIDEO_ID\n *  - https://www.youtube.com/embed/VIDEO_ID\n *  - https://music.youtube.com/watch?v=VIDEO_ID\n *  - https://gaming.youtube.com/watch?v=VIDEO_ID\n *\n * @param {string} link\n * @return {string}\n * @throws {Error} If unable to find a id\n * @throws {TypeError} If videoid doesn't match specs\n */\nconst validQueryDomains = new Set([\n  'youtube.com',\n  'www.youtube.com',\n  'm.youtube.com',\n  'music.youtube.com',\n  'gaming.youtube.com',\n]);\nconst validPathDomains = /^https?:\\/\\/(youtu\\.be\\/|(www\\.)?youtube\\.com\\/(embed|v|shorts)\\/)/;\nexports.getURLVideoID = link => {\n  const parsed = new URL(link);\n  let id = parsed.searchParams.get('v');\n  if (validPathDomains.test(link) && !id) {\n    const paths = parsed.pathname.split('/');\n    id = parsed.host === 'youtu.be' ? paths[1] : paths[2];\n  } else if (parsed.hostname && !validQueryDomains.has(parsed.hostname)) {\n    throw Error('Not a YouTube domain');\n  }\n  if (!id) {\n    throw Error(`No video id found: ${link}`);\n  }\n  id = id.substring(0, 11);\n  if (!exports.validateID(id)) {\n    throw TypeError(`Video id (${id}) does not match expected ` +\n      `format (${idRegex.toString()})`);\n  }\n  return id;\n};\n\n\n/**\n * Gets video ID either from a url or by checking if the given string\n * matches the video ID format.\n *\n * @param {string} str\n * @returns {string}\n * @throws {Error} If unable to find a id\n * @throws {TypeError} If videoid doesn't match specs\n */\nconst urlRegex = /^https?:\\/\\//;\nexports.getVideoID = str => {\n  if (exports.validateID(str)) {\n    return str;\n  } else if (urlRegex.test(str)) {\n    return exports.getURLVideoID(str);\n  } else {\n    throw Error(`No video id found: ${str}`);\n  }\n};\n\n\n/**\n * Returns true if given id satifies YouTube's id format.\n *\n * @param {string} id\n * @return {boolean}\n */\nconst idRegex = /^[a-zA-Z0-9-_]{11}$/;\nexports.validateID = id => idRegex.test(id);\n\n\n/**\n * Checks wether the input string includes a valid id.\n *\n * @param {string} string\n * @returns {boolean}\n */\nexports.validateURL = string => {\n  try {\n    exports.getURLVideoID(string);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/url-utils.js?");

/***/ }),

/***/ "./node_modules/ytdl-core/lib/utils.js":
/*!*********************************************!*\
  !*** ./node_modules/ytdl-core/lib/utils.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const miniget = __webpack_require__(/*! miniget */ \"./node_modules/miniget/dist/index.js\");\n\n\n/**\n * Extract string inbetween another.\n *\n * @param {string} haystack\n * @param {string} left\n * @param {string} right\n * @returns {string}\n */\nexports.between = (haystack, left, right) => {\n  let pos;\n  if (left instanceof RegExp) {\n    const match = haystack.match(left);\n    if (!match) { return ''; }\n    pos = match.index + match[0].length;\n  } else {\n    pos = haystack.indexOf(left);\n    if (pos === -1) { return ''; }\n    pos += left.length;\n  }\n  haystack = haystack.slice(pos);\n  pos = haystack.indexOf(right);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n\n\n/**\n * Get a number from an abbreviated number string.\n *\n * @param {string} string\n * @returns {number}\n */\nexports.parseAbbreviatedNumber = string => {\n  const match = string\n    .replace(',', '.')\n    .replace(' ', '')\n    .match(/([\\d,.]+)([MK]?)/);\n  if (match) {\n    let [, num, multi] = match;\n    num = parseFloat(num);\n    return Math.round(multi === 'M' ? num * 1000000 :\n      multi === 'K' ? num * 1000 : num);\n  }\n  return null;\n};\n\n\n/**\n * Match begin and end braces of input JSON, return only json\n *\n * @param {string} mixedJson\n * @returns {string}\n*/\nexports.cutAfterJSON = mixedJson => {\n  let open, close;\n  if (mixedJson[0] === '[') {\n    open = '[';\n    close = ']';\n  } else if (mixedJson[0] === '{') {\n    open = '{';\n    close = '}';\n  }\n\n  if (!open) {\n    throw new Error(`Can't cut unsupported JSON (need to begin with [ or { ) but got: ${mixedJson[0]}`);\n  }\n\n  // States if the loop is currently in a string\n  let isString = false;\n\n  // States if the current character is treated as escaped or not\n  let isEscaped = false;\n\n  // Current open brackets to be closed\n  let counter = 0;\n\n  let i;\n  for (i = 0; i < mixedJson.length; i++) {\n    // Toggle the isString boolean when leaving/entering string\n    if (mixedJson[i] === '\"' && !isEscaped) {\n      isString = !isString;\n      continue;\n    }\n\n    // Toggle the isEscaped boolean for every backslash\n    // Reset for every regular character\n    isEscaped = mixedJson[i] === '\\\\' && !isEscaped;\n\n    if (isString) continue;\n\n    if (mixedJson[i] === open) {\n      counter++;\n    } else if (mixedJson[i] === close) {\n      counter--;\n    }\n\n    // All brackets have been closed, thus end of JSON is reached\n    if (counter === 0) {\n      // Return the cut JSON\n      return mixedJson.substr(0, i + 1);\n    }\n  }\n\n  // We ran through the whole string and ended up with an unclosed bracket\n  throw Error(\"Can't cut unsupported JSON (no matching closing bracket found)\");\n};\n\n\n/**\n * Checks if there is a playability error.\n *\n * @param {Object} player_response\n * @param {Array.<string>} statuses\n * @param {Error} ErrorType\n * @returns {!Error}\n */\nexports.playError = (player_response, statuses, ErrorType = Error) => {\n  let playability = player_response && player_response.playabilityStatus;\n  if (playability && statuses.includes(playability.status)) {\n    return new ErrorType(playability.reason || (playability.messages && playability.messages[0]));\n  }\n  return null;\n};\n\n/**\n * Does a miniget request and calls options.requestCallback if present\n *\n * @param {string} url the request url\n * @param {Object} options an object with optional requestOptions and requestCallback parameters\n * @param {Object} requestOptionsOverwrite overwrite of options.requestOptions\n * @returns {miniget.Stream}\n */\nexports.exposedMiniget = (url, options = {}, requestOptionsOverwrite) => {\n  const req = miniget(url, requestOptionsOverwrite || options.requestOptions);\n  if (typeof options.requestCallback === 'function') options.requestCallback(req);\n  return req;\n};\n\n/**\n * Temporary helper to help deprecating a few properties.\n *\n * @param {Object} obj\n * @param {string} prop\n * @param {Object} value\n * @param {string} oldPath\n * @param {string} newPath\n */\nexports.deprecate = (obj, prop, value, oldPath, newPath) => {\n  Object.defineProperty(obj, prop, {\n    get: () => {\n      console.warn(`\\`${oldPath}\\` will be removed in a near future release, ` +\n        `use \\`${newPath}\\` instead.`);\n      return value;\n    },\n  });\n};\n\n\n// Check for updates.\nconst pkg = __webpack_require__(/*! ../package.json */ \"./node_modules/ytdl-core/package.json\");\nconst UPDATE_INTERVAL = 1000 * 60 * 60 * 12;\nexports.lastUpdateCheck = 0;\nexports.checkForUpdates = () => {\n  if (!process.env.YTDL_NO_UPDATE && !pkg.version.startsWith('0.0.0-') &&\n    Date.now() - exports.lastUpdateCheck >= UPDATE_INTERVAL) {\n    exports.lastUpdateCheck = Date.now();\n    return miniget('https://api.github.com/repos/fent/node-ytdl-core/releases/latest', {\n      headers: { 'User-Agent': 'ytdl-core' },\n    }).text().then(response => {\n      if (JSON.parse(response).tag_name !== `v${pkg.version}`) {\n        console.warn('\\x1b[33mWARNING:\\x1B[0m ytdl-core is out of date! Update with \"npm install ytdl-core@latest\".');\n      }\n    }, err => {\n      console.warn('Error checking for updates:', err.message);\n      console.warn('You can disable this check by setting the `YTDL_NO_UPDATE` env variable.');\n    });\n  }\n  return null;\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/lib/utils.js?");

/***/ }),

/***/ "./node_modules/ytsr/lib/main.js":
/*!***************************************!*\
  !*** ./node_modules/ytsr/lib/main.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const PARSE_ITEM = __webpack_require__(/*! ./parseItem.js */ \"./node_modules/ytsr/lib/parseItem.js\");\nconst MINIGET = __webpack_require__(/*! miniget */ \"./node_modules/miniget/dist/index.js\");\nconst UTIL = __webpack_require__(/*! ./utils.js */ \"./node_modules/ytsr/lib/utils.js\");\nconst QS = __webpack_require__(/*! querystring */ \"querystring\");\n\nconst BASE_SEARCH_URL = 'https://www.youtube.com/results?';\nconst BASE_API_URL = 'https://www.youtube.com/youtubei/v1/search?key=';\n\nconst main = module.exports = async(searchString, options, rt = 3) => {\n  if (rt === 0) throw new Error('Unable to find JSON!');\n  // Set default values\n  const opts = UTIL.checkArgs(searchString, options);\n\n  const ref = BASE_SEARCH_URL + QS.encode(opts.query);\n  const body = await MINIGET(ref, opts.requestOptions).text();\n  const parsed = UTIL.parseBody(body, opts);\n  // Retry if unable to find json => most likely old response\n  if (!parsed.json) return main(searchString, options, rt - 1);\n\n  // Pass Errors from the API\n  if (parsed.json.alerts && !parsed.json.contents) {\n    let error = parsed.json.alerts.find(a => a.alertRenderer && a.alertRenderer.type === 'ERROR');\n    if (error) throw new Error(`API-Error: ${UTIL.parseText(error.alertRenderer.text, '* no message *')}`);\n  }\n\n  const resp = {\n    // Query that was searched\n    originalQuery: opts.search,\n    // Query that youtube shows results for\n    correctedQuery: opts.search,\n    results: Number(parsed.json.estimatedResults) || 0,\n    activeFilters: [],\n    refinements: [],\n    items: [],\n    continuation: null,\n  };\n  // Add refinements\n  if (Array.isArray(parsed.json.refinements)) {\n    parsed.json.refinements.map(r => ({\n      q: r,\n      url: new URL(r, BASE_SEARCH_URL).toString(),\n      bestThumbnail: null,\n      thumbnails: null,\n    }));\n  }\n\n  // General wrapper\n  const { rawItems, continuation } = UTIL.parseWrapper(\n    parsed.json.contents.twoColumnSearchResultsRenderer.primaryContents,\n  );\n\n  // Parse items\n  resp.items = rawItems.map(a => PARSE_ITEM(a, resp)).filter(a => a).filter((_, index) => index < opts.limit);\n\n  // Adjust tracker\n  opts.limit -= resp.items.length;\n  opts.pages -= 1;\n\n  // Get information about set filters\n  const filters = UTIL.parseFilters(parsed.json);\n  resp.activeFilters = Array.from(filters).map(a => a[1].active).filter(a => a);\n\n  // Parse the nextpageToken\n  let token = null;\n  if (continuation) token = continuation.continuationItemRenderer.continuationEndpoint.continuationCommand.token;\n  // Only provide continuation if we're pulling all items or using paging\n  if (token && opts.limit === Infinity) resp.continuation = [parsed.apiKey, token, parsed.context, opts];\n\n  // We're already on last page or hit the limit\n  if (!token || opts.limit < 1 || opts.pages < 1) return resp;\n\n  // Recursively fetch more items\n  const nestedResp = await parsePage2(parsed.apiKey, token, parsed.context, opts);\n\n  // Merge the responses\n  resp.items.push(...nestedResp.items);\n  resp.continuation = nestedResp.continuation;\n  return resp;\n};\nmain.version = __webpack_require__(/*! ../package.json */ \"./node_modules/ytsr/package.json\").version;\n\nconst parsePage2 = async(apiKey, token, context, opts) => {\n  const json = await UTIL.doPost(BASE_API_URL + apiKey, { context, continuation: token }, opts.requestOptions);\n\n  if (!Array.isArray(json.onResponseReceivedCommands)) {\n    // No more content\n    return { continuation: null, items: [] };\n  }\n\n  const { rawItems, continuation } = UTIL.parsePage2Wrapper(\n    json.onResponseReceivedCommands[0].appendContinuationItemsAction.continuationItems,\n  );\n\n  // Parse items\n  const parsedItems = rawItems.map(a => PARSE_ITEM(a)).filter(a => a).filter((_, index) => index < opts.limit);\n\n  // Adjust tracker\n  opts.limit -= parsedItems.length;\n  opts.pages -= 1;\n\n  // Parse the nextpageToken\n  let nextToken = null;\n  if (continuation) nextToken = continuation.continuationItemRenderer.continuationEndpoint.continuationCommand.token;\n\n  // We're already on last page or hit the limit\n  if (!nextToken || opts.limit < 1 || opts.pages < 1) {\n    return {\n      continuation: nextToken && opts.limit === Infinity ? [apiKey, nextToken, context, opts] : null,\n      items: parsedItems,\n    };\n  }\n\n  // Recursively fetch more items\n  const nestedResp = await parsePage2(apiKey, nextToken, context, opts);\n  nestedResp.items.unshift(...parsedItems);\n  return nestedResp;\n};\n// eslint-disable-next-line require-await\nmain.continueReq = async args => {\n  // Check params\n  if (!Array.isArray(args) || args.length !== 4) throw new Error('invalid continuation array');\n  if (!args[0] || typeof args[0] !== 'string') throw new Error('invalid apiKey');\n  if (!args[1] || typeof args[1] !== 'string') throw new Error('invalid token');\n  if (!args[2] || typeof args[2] !== 'object') throw new Error('invalid context');\n  if (!args[3] || typeof args[3] !== 'object') throw new Error('invalid opts');\n  if (args[3].limit !== null && !isNaN(args[3].limit) && isFinite(args[3].limit)) {\n    throw new Error('continueReq only allowed for paged requests');\n  }\n  // Enforce pagination information\n  args[3].pages = 1;\n  args[3].limit = Infinity;\n  return parsePage2(...args);\n};\n\nmain.getFilters = async(searchString, options) => {\n  const opts = UTIL.checkArgs(searchString, options);\n\n  const ref = BASE_SEARCH_URL + QS.encode(opts.query);\n  const body = await MINIGET(ref, opts.requestOptions).text();\n  const parsed = UTIL.parseBody(body);\n  // Retry if old response\n  if (!parsed.json) return main.getFilters(searchString, options);\n  return UTIL.parseFilters(parsed.json);\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytsr/lib/main.js?");

/***/ }),

/***/ "./node_modules/ytsr/lib/parseItem.js":
/*!********************************************!*\
  !*** ./node_modules/ytsr/lib/parseItem.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const UTIL = __webpack_require__(/*! ./utils.js */ \"./node_modules/ytsr/lib/utils.js\");\nconst PATH = __webpack_require__(/*! path */ \"path\");\nconst FS = __webpack_require__(/*! fs */ \"fs\");\n\nconst BASE_VIDEO_URL = 'https://www.youtube.com/watch?v=';\nconst prepImg = UTIL.prepImg;\n\nconst parseItem = (item, resp) => {\n  const type = Object.keys(item)[0];\n\n  switch (type) {\n    // Regular Content or Multi-Content\n    case 'videoRenderer':\n      return parseVideo(item[type]);\n    case 'channelRenderer':\n      return parseChannel(item[type]);\n    case 'playlistRenderer':\n      return parsePlaylist(item[type]);\n    case 'radioRenderer':\n      return parseMix(item[type]);\n    case 'gridMovieRenderer':\n      return parseGridMovie(item[type]);\n    case 'gridVideoRenderer':\n      return parseVideo(item[type]);\n    case 'movieRenderer':\n      return parseMovie(item[type]);\n    case 'shelfRenderer':\n    case 'richShelfRenderer':\n      return parseShelf(item[type]);\n    case 'showRenderer':\n      return parseShow(item[type]);\n\n    // Change resp#refinements or resp#resultsFor\n    case 'didYouMeanRenderer':\n      // YouTube advises another query\n      return parseDidYouMeanRenderer(item[type], resp);\n    case 'showingResultsForRenderer':\n      // The results are for another query\n      return parseShowingResultsFor(item, resp);\n    case 'horizontalCardListRenderer':\n      return parseHorizontalCardListRenderer(item[type], resp);\n    case 'includingResultsForRenderer':\n      //  Informational Item we can ignore\n      return null;\n\n    // Message-Types\n    case 'backgroundPromoRenderer':\n      if (UTIL.parseText(item[type].title) === 'No results found') return null;\n      throw new Error('unknown message in backgroundPromoRenderer');\n    case 'messageRenderer':\n      // Skip all messages, since \"no more results\" changes with the language\n      return null;\n    case 'clarificationRenderer':\n      return parseClarification(item[type]);\n\n    // Skip Adds for now\n    case 'carouselAdRenderer':\n    case 'searchPyvRenderer':\n    case 'promotedVideoRenderer':\n    case 'promotedSparklesTextSearchRenderer':\n    case 'compactPromotedItemRenderer':\n      return null;\n    // Skip emergencyOneboxRenderer (for now?)\n    case 'emergencyOneboxRenderer':\n      // Emergency Notifications like: Thinking about suicide? Call xxxx\n      return null;\n\n    // For debugging purpose\n    case 'debug#previewCardRenderer':\n      return parseHorizontalChannelListItem(item[type]);\n\n    // New type & file without json until now => save\n    default:\n      throw new Error(`type ${type} is not known`);\n  }\n};\n\nconst catchAndLogFunc = (func, params = []) => {\n  if (!Array.isArray(params)) throw new Error('params has to be an (optionally empty) array');\n  try {\n    return func(...params);\n  } catch (e) {\n    const dir = PATH.resolve(__dirname, '../dumps/');\n    const file = PATH.resolve(dir, `${Math.random().toString(36).substr(3)}-${Date.now()}.txt`);\n    const cfg = PATH.resolve(__dirname, '../package.json');\n    const bugsRef = __webpack_require__(\"./node_modules/ytsr/lib sync recursive\")(cfg).bugs.url;\n\n    if (!FS.existsSync(dir)) FS.mkdirSync(dir);\n    FS.writeFileSync(file, JSON.stringify(params, null, 2));\n    /* eslint-disable no-console */\n    console.error(e.stack);\n    console.error(`\\n/${'*'.repeat(200)}`);\n    console.error(`failed at func ${func.name}: ${e.message}`);\n    console.error(`pls post the the files in ${dir} to ${bugsRef}`);\n    let info = `os: ${process.platform}-${process.arch}, `;\n    info += `node.js: ${process.version}, `;\n    info += `ytsr: ${__webpack_require__(/*! ../package.json */ \"./node_modules/ytsr/package.json\").version}`;\n    console.error(info);\n    console.error(`${'*'.repeat(200)}\\\\`);\n    /* eslint-enable no-console */\n    return null;\n  }\n};\nconst main = module.exports = (...params) => catchAndLogFunc(parseItem, params);\nmain._hidden = { catchAndLogFunc, parseItem };\n\n// TYPES:\nconst parseVideo = obj => {\n  const author = obj.ownerText && obj.ownerText.runs[0];\n  let authorUrl = null;\n  if (author) {\n    authorUrl = author.navigationEndpoint.browseEndpoint.canonicalBaseUrl ||\n      author.navigationEndpoint.commandMetadata.webCommandMetadata.url;\n  }\n  const badges = Array.isArray(obj.badges) ? obj.badges.map(a => a.metadataBadgeRenderer.label) : [];\n  const isLive = badges.some(b => b === 'LIVE NOW');\n  const upcoming = obj.upcomingEventData ? Number(`${obj.upcomingEventData.startTime}000`) : null;\n  const authorImg = !author ? null : obj.channelThumbnailSupportedRenderers.channelThumbnailWithLinkRenderer;\n  const isOfficial = !!(obj.ownerBadges && JSON.stringify(obj.ownerBadges).includes('OFFICIAL'));\n  const isVerified = !!(obj.ownerBadges && JSON.stringify(obj.ownerBadges).includes('VERIFIED'));\n  const lengthFallback = obj.thumbnailOverlays.find(x => Object.keys(x)[0] === 'thumbnailOverlayTimeStatusRenderer');\n  const length = obj.lengthText || (lengthFallback && lengthFallback.thumbnailOverlayTimeStatusRenderer.text);\n\n  return {\n    type: 'video',\n    title: UTIL.parseText(obj.title, ''),\n    id: obj.videoId,\n    url: BASE_VIDEO_URL + obj.videoId,\n    bestThumbnail: prepImg(obj.thumbnail.thumbnails)[0],\n    thumbnails: prepImg(obj.thumbnail.thumbnails),\n    isUpcoming: !!upcoming,\n    upcoming,\n    isLive,\n    badges,\n\n    // Author can be null for shows like whBqghP5Oow\n    author: author ? {\n      name: author.text,\n      channelID: author.navigationEndpoint.browseEndpoint.browseId,\n      url: new URL(authorUrl, BASE_VIDEO_URL).toString(),\n      bestAvatar: prepImg(authorImg.thumbnail.thumbnails)[0],\n      avatars: prepImg(authorImg.thumbnail.thumbnails),\n      ownerBadges: Array.isArray(obj.ownerBadges) ? obj.ownerBadges.map(a => a.metadataBadgeRenderer.tooltip) : [],\n      verified: isOfficial || isVerified,\n    } : null,\n\n    description: UTIL.parseText(obj.descriptionSnippet),\n\n    views: !obj.viewCountText ? null : UTIL.parseIntegerFromText(obj.viewCountText),\n    // Duration not provided for live & sometimes with upcoming & sometimes randomly\n    duration: UTIL.parseText(length),\n    // UploadedAt not provided for live & upcoming & sometimes randomly\n    uploadedAt: UTIL.parseText(obj.publishedTimeText),\n  };\n};\n\nconst parseChannel = obj => {\n  const targetUrl = obj.navigationEndpoint.browseEndpoint.canonicalBaseUrl ||\n    obj.navigationEndpoint.commandMetadata.webCommandMetadata.url;\n  const isOfficial = !!(obj.ownerBadges && JSON.stringify(obj.ownerBadges).includes('OFFICIAL'));\n  const isVerified = !!(obj.ownerBadges && JSON.stringify(obj.ownerBadges).includes('VERIFIED'));\n\n  return {\n    type: 'channel',\n    name: UTIL.parseText(obj.title, ''),\n    channelID: obj.channelId,\n    url: new URL(targetUrl, BASE_VIDEO_URL).toString(),\n    bestAvatar: prepImg(obj.thumbnail.thumbnails)[0],\n    avatars: prepImg(obj.thumbnail.thumbnails),\n    verified: isOfficial || isVerified,\n\n    subscribers: UTIL.parseText(obj.subscriberCountText),\n    descriptionShort: UTIL.parseText(obj.descriptionSnippet),\n    videos: obj.videoCountText ? UTIL.parseIntegerFromText(obj.videoCountText) : null,\n  };\n};\n\nconst parsePlaylist = obj => ({\n  type: 'playlist',\n  title: UTIL.parseText(obj.title, ''),\n  playlistID: obj.playlistId,\n  url: `https://www.youtube.com/playlist?list=${obj.playlistId}`,\n  firstVideo: Array.isArray(obj.videos) && obj.videos.length > 0 ? {\n    id: obj.navigationEndpoint.watchEndpoint.videoId,\n    shortURL: BASE_VIDEO_URL + obj.navigationEndpoint.watchEndpoint.videoId,\n    url: new URL(obj.navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_VIDEO_URL).toString(),\n    title: UTIL.parseText(obj.videos[0].childVideoRenderer.title, ''),\n    length: UTIL.parseText(obj.videos[0].childVideoRenderer.lengthText, ''),\n    thumbnails: prepImg(obj.thumbnails[0].thumbnails),\n    bestThumbnail: prepImg(obj.thumbnails[0].thumbnails)[0],\n  } : null,\n\n  // Some Playlists starting with OL only provide a simple string\n  owner: obj.shortBylineText.simpleText ? null : _parseOwner(obj),\n\n  publishedAt: UTIL.parseText(obj.publishedTimeText),\n  length: Number(obj.videoCount),\n});\n\nconst parseMix = obj => ({\n  type: 'mix',\n  title: UTIL.parseText(obj.title, ''),\n  url: new URL(obj.navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_VIDEO_URL).toString(),\n\n  firstVideo: {\n    id: obj.navigationEndpoint.watchEndpoint.videoId,\n    shortURL: BASE_VIDEO_URL + obj.navigationEndpoint.watchEndpoint.videoId,\n    url: new URL(obj.navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_VIDEO_URL).toString(),\n    text: UTIL.parseText(obj.videos[0].childVideoRenderer.title, ''),\n    length: UTIL.parseText(obj.videos[0].childVideoRenderer.lengthText, ''),\n    thumbnails: prepImg(obj.thumbnail.thumbnails),\n    bestThumbnail: prepImg(obj.thumbnail.thumbnails)[0],\n  },\n});\n\nconst parseDidYouMeanRenderer = (obj, resp) => {\n  // Add as the first item in refinements\n  if (resp && Array.isArray(resp.refinements)) {\n    resp.refinements.unshift({\n      q: UTIL.parseText(obj.correctedQuery, ''),\n      url: new URL(obj.correctedQueryEndpoint.commandMetadata.webCommandMetadata.url, BASE_VIDEO_URL).toString(),\n      bestThumbnail: null,\n      thumbnails: null,\n    });\n  }\n  return null;\n};\n\nconst parseShowingResultsFor = (obj, resp) => {\n  // Add as resultsFor\n  const cor = obj.showingResultsForRenderer.correctedQuery || obj.correctedQuery;\n  if (resp) resp.correctedQuery = UTIL.parseText(cor);\n  return null;\n};\n\nconst parseClarification = obj => ({\n  type: 'clarification',\n  title: UTIL.parseText(obj.contentTitle, ''),\n  text: UTIL.parseText(obj.text, ''),\n  sources: [\n    {\n      text: UTIL.parseText(obj.source, ''),\n      url: new URL(obj.endpoint.urlEndpoint.url, BASE_VIDEO_URL).toString(),\n    },\n    !obj.secondarySource ? null : {\n      text: UTIL.parseText(obj.secondarySource, ''),\n      url: new URL(obj.secondaryEndpoint.urlEndpoint.url, BASE_VIDEO_URL).toString(),\n    },\n  ].filter(a => a),\n});\n\nconst parseHorizontalCardListRenderer = (obj, resp) => {\n  const subType = Object.keys(obj.cards[0])[0];\n\n  switch (subType) {\n    case 'searchRefinementCardRenderer':\n      return parseHorizontalRefinements(obj, resp);\n    case 'previewCardRenderer':\n      return parseHorizontalChannelList(obj);\n    default:\n      throw new Error(`subType ${subType} of type horizontalCardListRenderer not known`);\n  }\n};\n\nconst parseHorizontalRefinements = (obj, resp) => {\n  // Add to refinements\n  if (resp && Array.isArray(resp.refinements)) {\n    resp.refinements.push(...obj.cards.map(c => {\n      const targetUrl = c.searchRefinementCardRenderer.searchEndpoint.commandMetadata.webCommandMetadata.url;\n      return {\n        q: UTIL.parseText(c.searchRefinementCardRenderer.query, ''),\n        url: new URL(targetUrl, BASE_VIDEO_URL).toString(),\n        bestThumbnail: prepImg(c.searchRefinementCardRenderer.thumbnail.thumbnails)[0],\n        thumbnails: prepImg(c.searchRefinementCardRenderer.thumbnail.thumbnails),\n      };\n    }));\n  }\n  return null;\n};\n\nconst parseHorizontalChannelList = obj => {\n  if (!JSON.stringify(obj.style).includes('CHANNELS')) {\n    // Not sure if this is always a channel + videos\n    throw new Error(`unknown style in horizontalCardListRenderer`);\n  }\n  return {\n    type: 'horizontalChannelList',\n    title: UTIL.parseText(obj.header.richListHeaderRenderer.title, ''),\n    channels: obj.cards.map(i => parseHorizontalChannelListItem(i.previewCardRenderer)).filter(a => a),\n  };\n};\n\nconst parseHorizontalChannelListItem = obj => {\n  const thumbnailRenderer = obj.header.richListHeaderRenderer.channelThumbnail.channelThumbnailWithLinkRenderer;\n  return {\n    type: 'channelPreview',\n    name: UTIL.parseText(obj.header.richListHeaderRenderer.title, ''),\n    channelID: obj.header.richListHeaderRenderer.endpoint.browseEndpoint.browseId,\n    url: new URL(\n      obj.header.richListHeaderRenderer.endpoint.commandMetadata.webCommandMetadata.url,\n      BASE_VIDEO_URL,\n    ).toString(),\n    bestAvatar: prepImg(thumbnailRenderer.thumbnail.thumbnails)[0],\n    avatars: prepImg(thumbnailRenderer.thumbnail.thumbnails),\n    subscribers: UTIL.parseText(obj.header.richListHeaderRenderer.subtitle, ''),\n    // Type: gridVideoRenderer\n    videos: obj.contents.map(i => parseVideo(i.gridVideoRenderer)).filter(a => a),\n  };\n};\n\nconst parseGridMovie = obj => ({\n  // Movie which can be found in horizontalMovieListRenderer\n  type: 'gridMovie',\n  title: UTIL.parseText(obj.title),\n  videoID: obj.videoId,\n  url: new URL(obj.navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_VIDEO_URL).toString(),\n  bestThumbnail: prepImg(obj.thumbnail.thumbnails)[0],\n  thumbnails: prepImg(obj.thumbnail.thumbnails),\n  duration: UTIL.parseText(obj.lengthText),\n});\n\nconst parseMovie = obj => {\n  // Normalize\n  obj.bottomMetadataItems = (obj.bottomMetadataItems || []).map(x => UTIL.parseText(x));\n  const actorsString = obj.bottomMetadataItems.find(x => x.startsWith('Actors'));\n  const directorsString = obj.bottomMetadataItems.find(x => x.startsWith('Director'));\n\n  return {\n    type: 'movie',\n    title: UTIL.parseText(obj.title, ''),\n    videoID: obj.videoId,\n    url: new URL(obj.navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_VIDEO_URL).toString(),\n    bestThumbnail: prepImg(obj.thumbnail.thumbnails)[0],\n    thumbnails: prepImg(obj.thumbnail.thumbnails),\n\n    owner: _parseOwner(obj),\n    description: UTIL.parseText(obj.descriptionSnippet),\n    meta: UTIL.parseText(obj.topMetadataItems[0], '').split(' · '),\n    actors: !actorsString ? [] : actorsString.split(': ')[1].split(', '),\n    directors: !directorsString ? [] : directorsString.split(': ')[1].split(', '),\n    duration: UTIL.parseText(obj.lengthText, ''),\n  };\n};\n\nconst parseShow = obj => {\n  const thumbnails = obj.thumbnailRenderer.showCustomThumbnailRenderer.thumbnail.thumbnails;\n  const owner = _parseOwner(obj);\n  delete owner.ownerBadges;\n  delete owner.verified;\n\n  return {\n    type: 'show',\n    title: UTIL.parseText(obj.title, ''),\n    bestThumbnail: prepImg(thumbnails)[0],\n    thumbnails: prepImg(thumbnails),\n    url: new URL(obj.navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_VIDEO_URL).toString(),\n    videoID: obj.navigationEndpoint.watchEndpoint.videoId,\n    playlistID: obj.navigationEndpoint.watchEndpoint.playlistId,\n    episodes: UTIL.parseIntegerFromText(obj.thumbnailOverlays[0].thumbnailOverlayBottomPanelRenderer.text),\n    owner,\n  };\n};\n\nconst parseShelf = obj => {\n  let rawItems = [];\n  if (Array.isArray(obj.contents)) {\n    rawItems = obj.contents.map(x => x.richItemRenderer.content);\n  } else {\n    rawItems = (obj.content.verticalListRenderer || obj.content.horizontalMovieListRenderer).items;\n  }\n  // Optional obj.thumbnail is ignored\n  return {\n    type: 'shelf',\n    title: UTIL.parseText(obj.title, 'Show More'),\n    items: rawItems.map(i => parseItem(i)).filter(a => a),\n  };\n};\n\n/**\n * Generalised Method\n *\n * used in Playlist, Movie and Show\n * show does never provide badges thou\n *\n * @param {Object} obj the full Renderer Object provided by YouTube\n * @returns {Object} the parsed owner\n */\nconst _parseOwner = obj => {\n  const owner = (obj.shortBylineText && obj.shortBylineText.runs[0]) ||\n    (obj.longBylineText && obj.longBylineText.runs[0]);\n  const ownerUrl = owner.navigationEndpoint.browseEndpoint.canonicalBaseUrl ||\n    owner.navigationEndpoint.commandMetadata.webCommandMetadata.url;\n  const isOfficial = !!(obj.ownerBadges && JSON.stringify(obj.ownerBadges).includes('OFFICIAL'));\n  const isVerified = !!(obj.ownerBadges && JSON.stringify(obj.ownerBadges).includes('VERIFIED'));\n  const fallbackURL = owner.navigationEndpoint.commandMetadata.webCommandMetadata.url;\n\n  return {\n    name: owner.text,\n    channelID: owner.navigationEndpoint.browseEndpoint.browseId,\n    url: new URL(ownerUrl || fallbackURL, BASE_VIDEO_URL).toString(),\n    ownerBadges: Array.isArray(obj.ownerBadges) ? obj.ownerBadges.map(a => a.metadataBadgeRenderer.tooltip) : [],\n    verified: isOfficial || isVerified,\n  };\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytsr/lib/parseItem.js?");

/***/ }),

/***/ "./node_modules/ytsr/lib/utils.js":
/*!****************************************!*\
  !*** ./node_modules/ytsr/lib/utils.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const MINIGET = __webpack_require__(/*! miniget */ \"./node_modules/miniget/dist/index.js\");\n\nconst BASE_URL = 'https://www.youtube.com/';\nconst DEFAULT_OPTIONS = { limit: 100, safeSearch: false };\nconst DEFAULT_QUERY = { gl: 'US', hl: 'en' };\nconst DEFAULT_CONTEXT = {\n  client: {\n    utcOffsetMinutes: 0,\n    gl: 'US',\n    hl: 'en',\n    clientName: 'WEB',\n    clientVersion: '<important information>',\n  },\n  user: {},\n  request: {},\n};\n\nexports.parseFilters = json => {\n  const pc = json.contents.twoColumnSearchResultsRenderer.primaryContents;\n  const wrapper = pc.sectionListRenderer || pc.richGridRenderer;\n  const filterWrapper = (wrapper.subMenu || wrapper.submenu).searchSubMenuRenderer.groups;\n  const parsedGroups = new Map();\n  for (const filterGroup of filterWrapper) {\n    const singleFilterGroup = new Map();\n    singleFilterGroup.active = null;\n    for (const filter of filterGroup.searchFilterGroupRenderer.filters) {\n      const isSet = !filter.searchFilterRenderer.navigationEndpoint;\n      let targetURL = null;\n      if (!isSet) targetURL = filter.searchFilterRenderer.navigationEndpoint.commandMetadata.webCommandMetadata.url;\n      const parsedFilter = {\n        name: parseText(filter.searchFilterRenderer.label, ''),\n        active: isSet,\n        url: isSet ? null : new URL(targetURL, BASE_URL).toString(),\n        description: filter.searchFilterRenderer.tooltip,\n      };\n      if (isSet) singleFilterGroup.active = parsedFilter;\n      singleFilterGroup.set(parsedFilter.name, parsedFilter);\n    }\n    parsedGroups.set(parseText(filterGroup.searchFilterGroupRenderer.title, 'Unknown Category'), singleFilterGroup);\n  }\n  return parsedGroups;\n};\n\nexports.parseBody = (body, options = {}) => {\n  let json = null;\n  try {\n    json = jsonAfter(body, 'var ytInitialData = ');\n  } catch (e) {\n    // Defaulting to null if failed to parse json => results in a retry in main\n  }\n  const apiKey = between(body, 'INNERTUBE_API_KEY\":\"', '\"') || between(body, 'innertubeApiKey\":\"', '\"');\n  const clientVersion = between(body, 'INNERTUBE_CONTEXT_CLIENT_VERSION\":\"', '\"') ||\n    between(body, 'innertube_context_client_version\":\"', '\"');\n  // Make deep copy and set clientVersion\n  const context = JSON.parse(JSON.stringify(DEFAULT_CONTEXT));\n  context.client.clientVersion = clientVersion;\n  // Add params to context\n  if (options.gl) context.client.gl = options.gl;\n  if (options.hl) context.client.hl = options.hl;\n  if (options.utcOffsetMinutes) context.client.utcOffsetMinutes = options.utcOffsetMinutes;\n  if (options.safeSearch) context.user.enableSafetyMode = true;\n  // Return multiple values\n  return { json, apiKey, context };\n};\n\n// Parsing utility\nconst parseText = exports.parseText = (txt, def = null) => {\n  if (typeof txt !== 'object') return def;\n  if (Object.prototype.hasOwnProperty.call(txt, 'simpleText')) return txt.simpleText;\n  if (Array.isArray(txt.runs)) {\n    return txt.runs.map(a => a.text).join('');\n  }\n  return def;\n};\n\nexports.parseIntegerFromText = txt => Number(parseText(txt).replace(/\\D+/g, ''));\n\n// Request Utility\nexports.doPost = async(url, payload, reqOpts = {}) => {\n  // Enforce POST-Request\n  reqOpts.method = 'POST';\n  const req = MINIGET(url, reqOpts);\n  // Write request body\n  if (payload) req.once('request', r => r.write(JSON.stringify(payload)));\n  // Await response-text and parse json\n  return JSON.parse(await req.text());\n};\n\n// Guarantee that all arguments are valid\nexports.checkArgs = (searchString, options = {}) => {\n  // Validation\n  if (!searchString) {\n    throw new Error('search string is mandatory');\n  }\n  if (typeof searchString !== 'string') {\n    throw new Error('search string must be of type string');\n  }\n\n  // Normalisation\n  let obj = Object.assign({}, DEFAULT_OPTIONS, options);\n  // Other optional params\n  if (!isNaN(obj.pages) && obj.pages > 0) {\n    // Disable limit if pages is provided\n    obj.limit = Infinity;\n  } else if (isNaN(obj.limit) || obj.limit <= 0) {\n    // Default limit\n    obj.pages = Infinity;\n    obj.limit = DEFAULT_OPTIONS.limit;\n  }\n  if (typeof obj.safeSearch !== 'boolean') obj.safeSearch = DEFAULT_OPTIONS.safeSearch;\n  // Default requestOptions\n  obj.requestOptions = Object.assign({}, options.requestOptions);\n  // Unlink requestOptions#headers\n  if (obj.requestOptions.headers) {\n    obj.requestOptions.headers = JSON.parse(JSON.stringify(obj.requestOptions.headers));\n  }\n  // Setting cookie in request headers to get safe search results\n  if (obj.safeSearch) {\n    if (!obj.requestOptions.headers) obj.requestOptions.headers = {};\n    if (!obj.requestOptions.headers.Cookie) obj.requestOptions.headers.Cookie = [];\n    obj.requestOptions.headers.Cookie.push('PREF=f2=8000000');\n  }\n  // Set required parameter: query\n  const inputURL = new URL(searchString, BASE_URL);\n  if (searchString.startsWith(BASE_URL) && inputURL.pathname === '/results' && inputURL.searchParams.has('sp')) {\n    // Watch out for requests with a set filter\n    // in such a case searchString would be an url including `sp` & `search_query` querys\n    if (!inputURL.searchParams.get('search_query')) {\n      throw new Error('filter links have to include a \"search_string\" query');\n    }\n    // Object.fromEntries not supported in nodejs < v12\n    obj.query = {};\n    for (const key of inputURL.searchParams.keys()) {\n      obj.query[key] = inputURL.searchParams.get(key);\n    }\n  } else {\n    // If no filter-link default to passing it all as query\n    obj.query = { search_query: searchString };\n  }\n  // Save the search term itself for potential later use\n  obj.search = obj.query.search_query;\n\n  // Add additional information\n  obj.query = Object.assign({}, DEFAULT_QUERY, obj.query);\n  if (options && options.gl) obj.query.gl = options.gl;\n  if (options && options.hl) obj.query.hl = options.hl;\n  return obj;\n};\n\n// Sorts Images in descending order & normalizes the url's\nexports.prepImg = img => {\n  // Resolve url\n  img.forEach(x => x.url = x.url ? new URL(x.url, BASE_URL).toString() : null);\n  // Sort\n  return img.sort((a, b) => b.width - a.width);\n};\n\nexports.parseWrapper = primaryContents => {\n  let rawItems = [];\n  let continuation = null;\n\n  // Older Format\n  if (primaryContents.sectionListRenderer) {\n    rawItems = primaryContents.sectionListRenderer.contents\n      .find(x => Object.keys(x)[0] === 'itemSectionRenderer')\n      .itemSectionRenderer.contents;\n    continuation = primaryContents.sectionListRenderer.contents\n      .find(x => Object.keys(x)[0] === 'continuationItemRenderer');\n  // Newer Format\n  } else if (primaryContents.richGridRenderer) {\n    rawItems = primaryContents.richGridRenderer.contents\n      .filter(x => !Object.prototype.hasOwnProperty.call(x, 'continuationItemRenderer'))\n      .map(x => (x.richItemRenderer || x.richSectionRenderer).content);\n    continuation = primaryContents.richGridRenderer.contents\n      .find(x => Object.prototype.hasOwnProperty.call(x, 'continuationItemRenderer'));\n  }\n\n  return { rawItems, continuation };\n};\n\nexports.parsePage2Wrapper = continuationItems => {\n  let rawItems = [];\n  let continuation = null;\n\n  for (const ci of continuationItems) {\n    // Older Format\n    if (Object.prototype.hasOwnProperty.call(ci, 'itemSectionRenderer')) {\n      rawItems.push(...ci.itemSectionRenderer.contents);\n    // Newer Format\n    } else if (Object.prototype.hasOwnProperty.call(ci, 'richItemRenderer')) {\n      rawItems.push(ci.richItemRenderer.content);\n    } else if (Object.prototype.hasOwnProperty.call(ci, 'richSectionRenderer')) {\n      rawItems.push(ci.richSectionRenderer.content);\n    // Continuation\n    } else if (Object.prototype.hasOwnProperty.call(ci, 'continuationItemRenderer')) {\n      continuation = ci;\n    }\n  }\n\n  return { rawItems, continuation };\n};\n\n/**\n * Extract json after given string.\n * loosely based on utils#between\n *\n * @param {string} haystack\n * @param {string} left\n * @returns {Object|null} the parsed json or null\n */\nconst jsonAfter = (haystack, left) => {\n  const pos = haystack.indexOf(left);\n  if (pos === -1) { return null; }\n  haystack = haystack.slice(pos + left.length);\n  try {\n    return JSON.parse(cutAfterJSON(haystack));\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * Extract string inbetween another.\n * Property of https://github.com/fent/node-ytdl-core/blob/master/lib/utils.js\n *\n * @param {string} haystack\n * @param {string} left\n * @param {string} right\n * @returns {string}\n */\nconst between = (haystack, left, right) => {\n  let pos;\n  pos = haystack.indexOf(left);\n  if (pos === -1) { return ''; }\n  pos += left.length;\n  haystack = haystack.slice(pos);\n  pos = haystack.indexOf(right);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n\n/**\n * Match begin and end braces of input JSON, return only json\n * Property of https://github.com/fent/node-ytdl-core/blob/master/lib/utils.js\n *\n * @param {string} mixedJson\n * @returns {string}\n * @throws {Error} no json or invalid json\n*/\nconst cutAfterJSON = exports.cutAfterJSON = mixedJson => {\n  let open, close;\n  if (mixedJson[0] === '[') {\n    open = '[';\n    close = ']';\n  } else if (mixedJson[0] === '{') {\n    open = '{';\n    close = '}';\n  }\n\n  if (!open) {\n    throw new Error(`Can't cut unsupported JSON (need to begin with [ or { ) but got: ${mixedJson[0]}`);\n  }\n\n  // States if the loop is currently in a string\n  let isString = false;\n\n  // States if the current character is treated as escaped or not\n  let isEscaped = false;\n\n  // Current open brackets to be closed\n  let counter = 0;\n\n  let i;\n  for (i = 0; i < mixedJson.length; i++) {\n    // Toggle the isString boolean when leaving/entering string\n    if (mixedJson[i] === '\"' && !isEscaped) {\n      isString = !isString;\n      continue;\n    }\n\n    // Toggle the isEscaped boolean for every backslash\n    // Reset for every regular character\n    isEscaped = mixedJson[i] === '\\\\' && !isEscaped;\n\n    if (isString) continue;\n\n    if (mixedJson[i] === open) {\n      counter++;\n    } else if (mixedJson[i] === close) {\n      counter--;\n    }\n\n    // All brackets have been closed, thus end of JSON is reached\n    if (counter === 0) {\n      // Return the cut JSON\n      return mixedJson.substr(0, i + 1);\n    }\n  }\n\n  // We ran through the whole string and ended up with an unclosed bracket\n  throw Error(\"Can't cut unsupported JSON (no matching closing bracket found)\");\n};\n\n// Exports for testing\nexports._hidden = {\n  jsonAfter, between, cutAfterJSON,\n};\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytsr/lib/utils.js?");

/***/ }),

/***/ "./node_modules/ytsr/lib sync recursive":
/*!*************************************!*\
  !*** ./node_modules/ytsr/lib/ sync ***!
  \*************************************/
/***/ ((module) => {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/ytsr/lib sync recursive\";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytsr/lib/_sync?");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dgram":
/*!************************!*\
  !*** external "dgram" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("dgram");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "./node_modules/node-fetch/lib/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/node-fetch/lib/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"Headers\": () => (/* binding */ Headers),\n/* harmony export */   \"Request\": () => (/* binding */ Request),\n/* harmony export */   \"Response\": () => (/* binding */ Response),\n/* harmony export */   \"FetchError\": () => (/* binding */ FetchError)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zlib */ \"zlib\");\n\n\n\n\n\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = stream__WEBPACK_IMPORTED_MODULE_0__.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof stream__WEBPACK_IMPORTED_MODULE_0__)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__ && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http__WEBPACK_IMPORTED_MODULE_1__.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = url__WEBPACK_IMPORTED_MODULE_2__.parse;\nconst format_url = url__WEBPACK_IMPORTED_MODULE_2__.format;\n\nconst streamDestructionSupported = 'destroy' in stream__WEBPACK_IMPORTED_MODULE_0__.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;\nconst resolve_url = url__WEBPACK_IMPORTED_MODULE_2__.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_3__ : http__WEBPACK_IMPORTED_MODULE_1__).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib__WEBPACK_IMPORTED_MODULE_4__.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib__WEBPACK_IMPORTED_MODULE_4__.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib__WEBPACK_IMPORTED_MODULE_4__.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4__.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n\n\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/node-fetch/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/@discordjs/voice/package.json":
/*!****************************************************!*\
  !*** ./node_modules/@discordjs/voice/package.json ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_args\":[[\"@discordjs/voice@0.6.0\",\"/Users/m.palacio/Workspace/personal/tape-bot\"]],\"_from\":\"@discordjs/voice@0.6.0\",\"_id\":\"@discordjs/voice@0.6.0\",\"_inBundle\":false,\"_integrity\":\"sha512-DF2fZAnB8gX3Qz5BEWPOUl565ptpda1uVmXJije4iK5aQrECfkqc6XcI+wzbGaNvzsH1Wb76NPzxngsEw8bblw==\",\"_location\":\"/@discordjs/voice\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"@discordjs/voice@0.6.0\",\"name\":\"@discordjs/voice\",\"escapedName\":\"@discordjs%2fvoice\",\"scope\":\"@discordjs\",\"rawSpec\":\"0.6.0\",\"saveSpec\":null,\"fetchSpec\":\"0.6.0\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmjs.org/@discordjs/voice/-/voice-0.6.0.tgz\",\"_spec\":\"0.6.0\",\"_where\":\"/Users/m.palacio/Workspace/personal/tape-bot\",\"author\":{\"name\":\"Amish Shah\",\"email\":\"amish@shah.gg\"},\"bugs\":{\"url\":\"https://github.com/discordjs/voice/issues\"},\"commitlint\":{\"extends\":[\"@commitlint/config-angular\"],\"rules\":{\"type-enum\":[2,\"always\",[\"chore\",\"build\",\"ci\",\"docs\",\"feat\",\"fix\",\"perf\",\"refactor\",\"revert\",\"style\",\"test\",\"types\",\"wip\"]],\"scope-case\":[1,\"always\",\"pascal-case\"]}},\"dependencies\":{\"@types/ws\":\"^7.4.4\",\"discord-api-types\":\"^0.22.0\",\"prism-media\":\"^1.3.1\",\"tiny-typed-emitter\":\"^2.0.3\",\"ws\":\"^7.4.4\"},\"description\":\"Implementation of the Discord Voice API for Node.js\",\"devDependencies\":{\"@babel/core\":\"^7.14.3\",\"@babel/preset-env\":\"^7.14.4\",\"@babel/preset-typescript\":\"^7.13.0\",\"@commitlint/cli\":\"^12.1.4\",\"@commitlint/config-angular\":\"^12.1.4\",\"@favware/rollup-type-bundler\":\"^1.0.2\",\"@types/jest\":\"^26.0.23\",\"@types/node\":\"^16.4.13\",\"@typescript-eslint/eslint-plugin\":\"^4.26.1\",\"@typescript-eslint/parser\":\"^4.26.1\",\"babel-jest\":\"^27.0.2\",\"eslint\":\"^7.28.0\",\"eslint-config-marine\":\"^9.0.6\",\"eslint-config-prettier\":\"^8.3.0\",\"eslint-plugin-prettier\":\"^3.4.0\",\"husky\":\"^4.3.8\",\"jest\":\"^27.0.4\",\"jest-websocket-mock\":\"^2.2.0\",\"lint-staged\":\"^11.0.0\",\"mock-socket\":\"^9.0.3\",\"prettier\":\"^2.3.1\",\"typedoc\":\"^0.20.34\",\"typescript\":\"~4.2.2\"},\"directories\":{\"test\":\"test\"},\"engines\":{\"node\":\">=16.0.0\"},\"files\":[\"dist/*\"],\"homepage\":\"https://github.com/discordjs/voice#readme\",\"husky\":{\"hooks\":{\"pre-commit\":\"lint-staged\",\"commit-msg\":\"commitlint -E HUSKY_GIT_PARAMS\"}},\"keywords\":[\"discord\",\"discord.js\",\"audio\",\"voice\",\"streaming\"],\"license\":\"MIT\",\"lint-staged\":{\"*.{mjs,js,ts}\":[\"eslint --ext .ts --fix\"],\"*.{json,yml,yaml}\":[\"prettier --write\"]},\"main\":\"dist/index.js\",\"name\":\"@discordjs/voice\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/discordjs/voice.git\"},\"scripts\":{\"build\":\"tsc\",\"build:check\":\"tsc --noEmit --incremental false\",\"docs\":\"typedoc src/index.ts\",\"lint\":\"eslint src --ext .ts\",\"lint:fix\":\"eslint src --ext .ts --fix\",\"prepublishOnly\":\"rollup-type-bundler -e stream\",\"prettier\":\"prettier --write **/*.{ts,js,json,yml,yaml}\",\"test\":\"jest\",\"test:ci\":\"jest --verbose --ci --no-stack-trace\"},\"typings\":\"dist/index.d.ts\",\"version\":\"0.6.0\"}');\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/@discordjs/voice/package.json?");

/***/ }),

/***/ "./node_modules/discord.js/package.json":
/*!**********************************************!*\
  !*** ./node_modules/discord.js/package.json ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_args\":[[\"discord.js@13.1.0\",\"/Users/m.palacio/Workspace/personal/tape-bot\"]],\"_from\":\"discord.js@13.1.0\",\"_id\":\"discord.js@13.1.0\",\"_inBundle\":false,\"_integrity\":\"sha512-gxO4CXKdHpqA+WKG+f5RNnd3srTDj5uFJHgOathksDE90YNq/Qijkd2WlMgTTMS6AJoEnHxI7G9eDQHCuZ+xDA==\",\"_location\":\"/discord.js\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"discord.js@13.1.0\",\"name\":\"discord.js\",\"escapedName\":\"discord.js\",\"rawSpec\":\"13.1.0\",\"saveSpec\":null,\"fetchSpec\":\"13.1.0\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmjs.org/discord.js/-/discord.js-13.1.0.tgz\",\"_spec\":\"13.1.0\",\"_where\":\"/Users/m.palacio/Workspace/personal/tape-bot\",\"author\":{\"name\":\"Amish Shah\",\"email\":\"amish@shah.gg\"},\"bugs\":{\"url\":\"https://github.com/discordjs/discord.js/issues\"},\"dependencies\":{\"@discordjs/builders\":\"^0.5.0\",\"@discordjs/collection\":\"^0.2.1\",\"@discordjs/form-data\":\"^3.0.1\",\"@sapphire/async-queue\":\"^1.1.4\",\"@types/ws\":\"^7.4.7\",\"discord-api-types\":\"^0.22.0\",\"node-fetch\":\"^2.6.1\",\"ws\":\"^7.5.1\"},\"description\":\"A powerful library for interacting with the Discord API\",\"devDependencies\":{\"@commitlint/cli\":\"^13.1.0\",\"@commitlint/config-angular\":\"^13.1.0\",\"@discordjs/docgen\":\"^0.10.0\",\"@types/node\":\"^16.4.12\",\"conventional-changelog-cli\":\"^2.1.1\",\"cross-env\":\"^7.0.3\",\"dtslint\":\"^4.1.3\",\"eslint\":\"^7.32.0\",\"eslint-config-prettier\":\"^8.3.0\",\"eslint-plugin-import\":\"^2.23.4\",\"eslint-plugin-prettier\":\"^3.4.0\",\"gen-esm-wrapper\":\"^1.1.2\",\"husky\":\"^7.0.1\",\"is-ci\":\"^3.0.0\",\"jest\":\"^27.0.6\",\"lint-staged\":\"^11.1.1\",\"prettier\":\"^2.3.2\",\"tslint\":\"^6.1.3\",\"typescript\":\"^4.3.5\"},\"engines\":{\"node\":\">=16.6.0\",\"npm\":\">=7.0.0\"},\"exports\":{\"./*\":\"./*\",\".\":{\"require\":\"./src/index.js\",\"import\":\"./src/index.mjs\"}},\"files\":[\"src\",\"typings\"],\"homepage\":\"https://github.com/discordjs/discord.js#readme\",\"keywords\":[\"discord\",\"api\",\"bot\",\"client\",\"node\",\"discordapp\"],\"license\":\"Apache-2.0\",\"main\":\"./src/index.js\",\"module\":\"./src/index.mjs\",\"name\":\"discord.js\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/discordjs/discord.js.git\"},\"scripts\":{\"changelog\":\"conventional-changelog -p angular -i CHANGELOG.md -s\",\"docs\":\"docgen --source src --custom docs/index.yml --output docs/docs.json\",\"docs:test\":\"docgen --source src --custom docs/index.yml\",\"lint\":\"eslint src\",\"lint:fix\":\"eslint src --fix\",\"lint:typings\":\"tslint typings/index.d.ts\",\"prepare\":\"is-ci || husky install\",\"prepublishOnly\":\"npm run test && gen-esm-wrapper ./src/index.js ./src/index.mjs\",\"prettier\":\"prettier --write src/**/*.js typings/**/*.ts\",\"test\":\"npm run lint && npm run docs:test && npm run lint:typings\",\"test:typescript\":\"tsc\"},\"types\":\"./typings/index.d.ts\",\"version\":\"13.1.0\"}');\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/discord.js/package.json?");

/***/ }),

/***/ "./node_modules/mime-db/db.json":
/*!**************************************!*\
  !*** ./node_modules/mime-db/db.json ***!
  \**************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"application/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"application/3gpdash-qoe-report+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/3gpp-ims+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphalforms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/a2l\":{\"source\":\"iana\"},\"application/activemessage\":{\"source\":\"iana\"},\"application/activity+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-directory+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcost+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcostparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointprop+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointpropparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-error+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamcontrol+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/aml\":{\"source\":\"iana\"},\"application/andrew-inset\":{\"source\":\"iana\",\"extensions\":[\"ez\"]},\"application/applefile\":{\"source\":\"iana\"},\"application/applixware\":{\"source\":\"apache\",\"extensions\":[\"aw\"]},\"application/atf\":{\"source\":\"iana\"},\"application/atfx\":{\"source\":\"iana\"},\"application/atom+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atom\"]},\"application/atomcat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomcat\"]},\"application/atomdeleted+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomdeleted\"]},\"application/atomicmail\":{\"source\":\"iana\"},\"application/atomsvc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomsvc\"]},\"application/atsc-dwd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dwd\"]},\"application/atsc-dynamic-event-message\":{\"source\":\"iana\"},\"application/atsc-held+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"held\"]},\"application/atsc-rdt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/atsc-rsat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsat\"]},\"application/atxml\":{\"source\":\"iana\"},\"application/auth-policy+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/bacnet-xdd+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/batch-smtp\":{\"source\":\"iana\"},\"application/bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/beep+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/calendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/calendar+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xcs\"]},\"application/call-completion\":{\"source\":\"iana\"},\"application/cals-1840\":{\"source\":\"iana\"},\"application/captive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cbor\":{\"source\":\"iana\"},\"application/cbor-seq\":{\"source\":\"iana\"},\"application/cccex\":{\"source\":\"iana\"},\"application/ccmp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ccxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ccxml\"]},\"application/cdfx+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdfx\"]},\"application/cdmi-capability\":{\"source\":\"iana\",\"extensions\":[\"cdmia\"]},\"application/cdmi-container\":{\"source\":\"iana\",\"extensions\":[\"cdmic\"]},\"application/cdmi-domain\":{\"source\":\"iana\",\"extensions\":[\"cdmid\"]},\"application/cdmi-object\":{\"source\":\"iana\",\"extensions\":[\"cdmio\"]},\"application/cdmi-queue\":{\"source\":\"iana\",\"extensions\":[\"cdmiq\"]},\"application/cdni\":{\"source\":\"iana\"},\"application/cea\":{\"source\":\"iana\"},\"application/cea-2018+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cellml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cfw\":{\"source\":\"iana\"},\"application/clr\":{\"source\":\"iana\"},\"application/clue+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/clue_info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cms\":{\"source\":\"iana\"},\"application/cnrp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-group+json\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-payload\":{\"source\":\"iana\"},\"application/commonground\":{\"source\":\"iana\"},\"application/conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cose\":{\"source\":\"iana\"},\"application/cose-key\":{\"source\":\"iana\"},\"application/cose-key-set\":{\"source\":\"iana\"},\"application/cpl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csrattrs\":{\"source\":\"iana\"},\"application/csta+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cstadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csvm+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cu-seeme\":{\"source\":\"apache\",\"extensions\":[\"cu\"]},\"application/cwt\":{\"source\":\"iana\"},\"application/cybercash\":{\"source\":\"iana\"},\"application/dart\":{\"compressible\":true},\"application/dash+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpd\"]},\"application/dashdelta\":{\"source\":\"iana\"},\"application/davmount+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"davmount\"]},\"application/dca-rft\":{\"source\":\"iana\"},\"application/dcd\":{\"source\":\"iana\"},\"application/dec-dx\":{\"source\":\"iana\"},\"application/dialog-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom\":{\"source\":\"iana\"},\"application/dicom+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dii\":{\"source\":\"iana\"},\"application/dit\":{\"source\":\"iana\"},\"application/dns\":{\"source\":\"iana\"},\"application/dns+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dns-message\":{\"source\":\"iana\"},\"application/docbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dbk\"]},\"application/dots+cbor\":{\"source\":\"iana\"},\"application/dskpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dssc+der\":{\"source\":\"iana\",\"extensions\":[\"dssc\"]},\"application/dssc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdssc\"]},\"application/dvcs\":{\"source\":\"iana\"},\"application/ecmascript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es\",\"ecma\"]},\"application/edi-consent\":{\"source\":\"iana\"},\"application/edi-x12\":{\"source\":\"iana\",\"compressible\":false},\"application/edifact\":{\"source\":\"iana\",\"compressible\":false},\"application/efi\":{\"source\":\"iana\"},\"application/elm+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/elm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.cap+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/emergencycalldata.comment+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.deviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.ecall.msd\":{\"source\":\"iana\"},\"application/emergencycalldata.providerinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.serviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.subscriberinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.veds+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emma+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emma\"]},\"application/emotionml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emotionml\"]},\"application/encaprtp\":{\"source\":\"iana\"},\"application/epp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/epub+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"epub\"]},\"application/eshop\":{\"source\":\"iana\"},\"application/exi\":{\"source\":\"iana\",\"extensions\":[\"exi\"]},\"application/expect-ct-report+json\":{\"source\":\"iana\",\"compressible\":true},\"application/fastinfoset\":{\"source\":\"iana\"},\"application/fastsoap\":{\"source\":\"iana\"},\"application/fdt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fdt\"]},\"application/fhir+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fhir+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fido.trusted-apps+json\":{\"compressible\":true},\"application/fits\":{\"source\":\"iana\"},\"application/flexfec\":{\"source\":\"iana\"},\"application/font-sfnt\":{\"source\":\"iana\"},\"application/font-tdpfr\":{\"source\":\"iana\",\"extensions\":[\"pfr\"]},\"application/font-woff\":{\"source\":\"iana\",\"compressible\":false},\"application/framework-attributes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/geo+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"geojson\"]},\"application/geo+json-seq\":{\"source\":\"iana\"},\"application/geopackage+sqlite3\":{\"source\":\"iana\"},\"application/geoxacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/gltf-buffer\":{\"source\":\"iana\"},\"application/gml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gml\"]},\"application/gpx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"gpx\"]},\"application/gxf\":{\"source\":\"apache\",\"extensions\":[\"gxf\"]},\"application/gzip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gz\"]},\"application/h224\":{\"source\":\"iana\"},\"application/held+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/hjson\":{\"extensions\":[\"hjson\"]},\"application/http\":{\"source\":\"iana\"},\"application/hyperstudio\":{\"source\":\"iana\",\"extensions\":[\"stk\"]},\"application/ibe-key-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pkg-reply+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pp-data\":{\"source\":\"iana\"},\"application/iges\":{\"source\":\"iana\"},\"application/im-iscomposing+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/index\":{\"source\":\"iana\"},\"application/index.cmd\":{\"source\":\"iana\"},\"application/index.obj\":{\"source\":\"iana\"},\"application/index.response\":{\"source\":\"iana\"},\"application/index.vnd\":{\"source\":\"iana\"},\"application/inkml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ink\",\"inkml\"]},\"application/iotp\":{\"source\":\"iana\"},\"application/ipfix\":{\"source\":\"iana\",\"extensions\":[\"ipfix\"]},\"application/ipp\":{\"source\":\"iana\"},\"application/isup\":{\"source\":\"iana\"},\"application/its+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"its\"]},\"application/java-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jar\",\"war\",\"ear\"]},\"application/java-serialized-object\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"ser\"]},\"application/java-vm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"class\"]},\"application/javascript\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"js\",\"mjs\"]},\"application/jf2feed+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jose\":{\"source\":\"iana\"},\"application/jose+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jrd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jscalendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"json\",\"map\"]},\"application/json-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json-seq\":{\"source\":\"iana\"},\"application/json5\":{\"extensions\":[\"json5\"]},\"application/jsonml+json\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"jsonml\"]},\"application/jwk+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwk-set+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwt\":{\"source\":\"iana\"},\"application/kpml-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/kpml-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ld+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"jsonld\"]},\"application/lgr+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lgr\"]},\"application/link-format\":{\"source\":\"iana\"},\"application/load-control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lost+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lostxml\"]},\"application/lostsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lpf+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/lxf\":{\"source\":\"iana\"},\"application/mac-binhex40\":{\"source\":\"iana\",\"extensions\":[\"hqx\"]},\"application/mac-compactpro\":{\"source\":\"apache\",\"extensions\":[\"cpt\"]},\"application/macwriteii\":{\"source\":\"iana\"},\"application/mads+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mads\"]},\"application/manifest+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"webmanifest\"]},\"application/marc\":{\"source\":\"iana\",\"extensions\":[\"mrc\"]},\"application/marcxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mrcx\"]},\"application/mathematica\":{\"source\":\"iana\",\"extensions\":[\"ma\",\"nb\",\"mb\"]},\"application/mathml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mathml\"]},\"application/mathml-content+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mathml-presentation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-associated-procedure-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-deregister+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-envelope+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-protection-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-reception-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-schedule+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-user-service-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbox\":{\"source\":\"iana\",\"extensions\":[\"mbox\"]},\"application/media-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/media_control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mediaservercontrol+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mscml\"]},\"application/merge-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/metalink+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"metalink\"]},\"application/metalink4+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"meta4\"]},\"application/mets+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mets\"]},\"application/mf4\":{\"source\":\"iana\"},\"application/mikey\":{\"source\":\"iana\"},\"application/mipc\":{\"source\":\"iana\"},\"application/missing-blocks+cbor-seq\":{\"source\":\"iana\"},\"application/mmt-aei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"maei\"]},\"application/mmt-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musd\"]},\"application/mods+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mods\"]},\"application/moss-keys\":{\"source\":\"iana\"},\"application/moss-signature\":{\"source\":\"iana\"},\"application/mosskey-data\":{\"source\":\"iana\"},\"application/mosskey-request\":{\"source\":\"iana\"},\"application/mp21\":{\"source\":\"iana\",\"extensions\":[\"m21\",\"mp21\"]},\"application/mp4\":{\"source\":\"iana\",\"extensions\":[\"mp4s\",\"m4p\"]},\"application/mpeg4-generic\":{\"source\":\"iana\"},\"application/mpeg4-iod\":{\"source\":\"iana\"},\"application/mpeg4-iod-xmt\":{\"source\":\"iana\"},\"application/mrb-consumer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mrb-publish+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/msc-ivr+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msc-mixer+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msword\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"doc\",\"dot\"]},\"application/mud+json\":{\"source\":\"iana\",\"compressible\":true},\"application/multipart-core\":{\"source\":\"iana\"},\"application/mxf\":{\"source\":\"iana\",\"extensions\":[\"mxf\"]},\"application/n-quads\":{\"source\":\"iana\",\"extensions\":[\"nq\"]},\"application/n-triples\":{\"source\":\"iana\",\"extensions\":[\"nt\"]},\"application/nasdata\":{\"source\":\"iana\"},\"application/news-checkgroups\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-groupinfo\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-transmission\":{\"source\":\"iana\"},\"application/nlsml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/node\":{\"source\":\"iana\",\"extensions\":[\"cjs\"]},\"application/nss\":{\"source\":\"iana\"},\"application/oauth-authz-req+jwt\":{\"source\":\"iana\"},\"application/ocsp-request\":{\"source\":\"iana\"},\"application/ocsp-response\":{\"source\":\"iana\"},\"application/octet-stream\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]},\"application/oda\":{\"source\":\"iana\",\"extensions\":[\"oda\"]},\"application/odm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/odx\":{\"source\":\"iana\"},\"application/oebps-package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"opf\"]},\"application/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogx\"]},\"application/omdoc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"omdoc\"]},\"application/onenote\":{\"source\":\"apache\",\"extensions\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]},\"application/opc-nodeset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/oscore\":{\"source\":\"iana\"},\"application/oxps\":{\"source\":\"iana\",\"extensions\":[\"oxps\"]},\"application/p21+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/p2p-overlay+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"relo\"]},\"application/parityfec\":{\"source\":\"iana\"},\"application/passport\":{\"source\":\"iana\"},\"application/patch-ops-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/pdf\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pdf\"]},\"application/pdx\":{\"source\":\"iana\"},\"application/pem-certificate-chain\":{\"source\":\"iana\"},\"application/pgp-encrypted\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pgp\"]},\"application/pgp-keys\":{\"source\":\"iana\"},\"application/pgp-signature\":{\"source\":\"iana\",\"extensions\":[\"asc\",\"sig\"]},\"application/pics-rules\":{\"source\":\"apache\",\"extensions\":[\"prf\"]},\"application/pidf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pidf-diff+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pkcs10\":{\"source\":\"iana\",\"extensions\":[\"p10\"]},\"application/pkcs12\":{\"source\":\"iana\"},\"application/pkcs7-mime\":{\"source\":\"iana\",\"extensions\":[\"p7m\",\"p7c\"]},\"application/pkcs7-signature\":{\"source\":\"iana\",\"extensions\":[\"p7s\"]},\"application/pkcs8\":{\"source\":\"iana\",\"extensions\":[\"p8\"]},\"application/pkcs8-encrypted\":{\"source\":\"iana\"},\"application/pkix-attr-cert\":{\"source\":\"iana\",\"extensions\":[\"ac\"]},\"application/pkix-cert\":{\"source\":\"iana\",\"extensions\":[\"cer\"]},\"application/pkix-crl\":{\"source\":\"iana\",\"extensions\":[\"crl\"]},\"application/pkix-pkipath\":{\"source\":\"iana\",\"extensions\":[\"pkipath\"]},\"application/pkixcmp\":{\"source\":\"iana\",\"extensions\":[\"pki\"]},\"application/pls+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pls\"]},\"application/poc-settings+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/postscript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ai\",\"eps\",\"ps\"]},\"application/ppsp-tracker+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/provenance+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"provx\"]},\"application/prs.alvestrand.titrax-sheet\":{\"source\":\"iana\"},\"application/prs.cww\":{\"source\":\"iana\",\"extensions\":[\"cww\"]},\"application/prs.cyn\":{\"source\":\"iana\",\"charset\":\"7-BIT\"},\"application/prs.hpub+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/prs.nprend\":{\"source\":\"iana\"},\"application/prs.plucker\":{\"source\":\"iana\"},\"application/prs.rdf-xml-crypt\":{\"source\":\"iana\"},\"application/prs.xsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pskc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pskcxml\"]},\"application/pvd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/qsig\":{\"source\":\"iana\"},\"application/raml+yaml\":{\"compressible\":true,\"extensions\":[\"raml\"]},\"application/raptorfec\":{\"source\":\"iana\"},\"application/rdap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/rdf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rdf\",\"owl\"]},\"application/reginfo+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rif\"]},\"application/relax-ng-compact-syntax\":{\"source\":\"iana\",\"extensions\":[\"rnc\"]},\"application/remote-printing\":{\"source\":\"iana\"},\"application/reputon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/resource-lists+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rl\"]},\"application/resource-lists-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rld\"]},\"application/rfc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/riscos\":{\"source\":\"iana\"},\"application/rlmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/rls-services+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rs\"]},\"application/route-apd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rapd\"]},\"application/route-s-tsid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sls\"]},\"application/route-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rusd\"]},\"application/rpki-ghostbusters\":{\"source\":\"iana\",\"extensions\":[\"gbr\"]},\"application/rpki-manifest\":{\"source\":\"iana\",\"extensions\":[\"mft\"]},\"application/rpki-publication\":{\"source\":\"iana\"},\"application/rpki-roa\":{\"source\":\"iana\",\"extensions\":[\"roa\"]},\"application/rpki-updown\":{\"source\":\"iana\"},\"application/rsd+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rsd\"]},\"application/rss+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rss\"]},\"application/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"application/rtploopback\":{\"source\":\"iana\"},\"application/rtx\":{\"source\":\"iana\"},\"application/samlassertion+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/samlmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif-external-properties+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sbe\":{\"source\":\"iana\"},\"application/sbml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sbml\"]},\"application/scaip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/scim+json\":{\"source\":\"iana\",\"compressible\":true},\"application/scvp-cv-request\":{\"source\":\"iana\",\"extensions\":[\"scq\"]},\"application/scvp-cv-response\":{\"source\":\"iana\",\"extensions\":[\"scs\"]},\"application/scvp-vp-request\":{\"source\":\"iana\",\"extensions\":[\"spq\"]},\"application/scvp-vp-response\":{\"source\":\"iana\",\"extensions\":[\"spp\"]},\"application/sdp\":{\"source\":\"iana\",\"extensions\":[\"sdp\"]},\"application/secevent+jwt\":{\"source\":\"iana\"},\"application/senml+cbor\":{\"source\":\"iana\"},\"application/senml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"senmlx\"]},\"application/senml-etch+cbor\":{\"source\":\"iana\"},\"application/senml-etch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml-exi\":{\"source\":\"iana\"},\"application/sensml+cbor\":{\"source\":\"iana\"},\"application/sensml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sensml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sensmlx\"]},\"application/sensml-exi\":{\"source\":\"iana\"},\"application/sep+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sep-exi\":{\"source\":\"iana\"},\"application/session-info\":{\"source\":\"iana\"},\"application/set-payment\":{\"source\":\"iana\"},\"application/set-payment-initiation\":{\"source\":\"iana\",\"extensions\":[\"setpay\"]},\"application/set-registration\":{\"source\":\"iana\"},\"application/set-registration-initiation\":{\"source\":\"iana\",\"extensions\":[\"setreg\"]},\"application/sgml\":{\"source\":\"iana\"},\"application/sgml-open-catalog\":{\"source\":\"iana\"},\"application/shf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"shf\"]},\"application/sieve\":{\"source\":\"iana\",\"extensions\":[\"siv\",\"sieve\"]},\"application/simple-filter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/simple-message-summary\":{\"source\":\"iana\"},\"application/simplesymbolcontainer\":{\"source\":\"iana\"},\"application/sipc\":{\"source\":\"iana\"},\"application/slate\":{\"source\":\"iana\"},\"application/smil\":{\"source\":\"iana\"},\"application/smil+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"smi\",\"smil\"]},\"application/smpte336m\":{\"source\":\"iana\"},\"application/soap+fastinfoset\":{\"source\":\"iana\"},\"application/soap+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sparql-query\":{\"source\":\"iana\",\"extensions\":[\"rq\"]},\"application/sparql-results+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"srx\"]},\"application/spirits-event+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sql\":{\"source\":\"iana\"},\"application/srgs\":{\"source\":\"iana\",\"extensions\":[\"gram\"]},\"application/srgs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"grxml\"]},\"application/sru+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sru\"]},\"application/ssdl+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ssdl\"]},\"application/ssml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ssml\"]},\"application/stix+json\":{\"source\":\"iana\",\"compressible\":true},\"application/swid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"swidtag\"]},\"application/tamp-apex-update\":{\"source\":\"iana\"},\"application/tamp-apex-update-confirm\":{\"source\":\"iana\"},\"application/tamp-community-update\":{\"source\":\"iana\"},\"application/tamp-community-update-confirm\":{\"source\":\"iana\"},\"application/tamp-error\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust-confirm\":{\"source\":\"iana\"},\"application/tamp-status-query\":{\"source\":\"iana\"},\"application/tamp-status-response\":{\"source\":\"iana\"},\"application/tamp-update\":{\"source\":\"iana\"},\"application/tamp-update-confirm\":{\"source\":\"iana\"},\"application/tar\":{\"compressible\":true},\"application/taxii+json\":{\"source\":\"iana\",\"compressible\":true},\"application/td+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tei\",\"teicorpus\"]},\"application/tetra_isi\":{\"source\":\"iana\"},\"application/thraud+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tfi\"]},\"application/timestamp-query\":{\"source\":\"iana\"},\"application/timestamp-reply\":{\"source\":\"iana\"},\"application/timestamped-data\":{\"source\":\"iana\",\"extensions\":[\"tsd\"]},\"application/tlsrpt+gzip\":{\"source\":\"iana\"},\"application/tlsrpt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tnauthlist\":{\"source\":\"iana\"},\"application/toml\":{\"compressible\":true,\"extensions\":[\"toml\"]},\"application/trickle-ice-sdpfrag\":{\"source\":\"iana\"},\"application/trig\":{\"source\":\"iana\",\"extensions\":[\"trig\"]},\"application/ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttml\"]},\"application/tve-trigger\":{\"source\":\"iana\"},\"application/tzif\":{\"source\":\"iana\"},\"application/tzif-leap\":{\"source\":\"iana\"},\"application/ubjson\":{\"compressible\":false,\"extensions\":[\"ubj\"]},\"application/ulpfec\":{\"source\":\"iana\"},\"application/urc-grpsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-ressheet+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsheet\"]},\"application/urc-targetdesc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"td\"]},\"application/urc-uisocketdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vemmi\":{\"source\":\"iana\"},\"application/vividence.scriptfile\":{\"source\":\"apache\"},\"application/vnd.1000minds.decision-model+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"1km\"]},\"application/vnd.3gpp-prose+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-prose-pc3ch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-v2x-local-service-information\":{\"source\":\"iana\"},\"application/vnd.3gpp.5gnas\":{\"source\":\"iana\"},\"application/vnd.3gpp.access-transfer-events+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.bsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gmop+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gtpc\":{\"source\":\"iana\"},\"application/vnd.3gpp.interworking-data\":{\"source\":\"iana\"},\"application/vnd.3gpp.lpp\":{\"source\":\"iana\"},\"application/vnd.3gpp.mc-signalling-ear\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-payload\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-signalling\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-floor-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-signed+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-init-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-transmission-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mid-call+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ngap\":{\"source\":\"iana\"},\"application/vnd.3gpp.pfcp\":{\"source\":\"iana\"},\"application/vnd.3gpp.pic-bw-large\":{\"source\":\"iana\",\"extensions\":[\"plb\"]},\"application/vnd.3gpp.pic-bw-small\":{\"source\":\"iana\",\"extensions\":[\"psb\"]},\"application/vnd.3gpp.pic-bw-var\":{\"source\":\"iana\",\"extensions\":[\"pvb\"]},\"application/vnd.3gpp.s1ap\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-ext+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.state-and-event-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ussd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.bcmcsinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp2.tcap\":{\"source\":\"iana\",\"extensions\":[\"tcap\"]},\"application/vnd.3lightssoftware.imagescal\":{\"source\":\"iana\"},\"application/vnd.3m.post-it-notes\":{\"source\":\"iana\",\"extensions\":[\"pwn\"]},\"application/vnd.accpac.simply.aso\":{\"source\":\"iana\",\"extensions\":[\"aso\"]},\"application/vnd.accpac.simply.imp\":{\"source\":\"iana\",\"extensions\":[\"imp\"]},\"application/vnd.acucobol\":{\"source\":\"iana\",\"extensions\":[\"acu\"]},\"application/vnd.acucorp\":{\"source\":\"iana\",\"extensions\":[\"atc\",\"acutc\"]},\"application/vnd.adobe.air-application-installer-package+zip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"air\"]},\"application/vnd.adobe.flash.movie\":{\"source\":\"iana\"},\"application/vnd.adobe.formscentral.fcdt\":{\"source\":\"iana\",\"extensions\":[\"fcdt\"]},\"application/vnd.adobe.fxp\":{\"source\":\"iana\",\"extensions\":[\"fxp\",\"fxpl\"]},\"application/vnd.adobe.partial-upload\":{\"source\":\"iana\"},\"application/vnd.adobe.xdp+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdp\"]},\"application/vnd.adobe.xfdf\":{\"source\":\"iana\",\"extensions\":[\"xfdf\"]},\"application/vnd.aether.imp\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata-pagedef\":{\"source\":\"iana\"},\"application/vnd.afpc.cmoca-cmresource\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-charset\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codedfont\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codepage\":{\"source\":\"iana\"},\"application/vnd.afpc.modca\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-cmtable\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-formdef\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-mediummap\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-objectcontainer\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-overlay\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-pagesegment\":{\"source\":\"iana\"},\"application/vnd.ah-barcode\":{\"source\":\"iana\"},\"application/vnd.ahead.space\":{\"source\":\"iana\",\"extensions\":[\"ahead\"]},\"application/vnd.airzip.filesecure.azf\":{\"source\":\"iana\",\"extensions\":[\"azf\"]},\"application/vnd.airzip.filesecure.azs\":{\"source\":\"iana\",\"extensions\":[\"azs\"]},\"application/vnd.amadeus+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.amazon.ebook\":{\"source\":\"apache\",\"extensions\":[\"azw\"]},\"application/vnd.amazon.mobi8-ebook\":{\"source\":\"iana\"},\"application/vnd.americandynamics.acc\":{\"source\":\"iana\",\"extensions\":[\"acc\"]},\"application/vnd.amiga.ami\":{\"source\":\"iana\",\"extensions\":[\"ami\"]},\"application/vnd.amundsen.maze+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.android.ota\":{\"source\":\"iana\"},\"application/vnd.android.package-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"apk\"]},\"application/vnd.anki\":{\"source\":\"iana\"},\"application/vnd.anser-web-certificate-issue-initiation\":{\"source\":\"iana\",\"extensions\":[\"cii\"]},\"application/vnd.anser-web-funds-transfer-initiation\":{\"source\":\"apache\",\"extensions\":[\"fti\"]},\"application/vnd.antix.game-component\":{\"source\":\"iana\",\"extensions\":[\"atx\"]},\"application/vnd.apache.arrow.file\":{\"source\":\"iana\"},\"application/vnd.apache.arrow.stream\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.binary\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.compact\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.json\":{\"source\":\"iana\"},\"application/vnd.api+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.aplextor.warrp+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apothekende.reservation+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apple.installer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpkg\"]},\"application/vnd.apple.keynote\":{\"source\":\"iana\",\"extensions\":[\"key\"]},\"application/vnd.apple.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"m3u8\"]},\"application/vnd.apple.numbers\":{\"source\":\"iana\",\"extensions\":[\"numbers\"]},\"application/vnd.apple.pages\":{\"source\":\"iana\",\"extensions\":[\"pages\"]},\"application/vnd.apple.pkpass\":{\"compressible\":false,\"extensions\":[\"pkpass\"]},\"application/vnd.arastra.swi\":{\"source\":\"iana\"},\"application/vnd.aristanetworks.swi\":{\"source\":\"iana\",\"extensions\":[\"swi\"]},\"application/vnd.artisan+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.artsquare\":{\"source\":\"iana\"},\"application/vnd.astraea-software.iota\":{\"source\":\"iana\",\"extensions\":[\"iota\"]},\"application/vnd.audiograph\":{\"source\":\"iana\",\"extensions\":[\"aep\"]},\"application/vnd.autopackage\":{\"source\":\"iana\"},\"application/vnd.avalon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.avistar+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.balsamiq.bmml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmml\"]},\"application/vnd.balsamiq.bmpr\":{\"source\":\"iana\"},\"application/vnd.banana-accounting\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.error\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bekitzur-stech+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bint.med-content\":{\"source\":\"iana\"},\"application/vnd.biopax.rdf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.blink-idb-value-wrapper\":{\"source\":\"iana\"},\"application/vnd.blueice.multipass\":{\"source\":\"iana\",\"extensions\":[\"mpm\"]},\"application/vnd.bluetooth.ep.oob\":{\"source\":\"iana\"},\"application/vnd.bluetooth.le.oob\":{\"source\":\"iana\"},\"application/vnd.bmi\":{\"source\":\"iana\",\"extensions\":[\"bmi\"]},\"application/vnd.bpf\":{\"source\":\"iana\"},\"application/vnd.bpf3\":{\"source\":\"iana\"},\"application/vnd.businessobjects\":{\"source\":\"iana\",\"extensions\":[\"rep\"]},\"application/vnd.byu.uapi+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cab-jscript\":{\"source\":\"iana\"},\"application/vnd.canon-cpdl\":{\"source\":\"iana\"},\"application/vnd.canon-lips\":{\"source\":\"iana\"},\"application/vnd.capasystems-pg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cendio.thinlinc.clientconf\":{\"source\":\"iana\"},\"application/vnd.century-systems.tcp_stream\":{\"source\":\"iana\"},\"application/vnd.chemdraw+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdxml\"]},\"application/vnd.chess-pgn\":{\"source\":\"iana\"},\"application/vnd.chipnuts.karaoke-mmd\":{\"source\":\"iana\",\"extensions\":[\"mmd\"]},\"application/vnd.ciedi\":{\"source\":\"iana\"},\"application/vnd.cinderella\":{\"source\":\"iana\",\"extensions\":[\"cdy\"]},\"application/vnd.cirpack.isdn-ext\":{\"source\":\"iana\"},\"application/vnd.citationstyles.style+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csl\"]},\"application/vnd.claymore\":{\"source\":\"iana\",\"extensions\":[\"cla\"]},\"application/vnd.cloanto.rp9\":{\"source\":\"iana\",\"extensions\":[\"rp9\"]},\"application/vnd.clonk.c4group\":{\"source\":\"iana\",\"extensions\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]},\"application/vnd.cluetrust.cartomobile-config\":{\"source\":\"iana\",\"extensions\":[\"c11amc\"]},\"application/vnd.cluetrust.cartomobile-config-pkg\":{\"source\":\"iana\",\"extensions\":[\"c11amz\"]},\"application/vnd.coffeescript\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet-template\":{\"source\":\"iana\"},\"application/vnd.collection+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.doc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.next+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.comicbook+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.comicbook-rar\":{\"source\":\"iana\"},\"application/vnd.commerce-battelle\":{\"source\":\"iana\"},\"application/vnd.commonspace\":{\"source\":\"iana\",\"extensions\":[\"csp\"]},\"application/vnd.contact.cmsg\":{\"source\":\"iana\",\"extensions\":[\"cdbcmsg\"]},\"application/vnd.coreos.ignition+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cosmocaller\":{\"source\":\"iana\",\"extensions\":[\"cmc\"]},\"application/vnd.crick.clicker\":{\"source\":\"iana\",\"extensions\":[\"clkx\"]},\"application/vnd.crick.clicker.keyboard\":{\"source\":\"iana\",\"extensions\":[\"clkk\"]},\"application/vnd.crick.clicker.palette\":{\"source\":\"iana\",\"extensions\":[\"clkp\"]},\"application/vnd.crick.clicker.template\":{\"source\":\"iana\",\"extensions\":[\"clkt\"]},\"application/vnd.crick.clicker.wordbank\":{\"source\":\"iana\",\"extensions\":[\"clkw\"]},\"application/vnd.criticaltools.wbs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wbs\"]},\"application/vnd.cryptii.pipe+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.crypto-shade-file\":{\"source\":\"iana\"},\"application/vnd.cryptomator.encrypted\":{\"source\":\"iana\"},\"application/vnd.cryptomator.vault\":{\"source\":\"iana\"},\"application/vnd.ctc-posml\":{\"source\":\"iana\",\"extensions\":[\"pml\"]},\"application/vnd.ctct.ws+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cups-pdf\":{\"source\":\"iana\"},\"application/vnd.cups-postscript\":{\"source\":\"iana\"},\"application/vnd.cups-ppd\":{\"source\":\"iana\",\"extensions\":[\"ppd\"]},\"application/vnd.cups-raster\":{\"source\":\"iana\"},\"application/vnd.cups-raw\":{\"source\":\"iana\"},\"application/vnd.curl\":{\"source\":\"iana\"},\"application/vnd.curl.car\":{\"source\":\"apache\",\"extensions\":[\"car\"]},\"application/vnd.curl.pcurl\":{\"source\":\"apache\",\"extensions\":[\"pcurl\"]},\"application/vnd.cyan.dean.root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cybank\":{\"source\":\"iana\"},\"application/vnd.cyclonedx+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cyclonedx+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.d2l.coursepackage1p0+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.d3m-dataset\":{\"source\":\"iana\"},\"application/vnd.d3m-problem\":{\"source\":\"iana\"},\"application/vnd.dart\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dart\"]},\"application/vnd.data-vision.rdz\":{\"source\":\"iana\",\"extensions\":[\"rdz\"]},\"application/vnd.datapackage+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dataresource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dbf\":{\"source\":\"iana\",\"extensions\":[\"dbf\"]},\"application/vnd.debian.binary-package\":{\"source\":\"iana\"},\"application/vnd.dece.data\":{\"source\":\"iana\",\"extensions\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]},\"application/vnd.dece.ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uvt\",\"uvvt\"]},\"application/vnd.dece.unspecified\":{\"source\":\"iana\",\"extensions\":[\"uvx\",\"uvvx\"]},\"application/vnd.dece.zip\":{\"source\":\"iana\",\"extensions\":[\"uvz\",\"uvvz\"]},\"application/vnd.denovo.fcselayout-link\":{\"source\":\"iana\",\"extensions\":[\"fe_launch\"]},\"application/vnd.desmume.movie\":{\"source\":\"iana\"},\"application/vnd.dir-bi.plate-dl-nosuffix\":{\"source\":\"iana\"},\"application/vnd.dm.delegation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dna\":{\"source\":\"iana\",\"extensions\":[\"dna\"]},\"application/vnd.document+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dolby.mlp\":{\"source\":\"apache\",\"extensions\":[\"mlp\"]},\"application/vnd.dolby.mobile.1\":{\"source\":\"iana\"},\"application/vnd.dolby.mobile.2\":{\"source\":\"iana\"},\"application/vnd.doremir.scorecloud-binary-document\":{\"source\":\"iana\"},\"application/vnd.dpgraph\":{\"source\":\"iana\",\"extensions\":[\"dpg\"]},\"application/vnd.dreamfactory\":{\"source\":\"iana\",\"extensions\":[\"dfac\"]},\"application/vnd.drive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ds-keypoint\":{\"source\":\"apache\",\"extensions\":[\"kpxx\"]},\"application/vnd.dtg.local\":{\"source\":\"iana\"},\"application/vnd.dtg.local.flash\":{\"source\":\"iana\"},\"application/vnd.dtg.local.html\":{\"source\":\"iana\"},\"application/vnd.dvb.ait\":{\"source\":\"iana\",\"extensions\":[\"ait\"]},\"application/vnd.dvb.dvbisl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.dvbj\":{\"source\":\"iana\"},\"application/vnd.dvb.esgcontainer\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcdftnotifaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess2\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgpdd\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcroaming\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-base\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-enhancement\":{\"source\":\"iana\"},\"application/vnd.dvb.notif-aggregate-root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-container+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-generic+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-msglist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-init+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.pfr\":{\"source\":\"iana\"},\"application/vnd.dvb.service\":{\"source\":\"iana\",\"extensions\":[\"svc\"]},\"application/vnd.dxr\":{\"source\":\"iana\"},\"application/vnd.dynageo\":{\"source\":\"iana\",\"extensions\":[\"geo\"]},\"application/vnd.dzr\":{\"source\":\"iana\"},\"application/vnd.easykaraoke.cdgdownload\":{\"source\":\"iana\"},\"application/vnd.ecdis-update\":{\"source\":\"iana\"},\"application/vnd.ecip.rlp\":{\"source\":\"iana\"},\"application/vnd.ecowin.chart\":{\"source\":\"iana\",\"extensions\":[\"mag\"]},\"application/vnd.ecowin.filerequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.fileupdate\":{\"source\":\"iana\"},\"application/vnd.ecowin.series\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesrequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesupdate\":{\"source\":\"iana\"},\"application/vnd.efi.img\":{\"source\":\"iana\"},\"application/vnd.efi.iso\":{\"source\":\"iana\"},\"application/vnd.emclient.accessrequest+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.enliven\":{\"source\":\"iana\",\"extensions\":[\"nml\"]},\"application/vnd.enphase.envoy\":{\"source\":\"iana\"},\"application/vnd.eprints.data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.epson.esf\":{\"source\":\"iana\",\"extensions\":[\"esf\"]},\"application/vnd.epson.msf\":{\"source\":\"iana\",\"extensions\":[\"msf\"]},\"application/vnd.epson.quickanime\":{\"source\":\"iana\",\"extensions\":[\"qam\"]},\"application/vnd.epson.salt\":{\"source\":\"iana\",\"extensions\":[\"slt\"]},\"application/vnd.epson.ssf\":{\"source\":\"iana\",\"extensions\":[\"ssf\"]},\"application/vnd.ericsson.quickcall\":{\"source\":\"iana\"},\"application/vnd.espass-espass+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.eszigno3+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es3\",\"et3\"]},\"application/vnd.etsi.aoc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.asic-e+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.asic-s+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.cug+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvcommand+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-bc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-cod+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-npvr+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvservice+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mcid+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mheg5\":{\"source\":\"iana\"},\"application/vnd.etsi.overload-control-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.pstn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.sci+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.simservs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.timestamp-token\":{\"source\":\"iana\"},\"application/vnd.etsi.tsl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.tsl.der\":{\"source\":\"iana\"},\"application/vnd.eudora.data\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.profile\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.settings\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.theme\":{\"source\":\"iana\"},\"application/vnd.exstream-empower+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.exstream-package\":{\"source\":\"iana\"},\"application/vnd.ezpix-album\":{\"source\":\"iana\",\"extensions\":[\"ez2\"]},\"application/vnd.ezpix-package\":{\"source\":\"iana\",\"extensions\":[\"ez3\"]},\"application/vnd.f-secure.mobile\":{\"source\":\"iana\"},\"application/vnd.fastcopy-disk-image\":{\"source\":\"iana\"},\"application/vnd.fdf\":{\"source\":\"iana\",\"extensions\":[\"fdf\"]},\"application/vnd.fdsn.mseed\":{\"source\":\"iana\",\"extensions\":[\"mseed\"]},\"application/vnd.fdsn.seed\":{\"source\":\"iana\",\"extensions\":[\"seed\",\"dataless\"]},\"application/vnd.ffsns\":{\"source\":\"iana\"},\"application/vnd.ficlab.flb+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.filmit.zfc\":{\"source\":\"iana\"},\"application/vnd.fints\":{\"source\":\"iana\"},\"application/vnd.firemonkeys.cloudcell\":{\"source\":\"iana\"},\"application/vnd.flographit\":{\"source\":\"iana\",\"extensions\":[\"gph\"]},\"application/vnd.fluxtime.clip\":{\"source\":\"iana\",\"extensions\":[\"ftc\"]},\"application/vnd.font-fontforge-sfd\":{\"source\":\"iana\"},\"application/vnd.framemaker\":{\"source\":\"iana\",\"extensions\":[\"fm\",\"frame\",\"maker\",\"book\"]},\"application/vnd.frogans.fnc\":{\"source\":\"iana\",\"extensions\":[\"fnc\"]},\"application/vnd.frogans.ltf\":{\"source\":\"iana\",\"extensions\":[\"ltf\"]},\"application/vnd.fsc.weblaunch\":{\"source\":\"iana\",\"extensions\":[\"fsc\"]},\"application/vnd.fujifilm.fb.docuworks\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.binder\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.jfi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fujitsu.oasys\":{\"source\":\"iana\",\"extensions\":[\"oas\"]},\"application/vnd.fujitsu.oasys2\":{\"source\":\"iana\",\"extensions\":[\"oa2\"]},\"application/vnd.fujitsu.oasys3\":{\"source\":\"iana\",\"extensions\":[\"oa3\"]},\"application/vnd.fujitsu.oasysgp\":{\"source\":\"iana\",\"extensions\":[\"fg5\"]},\"application/vnd.fujitsu.oasysprs\":{\"source\":\"iana\",\"extensions\":[\"bh2\"]},\"application/vnd.fujixerox.art-ex\":{\"source\":\"iana\"},\"application/vnd.fujixerox.art4\":{\"source\":\"iana\"},\"application/vnd.fujixerox.ddd\":{\"source\":\"iana\",\"extensions\":[\"ddd\"]},\"application/vnd.fujixerox.docuworks\":{\"source\":\"iana\",\"extensions\":[\"xdw\"]},\"application/vnd.fujixerox.docuworks.binder\":{\"source\":\"iana\",\"extensions\":[\"xbd\"]},\"application/vnd.fujixerox.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujixerox.hbpl\":{\"source\":\"iana\"},\"application/vnd.fut-misnet\":{\"source\":\"iana\"},\"application/vnd.futoin+cbor\":{\"source\":\"iana\"},\"application/vnd.futoin+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fuzzysheet\":{\"source\":\"iana\",\"extensions\":[\"fzs\"]},\"application/vnd.genomatix.tuxedo\":{\"source\":\"iana\",\"extensions\":[\"txd\"]},\"application/vnd.gentics.grd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geo+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geocube+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geogebra.file\":{\"source\":\"iana\",\"extensions\":[\"ggb\"]},\"application/vnd.geogebra.slides\":{\"source\":\"iana\"},\"application/vnd.geogebra.tool\":{\"source\":\"iana\",\"extensions\":[\"ggt\"]},\"application/vnd.geometry-explorer\":{\"source\":\"iana\",\"extensions\":[\"gex\",\"gre\"]},\"application/vnd.geonext\":{\"source\":\"iana\",\"extensions\":[\"gxt\"]},\"application/vnd.geoplan\":{\"source\":\"iana\",\"extensions\":[\"g2w\"]},\"application/vnd.geospace\":{\"source\":\"iana\",\"extensions\":[\"g3w\"]},\"application/vnd.gerber\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt-response\":{\"source\":\"iana\"},\"application/vnd.gmx\":{\"source\":\"iana\",\"extensions\":[\"gmx\"]},\"application/vnd.google-apps.document\":{\"compressible\":false,\"extensions\":[\"gdoc\"]},\"application/vnd.google-apps.presentation\":{\"compressible\":false,\"extensions\":[\"gslides\"]},\"application/vnd.google-apps.spreadsheet\":{\"compressible\":false,\"extensions\":[\"gsheet\"]},\"application/vnd.google-earth.kml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"kml\"]},\"application/vnd.google-earth.kmz\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"kmz\"]},\"application/vnd.gov.sk.e-form+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.gov.sk.e-form+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.gov.sk.xmldatacontainer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.grafeq\":{\"source\":\"iana\",\"extensions\":[\"gqf\",\"gqs\"]},\"application/vnd.gridmp\":{\"source\":\"iana\"},\"application/vnd.groove-account\":{\"source\":\"iana\",\"extensions\":[\"gac\"]},\"application/vnd.groove-help\":{\"source\":\"iana\",\"extensions\":[\"ghf\"]},\"application/vnd.groove-identity-message\":{\"source\":\"iana\",\"extensions\":[\"gim\"]},\"application/vnd.groove-injector\":{\"source\":\"iana\",\"extensions\":[\"grv\"]},\"application/vnd.groove-tool-message\":{\"source\":\"iana\",\"extensions\":[\"gtm\"]},\"application/vnd.groove-tool-template\":{\"source\":\"iana\",\"extensions\":[\"tpl\"]},\"application/vnd.groove-vcard\":{\"source\":\"iana\",\"extensions\":[\"vcg\"]},\"application/vnd.hal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hal+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"hal\"]},\"application/vnd.handheld-entertainment+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zmm\"]},\"application/vnd.hbci\":{\"source\":\"iana\",\"extensions\":[\"hbci\"]},\"application/vnd.hc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hcl-bireports\":{\"source\":\"iana\"},\"application/vnd.hdt\":{\"source\":\"iana\"},\"application/vnd.heroku+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hhe.lesson-player\":{\"source\":\"iana\",\"extensions\":[\"les\"]},\"application/vnd.hp-hpgl\":{\"source\":\"iana\",\"extensions\":[\"hpgl\"]},\"application/vnd.hp-hpid\":{\"source\":\"iana\",\"extensions\":[\"hpid\"]},\"application/vnd.hp-hps\":{\"source\":\"iana\",\"extensions\":[\"hps\"]},\"application/vnd.hp-jlyt\":{\"source\":\"iana\",\"extensions\":[\"jlt\"]},\"application/vnd.hp-pcl\":{\"source\":\"iana\",\"extensions\":[\"pcl\"]},\"application/vnd.hp-pclxl\":{\"source\":\"iana\",\"extensions\":[\"pclxl\"]},\"application/vnd.httphone\":{\"source\":\"iana\"},\"application/vnd.hydrostatix.sof-data\":{\"source\":\"iana\",\"extensions\":[\"sfd-hdstx\"]},\"application/vnd.hyper+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyper-item+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyperdrive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hzn-3d-crossword\":{\"source\":\"iana\"},\"application/vnd.ibm.afplinedata\":{\"source\":\"iana\"},\"application/vnd.ibm.electronic-media\":{\"source\":\"iana\"},\"application/vnd.ibm.minipay\":{\"source\":\"iana\",\"extensions\":[\"mpy\"]},\"application/vnd.ibm.modcap\":{\"source\":\"iana\",\"extensions\":[\"afp\",\"listafp\",\"list3820\"]},\"application/vnd.ibm.rights-management\":{\"source\":\"iana\",\"extensions\":[\"irm\"]},\"application/vnd.ibm.secure-container\":{\"source\":\"iana\",\"extensions\":[\"sc\"]},\"application/vnd.iccprofile\":{\"source\":\"iana\",\"extensions\":[\"icc\",\"icm\"]},\"application/vnd.ieee.1905\":{\"source\":\"iana\"},\"application/vnd.igloader\":{\"source\":\"iana\",\"extensions\":[\"igl\"]},\"application/vnd.imagemeter.folder+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.imagemeter.image+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.immervision-ivp\":{\"source\":\"iana\",\"extensions\":[\"ivp\"]},\"application/vnd.immervision-ivu\":{\"source\":\"iana\",\"extensions\":[\"ivu\"]},\"application/vnd.ims.imsccv1p1\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p2\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p3\":{\"source\":\"iana\"},\"application/vnd.ims.lis.v2.result+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolconsumerprofile+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy.id+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings.simple+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informedcontrol.rms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informix-visionary\":{\"source\":\"iana\"},\"application/vnd.infotech.project\":{\"source\":\"iana\"},\"application/vnd.infotech.project+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.innopath.wamp.notification\":{\"source\":\"iana\"},\"application/vnd.insors.igm\":{\"source\":\"iana\",\"extensions\":[\"igm\"]},\"application/vnd.intercon.formnet\":{\"source\":\"iana\",\"extensions\":[\"xpw\",\"xpx\"]},\"application/vnd.intergeo\":{\"source\":\"iana\",\"extensions\":[\"i2g\"]},\"application/vnd.intertrust.digibox\":{\"source\":\"iana\"},\"application/vnd.intertrust.nncp\":{\"source\":\"iana\"},\"application/vnd.intu.qbo\":{\"source\":\"iana\",\"extensions\":[\"qbo\"]},\"application/vnd.intu.qfx\":{\"source\":\"iana\",\"extensions\":[\"qfx\"]},\"application/vnd.iptc.g2.catalogitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.conceptitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.knowledgeitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.packageitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.planningitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ipunplugged.rcprofile\":{\"source\":\"iana\",\"extensions\":[\"rcprofile\"]},\"application/vnd.irepository.package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"irp\"]},\"application/vnd.is-xpr\":{\"source\":\"iana\",\"extensions\":[\"xpr\"]},\"application/vnd.isac.fcs\":{\"source\":\"iana\",\"extensions\":[\"fcs\"]},\"application/vnd.iso11783-10+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.jam\":{\"source\":\"iana\",\"extensions\":[\"jam\"]},\"application/vnd.japannet-directory-service\":{\"source\":\"iana\"},\"application/vnd.japannet-jpnstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-payment-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-registration\":{\"source\":\"iana\"},\"application/vnd.japannet-registration-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-setstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-verification\":{\"source\":\"iana\"},\"application/vnd.japannet-verification-wakeup\":{\"source\":\"iana\"},\"application/vnd.jcp.javame.midlet-rms\":{\"source\":\"iana\",\"extensions\":[\"rms\"]},\"application/vnd.jisp\":{\"source\":\"iana\",\"extensions\":[\"jisp\"]},\"application/vnd.joost.joda-archive\":{\"source\":\"iana\",\"extensions\":[\"joda\"]},\"application/vnd.jsk.isdn-ngn\":{\"source\":\"iana\"},\"application/vnd.kahootz\":{\"source\":\"iana\",\"extensions\":[\"ktz\",\"ktr\"]},\"application/vnd.kde.karbon\":{\"source\":\"iana\",\"extensions\":[\"karbon\"]},\"application/vnd.kde.kchart\":{\"source\":\"iana\",\"extensions\":[\"chrt\"]},\"application/vnd.kde.kformula\":{\"source\":\"iana\",\"extensions\":[\"kfo\"]},\"application/vnd.kde.kivio\":{\"source\":\"iana\",\"extensions\":[\"flw\"]},\"application/vnd.kde.kontour\":{\"source\":\"iana\",\"extensions\":[\"kon\"]},\"application/vnd.kde.kpresenter\":{\"source\":\"iana\",\"extensions\":[\"kpr\",\"kpt\"]},\"application/vnd.kde.kspread\":{\"source\":\"iana\",\"extensions\":[\"ksp\"]},\"application/vnd.kde.kword\":{\"source\":\"iana\",\"extensions\":[\"kwd\",\"kwt\"]},\"application/vnd.kenameaapp\":{\"source\":\"iana\",\"extensions\":[\"htke\"]},\"application/vnd.kidspiration\":{\"source\":\"iana\",\"extensions\":[\"kia\"]},\"application/vnd.kinar\":{\"source\":\"iana\",\"extensions\":[\"kne\",\"knp\"]},\"application/vnd.koan\":{\"source\":\"iana\",\"extensions\":[\"skp\",\"skd\",\"skt\",\"skm\"]},\"application/vnd.kodak-descriptor\":{\"source\":\"iana\",\"extensions\":[\"sse\"]},\"application/vnd.las\":{\"source\":\"iana\"},\"application/vnd.las.las+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.las.las+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lasxml\"]},\"application/vnd.laszip\":{\"source\":\"iana\"},\"application/vnd.leap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.liberty-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.llamagraphics.life-balance.desktop\":{\"source\":\"iana\",\"extensions\":[\"lbd\"]},\"application/vnd.llamagraphics.life-balance.exchange+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lbe\"]},\"application/vnd.logipipe.circuit+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.loom\":{\"source\":\"iana\"},\"application/vnd.lotus-1-2-3\":{\"source\":\"iana\",\"extensions\":[\"123\"]},\"application/vnd.lotus-approach\":{\"source\":\"iana\",\"extensions\":[\"apr\"]},\"application/vnd.lotus-freelance\":{\"source\":\"iana\",\"extensions\":[\"pre\"]},\"application/vnd.lotus-notes\":{\"source\":\"iana\",\"extensions\":[\"nsf\"]},\"application/vnd.lotus-organizer\":{\"source\":\"iana\",\"extensions\":[\"org\"]},\"application/vnd.lotus-screencam\":{\"source\":\"iana\",\"extensions\":[\"scm\"]},\"application/vnd.lotus-wordpro\":{\"source\":\"iana\",\"extensions\":[\"lwp\"]},\"application/vnd.macports.portpkg\":{\"source\":\"iana\",\"extensions\":[\"portpkg\"]},\"application/vnd.mapbox-vector-tile\":{\"source\":\"iana\",\"extensions\":[\"mvt\"]},\"application/vnd.marlin.drm.actiontoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.conftoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.license+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.mdcf\":{\"source\":\"iana\"},\"application/vnd.mason+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.maxmind.maxmind-db\":{\"source\":\"iana\"},\"application/vnd.mcd\":{\"source\":\"iana\",\"extensions\":[\"mcd\"]},\"application/vnd.medcalcdata\":{\"source\":\"iana\",\"extensions\":[\"mc1\"]},\"application/vnd.mediastation.cdkey\":{\"source\":\"iana\",\"extensions\":[\"cdkey\"]},\"application/vnd.meridian-slingshot\":{\"source\":\"iana\"},\"application/vnd.mfer\":{\"source\":\"iana\",\"extensions\":[\"mwf\"]},\"application/vnd.mfmp\":{\"source\":\"iana\",\"extensions\":[\"mfm\"]},\"application/vnd.micro+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.micrografx.flo\":{\"source\":\"iana\",\"extensions\":[\"flo\"]},\"application/vnd.micrografx.igx\":{\"source\":\"iana\",\"extensions\":[\"igx\"]},\"application/vnd.microsoft.portable-executable\":{\"source\":\"iana\"},\"application/vnd.microsoft.windows.thumbnail-cache\":{\"source\":\"iana\"},\"application/vnd.miele+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.mif\":{\"source\":\"iana\",\"extensions\":[\"mif\"]},\"application/vnd.minisoft-hp3000-save\":{\"source\":\"iana\"},\"application/vnd.mitsubishi.misty-guard.trustweb\":{\"source\":\"iana\"},\"application/vnd.mobius.daf\":{\"source\":\"iana\",\"extensions\":[\"daf\"]},\"application/vnd.mobius.dis\":{\"source\":\"iana\",\"extensions\":[\"dis\"]},\"application/vnd.mobius.mbk\":{\"source\":\"iana\",\"extensions\":[\"mbk\"]},\"application/vnd.mobius.mqy\":{\"source\":\"iana\",\"extensions\":[\"mqy\"]},\"application/vnd.mobius.msl\":{\"source\":\"iana\",\"extensions\":[\"msl\"]},\"application/vnd.mobius.plc\":{\"source\":\"iana\",\"extensions\":[\"plc\"]},\"application/vnd.mobius.txf\":{\"source\":\"iana\",\"extensions\":[\"txf\"]},\"application/vnd.mophun.application\":{\"source\":\"iana\",\"extensions\":[\"mpn\"]},\"application/vnd.mophun.certificate\":{\"source\":\"iana\",\"extensions\":[\"mpc\"]},\"application/vnd.motorola.flexsuite\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.adsi\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.fis\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.gotap\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.kmr\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.ttc\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.wem\":{\"source\":\"iana\"},\"application/vnd.motorola.iprm\":{\"source\":\"iana\"},\"application/vnd.mozilla.xul+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xul\"]},\"application/vnd.ms-3mfdocument\":{\"source\":\"iana\"},\"application/vnd.ms-artgalry\":{\"source\":\"iana\",\"extensions\":[\"cil\"]},\"application/vnd.ms-asf\":{\"source\":\"iana\"},\"application/vnd.ms-cab-compressed\":{\"source\":\"iana\",\"extensions\":[\"cab\"]},\"application/vnd.ms-color.iccprofile\":{\"source\":\"apache\"},\"application/vnd.ms-excel\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]},\"application/vnd.ms-excel.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlam\"]},\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsb\"]},\"application/vnd.ms-excel.sheet.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsm\"]},\"application/vnd.ms-excel.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xltm\"]},\"application/vnd.ms-fontobject\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eot\"]},\"application/vnd.ms-htmlhelp\":{\"source\":\"iana\",\"extensions\":[\"chm\"]},\"application/vnd.ms-ims\":{\"source\":\"iana\",\"extensions\":[\"ims\"]},\"application/vnd.ms-lrm\":{\"source\":\"iana\",\"extensions\":[\"lrm\"]},\"application/vnd.ms-office.activex+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-officetheme\":{\"source\":\"iana\",\"extensions\":[\"thmx\"]},\"application/vnd.ms-opentype\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-outlook\":{\"compressible\":false,\"extensions\":[\"msg\"]},\"application/vnd.ms-package.obfuscated-opentype\":{\"source\":\"apache\"},\"application/vnd.ms-pki.seccat\":{\"source\":\"apache\",\"extensions\":[\"cat\"]},\"application/vnd.ms-pki.stl\":{\"source\":\"apache\",\"extensions\":[\"stl\"]},\"application/vnd.ms-playready.initiator+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-powerpoint\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ppt\",\"pps\",\"pot\"]},\"application/vnd.ms-powerpoint.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppam\"]},\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"pptm\"]},\"application/vnd.ms-powerpoint.slide.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"sldm\"]},\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppsm\"]},\"application/vnd.ms-powerpoint.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"potm\"]},\"application/vnd.ms-printdevicecapabilities+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-printing.printticket+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-printschematicket+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-project\":{\"source\":\"iana\",\"extensions\":[\"mpp\",\"mpt\"]},\"application/vnd.ms-tnef\":{\"source\":\"iana\"},\"application/vnd.ms-windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.nwprinting.oob\":{\"source\":\"iana\"},\"application/vnd.ms-windows.printerpairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.wsd.oob\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-resp\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-resp\":{\"source\":\"iana\"},\"application/vnd.ms-word.document.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"docm\"]},\"application/vnd.ms-word.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"dotm\"]},\"application/vnd.ms-works\":{\"source\":\"iana\",\"extensions\":[\"wps\",\"wks\",\"wcm\",\"wdb\"]},\"application/vnd.ms-wpl\":{\"source\":\"iana\",\"extensions\":[\"wpl\"]},\"application/vnd.ms-xpsdocument\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xps\"]},\"application/vnd.msa-disk-image\":{\"source\":\"iana\"},\"application/vnd.mseq\":{\"source\":\"iana\",\"extensions\":[\"mseq\"]},\"application/vnd.msign\":{\"source\":\"iana\"},\"application/vnd.multiad.creator\":{\"source\":\"iana\"},\"application/vnd.multiad.creator.cif\":{\"source\":\"iana\"},\"application/vnd.music-niff\":{\"source\":\"iana\"},\"application/vnd.musician\":{\"source\":\"iana\",\"extensions\":[\"mus\"]},\"application/vnd.muvee.style\":{\"source\":\"iana\",\"extensions\":[\"msty\"]},\"application/vnd.mynfc\":{\"source\":\"iana\",\"extensions\":[\"taglet\"]},\"application/vnd.ncd.control\":{\"source\":\"iana\"},\"application/vnd.ncd.reference\":{\"source\":\"iana\"},\"application/vnd.nearst.inv+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nebumind.line\":{\"source\":\"iana\"},\"application/vnd.nervana\":{\"source\":\"iana\"},\"application/vnd.netfpx\":{\"source\":\"iana\"},\"application/vnd.neurolanguage.nlu\":{\"source\":\"iana\",\"extensions\":[\"nlu\"]},\"application/vnd.nimn\":{\"source\":\"iana\"},\"application/vnd.nintendo.nitro.rom\":{\"source\":\"iana\"},\"application/vnd.nintendo.snes.rom\":{\"source\":\"iana\"},\"application/vnd.nitf\":{\"source\":\"iana\",\"extensions\":[\"ntf\",\"nitf\"]},\"application/vnd.noblenet-directory\":{\"source\":\"iana\",\"extensions\":[\"nnd\"]},\"application/vnd.noblenet-sealer\":{\"source\":\"iana\",\"extensions\":[\"nns\"]},\"application/vnd.noblenet-web\":{\"source\":\"iana\",\"extensions\":[\"nnw\"]},\"application/vnd.nokia.catalogs\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.iptv.config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.isds-radio-presets\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.landmarkcollection+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.n-gage.ac+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ac\"]},\"application/vnd.nokia.n-gage.data\":{\"source\":\"iana\",\"extensions\":[\"ngdat\"]},\"application/vnd.nokia.n-gage.symbian.install\":{\"source\":\"iana\",\"extensions\":[\"n-gage\"]},\"application/vnd.nokia.ncd\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.radio-preset\":{\"source\":\"iana\",\"extensions\":[\"rpst\"]},\"application/vnd.nokia.radio-presets\":{\"source\":\"iana\",\"extensions\":[\"rpss\"]},\"application/vnd.novadigm.edm\":{\"source\":\"iana\",\"extensions\":[\"edm\"]},\"application/vnd.novadigm.edx\":{\"source\":\"iana\",\"extensions\":[\"edx\"]},\"application/vnd.novadigm.ext\":{\"source\":\"iana\",\"extensions\":[\"ext\"]},\"application/vnd.ntt-local.content-share\":{\"source\":\"iana\"},\"application/vnd.ntt-local.file-transfer\":{\"source\":\"iana\"},\"application/vnd.ntt-local.ogw_remote-access\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_remote\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_tcp_stream\":{\"source\":\"iana\"},\"application/vnd.oasis.opendocument.chart\":{\"source\":\"iana\",\"extensions\":[\"odc\"]},\"application/vnd.oasis.opendocument.chart-template\":{\"source\":\"iana\",\"extensions\":[\"otc\"]},\"application/vnd.oasis.opendocument.database\":{\"source\":\"iana\",\"extensions\":[\"odb\"]},\"application/vnd.oasis.opendocument.formula\":{\"source\":\"iana\",\"extensions\":[\"odf\"]},\"application/vnd.oasis.opendocument.formula-template\":{\"source\":\"iana\",\"extensions\":[\"odft\"]},\"application/vnd.oasis.opendocument.graphics\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odg\"]},\"application/vnd.oasis.opendocument.graphics-template\":{\"source\":\"iana\",\"extensions\":[\"otg\"]},\"application/vnd.oasis.opendocument.image\":{\"source\":\"iana\",\"extensions\":[\"odi\"]},\"application/vnd.oasis.opendocument.image-template\":{\"source\":\"iana\",\"extensions\":[\"oti\"]},\"application/vnd.oasis.opendocument.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odp\"]},\"application/vnd.oasis.opendocument.presentation-template\":{\"source\":\"iana\",\"extensions\":[\"otp\"]},\"application/vnd.oasis.opendocument.spreadsheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ods\"]},\"application/vnd.oasis.opendocument.spreadsheet-template\":{\"source\":\"iana\",\"extensions\":[\"ots\"]},\"application/vnd.oasis.opendocument.text\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odt\"]},\"application/vnd.oasis.opendocument.text-master\":{\"source\":\"iana\",\"extensions\":[\"odm\"]},\"application/vnd.oasis.opendocument.text-template\":{\"source\":\"iana\",\"extensions\":[\"ott\"]},\"application/vnd.oasis.opendocument.text-web\":{\"source\":\"iana\",\"extensions\":[\"oth\"]},\"application/vnd.obn\":{\"source\":\"iana\"},\"application/vnd.ocf+cbor\":{\"source\":\"iana\"},\"application/vnd.oci.image.manifest.v1+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oftn.l10n+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessdownload+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessstreaming+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.cspg-hexbinary\":{\"source\":\"iana\"},\"application/vnd.oipf.dae.svg+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.dae.xhtml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.mippvcontrolmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.pae.gem\":{\"source\":\"iana\"},\"application/vnd.oipf.spdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.spdlist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.ueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.userprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.olpc-sugar\":{\"source\":\"iana\",\"extensions\":[\"xo\"]},\"application/vnd.oma-scws-config\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-request\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-response\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.associated-procedure-parameter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.drm-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.imd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.ltkm\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.notification+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.provisioningtrigger\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgboot\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgdd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sgdu\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.simple-symbol-container\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.smartcard-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sprov+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.stkm\":{\"source\":\"iana\"},\"application/vnd.oma.cab-address-book+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-feature-handler+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-pcc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-subs-invite+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-user-prefs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.dcd\":{\"source\":\"iana\"},\"application/vnd.oma.dcdc\":{\"source\":\"iana\"},\"application/vnd.oma.dd2+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dd2\"]},\"application/vnd.oma.drm.risd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.group-usage-list+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+cbor\":{\"source\":\"iana\"},\"application/vnd.oma.lwm2m+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+tlv\":{\"source\":\"iana\"},\"application/vnd.oma.pal+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.detailed-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.final-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.groups+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.invocation-descriptor+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.optimized-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.push\":{\"source\":\"iana\"},\"application/vnd.oma.scidm.messages+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.xcap-directory+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-email+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-file+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-folder+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omaloc-supl-init\":{\"source\":\"iana\"},\"application/vnd.onepager\":{\"source\":\"iana\"},\"application/vnd.onepagertamp\":{\"source\":\"iana\"},\"application/vnd.onepagertamx\":{\"source\":\"iana\"},\"application/vnd.onepagertat\":{\"source\":\"iana\"},\"application/vnd.onepagertatp\":{\"source\":\"iana\"},\"application/vnd.onepagertatx\":{\"source\":\"iana\"},\"application/vnd.openblox.game+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"obgx\"]},\"application/vnd.openblox.game-binary\":{\"source\":\"iana\"},\"application/vnd.openeye.oeb\":{\"source\":\"iana\"},\"application/vnd.openofficeorg.extension\":{\"source\":\"apache\",\"extensions\":[\"oxt\"]},\"application/vnd.openstreetmap.data+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osm\"]},\"application/vnd.opentimestamps.ots\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.custom-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawing+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.extended-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pptx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slide\":{\"source\":\"iana\",\"extensions\":[\"sldx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":{\"source\":\"iana\",\"extensions\":[\"ppsx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.template\":{\"source\":\"iana\",\"extensions\":[\"potx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xlsx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":{\"source\":\"iana\",\"extensions\":[\"xltx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.theme+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.themeoverride+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.vmldrawing\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"docx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":{\"source\":\"iana\",\"extensions\":[\"dotx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.core-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.relationships+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oracle.resource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.orange.indata\":{\"source\":\"iana\"},\"application/vnd.osa.netdeploy\":{\"source\":\"iana\"},\"application/vnd.osgeo.mapguide.package\":{\"source\":\"iana\",\"extensions\":[\"mgp\"]},\"application/vnd.osgi.bundle\":{\"source\":\"iana\"},\"application/vnd.osgi.dp\":{\"source\":\"iana\",\"extensions\":[\"dp\"]},\"application/vnd.osgi.subsystem\":{\"source\":\"iana\",\"extensions\":[\"esa\"]},\"application/vnd.otps.ct-kip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oxli.countgraph\":{\"source\":\"iana\"},\"application/vnd.pagerduty+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.palm\":{\"source\":\"iana\",\"extensions\":[\"pdb\",\"pqa\",\"oprc\"]},\"application/vnd.panoply\":{\"source\":\"iana\"},\"application/vnd.paos.xml\":{\"source\":\"iana\"},\"application/vnd.patentdive\":{\"source\":\"iana\"},\"application/vnd.patientecommsdoc\":{\"source\":\"iana\"},\"application/vnd.pawaafile\":{\"source\":\"iana\",\"extensions\":[\"paw\"]},\"application/vnd.pcos\":{\"source\":\"iana\"},\"application/vnd.pg.format\":{\"source\":\"iana\",\"extensions\":[\"str\"]},\"application/vnd.pg.osasli\":{\"source\":\"iana\",\"extensions\":[\"ei6\"]},\"application/vnd.piaccess.application-licence\":{\"source\":\"iana\"},\"application/vnd.picsel\":{\"source\":\"iana\",\"extensions\":[\"efif\"]},\"application/vnd.pmi.widget\":{\"source\":\"iana\",\"extensions\":[\"wg\"]},\"application/vnd.poc.group-advertisement+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.pocketlearn\":{\"source\":\"iana\",\"extensions\":[\"plf\"]},\"application/vnd.powerbuilder6\":{\"source\":\"iana\",\"extensions\":[\"pbd\"]},\"application/vnd.powerbuilder6-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75-s\":{\"source\":\"iana\"},\"application/vnd.preminet\":{\"source\":\"iana\"},\"application/vnd.previewsystems.box\":{\"source\":\"iana\",\"extensions\":[\"box\"]},\"application/vnd.proteus.magazine\":{\"source\":\"iana\",\"extensions\":[\"mgz\"]},\"application/vnd.psfs\":{\"source\":\"iana\"},\"application/vnd.publishare-delta-tree\":{\"source\":\"iana\",\"extensions\":[\"qps\"]},\"application/vnd.pvi.ptid1\":{\"source\":\"iana\",\"extensions\":[\"ptid\"]},\"application/vnd.pwg-multiplexed\":{\"source\":\"iana\"},\"application/vnd.pwg-xhtml-print+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.qualcomm.brew-app-res\":{\"source\":\"iana\"},\"application/vnd.quarantainenet\":{\"source\":\"iana\"},\"application/vnd.quark.quarkxpress\":{\"source\":\"iana\",\"extensions\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]},\"application/vnd.quobject-quoxdocument\":{\"source\":\"iana\"},\"application/vnd.radisys.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-stream+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-base+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-detect+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-group+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-speech+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-transform+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rainstor.data\":{\"source\":\"iana\"},\"application/vnd.rapid\":{\"source\":\"iana\"},\"application/vnd.rar\":{\"source\":\"iana\",\"extensions\":[\"rar\"]},\"application/vnd.realvnc.bed\":{\"source\":\"iana\",\"extensions\":[\"bed\"]},\"application/vnd.recordare.musicxml\":{\"source\":\"iana\",\"extensions\":[\"mxl\"]},\"application/vnd.recordare.musicxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musicxml\"]},\"application/vnd.renlearn.rlprint\":{\"source\":\"iana\"},\"application/vnd.resilient.logic\":{\"source\":\"iana\"},\"application/vnd.restful+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rig.cryptonote\":{\"source\":\"iana\",\"extensions\":[\"cryptonote\"]},\"application/vnd.rim.cod\":{\"source\":\"apache\",\"extensions\":[\"cod\"]},\"application/vnd.rn-realmedia\":{\"source\":\"apache\",\"extensions\":[\"rm\"]},\"application/vnd.rn-realmedia-vbr\":{\"source\":\"apache\",\"extensions\":[\"rmvb\"]},\"application/vnd.route66.link66+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"link66\"]},\"application/vnd.rs-274x\":{\"source\":\"iana\"},\"application/vnd.ruckus.download\":{\"source\":\"iana\"},\"application/vnd.s3sms\":{\"source\":\"iana\"},\"application/vnd.sailingtracker.track\":{\"source\":\"iana\",\"extensions\":[\"st\"]},\"application/vnd.sar\":{\"source\":\"iana\"},\"application/vnd.sbm.cid\":{\"source\":\"iana\"},\"application/vnd.sbm.mid2\":{\"source\":\"iana\"},\"application/vnd.scribus\":{\"source\":\"iana\"},\"application/vnd.sealed.3df\":{\"source\":\"iana\"},\"application/vnd.sealed.csf\":{\"source\":\"iana\"},\"application/vnd.sealed.doc\":{\"source\":\"iana\"},\"application/vnd.sealed.eml\":{\"source\":\"iana\"},\"application/vnd.sealed.mht\":{\"source\":\"iana\"},\"application/vnd.sealed.net\":{\"source\":\"iana\"},\"application/vnd.sealed.ppt\":{\"source\":\"iana\"},\"application/vnd.sealed.tiff\":{\"source\":\"iana\"},\"application/vnd.sealed.xls\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.html\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.pdf\":{\"source\":\"iana\"},\"application/vnd.seemail\":{\"source\":\"iana\",\"extensions\":[\"see\"]},\"application/vnd.seis+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.sema\":{\"source\":\"iana\",\"extensions\":[\"sema\"]},\"application/vnd.semd\":{\"source\":\"iana\",\"extensions\":[\"semd\"]},\"application/vnd.semf\":{\"source\":\"iana\",\"extensions\":[\"semf\"]},\"application/vnd.shade-save-file\":{\"source\":\"iana\"},\"application/vnd.shana.informed.formdata\":{\"source\":\"iana\",\"extensions\":[\"ifm\"]},\"application/vnd.shana.informed.formtemplate\":{\"source\":\"iana\",\"extensions\":[\"itp\"]},\"application/vnd.shana.informed.interchange\":{\"source\":\"iana\",\"extensions\":[\"iif\"]},\"application/vnd.shana.informed.package\":{\"source\":\"iana\",\"extensions\":[\"ipk\"]},\"application/vnd.shootproof+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shopkick+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shp\":{\"source\":\"iana\"},\"application/vnd.shx\":{\"source\":\"iana\"},\"application/vnd.sigrok.session\":{\"source\":\"iana\"},\"application/vnd.simtech-mindmapper\":{\"source\":\"iana\",\"extensions\":[\"twd\",\"twds\"]},\"application/vnd.siren+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.smaf\":{\"source\":\"iana\",\"extensions\":[\"mmf\"]},\"application/vnd.smart.notebook\":{\"source\":\"iana\"},\"application/vnd.smart.teacher\":{\"source\":\"iana\",\"extensions\":[\"teacher\"]},\"application/vnd.snesdev-page-table\":{\"source\":\"iana\"},\"application/vnd.software602.filler.form+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fo\"]},\"application/vnd.software602.filler.form-xml-zip\":{\"source\":\"iana\"},\"application/vnd.solent.sdkm+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sdkm\",\"sdkd\"]},\"application/vnd.spotfire.dxp\":{\"source\":\"iana\",\"extensions\":[\"dxp\"]},\"application/vnd.spotfire.sfs\":{\"source\":\"iana\",\"extensions\":[\"sfs\"]},\"application/vnd.sqlite3\":{\"source\":\"iana\"},\"application/vnd.sss-cod\":{\"source\":\"iana\"},\"application/vnd.sss-dtf\":{\"source\":\"iana\"},\"application/vnd.sss-ntf\":{\"source\":\"iana\"},\"application/vnd.stardivision.calc\":{\"source\":\"apache\",\"extensions\":[\"sdc\"]},\"application/vnd.stardivision.draw\":{\"source\":\"apache\",\"extensions\":[\"sda\"]},\"application/vnd.stardivision.impress\":{\"source\":\"apache\",\"extensions\":[\"sdd\"]},\"application/vnd.stardivision.math\":{\"source\":\"apache\",\"extensions\":[\"smf\"]},\"application/vnd.stardivision.writer\":{\"source\":\"apache\",\"extensions\":[\"sdw\",\"vor\"]},\"application/vnd.stardivision.writer-global\":{\"source\":\"apache\",\"extensions\":[\"sgl\"]},\"application/vnd.stepmania.package\":{\"source\":\"iana\",\"extensions\":[\"smzip\"]},\"application/vnd.stepmania.stepchart\":{\"source\":\"iana\",\"extensions\":[\"sm\"]},\"application/vnd.street-stream\":{\"source\":\"iana\"},\"application/vnd.sun.wadl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wadl\"]},\"application/vnd.sun.xml.calc\":{\"source\":\"apache\",\"extensions\":[\"sxc\"]},\"application/vnd.sun.xml.calc.template\":{\"source\":\"apache\",\"extensions\":[\"stc\"]},\"application/vnd.sun.xml.draw\":{\"source\":\"apache\",\"extensions\":[\"sxd\"]},\"application/vnd.sun.xml.draw.template\":{\"source\":\"apache\",\"extensions\":[\"std\"]},\"application/vnd.sun.xml.impress\":{\"source\":\"apache\",\"extensions\":[\"sxi\"]},\"application/vnd.sun.xml.impress.template\":{\"source\":\"apache\",\"extensions\":[\"sti\"]},\"application/vnd.sun.xml.math\":{\"source\":\"apache\",\"extensions\":[\"sxm\"]},\"application/vnd.sun.xml.writer\":{\"source\":\"apache\",\"extensions\":[\"sxw\"]},\"application/vnd.sun.xml.writer.global\":{\"source\":\"apache\",\"extensions\":[\"sxg\"]},\"application/vnd.sun.xml.writer.template\":{\"source\":\"apache\",\"extensions\":[\"stw\"]},\"application/vnd.sus-calendar\":{\"source\":\"iana\",\"extensions\":[\"sus\",\"susp\"]},\"application/vnd.svd\":{\"source\":\"iana\",\"extensions\":[\"svd\"]},\"application/vnd.swiftview-ics\":{\"source\":\"iana\"},\"application/vnd.sycle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.symbian.install\":{\"source\":\"apache\",\"extensions\":[\"sis\",\"sisx\"]},\"application/vnd.syncml+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xsm\"]},\"application/vnd.syncml.dm+wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"bdm\"]},\"application/vnd.syncml.dm+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xdm\"]},\"application/vnd.syncml.dm.notification\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"ddf\"]},\"application/vnd.syncml.dmtnds+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmtnds+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.syncml.ds.notification\":{\"source\":\"iana\"},\"application/vnd.tableschema+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tao.intent-module-archive\":{\"source\":\"iana\",\"extensions\":[\"tao\"]},\"application/vnd.tcpdump.pcap\":{\"source\":\"iana\",\"extensions\":[\"pcap\",\"cap\",\"dmp\"]},\"application/vnd.think-cell.ppttc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tmd.mediaflex.api+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tml\":{\"source\":\"iana\"},\"application/vnd.tmobile-livetv\":{\"source\":\"iana\",\"extensions\":[\"tmo\"]},\"application/vnd.tri.onesource\":{\"source\":\"iana\"},\"application/vnd.trid.tpt\":{\"source\":\"iana\",\"extensions\":[\"tpt\"]},\"application/vnd.triscape.mxs\":{\"source\":\"iana\",\"extensions\":[\"mxs\"]},\"application/vnd.trueapp\":{\"source\":\"iana\",\"extensions\":[\"tra\"]},\"application/vnd.truedoc\":{\"source\":\"iana\"},\"application/vnd.ubisoft.webplayer\":{\"source\":\"iana\"},\"application/vnd.ufdl\":{\"source\":\"iana\",\"extensions\":[\"ufd\",\"ufdl\"]},\"application/vnd.uiq.theme\":{\"source\":\"iana\",\"extensions\":[\"utz\"]},\"application/vnd.umajin\":{\"source\":\"iana\",\"extensions\":[\"umj\"]},\"application/vnd.unity\":{\"source\":\"iana\",\"extensions\":[\"unityweb\"]},\"application/vnd.uoml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uoml\"]},\"application/vnd.uplanet.alert\":{\"source\":\"iana\"},\"application/vnd.uplanet.alert-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.list\":{\"source\":\"iana\"},\"application/vnd.uplanet.list-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.signal\":{\"source\":\"iana\"},\"application/vnd.uri-map\":{\"source\":\"iana\"},\"application/vnd.valve.source.material\":{\"source\":\"iana\"},\"application/vnd.vcx\":{\"source\":\"iana\",\"extensions\":[\"vcx\"]},\"application/vnd.vd-study\":{\"source\":\"iana\"},\"application/vnd.vectorworks\":{\"source\":\"iana\"},\"application/vnd.vel+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.verimatrix.vcas\":{\"source\":\"iana\"},\"application/vnd.veritone.aion+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.veryant.thin\":{\"source\":\"iana\"},\"application/vnd.ves.encrypted\":{\"source\":\"iana\"},\"application/vnd.vidsoft.vidconference\":{\"source\":\"iana\"},\"application/vnd.visio\":{\"source\":\"iana\",\"extensions\":[\"vsd\",\"vst\",\"vss\",\"vsw\"]},\"application/vnd.visionary\":{\"source\":\"iana\",\"extensions\":[\"vis\"]},\"application/vnd.vividence.scriptfile\":{\"source\":\"iana\"},\"application/vnd.vsf\":{\"source\":\"iana\",\"extensions\":[\"vsf\"]},\"application/vnd.wap.sic\":{\"source\":\"iana\"},\"application/vnd.wap.slc\":{\"source\":\"iana\"},\"application/vnd.wap.wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"wbxml\"]},\"application/vnd.wap.wmlc\":{\"source\":\"iana\",\"extensions\":[\"wmlc\"]},\"application/vnd.wap.wmlscriptc\":{\"source\":\"iana\",\"extensions\":[\"wmlsc\"]},\"application/vnd.webturbo\":{\"source\":\"iana\",\"extensions\":[\"wtb\"]},\"application/vnd.wfa.dpp\":{\"source\":\"iana\"},\"application/vnd.wfa.p2p\":{\"source\":\"iana\"},\"application/vnd.wfa.wsc\":{\"source\":\"iana\"},\"application/vnd.windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.wmc\":{\"source\":\"iana\"},\"application/vnd.wmf.bootstrap\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica.package\":{\"source\":\"iana\"},\"application/vnd.wolfram.player\":{\"source\":\"iana\",\"extensions\":[\"nbp\"]},\"application/vnd.wordperfect\":{\"source\":\"iana\",\"extensions\":[\"wpd\"]},\"application/vnd.wqd\":{\"source\":\"iana\",\"extensions\":[\"wqd\"]},\"application/vnd.wrq-hp3000-labelled\":{\"source\":\"iana\"},\"application/vnd.wt.stf\":{\"source\":\"iana\",\"extensions\":[\"stf\"]},\"application/vnd.wv.csp+wbxml\":{\"source\":\"iana\"},\"application/vnd.wv.csp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.wv.ssp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xacml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xara\":{\"source\":\"iana\",\"extensions\":[\"xar\"]},\"application/vnd.xfdl\":{\"source\":\"iana\",\"extensions\":[\"xfdl\"]},\"application/vnd.xfdl.webform\":{\"source\":\"iana\"},\"application/vnd.xmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xmpie.cpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.dpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.plan\":{\"source\":\"iana\"},\"application/vnd.xmpie.ppkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.xlim\":{\"source\":\"iana\"},\"application/vnd.yamaha.hv-dic\":{\"source\":\"iana\",\"extensions\":[\"hvd\"]},\"application/vnd.yamaha.hv-script\":{\"source\":\"iana\",\"extensions\":[\"hvs\"]},\"application/vnd.yamaha.hv-voice\":{\"source\":\"iana\",\"extensions\":[\"hvp\"]},\"application/vnd.yamaha.openscoreformat\":{\"source\":\"iana\",\"extensions\":[\"osf\"]},\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osfpvg\"]},\"application/vnd.yamaha.remote-setup\":{\"source\":\"iana\"},\"application/vnd.yamaha.smaf-audio\":{\"source\":\"iana\",\"extensions\":[\"saf\"]},\"application/vnd.yamaha.smaf-phrase\":{\"source\":\"iana\",\"extensions\":[\"spf\"]},\"application/vnd.yamaha.through-ngn\":{\"source\":\"iana\"},\"application/vnd.yamaha.tunnel-udpencap\":{\"source\":\"iana\"},\"application/vnd.yaoweme\":{\"source\":\"iana\"},\"application/vnd.yellowriver-custom-menu\":{\"source\":\"iana\",\"extensions\":[\"cmp\"]},\"application/vnd.youtube.yt\":{\"source\":\"iana\"},\"application/vnd.zul\":{\"source\":\"iana\",\"extensions\":[\"zir\",\"zirz\"]},\"application/vnd.zzazz.deck+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zaz\"]},\"application/voicexml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vxml\"]},\"application/voucher-cms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vq-rtcpxr\":{\"source\":\"iana\"},\"application/wasm\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wasm\"]},\"application/watcherinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/webpush-options+json\":{\"source\":\"iana\",\"compressible\":true},\"application/whoispp-query\":{\"source\":\"iana\"},\"application/whoispp-response\":{\"source\":\"iana\"},\"application/widget\":{\"source\":\"iana\",\"extensions\":[\"wgt\"]},\"application/winhlp\":{\"source\":\"apache\",\"extensions\":[\"hlp\"]},\"application/wita\":{\"source\":\"iana\"},\"application/wordperfect5.1\":{\"source\":\"iana\"},\"application/wsdl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wsdl\"]},\"application/wspolicy+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wspolicy\"]},\"application/x-7z-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"7z\"]},\"application/x-abiword\":{\"source\":\"apache\",\"extensions\":[\"abw\"]},\"application/x-ace-compressed\":{\"source\":\"apache\",\"extensions\":[\"ace\"]},\"application/x-amf\":{\"source\":\"apache\"},\"application/x-apple-diskimage\":{\"source\":\"apache\",\"extensions\":[\"dmg\"]},\"application/x-arj\":{\"compressible\":false,\"extensions\":[\"arj\"]},\"application/x-authorware-bin\":{\"source\":\"apache\",\"extensions\":[\"aab\",\"x32\",\"u32\",\"vox\"]},\"application/x-authorware-map\":{\"source\":\"apache\",\"extensions\":[\"aam\"]},\"application/x-authorware-seg\":{\"source\":\"apache\",\"extensions\":[\"aas\"]},\"application/x-bcpio\":{\"source\":\"apache\",\"extensions\":[\"bcpio\"]},\"application/x-bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/x-bittorrent\":{\"source\":\"apache\",\"extensions\":[\"torrent\"]},\"application/x-blorb\":{\"source\":\"apache\",\"extensions\":[\"blb\",\"blorb\"]},\"application/x-bzip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz\"]},\"application/x-bzip2\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz2\",\"boz\"]},\"application/x-cbr\":{\"source\":\"apache\",\"extensions\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]},\"application/x-cdlink\":{\"source\":\"apache\",\"extensions\":[\"vcd\"]},\"application/x-cfs-compressed\":{\"source\":\"apache\",\"extensions\":[\"cfs\"]},\"application/x-chat\":{\"source\":\"apache\",\"extensions\":[\"chat\"]},\"application/x-chess-pgn\":{\"source\":\"apache\",\"extensions\":[\"pgn\"]},\"application/x-chrome-extension\":{\"extensions\":[\"crx\"]},\"application/x-cocoa\":{\"source\":\"nginx\",\"extensions\":[\"cco\"]},\"application/x-compress\":{\"source\":\"apache\"},\"application/x-conference\":{\"source\":\"apache\",\"extensions\":[\"nsc\"]},\"application/x-cpio\":{\"source\":\"apache\",\"extensions\":[\"cpio\"]},\"application/x-csh\":{\"source\":\"apache\",\"extensions\":[\"csh\"]},\"application/x-deb\":{\"compressible\":false},\"application/x-debian-package\":{\"source\":\"apache\",\"extensions\":[\"deb\",\"udeb\"]},\"application/x-dgc-compressed\":{\"source\":\"apache\",\"extensions\":[\"dgc\"]},\"application/x-director\":{\"source\":\"apache\",\"extensions\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]},\"application/x-doom\":{\"source\":\"apache\",\"extensions\":[\"wad\"]},\"application/x-dtbncx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ncx\"]},\"application/x-dtbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dtb\"]},\"application/x-dtbresource+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"res\"]},\"application/x-dvi\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"dvi\"]},\"application/x-envoy\":{\"source\":\"apache\",\"extensions\":[\"evy\"]},\"application/x-eva\":{\"source\":\"apache\",\"extensions\":[\"eva\"]},\"application/x-font-bdf\":{\"source\":\"apache\",\"extensions\":[\"bdf\"]},\"application/x-font-dos\":{\"source\":\"apache\"},\"application/x-font-framemaker\":{\"source\":\"apache\"},\"application/x-font-ghostscript\":{\"source\":\"apache\",\"extensions\":[\"gsf\"]},\"application/x-font-libgrx\":{\"source\":\"apache\"},\"application/x-font-linux-psf\":{\"source\":\"apache\",\"extensions\":[\"psf\"]},\"application/x-font-pcf\":{\"source\":\"apache\",\"extensions\":[\"pcf\"]},\"application/x-font-snf\":{\"source\":\"apache\",\"extensions\":[\"snf\"]},\"application/x-font-speedo\":{\"source\":\"apache\"},\"application/x-font-sunos-news\":{\"source\":\"apache\"},\"application/x-font-type1\":{\"source\":\"apache\",\"extensions\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"]},\"application/x-font-vfont\":{\"source\":\"apache\"},\"application/x-freearc\":{\"source\":\"apache\",\"extensions\":[\"arc\"]},\"application/x-futuresplash\":{\"source\":\"apache\",\"extensions\":[\"spl\"]},\"application/x-gca-compressed\":{\"source\":\"apache\",\"extensions\":[\"gca\"]},\"application/x-glulx\":{\"source\":\"apache\",\"extensions\":[\"ulx\"]},\"application/x-gnumeric\":{\"source\":\"apache\",\"extensions\":[\"gnumeric\"]},\"application/x-gramps-xml\":{\"source\":\"apache\",\"extensions\":[\"gramps\"]},\"application/x-gtar\":{\"source\":\"apache\",\"extensions\":[\"gtar\"]},\"application/x-gzip\":{\"source\":\"apache\"},\"application/x-hdf\":{\"source\":\"apache\",\"extensions\":[\"hdf\"]},\"application/x-httpd-php\":{\"compressible\":true,\"extensions\":[\"php\"]},\"application/x-install-instructions\":{\"source\":\"apache\",\"extensions\":[\"install\"]},\"application/x-iso9660-image\":{\"source\":\"apache\",\"extensions\":[\"iso\"]},\"application/x-java-archive-diff\":{\"source\":\"nginx\",\"extensions\":[\"jardiff\"]},\"application/x-java-jnlp-file\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jnlp\"]},\"application/x-javascript\":{\"compressible\":true},\"application/x-keepass2\":{\"extensions\":[\"kdbx\"]},\"application/x-latex\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"latex\"]},\"application/x-lua-bytecode\":{\"extensions\":[\"luac\"]},\"application/x-lzh-compressed\":{\"source\":\"apache\",\"extensions\":[\"lzh\",\"lha\"]},\"application/x-makeself\":{\"source\":\"nginx\",\"extensions\":[\"run\"]},\"application/x-mie\":{\"source\":\"apache\",\"extensions\":[\"mie\"]},\"application/x-mobipocket-ebook\":{\"source\":\"apache\",\"extensions\":[\"prc\",\"mobi\"]},\"application/x-mpegurl\":{\"compressible\":false},\"application/x-ms-application\":{\"source\":\"apache\",\"extensions\":[\"application\"]},\"application/x-ms-shortcut\":{\"source\":\"apache\",\"extensions\":[\"lnk\"]},\"application/x-ms-wmd\":{\"source\":\"apache\",\"extensions\":[\"wmd\"]},\"application/x-ms-wmz\":{\"source\":\"apache\",\"extensions\":[\"wmz\"]},\"application/x-ms-xbap\":{\"source\":\"apache\",\"extensions\":[\"xbap\"]},\"application/x-msaccess\":{\"source\":\"apache\",\"extensions\":[\"mdb\"]},\"application/x-msbinder\":{\"source\":\"apache\",\"extensions\":[\"obd\"]},\"application/x-mscardfile\":{\"source\":\"apache\",\"extensions\":[\"crd\"]},\"application/x-msclip\":{\"source\":\"apache\",\"extensions\":[\"clp\"]},\"application/x-msdos-program\":{\"extensions\":[\"exe\"]},\"application/x-msdownload\":{\"source\":\"apache\",\"extensions\":[\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]},\"application/x-msmediaview\":{\"source\":\"apache\",\"extensions\":[\"mvb\",\"m13\",\"m14\"]},\"application/x-msmetafile\":{\"source\":\"apache\",\"extensions\":[\"wmf\",\"wmz\",\"emf\",\"emz\"]},\"application/x-msmoney\":{\"source\":\"apache\",\"extensions\":[\"mny\"]},\"application/x-mspublisher\":{\"source\":\"apache\",\"extensions\":[\"pub\"]},\"application/x-msschedule\":{\"source\":\"apache\",\"extensions\":[\"scd\"]},\"application/x-msterminal\":{\"source\":\"apache\",\"extensions\":[\"trm\"]},\"application/x-mswrite\":{\"source\":\"apache\",\"extensions\":[\"wri\"]},\"application/x-netcdf\":{\"source\":\"apache\",\"extensions\":[\"nc\",\"cdf\"]},\"application/x-ns-proxy-autoconfig\":{\"compressible\":true,\"extensions\":[\"pac\"]},\"application/x-nzb\":{\"source\":\"apache\",\"extensions\":[\"nzb\"]},\"application/x-perl\":{\"source\":\"nginx\",\"extensions\":[\"pl\",\"pm\"]},\"application/x-pilot\":{\"source\":\"nginx\",\"extensions\":[\"prc\",\"pdb\"]},\"application/x-pkcs12\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"p12\",\"pfx\"]},\"application/x-pkcs7-certificates\":{\"source\":\"apache\",\"extensions\":[\"p7b\",\"spc\"]},\"application/x-pkcs7-certreqresp\":{\"source\":\"apache\",\"extensions\":[\"p7r\"]},\"application/x-pki-message\":{\"source\":\"iana\"},\"application/x-rar-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"rar\"]},\"application/x-redhat-package-manager\":{\"source\":\"nginx\",\"extensions\":[\"rpm\"]},\"application/x-research-info-systems\":{\"source\":\"apache\",\"extensions\":[\"ris\"]},\"application/x-sea\":{\"source\":\"nginx\",\"extensions\":[\"sea\"]},\"application/x-sh\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"sh\"]},\"application/x-shar\":{\"source\":\"apache\",\"extensions\":[\"shar\"]},\"application/x-shockwave-flash\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"swf\"]},\"application/x-silverlight-app\":{\"source\":\"apache\",\"extensions\":[\"xap\"]},\"application/x-sql\":{\"source\":\"apache\",\"extensions\":[\"sql\"]},\"application/x-stuffit\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"sit\"]},\"application/x-stuffitx\":{\"source\":\"apache\",\"extensions\":[\"sitx\"]},\"application/x-subrip\":{\"source\":\"apache\",\"extensions\":[\"srt\"]},\"application/x-sv4cpio\":{\"source\":\"apache\",\"extensions\":[\"sv4cpio\"]},\"application/x-sv4crc\":{\"source\":\"apache\",\"extensions\":[\"sv4crc\"]},\"application/x-t3vm-image\":{\"source\":\"apache\",\"extensions\":[\"t3\"]},\"application/x-tads\":{\"source\":\"apache\",\"extensions\":[\"gam\"]},\"application/x-tar\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"tar\"]},\"application/x-tcl\":{\"source\":\"apache\",\"extensions\":[\"tcl\",\"tk\"]},\"application/x-tex\":{\"source\":\"apache\",\"extensions\":[\"tex\"]},\"application/x-tex-tfm\":{\"source\":\"apache\",\"extensions\":[\"tfm\"]},\"application/x-texinfo\":{\"source\":\"apache\",\"extensions\":[\"texinfo\",\"texi\"]},\"application/x-tgif\":{\"source\":\"apache\",\"extensions\":[\"obj\"]},\"application/x-ustar\":{\"source\":\"apache\",\"extensions\":[\"ustar\"]},\"application/x-virtualbox-hdd\":{\"compressible\":true,\"extensions\":[\"hdd\"]},\"application/x-virtualbox-ova\":{\"compressible\":true,\"extensions\":[\"ova\"]},\"application/x-virtualbox-ovf\":{\"compressible\":true,\"extensions\":[\"ovf\"]},\"application/x-virtualbox-vbox\":{\"compressible\":true,\"extensions\":[\"vbox\"]},\"application/x-virtualbox-vbox-extpack\":{\"compressible\":false,\"extensions\":[\"vbox-extpack\"]},\"application/x-virtualbox-vdi\":{\"compressible\":true,\"extensions\":[\"vdi\"]},\"application/x-virtualbox-vhd\":{\"compressible\":true,\"extensions\":[\"vhd\"]},\"application/x-virtualbox-vmdk\":{\"compressible\":true,\"extensions\":[\"vmdk\"]},\"application/x-wais-source\":{\"source\":\"apache\",\"extensions\":[\"src\"]},\"application/x-web-app-manifest+json\":{\"compressible\":true,\"extensions\":[\"webapp\"]},\"application/x-www-form-urlencoded\":{\"source\":\"iana\",\"compressible\":true},\"application/x-x509-ca-cert\":{\"source\":\"iana\",\"extensions\":[\"der\",\"crt\",\"pem\"]},\"application/x-x509-ca-ra-cert\":{\"source\":\"iana\"},\"application/x-x509-next-ca-cert\":{\"source\":\"iana\"},\"application/x-xfig\":{\"source\":\"apache\",\"extensions\":[\"fig\"]},\"application/x-xliff+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/x-xpinstall\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"xpi\"]},\"application/x-xz\":{\"source\":\"apache\",\"extensions\":[\"xz\"]},\"application/x-zmachine\":{\"source\":\"apache\",\"extensions\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]},\"application/x400-bp\":{\"source\":\"iana\"},\"application/xacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xaml+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xaml\"]},\"application/xcap-att+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xav\"]},\"application/xcap-caps+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xca\"]},\"application/xcap-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/xcap-el+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xel\"]},\"application/xcap-error+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcap-ns+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xns\"]},\"application/xcon-conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcon-conference-info-diff+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xenc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xenc\"]},\"application/xhtml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xhtml\",\"xht\"]},\"application/xhtml-voice+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/xliff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\",\"xsl\",\"xsd\",\"rng\"]},\"application/xml-dtd\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dtd\"]},\"application/xml-external-parsed-entity\":{\"source\":\"iana\"},\"application/xml-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xmpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xop+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xop\"]},\"application/xproc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xpl\"]},\"application/xslt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xsl\",\"xslt\"]},\"application/xspf+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xspf\"]},\"application/xv+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]},\"application/yang\":{\"source\":\"iana\",\"extensions\":[\"yang\"]},\"application/yang-data+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yin+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"yin\"]},\"application/zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"zip\"]},\"application/zlib\":{\"source\":\"iana\"},\"application/zstd\":{\"source\":\"iana\"},\"audio/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"audio/32kadpcm\":{\"source\":\"iana\"},\"audio/3gpp\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"3gpp\"]},\"audio/3gpp2\":{\"source\":\"iana\"},\"audio/aac\":{\"source\":\"iana\"},\"audio/ac3\":{\"source\":\"iana\"},\"audio/adpcm\":{\"source\":\"apache\",\"extensions\":[\"adp\"]},\"audio/amr\":{\"source\":\"iana\",\"extensions\":[\"amr\"]},\"audio/amr-wb\":{\"source\":\"iana\"},\"audio/amr-wb+\":{\"source\":\"iana\"},\"audio/aptx\":{\"source\":\"iana\"},\"audio/asc\":{\"source\":\"iana\"},\"audio/atrac-advanced-lossless\":{\"source\":\"iana\"},\"audio/atrac-x\":{\"source\":\"iana\"},\"audio/atrac3\":{\"source\":\"iana\"},\"audio/basic\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"au\",\"snd\"]},\"audio/bv16\":{\"source\":\"iana\"},\"audio/bv32\":{\"source\":\"iana\"},\"audio/clearmode\":{\"source\":\"iana\"},\"audio/cn\":{\"source\":\"iana\"},\"audio/dat12\":{\"source\":\"iana\"},\"audio/dls\":{\"source\":\"iana\"},\"audio/dsr-es201108\":{\"source\":\"iana\"},\"audio/dsr-es202050\":{\"source\":\"iana\"},\"audio/dsr-es202211\":{\"source\":\"iana\"},\"audio/dsr-es202212\":{\"source\":\"iana\"},\"audio/dv\":{\"source\":\"iana\"},\"audio/dvi4\":{\"source\":\"iana\"},\"audio/eac3\":{\"source\":\"iana\"},\"audio/encaprtp\":{\"source\":\"iana\"},\"audio/evrc\":{\"source\":\"iana\"},\"audio/evrc-qcp\":{\"source\":\"iana\"},\"audio/evrc0\":{\"source\":\"iana\"},\"audio/evrc1\":{\"source\":\"iana\"},\"audio/evrcb\":{\"source\":\"iana\"},\"audio/evrcb0\":{\"source\":\"iana\"},\"audio/evrcb1\":{\"source\":\"iana\"},\"audio/evrcnw\":{\"source\":\"iana\"},\"audio/evrcnw0\":{\"source\":\"iana\"},\"audio/evrcnw1\":{\"source\":\"iana\"},\"audio/evrcwb\":{\"source\":\"iana\"},\"audio/evrcwb0\":{\"source\":\"iana\"},\"audio/evrcwb1\":{\"source\":\"iana\"},\"audio/evs\":{\"source\":\"iana\"},\"audio/flexfec\":{\"source\":\"iana\"},\"audio/fwdred\":{\"source\":\"iana\"},\"audio/g711-0\":{\"source\":\"iana\"},\"audio/g719\":{\"source\":\"iana\"},\"audio/g722\":{\"source\":\"iana\"},\"audio/g7221\":{\"source\":\"iana\"},\"audio/g723\":{\"source\":\"iana\"},\"audio/g726-16\":{\"source\":\"iana\"},\"audio/g726-24\":{\"source\":\"iana\"},\"audio/g726-32\":{\"source\":\"iana\"},\"audio/g726-40\":{\"source\":\"iana\"},\"audio/g728\":{\"source\":\"iana\"},\"audio/g729\":{\"source\":\"iana\"},\"audio/g7291\":{\"source\":\"iana\"},\"audio/g729d\":{\"source\":\"iana\"},\"audio/g729e\":{\"source\":\"iana\"},\"audio/gsm\":{\"source\":\"iana\"},\"audio/gsm-efr\":{\"source\":\"iana\"},\"audio/gsm-hr-08\":{\"source\":\"iana\"},\"audio/ilbc\":{\"source\":\"iana\"},\"audio/ip-mr_v2.5\":{\"source\":\"iana\"},\"audio/isac\":{\"source\":\"apache\"},\"audio/l16\":{\"source\":\"iana\"},\"audio/l20\":{\"source\":\"iana\"},\"audio/l24\":{\"source\":\"iana\",\"compressible\":false},\"audio/l8\":{\"source\":\"iana\"},\"audio/lpc\":{\"source\":\"iana\"},\"audio/melp\":{\"source\":\"iana\"},\"audio/melp1200\":{\"source\":\"iana\"},\"audio/melp2400\":{\"source\":\"iana\"},\"audio/melp600\":{\"source\":\"iana\"},\"audio/mhas\":{\"source\":\"iana\"},\"audio/midi\":{\"source\":\"apache\",\"extensions\":[\"mid\",\"midi\",\"kar\",\"rmi\"]},\"audio/mobile-xmf\":{\"source\":\"iana\",\"extensions\":[\"mxmf\"]},\"audio/mp3\":{\"compressible\":false,\"extensions\":[\"mp3\"]},\"audio/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"m4a\",\"mp4a\"]},\"audio/mp4a-latm\":{\"source\":\"iana\"},\"audio/mpa\":{\"source\":\"iana\"},\"audio/mpa-robust\":{\"source\":\"iana\"},\"audio/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]},\"audio/mpeg4-generic\":{\"source\":\"iana\"},\"audio/musepack\":{\"source\":\"apache\"},\"audio/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"oga\",\"ogg\",\"spx\",\"opus\"]},\"audio/opus\":{\"source\":\"iana\"},\"audio/parityfec\":{\"source\":\"iana\"},\"audio/pcma\":{\"source\":\"iana\"},\"audio/pcma-wb\":{\"source\":\"iana\"},\"audio/pcmu\":{\"source\":\"iana\"},\"audio/pcmu-wb\":{\"source\":\"iana\"},\"audio/prs.sid\":{\"source\":\"iana\"},\"audio/qcelp\":{\"source\":\"iana\"},\"audio/raptorfec\":{\"source\":\"iana\"},\"audio/red\":{\"source\":\"iana\"},\"audio/rtp-enc-aescm128\":{\"source\":\"iana\"},\"audio/rtp-midi\":{\"source\":\"iana\"},\"audio/rtploopback\":{\"source\":\"iana\"},\"audio/rtx\":{\"source\":\"iana\"},\"audio/s3m\":{\"source\":\"apache\",\"extensions\":[\"s3m\"]},\"audio/scip\":{\"source\":\"iana\"},\"audio/silk\":{\"source\":\"apache\",\"extensions\":[\"sil\"]},\"audio/smv\":{\"source\":\"iana\"},\"audio/smv-qcp\":{\"source\":\"iana\"},\"audio/smv0\":{\"source\":\"iana\"},\"audio/sofa\":{\"source\":\"iana\"},\"audio/sp-midi\":{\"source\":\"iana\"},\"audio/speex\":{\"source\":\"iana\"},\"audio/t140c\":{\"source\":\"iana\"},\"audio/t38\":{\"source\":\"iana\"},\"audio/telephone-event\":{\"source\":\"iana\"},\"audio/tetra_acelp\":{\"source\":\"iana\"},\"audio/tetra_acelp_bb\":{\"source\":\"iana\"},\"audio/tone\":{\"source\":\"iana\"},\"audio/tsvcis\":{\"source\":\"iana\"},\"audio/uemclip\":{\"source\":\"iana\"},\"audio/ulpfec\":{\"source\":\"iana\"},\"audio/usac\":{\"source\":\"iana\"},\"audio/vdvi\":{\"source\":\"iana\"},\"audio/vmr-wb\":{\"source\":\"iana\"},\"audio/vnd.3gpp.iufp\":{\"source\":\"iana\"},\"audio/vnd.4sb\":{\"source\":\"iana\"},\"audio/vnd.audiokoz\":{\"source\":\"iana\"},\"audio/vnd.celp\":{\"source\":\"iana\"},\"audio/vnd.cisco.nse\":{\"source\":\"iana\"},\"audio/vnd.cmles.radio-events\":{\"source\":\"iana\"},\"audio/vnd.cns.anp1\":{\"source\":\"iana\"},\"audio/vnd.cns.inf1\":{\"source\":\"iana\"},\"audio/vnd.dece.audio\":{\"source\":\"iana\",\"extensions\":[\"uva\",\"uvva\"]},\"audio/vnd.digital-winds\":{\"source\":\"iana\",\"extensions\":[\"eol\"]},\"audio/vnd.dlna.adts\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.1\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.2\":{\"source\":\"iana\"},\"audio/vnd.dolby.mlp\":{\"source\":\"iana\"},\"audio/vnd.dolby.mps\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2x\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2z\":{\"source\":\"iana\"},\"audio/vnd.dolby.pulse.1\":{\"source\":\"iana\"},\"audio/vnd.dra\":{\"source\":\"iana\",\"extensions\":[\"dra\"]},\"audio/vnd.dts\":{\"source\":\"iana\",\"extensions\":[\"dts\"]},\"audio/vnd.dts.hd\":{\"source\":\"iana\",\"extensions\":[\"dtshd\"]},\"audio/vnd.dts.uhd\":{\"source\":\"iana\"},\"audio/vnd.dvb.file\":{\"source\":\"iana\"},\"audio/vnd.everad.plj\":{\"source\":\"iana\"},\"audio/vnd.hns.audio\":{\"source\":\"iana\"},\"audio/vnd.lucent.voice\":{\"source\":\"iana\",\"extensions\":[\"lvp\"]},\"audio/vnd.ms-playready.media.pya\":{\"source\":\"iana\",\"extensions\":[\"pya\"]},\"audio/vnd.nokia.mobile-xmf\":{\"source\":\"iana\"},\"audio/vnd.nortel.vbk\":{\"source\":\"iana\"},\"audio/vnd.nuera.ecelp4800\":{\"source\":\"iana\",\"extensions\":[\"ecelp4800\"]},\"audio/vnd.nuera.ecelp7470\":{\"source\":\"iana\",\"extensions\":[\"ecelp7470\"]},\"audio/vnd.nuera.ecelp9600\":{\"source\":\"iana\",\"extensions\":[\"ecelp9600\"]},\"audio/vnd.octel.sbc\":{\"source\":\"iana\"},\"audio/vnd.presonus.multitrack\":{\"source\":\"iana\"},\"audio/vnd.qcelp\":{\"source\":\"iana\"},\"audio/vnd.rhetorex.32kadpcm\":{\"source\":\"iana\"},\"audio/vnd.rip\":{\"source\":\"iana\",\"extensions\":[\"rip\"]},\"audio/vnd.rn-realaudio\":{\"compressible\":false},\"audio/vnd.sealedmedia.softseal.mpeg\":{\"source\":\"iana\"},\"audio/vnd.vmx.cvsd\":{\"source\":\"iana\"},\"audio/vnd.wave\":{\"compressible\":false},\"audio/vorbis\":{\"source\":\"iana\",\"compressible\":false},\"audio/vorbis-config\":{\"source\":\"iana\"},\"audio/wav\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/wave\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"weba\"]},\"audio/x-aac\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"aac\"]},\"audio/x-aiff\":{\"source\":\"apache\",\"extensions\":[\"aif\",\"aiff\",\"aifc\"]},\"audio/x-caf\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"caf\"]},\"audio/x-flac\":{\"source\":\"apache\",\"extensions\":[\"flac\"]},\"audio/x-m4a\":{\"source\":\"nginx\",\"extensions\":[\"m4a\"]},\"audio/x-matroska\":{\"source\":\"apache\",\"extensions\":[\"mka\"]},\"audio/x-mpegurl\":{\"source\":\"apache\",\"extensions\":[\"m3u\"]},\"audio/x-ms-wax\":{\"source\":\"apache\",\"extensions\":[\"wax\"]},\"audio/x-ms-wma\":{\"source\":\"apache\",\"extensions\":[\"wma\"]},\"audio/x-pn-realaudio\":{\"source\":\"apache\",\"extensions\":[\"ram\",\"ra\"]},\"audio/x-pn-realaudio-plugin\":{\"source\":\"apache\",\"extensions\":[\"rmp\"]},\"audio/x-realaudio\":{\"source\":\"nginx\",\"extensions\":[\"ra\"]},\"audio/x-tta\":{\"source\":\"apache\"},\"audio/x-wav\":{\"source\":\"apache\",\"extensions\":[\"wav\"]},\"audio/xm\":{\"source\":\"apache\",\"extensions\":[\"xm\"]},\"chemical/x-cdx\":{\"source\":\"apache\",\"extensions\":[\"cdx\"]},\"chemical/x-cif\":{\"source\":\"apache\",\"extensions\":[\"cif\"]},\"chemical/x-cmdf\":{\"source\":\"apache\",\"extensions\":[\"cmdf\"]},\"chemical/x-cml\":{\"source\":\"apache\",\"extensions\":[\"cml\"]},\"chemical/x-csml\":{\"source\":\"apache\",\"extensions\":[\"csml\"]},\"chemical/x-pdb\":{\"source\":\"apache\"},\"chemical/x-xyz\":{\"source\":\"apache\",\"extensions\":[\"xyz\"]},\"font/collection\":{\"source\":\"iana\",\"extensions\":[\"ttc\"]},\"font/otf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"otf\"]},\"font/sfnt\":{\"source\":\"iana\"},\"font/ttf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttf\"]},\"font/woff\":{\"source\":\"iana\",\"extensions\":[\"woff\"]},\"font/woff2\":{\"source\":\"iana\",\"extensions\":[\"woff2\"]},\"image/aces\":{\"source\":\"iana\",\"extensions\":[\"exr\"]},\"image/apng\":{\"compressible\":false,\"extensions\":[\"apng\"]},\"image/avci\":{\"source\":\"iana\"},\"image/avcs\":{\"source\":\"iana\"},\"image/avif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"avif\"]},\"image/bmp\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/cgm\":{\"source\":\"iana\",\"extensions\":[\"cgm\"]},\"image/dicom-rle\":{\"source\":\"iana\",\"extensions\":[\"drle\"]},\"image/emf\":{\"source\":\"iana\",\"extensions\":[\"emf\"]},\"image/fits\":{\"source\":\"iana\",\"extensions\":[\"fits\"]},\"image/g3fax\":{\"source\":\"iana\",\"extensions\":[\"g3\"]},\"image/gif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gif\"]},\"image/heic\":{\"source\":\"iana\",\"extensions\":[\"heic\"]},\"image/heic-sequence\":{\"source\":\"iana\",\"extensions\":[\"heics\"]},\"image/heif\":{\"source\":\"iana\",\"extensions\":[\"heif\"]},\"image/heif-sequence\":{\"source\":\"iana\",\"extensions\":[\"heifs\"]},\"image/hej2k\":{\"source\":\"iana\",\"extensions\":[\"hej2\"]},\"image/hsj2\":{\"source\":\"iana\",\"extensions\":[\"hsj2\"]},\"image/ief\":{\"source\":\"iana\",\"extensions\":[\"ief\"]},\"image/jls\":{\"source\":\"iana\",\"extensions\":[\"jls\"]},\"image/jp2\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jp2\",\"jpg2\"]},\"image/jpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpeg\",\"jpg\",\"jpe\"]},\"image/jph\":{\"source\":\"iana\",\"extensions\":[\"jph\"]},\"image/jphc\":{\"source\":\"iana\",\"extensions\":[\"jhc\"]},\"image/jpm\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpm\"]},\"image/jpx\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpx\",\"jpf\"]},\"image/jxr\":{\"source\":\"iana\",\"extensions\":[\"jxr\"]},\"image/jxra\":{\"source\":\"iana\",\"extensions\":[\"jxra\"]},\"image/jxrs\":{\"source\":\"iana\",\"extensions\":[\"jxrs\"]},\"image/jxs\":{\"source\":\"iana\",\"extensions\":[\"jxs\"]},\"image/jxsc\":{\"source\":\"iana\",\"extensions\":[\"jxsc\"]},\"image/jxsi\":{\"source\":\"iana\",\"extensions\":[\"jxsi\"]},\"image/jxss\":{\"source\":\"iana\",\"extensions\":[\"jxss\"]},\"image/ktx\":{\"source\":\"iana\",\"extensions\":[\"ktx\"]},\"image/ktx2\":{\"source\":\"iana\",\"extensions\":[\"ktx2\"]},\"image/naplps\":{\"source\":\"iana\"},\"image/pjpeg\":{\"compressible\":false},\"image/png\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"png\"]},\"image/prs.btif\":{\"source\":\"iana\",\"extensions\":[\"btif\"]},\"image/prs.pti\":{\"source\":\"iana\",\"extensions\":[\"pti\"]},\"image/pwg-raster\":{\"source\":\"iana\"},\"image/sgi\":{\"source\":\"apache\",\"extensions\":[\"sgi\"]},\"image/svg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"svg\",\"svgz\"]},\"image/t38\":{\"source\":\"iana\",\"extensions\":[\"t38\"]},\"image/tiff\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"tif\",\"tiff\"]},\"image/tiff-fx\":{\"source\":\"iana\",\"extensions\":[\"tfx\"]},\"image/vnd.adobe.photoshop\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"psd\"]},\"image/vnd.airzip.accelerator.azv\":{\"source\":\"iana\",\"extensions\":[\"azv\"]},\"image/vnd.cns.inf2\":{\"source\":\"iana\"},\"image/vnd.dece.graphic\":{\"source\":\"iana\",\"extensions\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]},\"image/vnd.djvu\":{\"source\":\"iana\",\"extensions\":[\"djvu\",\"djv\"]},\"image/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"image/vnd.dwg\":{\"source\":\"iana\",\"extensions\":[\"dwg\"]},\"image/vnd.dxf\":{\"source\":\"iana\",\"extensions\":[\"dxf\"]},\"image/vnd.fastbidsheet\":{\"source\":\"iana\",\"extensions\":[\"fbs\"]},\"image/vnd.fpx\":{\"source\":\"iana\",\"extensions\":[\"fpx\"]},\"image/vnd.fst\":{\"source\":\"iana\",\"extensions\":[\"fst\"]},\"image/vnd.fujixerox.edmics-mmr\":{\"source\":\"iana\",\"extensions\":[\"mmr\"]},\"image/vnd.fujixerox.edmics-rlc\":{\"source\":\"iana\",\"extensions\":[\"rlc\"]},\"image/vnd.globalgraphics.pgb\":{\"source\":\"iana\"},\"image/vnd.microsoft.icon\":{\"source\":\"iana\",\"extensions\":[\"ico\"]},\"image/vnd.mix\":{\"source\":\"iana\"},\"image/vnd.mozilla.apng\":{\"source\":\"iana\"},\"image/vnd.ms-dds\":{\"extensions\":[\"dds\"]},\"image/vnd.ms-modi\":{\"source\":\"iana\",\"extensions\":[\"mdi\"]},\"image/vnd.ms-photo\":{\"source\":\"apache\",\"extensions\":[\"wdp\"]},\"image/vnd.net-fpx\":{\"source\":\"iana\",\"extensions\":[\"npx\"]},\"image/vnd.pco.b16\":{\"source\":\"iana\",\"extensions\":[\"b16\"]},\"image/vnd.radiance\":{\"source\":\"iana\"},\"image/vnd.sealed.png\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.gif\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.jpg\":{\"source\":\"iana\"},\"image/vnd.svf\":{\"source\":\"iana\"},\"image/vnd.tencent.tap\":{\"source\":\"iana\",\"extensions\":[\"tap\"]},\"image/vnd.valve.source.texture\":{\"source\":\"iana\",\"extensions\":[\"vtf\"]},\"image/vnd.wap.wbmp\":{\"source\":\"iana\",\"extensions\":[\"wbmp\"]},\"image/vnd.xiff\":{\"source\":\"iana\",\"extensions\":[\"xif\"]},\"image/vnd.zbrush.pcx\":{\"source\":\"iana\",\"extensions\":[\"pcx\"]},\"image/webp\":{\"source\":\"apache\",\"extensions\":[\"webp\"]},\"image/wmf\":{\"source\":\"iana\",\"extensions\":[\"wmf\"]},\"image/x-3ds\":{\"source\":\"apache\",\"extensions\":[\"3ds\"]},\"image/x-cmu-raster\":{\"source\":\"apache\",\"extensions\":[\"ras\"]},\"image/x-cmx\":{\"source\":\"apache\",\"extensions\":[\"cmx\"]},\"image/x-freehand\":{\"source\":\"apache\",\"extensions\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]},\"image/x-icon\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/x-jng\":{\"source\":\"nginx\",\"extensions\":[\"jng\"]},\"image/x-mrsid-image\":{\"source\":\"apache\",\"extensions\":[\"sid\"]},\"image/x-ms-bmp\":{\"source\":\"nginx\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/x-pcx\":{\"source\":\"apache\",\"extensions\":[\"pcx\"]},\"image/x-pict\":{\"source\":\"apache\",\"extensions\":[\"pic\",\"pct\"]},\"image/x-portable-anymap\":{\"source\":\"apache\",\"extensions\":[\"pnm\"]},\"image/x-portable-bitmap\":{\"source\":\"apache\",\"extensions\":[\"pbm\"]},\"image/x-portable-graymap\":{\"source\":\"apache\",\"extensions\":[\"pgm\"]},\"image/x-portable-pixmap\":{\"source\":\"apache\",\"extensions\":[\"ppm\"]},\"image/x-rgb\":{\"source\":\"apache\",\"extensions\":[\"rgb\"]},\"image/x-tga\":{\"source\":\"apache\",\"extensions\":[\"tga\"]},\"image/x-xbitmap\":{\"source\":\"apache\",\"extensions\":[\"xbm\"]},\"image/x-xcf\":{\"compressible\":false},\"image/x-xpixmap\":{\"source\":\"apache\",\"extensions\":[\"xpm\"]},\"image/x-xwindowdump\":{\"source\":\"apache\",\"extensions\":[\"xwd\"]},\"message/cpim\":{\"source\":\"iana\"},\"message/delivery-status\":{\"source\":\"iana\"},\"message/disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"disposition-notification\"]},\"message/external-body\":{\"source\":\"iana\"},\"message/feedback-report\":{\"source\":\"iana\"},\"message/global\":{\"source\":\"iana\",\"extensions\":[\"u8msg\"]},\"message/global-delivery-status\":{\"source\":\"iana\",\"extensions\":[\"u8dsn\"]},\"message/global-disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"u8mdn\"]},\"message/global-headers\":{\"source\":\"iana\",\"extensions\":[\"u8hdr\"]},\"message/http\":{\"source\":\"iana\",\"compressible\":false},\"message/imdn+xml\":{\"source\":\"iana\",\"compressible\":true},\"message/news\":{\"source\":\"iana\"},\"message/partial\":{\"source\":\"iana\",\"compressible\":false},\"message/rfc822\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eml\",\"mime\"]},\"message/s-http\":{\"source\":\"iana\"},\"message/sip\":{\"source\":\"iana\"},\"message/sipfrag\":{\"source\":\"iana\"},\"message/tracking-status\":{\"source\":\"iana\"},\"message/vnd.si.simp\":{\"source\":\"iana\"},\"message/vnd.wfa.wsc\":{\"source\":\"iana\",\"extensions\":[\"wsc\"]},\"model/3mf\":{\"source\":\"iana\",\"extensions\":[\"3mf\"]},\"model/e57\":{\"source\":\"iana\"},\"model/gltf+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gltf\"]},\"model/gltf-binary\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"glb\"]},\"model/iges\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"igs\",\"iges\"]},\"model/mesh\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"msh\",\"mesh\",\"silo\"]},\"model/mtl\":{\"source\":\"iana\",\"extensions\":[\"mtl\"]},\"model/obj\":{\"source\":\"iana\",\"extensions\":[\"obj\"]},\"model/step+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpz\"]},\"model/step-xml+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpxz\"]},\"model/stl\":{\"source\":\"iana\",\"extensions\":[\"stl\"]},\"model/vnd.collada+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dae\"]},\"model/vnd.dwf\":{\"source\":\"iana\",\"extensions\":[\"dwf\"]},\"model/vnd.flatland.3dml\":{\"source\":\"iana\"},\"model/vnd.gdl\":{\"source\":\"iana\",\"extensions\":[\"gdl\"]},\"model/vnd.gs-gdl\":{\"source\":\"apache\"},\"model/vnd.gs.gdl\":{\"source\":\"iana\"},\"model/vnd.gtw\":{\"source\":\"iana\",\"extensions\":[\"gtw\"]},\"model/vnd.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"model/vnd.mts\":{\"source\":\"iana\",\"extensions\":[\"mts\"]},\"model/vnd.opengex\":{\"source\":\"iana\",\"extensions\":[\"ogex\"]},\"model/vnd.parasolid.transmit.binary\":{\"source\":\"iana\",\"extensions\":[\"x_b\"]},\"model/vnd.parasolid.transmit.text\":{\"source\":\"iana\",\"extensions\":[\"x_t\"]},\"model/vnd.pytha.pyox\":{\"source\":\"iana\"},\"model/vnd.rosette.annotated-data-model\":{\"source\":\"iana\"},\"model/vnd.sap.vds\":{\"source\":\"iana\",\"extensions\":[\"vds\"]},\"model/vnd.usdz+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"usdz\"]},\"model/vnd.valve.source.compiled-map\":{\"source\":\"iana\",\"extensions\":[\"bsp\"]},\"model/vnd.vtu\":{\"source\":\"iana\",\"extensions\":[\"vtu\"]},\"model/vrml\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"wrl\",\"vrml\"]},\"model/x3d+binary\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3db\",\"x3dbz\"]},\"model/x3d+fastinfoset\":{\"source\":\"iana\",\"extensions\":[\"x3db\"]},\"model/x3d+vrml\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3dv\",\"x3dvz\"]},\"model/x3d+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"x3d\",\"x3dz\"]},\"model/x3d-vrml\":{\"source\":\"iana\",\"extensions\":[\"x3dv\"]},\"multipart/alternative\":{\"source\":\"iana\",\"compressible\":false},\"multipart/appledouble\":{\"source\":\"iana\"},\"multipart/byteranges\":{\"source\":\"iana\"},\"multipart/digest\":{\"source\":\"iana\"},\"multipart/encrypted\":{\"source\":\"iana\",\"compressible\":false},\"multipart/form-data\":{\"source\":\"iana\",\"compressible\":false},\"multipart/header-set\":{\"source\":\"iana\"},\"multipart/mixed\":{\"source\":\"iana\"},\"multipart/multilingual\":{\"source\":\"iana\"},\"multipart/parallel\":{\"source\":\"iana\"},\"multipart/related\":{\"source\":\"iana\",\"compressible\":false},\"multipart/report\":{\"source\":\"iana\"},\"multipart/signed\":{\"source\":\"iana\",\"compressible\":false},\"multipart/vnd.bint.med-plus\":{\"source\":\"iana\"},\"multipart/voice-message\":{\"source\":\"iana\"},\"multipart/x-mixed-replace\":{\"source\":\"iana\"},\"text/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"text/cache-manifest\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"appcache\",\"manifest\"]},\"text/calendar\":{\"source\":\"iana\",\"extensions\":[\"ics\",\"ifb\"]},\"text/calender\":{\"compressible\":true},\"text/cmd\":{\"compressible\":true},\"text/coffeescript\":{\"extensions\":[\"coffee\",\"litcoffee\"]},\"text/cql\":{\"source\":\"iana\"},\"text/cql-expression\":{\"source\":\"iana\"},\"text/cql-identifier\":{\"source\":\"iana\"},\"text/css\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"css\"]},\"text/csv\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csv\"]},\"text/csv-schema\":{\"source\":\"iana\"},\"text/directory\":{\"source\":\"iana\"},\"text/dns\":{\"source\":\"iana\"},\"text/ecmascript\":{\"source\":\"iana\"},\"text/encaprtp\":{\"source\":\"iana\"},\"text/enriched\":{\"source\":\"iana\"},\"text/fhirpath\":{\"source\":\"iana\"},\"text/flexfec\":{\"source\":\"iana\"},\"text/fwdred\":{\"source\":\"iana\"},\"text/gff3\":{\"source\":\"iana\"},\"text/grammar-ref-list\":{\"source\":\"iana\"},\"text/html\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"html\",\"htm\",\"shtml\"]},\"text/jade\":{\"extensions\":[\"jade\"]},\"text/javascript\":{\"source\":\"iana\",\"compressible\":true},\"text/jcr-cnd\":{\"source\":\"iana\"},\"text/jsx\":{\"compressible\":true,\"extensions\":[\"jsx\"]},\"text/less\":{\"compressible\":true,\"extensions\":[\"less\"]},\"text/markdown\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"markdown\",\"md\"]},\"text/mathml\":{\"source\":\"nginx\",\"extensions\":[\"mml\"]},\"text/mdx\":{\"compressible\":true,\"extensions\":[\"mdx\"]},\"text/mizar\":{\"source\":\"iana\"},\"text/n3\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"n3\"]},\"text/parameters\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/parityfec\":{\"source\":\"iana\"},\"text/plain\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]},\"text/provenance-notation\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/prs.fallenstein.rst\":{\"source\":\"iana\"},\"text/prs.lines.tag\":{\"source\":\"iana\",\"extensions\":[\"dsc\"]},\"text/prs.prop.logic\":{\"source\":\"iana\"},\"text/raptorfec\":{\"source\":\"iana\"},\"text/red\":{\"source\":\"iana\"},\"text/rfc822-headers\":{\"source\":\"iana\"},\"text/richtext\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtx\"]},\"text/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"text/rtp-enc-aescm128\":{\"source\":\"iana\"},\"text/rtploopback\":{\"source\":\"iana\"},\"text/rtx\":{\"source\":\"iana\"},\"text/sgml\":{\"source\":\"iana\",\"extensions\":[\"sgml\",\"sgm\"]},\"text/shaclc\":{\"source\":\"iana\"},\"text/shex\":{\"source\":\"iana\",\"extensions\":[\"shex\"]},\"text/slim\":{\"extensions\":[\"slim\",\"slm\"]},\"text/spdx\":{\"source\":\"iana\",\"extensions\":[\"spdx\"]},\"text/strings\":{\"source\":\"iana\"},\"text/stylus\":{\"extensions\":[\"stylus\",\"styl\"]},\"text/t140\":{\"source\":\"iana\"},\"text/tab-separated-values\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tsv\"]},\"text/troff\":{\"source\":\"iana\",\"extensions\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]},\"text/turtle\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"ttl\"]},\"text/ulpfec\":{\"source\":\"iana\"},\"text/uri-list\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uri\",\"uris\",\"urls\"]},\"text/vcard\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vcard\"]},\"text/vnd.a\":{\"source\":\"iana\"},\"text/vnd.abc\":{\"source\":\"iana\"},\"text/vnd.ascii-art\":{\"source\":\"iana\"},\"text/vnd.curl\":{\"source\":\"iana\",\"extensions\":[\"curl\"]},\"text/vnd.curl.dcurl\":{\"source\":\"apache\",\"extensions\":[\"dcurl\"]},\"text/vnd.curl.mcurl\":{\"source\":\"apache\",\"extensions\":[\"mcurl\"]},\"text/vnd.curl.scurl\":{\"source\":\"apache\",\"extensions\":[\"scurl\"]},\"text/vnd.debian.copyright\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.dmclientscript\":{\"source\":\"iana\"},\"text/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"text/vnd.esmertec.theme-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.ficlab.flt\":{\"source\":\"iana\"},\"text/vnd.fly\":{\"source\":\"iana\",\"extensions\":[\"fly\"]},\"text/vnd.fmi.flexstor\":{\"source\":\"iana\",\"extensions\":[\"flx\"]},\"text/vnd.gml\":{\"source\":\"iana\"},\"text/vnd.graphviz\":{\"source\":\"iana\",\"extensions\":[\"gv\"]},\"text/vnd.hans\":{\"source\":\"iana\"},\"text/vnd.hgl\":{\"source\":\"iana\"},\"text/vnd.in3d.3dml\":{\"source\":\"iana\",\"extensions\":[\"3dml\"]},\"text/vnd.in3d.spot\":{\"source\":\"iana\",\"extensions\":[\"spot\"]},\"text/vnd.iptc.newsml\":{\"source\":\"iana\"},\"text/vnd.iptc.nitf\":{\"source\":\"iana\"},\"text/vnd.latex-z\":{\"source\":\"iana\"},\"text/vnd.motorola.reflex\":{\"source\":\"iana\"},\"text/vnd.ms-mediapackage\":{\"source\":\"iana\"},\"text/vnd.net2phone.commcenter.command\":{\"source\":\"iana\"},\"text/vnd.radisys.msml-basic-layout\":{\"source\":\"iana\"},\"text/vnd.senx.warpscript\":{\"source\":\"iana\"},\"text/vnd.si.uricatalogue\":{\"source\":\"iana\"},\"text/vnd.sosi\":{\"source\":\"iana\"},\"text/vnd.sun.j2me.app-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"jad\"]},\"text/vnd.trolltech.linguist\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.wap.si\":{\"source\":\"iana\"},\"text/vnd.wap.sl\":{\"source\":\"iana\"},\"text/vnd.wap.wml\":{\"source\":\"iana\",\"extensions\":[\"wml\"]},\"text/vnd.wap.wmlscript\":{\"source\":\"iana\",\"extensions\":[\"wmls\"]},\"text/vtt\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"vtt\"]},\"text/x-asm\":{\"source\":\"apache\",\"extensions\":[\"s\",\"asm\"]},\"text/x-c\":{\"source\":\"apache\",\"extensions\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]},\"text/x-component\":{\"source\":\"nginx\",\"extensions\":[\"htc\"]},\"text/x-fortran\":{\"source\":\"apache\",\"extensions\":[\"f\",\"for\",\"f77\",\"f90\"]},\"text/x-gwt-rpc\":{\"compressible\":true},\"text/x-handlebars-template\":{\"extensions\":[\"hbs\"]},\"text/x-java-source\":{\"source\":\"apache\",\"extensions\":[\"java\"]},\"text/x-jquery-tmpl\":{\"compressible\":true},\"text/x-lua\":{\"extensions\":[\"lua\"]},\"text/x-markdown\":{\"compressible\":true,\"extensions\":[\"mkd\"]},\"text/x-nfo\":{\"source\":\"apache\",\"extensions\":[\"nfo\"]},\"text/x-opml\":{\"source\":\"apache\",\"extensions\":[\"opml\"]},\"text/x-org\":{\"compressible\":true,\"extensions\":[\"org\"]},\"text/x-pascal\":{\"source\":\"apache\",\"extensions\":[\"p\",\"pas\"]},\"text/x-processing\":{\"compressible\":true,\"extensions\":[\"pde\"]},\"text/x-sass\":{\"extensions\":[\"sass\"]},\"text/x-scss\":{\"extensions\":[\"scss\"]},\"text/x-setext\":{\"source\":\"apache\",\"extensions\":[\"etx\"]},\"text/x-sfv\":{\"source\":\"apache\",\"extensions\":[\"sfv\"]},\"text/x-suse-ymp\":{\"compressible\":true,\"extensions\":[\"ymp\"]},\"text/x-uuencode\":{\"source\":\"apache\",\"extensions\":[\"uu\"]},\"text/x-vcalendar\":{\"source\":\"apache\",\"extensions\":[\"vcs\"]},\"text/x-vcard\":{\"source\":\"apache\",\"extensions\":[\"vcf\"]},\"text/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\"]},\"text/xml-external-parsed-entity\":{\"source\":\"iana\"},\"text/yaml\":{\"compressible\":true,\"extensions\":[\"yaml\",\"yml\"]},\"video/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"video/3gpp\":{\"source\":\"iana\",\"extensions\":[\"3gp\",\"3gpp\"]},\"video/3gpp-tt\":{\"source\":\"iana\"},\"video/3gpp2\":{\"source\":\"iana\",\"extensions\":[\"3g2\"]},\"video/av1\":{\"source\":\"iana\"},\"video/bmpeg\":{\"source\":\"iana\"},\"video/bt656\":{\"source\":\"iana\"},\"video/celb\":{\"source\":\"iana\"},\"video/dv\":{\"source\":\"iana\"},\"video/encaprtp\":{\"source\":\"iana\"},\"video/ffv1\":{\"source\":\"iana\"},\"video/flexfec\":{\"source\":\"iana\"},\"video/h261\":{\"source\":\"iana\",\"extensions\":[\"h261\"]},\"video/h263\":{\"source\":\"iana\",\"extensions\":[\"h263\"]},\"video/h263-1998\":{\"source\":\"iana\"},\"video/h263-2000\":{\"source\":\"iana\"},\"video/h264\":{\"source\":\"iana\",\"extensions\":[\"h264\"]},\"video/h264-rcdo\":{\"source\":\"iana\"},\"video/h264-svc\":{\"source\":\"iana\"},\"video/h265\":{\"source\":\"iana\"},\"video/iso.segment\":{\"source\":\"iana\",\"extensions\":[\"m4s\"]},\"video/jpeg\":{\"source\":\"iana\",\"extensions\":[\"jpgv\"]},\"video/jpeg2000\":{\"source\":\"iana\"},\"video/jpm\":{\"source\":\"apache\",\"extensions\":[\"jpm\",\"jpgm\"]},\"video/mj2\":{\"source\":\"iana\",\"extensions\":[\"mj2\",\"mjp2\"]},\"video/mp1s\":{\"source\":\"iana\"},\"video/mp2p\":{\"source\":\"iana\"},\"video/mp2t\":{\"source\":\"iana\",\"extensions\":[\"ts\"]},\"video/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mp4\",\"mp4v\",\"mpg4\"]},\"video/mp4v-es\":{\"source\":\"iana\"},\"video/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]},\"video/mpeg4-generic\":{\"source\":\"iana\"},\"video/mpv\":{\"source\":\"iana\"},\"video/nv\":{\"source\":\"iana\"},\"video/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogv\"]},\"video/parityfec\":{\"source\":\"iana\"},\"video/pointer\":{\"source\":\"iana\"},\"video/quicktime\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"qt\",\"mov\"]},\"video/raptorfec\":{\"source\":\"iana\"},\"video/raw\":{\"source\":\"iana\"},\"video/rtp-enc-aescm128\":{\"source\":\"iana\"},\"video/rtploopback\":{\"source\":\"iana\"},\"video/rtx\":{\"source\":\"iana\"},\"video/scip\":{\"source\":\"iana\"},\"video/smpte291\":{\"source\":\"iana\"},\"video/smpte292m\":{\"source\":\"iana\"},\"video/ulpfec\":{\"source\":\"iana\"},\"video/vc1\":{\"source\":\"iana\"},\"video/vc2\":{\"source\":\"iana\"},\"video/vnd.cctv\":{\"source\":\"iana\"},\"video/vnd.dece.hd\":{\"source\":\"iana\",\"extensions\":[\"uvh\",\"uvvh\"]},\"video/vnd.dece.mobile\":{\"source\":\"iana\",\"extensions\":[\"uvm\",\"uvvm\"]},\"video/vnd.dece.mp4\":{\"source\":\"iana\"},\"video/vnd.dece.pd\":{\"source\":\"iana\",\"extensions\":[\"uvp\",\"uvvp\"]},\"video/vnd.dece.sd\":{\"source\":\"iana\",\"extensions\":[\"uvs\",\"uvvs\"]},\"video/vnd.dece.video\":{\"source\":\"iana\",\"extensions\":[\"uvv\",\"uvvv\"]},\"video/vnd.directv.mpeg\":{\"source\":\"iana\"},\"video/vnd.directv.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dlna.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dvb.file\":{\"source\":\"iana\",\"extensions\":[\"dvb\"]},\"video/vnd.fvt\":{\"source\":\"iana\",\"extensions\":[\"fvt\"]},\"video/vnd.hns.video\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsavc\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsmpeg2\":{\"source\":\"iana\"},\"video/vnd.motorola.video\":{\"source\":\"iana\"},\"video/vnd.motorola.videop\":{\"source\":\"iana\"},\"video/vnd.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"mxu\",\"m4u\"]},\"video/vnd.ms-playready.media.pyv\":{\"source\":\"iana\",\"extensions\":[\"pyv\"]},\"video/vnd.nokia.interleaved-multimedia\":{\"source\":\"iana\"},\"video/vnd.nokia.mp4vr\":{\"source\":\"iana\"},\"video/vnd.nokia.videovoip\":{\"source\":\"iana\"},\"video/vnd.objectvideo\":{\"source\":\"iana\"},\"video/vnd.radgamettools.bink\":{\"source\":\"iana\"},\"video/vnd.radgamettools.smacker\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg1\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg4\":{\"source\":\"iana\"},\"video/vnd.sealed.swf\":{\"source\":\"iana\"},\"video/vnd.sealedmedia.softseal.mov\":{\"source\":\"iana\"},\"video/vnd.uvvu.mp4\":{\"source\":\"iana\",\"extensions\":[\"uvu\",\"uvvu\"]},\"video/vnd.vivo\":{\"source\":\"iana\",\"extensions\":[\"viv\"]},\"video/vnd.youtube.yt\":{\"source\":\"iana\"},\"video/vp8\":{\"source\":\"iana\"},\"video/vp9\":{\"source\":\"iana\"},\"video/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"webm\"]},\"video/x-f4v\":{\"source\":\"apache\",\"extensions\":[\"f4v\"]},\"video/x-fli\":{\"source\":\"apache\",\"extensions\":[\"fli\"]},\"video/x-flv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"flv\"]},\"video/x-m4v\":{\"source\":\"apache\",\"extensions\":[\"m4v\"]},\"video/x-matroska\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"mkv\",\"mk3d\",\"mks\"]},\"video/x-mng\":{\"source\":\"apache\",\"extensions\":[\"mng\"]},\"video/x-ms-asf\":{\"source\":\"apache\",\"extensions\":[\"asf\",\"asx\"]},\"video/x-ms-vob\":{\"source\":\"apache\",\"extensions\":[\"vob\"]},\"video/x-ms-wm\":{\"source\":\"apache\",\"extensions\":[\"wm\"]},\"video/x-ms-wmv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"wmv\"]},\"video/x-ms-wmx\":{\"source\":\"apache\",\"extensions\":[\"wmx\"]},\"video/x-ms-wvx\":{\"source\":\"apache\",\"extensions\":[\"wvx\"]},\"video/x-msvideo\":{\"source\":\"apache\",\"extensions\":[\"avi\"]},\"video/x-sgi-movie\":{\"source\":\"apache\",\"extensions\":[\"movie\"]},\"video/x-smv\":{\"source\":\"apache\",\"extensions\":[\"smv\"]},\"x-conference/x-cooltalk\":{\"source\":\"apache\",\"extensions\":[\"ice\"]},\"x-shader/x-fragment\":{\"compressible\":true},\"x-shader/x-vertex\":{\"compressible\":true}}');\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/mime-db/db.json?");

/***/ }),

/***/ "./node_modules/ytdl-core/package.json":
/*!*********************************************!*\
  !*** ./node_modules/ytdl-core/package.json ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_args\":[[\"ytdl-core@4.9.1\",\"/Users/m.palacio/Workspace/personal/tape-bot\"]],\"_from\":\"ytdl-core@4.9.1\",\"_id\":\"ytdl-core@4.9.1\",\"_inBundle\":false,\"_integrity\":\"sha512-6Jbp5RDhUEozlaJQAR+l8oV8AHsx3WUXxSyPxzE6wOIAaLql7Hjiy0ZM58wZoyj1YEenlEPjEqcJIjKYKxvHtQ==\",\"_location\":\"/ytdl-core\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"ytdl-core@4.9.1\",\"name\":\"ytdl-core\",\"escapedName\":\"ytdl-core\",\"rawSpec\":\"4.9.1\",\"saveSpec\":null,\"fetchSpec\":\"4.9.1\"},\"_requiredBy\":[\"/\",\"/ytdl-core-discord\"],\"_resolved\":\"https://registry.npmjs.org/ytdl-core/-/ytdl-core-4.9.1.tgz\",\"_spec\":\"4.9.1\",\"_where\":\"/Users/m.palacio/Workspace/personal/tape-bot\",\"author\":{\"name\":\"fent\",\"email\":\"fentbox@gmail.com\",\"url\":\"https://github.com/fent\"},\"bugs\":{\"url\":\"https://github.com/fent/node-ytdl-core/issues\"},\"contributors\":[{\"name\":\"Tobias Kutscha\",\"url\":\"https://github.com/TimeForANinja\"},{\"name\":\"Andrew Kelley\",\"url\":\"https://github.com/andrewrk\"},{\"name\":\"Mauricio Allende\",\"url\":\"https://github.com/mallendeo\"},{\"name\":\"Rodrigo Altamirano\",\"url\":\"https://github.com/raltamirano\"},{\"name\":\"Jim Buck\",\"url\":\"https://github.com/JimmyBoh\"}],\"dependencies\":{\"m3u8stream\":\"^0.8.3\",\"miniget\":\"^4.0.0\",\"sax\":\"^1.1.3\"},\"description\":\"YouTube video downloader in pure javascript.\",\"devDependencies\":{\"@types/node\":\"^13.1.0\",\"assert-diff\":\"^3.0.1\",\"dtslint\":\"^3.6.14\",\"eslint\":\"^6.8.0\",\"mocha\":\"^7.0.0\",\"muk-require\":\"^1.2.0\",\"nock\":\"^13.0.4\",\"nyc\":\"^15.0.0\",\"sinon\":\"^9.0.0\",\"stream-equal\":\"~1.1.0\",\"typescript\":\"^3.9.7\"},\"engines\":{\"node\":\">=10\"},\"files\":[\"lib\",\"typings\"],\"homepage\":\"https://github.com/fent/node-ytdl-core#readme\",\"keywords\":[\"youtube\",\"video\",\"download\"],\"license\":\"MIT\",\"main\":\"./lib/index.js\",\"name\":\"ytdl-core\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/fent/node-ytdl-core.git\"},\"scripts\":{\"lint\":\"eslint ./\",\"lint:fix\":\"eslint --fix ./\",\"lint:typings\":\"tslint typings/index.d.ts\",\"lint:typings:fix\":\"tslint --fix typings/index.d.ts\",\"test\":\"nyc --reporter=lcov --reporter=text-summary npm run test:unit\",\"test:irl\":\"mocha --timeout 16000 test/irl-test.js\",\"test:unit\":\"mocha --ignore test/irl-test.js test/*-test.js --timeout 4000\"},\"types\":\"./typings/index.d.ts\",\"version\":\"4.9.1\"}');\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytdl-core/package.json?");

/***/ }),

/***/ "./node_modules/ytsr/package.json":
/*!****************************************!*\
  !*** ./node_modules/ytsr/package.json ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_args\":[[\"ytsr@3.5.3\",\"/Users/m.palacio/Workspace/personal/tape-bot\"]],\"_from\":\"ytsr@3.5.3\",\"_id\":\"ytsr@3.5.3\",\"_inBundle\":false,\"_integrity\":\"sha512-BEyIKbQULmk27hiVUQ1cBszAqP8roPBOQTWPZpBioKxjSZBeicfgF2qPIQoY7koodQwRuo1DmCFz3DyrXjADxg==\",\"_location\":\"/ytsr\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"ytsr@3.5.3\",\"name\":\"ytsr\",\"escapedName\":\"ytsr\",\"rawSpec\":\"3.5.3\",\"saveSpec\":null,\"fetchSpec\":\"3.5.3\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmjs.org/ytsr/-/ytsr-3.5.3.tgz\",\"_spec\":\"3.5.3\",\"_where\":\"/Users/m.palacio/Workspace/personal/tape-bot\",\"author\":{\"name\":\"Tobias Kutscha\",\"url\":\"https://github.com/TimeForANinja\"},\"bugs\":{\"url\":\"https://github.com/TimeForANinja/node-ytsr/issues\"},\"dependencies\":{\"miniget\":\"^4.2.1\"},\"description\":\"Simple package to search YouTube - no strings attached.\",\"devDependencies\":{\"assert-diff\":\"^3.0.2\",\"codecov\":\"^3.8.1\",\"dtslint\":\"^4.0.8\",\"eslint\":\"^7.23.0\",\"mocha\":\"^8.3.2\",\"nock\":\"^13.0.11\",\"nyc\":\"^15.1.0\",\"typescript\":\"^4.2.3\"},\"engines\":{\"node\":\">=8\"},\"files\":[\"lib\",\"typings\"],\"homepage\":\"https://github.com/TimeForANinja/node-ytsr#readme\",\"keywords\":[\"youtube\",\"search\",\"yt\",\"ytsearcher\",\"api\",\"playlist\",\"channel\",\"video\",\"scrape\",\"pagination\",\"promise\"],\"license\":\"MIT\",\"main\":\"./lib/main.js\",\"name\":\"ytsr\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/TimeForANinja/node-ytsr.git\"},\"scripts\":{\"lint\":\"eslint ./\",\"lint:fix\":\"eslint --fix ./\",\"lint:typings\":\"tslint typings/index.d.ts\",\"lint:typings:fix\":\"tslint --fix typings/index.d.ts\",\"mocha\":\"mocha -- -t 16000 test/*-test.js\",\"mocha:coverage\":\"mocha -- -t 16000 test/*-test.js --exclude test/e2e-test.js\",\"nyc\":\"nyc --reporter=lcov npm run-script mocha\",\"nyc:coverage\":\"nyc --reporter=lcov npm run-script mocha:coverage\",\"test\":\"npm run-script nyc\",\"test:coverage\":\"npm run-script nyc:coverage && codecov\"},\"types\":\"./typings/index.d.ts\",\"version\":\"3.5.3\"}');\n\n//# sourceURL=webpack://discord-fumaratto/./node_modules/ytsr/package.json?");

/***/ }),

/***/ "./src/config/default-settings.json":
/*!******************************************!*\
  !*** ./src/config/default-settings.json ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"prefix\":\"-\",\"commands\":[{\"commands\":[\"play\",\"p\"],\"id\":\"play\",\"function\":\"playSong\"},{\"commands\":[\"queue\",\"q\"],\"id\":\"play\",\"function\":\"queue\"},{\"commands\":[\"leave\",\"l\"],\"id\":\"play\",\"function\":\"leave\"},{\"commands\":[\"skip\",\"s\"],\"id\":\"play\",\"function\":\"skip\"},{\"commands\":[\"stop\"],\"id\":\"play\",\"function\":\"stop\"}]}');\n\n//# sourceURL=webpack://discord-fumaratto/./src/config/default-settings.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;